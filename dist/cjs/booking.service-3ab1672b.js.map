{"file":"booking.service-3ab1672b.js","mappings":"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","names":["moment","calendar_data","axios","locales","Token"],"sources":["src/utils/utils.ts","src/utils/booking.ts","src/services/booking.service.ts"],"sourcesContent":["import moment from 'moment';\r\nimport IBooking, { ICountry, PhysicalRoomType } from '../models/IBooking';\r\n\r\nexport function convertDateToCustomFormat(dayWithWeekday: string, monthWithYear: string): string {\r\n  const dateStr = `${dayWithWeekday.split(' ')[1]} ${monthWithYear}`;\r\n  const date = moment(dateStr, 'DD MMM YYYY');\r\n  if (!date.isValid()) {\r\n    throw new Error('Invalid Date');\r\n  }\r\n  return date.format('D_M_YYYY');\r\n}\r\n\r\nexport function convertDateToTime(dayWithWeekday: string, monthWithYear: string): number {\r\n  const date = moment(dayWithWeekday + ' ' + monthWithYear, 'ddd DD MMM YYYY').toDate();\r\n  date.setHours(0, 0, 0, 0);\r\n  return date.getTime();\r\n}\r\nexport function dateDifference(FROM_DATE: string, TO_DATE: string): number {\r\n  const startDate = new Date(FROM_DATE);\r\n  const endDate = new Date(TO_DATE);\r\n  return Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));\r\n}\r\nexport const getBrowserLanguage = (): string => {\r\n  const defaultLang = 'en';\r\n  const lang = navigator.language || defaultLang;\r\n  return lang.toUpperCase().split('-')[0];\r\n};\r\n\r\nexport const transformBooking = (physicalRoom: PhysicalRoomType[]): IBooking[] => {\r\n  const myBookings: IBooking[] = [];\r\n  physicalRoom.forEach(room => {\r\n    Object.keys(room.calendar_cell).forEach(key => {\r\n      if (room.calendar_cell[key].Is_Available === false) {\r\n        if (myBookings.find(b => b.ID === room.id.toString())) {\r\n        } else {\r\n          //myBookings.push({})\r\n        }\r\n      }\r\n    });\r\n  });\r\n  return myBookings;\r\n};\r\n\r\nexport function dateToFormattedString(date: Date): string {\r\n  const year = date.getFullYear();\r\n  const month = (date.getMonth() + 1).toString().padStart(2, '0'); // +1 because months are 0-based in JS\r\n  const day = date.getDate().toString().padStart(2, '0');\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nexport function formatLegendColors(legendData) {\r\n  let formattedLegendData: any = {};\r\n\r\n  const statusId = {\r\n    'IN-HOUSE': { id: 1, clsName: 'IN_HOUSE' },\r\n    'CONFIRMED': { id: 2, clsName: 'CONFIRMED' },\r\n    'PENDING-CONFIRMATION': { id: 3, clsName: 'PENDING_CONFIRMATION' },\r\n    'SPLIT-UNIT': { id: 4, clsName: 'SPLIT_UNIT' },\r\n    'CHECKED-IN': { id: 5, clsName: 'CHECKED_IN' },\r\n    'CHECKED-OUT': { id: 5, clsName: 'CHECKED_OUT' },\r\n    'BLOCKED': { id: 6, clsName: 'BLOCKED' },\r\n    'BLOCKED-WITH-DATES': { id: 7, clsName: 'BLOCKED_WITH_DATES' },\r\n    'NOTES': { id: 8, clsName: 'NOTES' },\r\n    'OUTSTANDING-BALANCE': { id: 9, clsName: 'OUTSTANDING_BALANCE' },\r\n    'TEMP-EVENT': { id: 10, clsName: 'PENDING_CONFIRMATION' },\r\n  };\r\n  legendData.forEach(legend => {\r\n    formattedLegendData[legend.id] = legend;\r\n    formattedLegendData.statusId = statusId; // NOTE: This will overwrite the 'statusId' property with every iteration.\r\n  });\r\n\r\n  return formattedLegendData;\r\n}\r\nexport function isBlockUnit(status_code: any) {\r\n  return ['003', '002', '004'].includes(status_code);\r\n}\r\nexport function getCurrencySymbol(currencyCode) {\r\n  const formatter = new Intl.NumberFormat(undefined, {\r\n    style: 'currency',\r\n    currency: currencyCode,\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  });\r\n  return formatter.format(0).replace(/[0-9]/g, '').trim();\r\n}\r\nexport const findCountry = (id: number, countries: ICountry[]): ICountry => countries.find(country => country.id === id);\r\n\r\nexport function getReleaseHoursString(releaseDate: number) {\r\n  const dt = new Date();\r\n  const releaseAfterHours = releaseDate;\r\n\r\n  dt.setHours(dt.getHours() + releaseAfterHours, dt.getMinutes(), 0, 0);\r\n\r\n  return {\r\n    BLOCKED_TILL_DATE: dateToFormattedString(dt),\r\n    BLOCKED_TILL_HOUR: dt.getHours().toString(),\r\n    BLOCKED_TILL_MINUTE: dt.getMinutes().toString(),\r\n  };\r\n}\r\n\r\nexport function computeEndDate(startDate: string, numberOfDays: number): string {\r\n  const dateObj = moment(startDate, 'D_M_YYYY');\r\n  dateObj.add(numberOfDays, 'days');\r\n  return dateObj.format('YYYY-MM-DD');\r\n}\r\n\r\nexport function convertDMYToISO(date: string) {\r\n  const dateObj = moment(date, 'D_M_YYYY');\r\n  return dateObj.format('YYYY-MM-DD');\r\n}\r\nexport function addTwoMonthToDate(date: Date) {\r\n  return moment(date).add(2, 'months').format('YYYY-MM-DD');\r\n}\r\nexport function formatDate(dateString, option = 'DD MMM YYYY') {\r\n  const formattedDate = moment(dateString, option).format('ddd, DD MMM YYYY');\r\n  return formattedDate;\r\n}\r\nexport function getNextDay(date: Date) {\r\n  return moment(date).add(1, 'days').format('YYYY-MM-DD');\r\n}\r\n\r\nexport function convertDatePrice(date: string) {\r\n  return moment(date, 'YYYY-MM-DD').format('DD/MM ddd');\r\n}\r\nexport function getDaysArray(date1: string, date2: string) {\r\n  let dates = [];\r\n  let start = moment.min(moment(date1).add(1, 'days'), moment(date2));\r\n  let end = moment.max(moment(date1), moment(date2));\r\n  while (start < end) {\r\n    dates.push(start.format('YYYY-MM-DD'));\r\n    start = start.clone().add(1, 'days');\r\n  }\r\n\r\n  return dates;\r\n}\r\nexport function renderTime(time: number) {\r\n  return time < 10 ? time.toString().padStart(2, '0') : time.toString();\r\n}\r\n\r\nexport function formatAmount(currency: string, amount: number) {\r\n  const symbol = getCurrencySymbol(currency);\r\n  return symbol + amount.toFixed(2);\r\n}\r\n","import moment from 'moment';\r\nimport { PhysicalRoomType, MonthType, CellType, STATUS, RoomBookingDetails, RoomBlockDetails } from '../models/IBooking';\r\nimport { dateDifference, isBlockUnit } from './utils';\r\nimport axios from 'axios';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\nexport async function getMyBookings(months: MonthType[]): Promise<any[]> {\r\n  const myBookings: any[] = [];\r\n  const stayStatus = await getStayStatus();\r\n  for (const month of months) {\r\n    for (const day of month.days) {\r\n      for (const room of day.room_types) {\r\n        assignBooking(room.physicalrooms, myBookings, stayStatus);\r\n      }\r\n    }\r\n  }\r\n\r\n  return myBookings;\r\n}\r\n\r\nfunction assignBooking(physicalRoom: PhysicalRoomType[], myBookings: any[], stayStatus: { code: string; value: string }[]): void {\r\n  for (const room of physicalRoom) {\r\n    for (const key in room.calendar_cell) {\r\n      if (room.calendar_cell[key].Is_Available === false) {\r\n        addOrUpdateBooking(room.calendar_cell[key], myBookings, stayStatus);\r\n      }\r\n    }\r\n  }\r\n}\r\nconst status: Record<string, STATUS> = {\r\n  '004': 'BLOCKED',\r\n  '003': 'BLOCKED-WITH-DATES',\r\n  '002': 'BLOCKED',\r\n};\r\nexport const bookingStatus: Record<string, STATUS> = {\r\n  '000': 'IN-HOUSE',\r\n  '001': 'PENDING-CONFIRMATION',\r\n  '002': 'CONFIRMED',\r\n  '003': 'CHECKED-OUT',\r\n};\r\n\r\nexport function formatName(firstName: string | null, lastName: string | null) {\r\n  if (firstName === null && lastName === null) return '';\r\n  if (lastName !== null && lastName !== '') {\r\n    return `${firstName ?? ''} , ${lastName ?? ''}`;\r\n  }\r\n  return firstName;\r\n}\r\nasync function getStayStatus() {\r\n  try {\r\n    const token = calendar_data.token;\r\n    if (token) {\r\n      const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_Multi?Ticket=${token}`, {\r\n        TBL_NAMES: ['_STAY_STATUS'],\r\n      });\r\n      return data.My_Result.map(d => ({\r\n        code: d.CODE_NAME,\r\n        value: d.CODE_VALUE_EN,\r\n      }));\r\n    } else {\r\n      throw new Error('Invalid Token');\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\nfunction renderBlock003Date(date, hour, minute) {\r\n  const dt = new Date(date);\r\n  dt.setHours(hour);\r\n  dt.setMinutes(minute);\r\n  return `${locales.entries.Lcz_BlockedTill} ${moment(dt).format('MMM DD, HH:mm')}`;\r\n}\r\nfunction getDefaultData(cell: CellType, stayStatus: { code: string; value: string }[]): any {\r\n  if (isBlockUnit(cell.STAY_STATUS_CODE)) {\r\n    const blockedFromDate = moment(cell.My_Block_Info.from_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.My_Block_Info.from_date : cell.DATE;\r\n    const blockedToDate = moment(cell.My_Block_Info.to_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.My_Block_Info.to_date : cell.DATE;\r\n    return {\r\n      ID: cell.POOL,\r\n      NOTES: '',\r\n      BALANCE: '',\r\n      NAME:\r\n        cell.My_Block_Info.NOTES !== ''\r\n          ? cell.My_Block_Info.NOTES\r\n          : cell.STAY_STATUS_CODE === '003'\r\n          ? renderBlock003Date(cell.My_Block_Info.BLOCKED_TILL_DATE, cell.My_Block_Info.BLOCKED_TILL_HOUR, cell.My_Block_Info.BLOCKED_TILL_MINUTE)\r\n          : stayStatus.find(st => st.code === cell.STAY_STATUS_CODE).value || '',\r\n      RELEASE_AFTER_HOURS: cell.My_Block_Info.DESCRIPTION,\r\n      PR_ID: cell.My_Block_Info.pr_id,\r\n      ENTRY_DATE: cell.My_Block_Info.BLOCKED_TILL_DATE,\r\n      ENTRY_HOUR: cell.My_Block_Info.BLOCKED_TILL_HOUR,\r\n      ENTRY_MINUTE: cell.My_Block_Info.BLOCKED_TILL_MINUTE,\r\n      OPTIONAL_REASON: cell.My_Block_Info.NOTES,\r\n      FROM_DATE: blockedFromDate,\r\n      TO_DATE: blockedToDate,\r\n      NO_OF_DAYS: dateDifference(blockedFromDate, blockedToDate),\r\n      STATUS: status[cell.STAY_STATUS_CODE],\r\n      POOL: cell.POOL,\r\n      STATUS_CODE: cell.STAY_STATUS_CODE,\r\n      OUT_OF_SERVICE: cell.STAY_STATUS_CODE === '004',\r\n      FROM_DATE_STR: cell.My_Block_Info.format.from_date,\r\n      TO_DATE_STR: cell.My_Block_Info.format.to_date,\r\n      defaultDates: {\r\n        from_date: cell.My_Block_Info.from_date,\r\n        to_date: cell.My_Block_Info.to_date,\r\n      },\r\n    };\r\n  }\r\n  // console.log('booking', cell);\r\n\r\n  // if (cell.booking.booking_nbr === '61249849') {\r\n  //   console.log('cell');\r\n  //   console.log(moment(cell.room.from_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.room.from_date : cell.DATE);\r\n  //   console.log(cell);\r\n  // }\r\n  const bookingFromDate = moment(cell.room.from_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.room.from_date : cell.DATE;\r\n  const bookingToDate = moment(cell.room.to_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.room.to_date : cell.DATE;\r\n  return {\r\n    ID: cell.POOL,\r\n    FROM_DATE: bookingFromDate,\r\n    TO_DATE: bookingToDate,\r\n    NO_OF_DAYS: dateDifference(bookingFromDate, bookingToDate),\r\n    STATUS: bookingStatus[cell.booking?.status.code],\r\n    NAME: formatName(cell.room.guest.first_name, cell.room.guest.last_name),\r\n    IDENTIFIER: cell.room.identifier,\r\n    PR_ID: cell.pr_id,\r\n    POOL: cell.POOL,\r\n    BOOKING_NUMBER: cell.booking.booking_nbr,\r\n    NOTES: cell.booking.is_direct ? cell.booking.remark : null,\r\n    is_direct: cell.booking.is_direct,\r\n    BALANCE: cell.booking.financial?.due_amount,\r\n    channel_booking_nbr: cell.booking.channel_booking_nbr,\r\n    ARRIVAL_TIME: cell.booking.arrival.description,\r\n    defaultDates: {\r\n      from_date: cell.room.from_date,\r\n      to_date: cell.room.to_date,\r\n    },\r\n    ///from here\r\n    ENTRY_DATE: cell.booking.booked_on.date,\r\n    IS_EDITABLE: cell.booking.is_editable,\r\n    ARRIVAL: cell.booking.arrival,\r\n    PHONE: cell.booking.guest.mobile ?? '',\r\n    RATE: cell.room.total,\r\n    RATE_PLAN: cell.room.rateplan.name,\r\n    SPLIT_BOOKING: false,\r\n    RATE_PLAN_ID: cell.room.rateplan.id,\r\n    RATE_TYPE: 1,\r\n    ADULTS_COUNT: cell.room.occupancy.adult_nbr,\r\n    CHILDREN_COUNT: cell.room.occupancy.children_nbr,\r\n    origin: cell.booking.origin,\r\n    GUEST: cell.booking.guest,\r\n    ROOMS: cell.booking.rooms,\r\n    cancelation: cell.room.rateplan.cancelation,\r\n    guarantee: cell.room.rateplan.guarantee,\r\n    TOTAL_PRICE: cell.room.total,\r\n    COUNTRY: cell.booking.guest.country_id,\r\n    FROM_DATE_STR: cell.booking.format.from_date,\r\n    TO_DATE_STR: cell.booking.format.to_date,\r\n    adult_child_offering: cell.room.rateplan.selected_variation.adult_child_offering,\r\n    SOURCE: { code: cell.booking.source.code, description: cell.booking.source.description, tag: cell.booking.source.tag },\r\n  };\r\n}\r\n\r\n// function updateBookingWithStayData(data: any, cell: CellType): any {\r\n//   data.NO_OF_DAYS = dateDifference(data.FROM_DATE, cell.DATE);\r\n//   data.TO_DATE = cell.DATE;\r\n//   if (cell.booking) {\r\n//     const { arrival } = cell.booking;\r\n//     if (cell.booking.booking_nbr === '88231897') {\r\n//       console.log(data.NO_OF_DAYS, data.TO_DATE);\r\n//     }\r\n//     Object.assign(data, {\r\n//       ARRIVAL_TIME: arrival.description,\r\n//     });\r\n//   }\r\n//   return data;\r\n// }\r\n\r\nfunction addOrUpdateBooking(cell: CellType, myBookings: any[], stayStatus: { code: string; value: string }[]): void {\r\n  const index = myBookings.findIndex(booking => booking.POOL === cell.POOL);\r\n  if (index === -1) {\r\n    const newData = getDefaultData(cell, stayStatus);\r\n    myBookings.push(newData);\r\n  }\r\n  //else {\r\n  //   const updatedData = updateBookingWithStayData(myBookings[index], cell);\r\n  //   myBookings[index] = updatedData;\r\n  // }\r\n}\r\nexport function transformNewBooking(data: any): RoomBookingDetails[] {\r\n  let bookings: RoomBookingDetails[] = [];\r\n  //console.log(data);\r\n  const renderStatus = room => {\r\n    const now = moment();\r\n    const toDate = moment(room.to_date, 'YYYY-MM-DD');\r\n    const fromDate = moment(room.from_date, 'YYYY-MM-DD');\r\n\r\n    if (fromDate.isSame(now, 'day') && now.hour() >= 12) {\r\n      return bookingStatus['000'];\r\n    } else if (now.isAfter(fromDate, 'day') && now.isBefore(toDate, 'day')) {\r\n      return bookingStatus['000'];\r\n    } else if (toDate.isSame(now, 'day') && now.hour() < 12) {\r\n      return bookingStatus['000'];\r\n    } else if ((toDate.isSame(now, 'day') && now.hour() >= 12) || toDate.isBefore(now, 'day')) {\r\n      return bookingStatus['003'];\r\n    } else {\r\n      return bookingStatus[data?.status.code || '001'];\r\n    }\r\n    // if (toDate.isBefore(now, 'day') || (toDate.isSame(now, 'day') && now.hour() >= 12)) {\r\n    //   return bookingStatus['003'];\r\n    // } else {\r\n    //   return bookingStatus[fromDate.isSameOrBefore(now, 'day') ? '000' : data?.status.code || '001'];\r\n    // }\r\n  };\r\n  const rooms = data.rooms.filter(room => !!room['assigned_units_pool']);\r\n  rooms.forEach(room => {\r\n    bookings.push({\r\n      ID: room['assigned_units_pool'],\r\n      TO_DATE: room.to_date,\r\n      FROM_DATE: room.from_date,\r\n      NO_OF_DAYS: room.days.length,\r\n      ARRIVAL: data.arrival,\r\n      IS_EDITABLE: true,\r\n      BALANCE: data.financial?.due_amount,\r\n      STATUS: renderStatus(room),\r\n      NAME: formatName(room.guest.first_name, room.guest.last_name),\r\n      PHONE: data.guest.mobile ?? '',\r\n      ENTRY_DATE: '12-12-2023',\r\n      RATE: room.total,\r\n      RATE_PLAN: room.rateplan.name,\r\n      SPLIT_BOOKING: false,\r\n      RATE_PLAN_ID: room.rateplan.id,\r\n      IDENTIFIER: room.identifier,\r\n      RATE_TYPE: room.roomtype.id,\r\n      ADULTS_COUNT: room.occupancy.adult_nbr,\r\n      CHILDREN_COUNT: room.occupancy.children_nbr,\r\n      PR_ID: +room.unit.id,\r\n      POOL: room['assigned_units_pool'],\r\n      GUEST: data.guest,\r\n      ROOMS: data.rooms,\r\n      BOOKING_NUMBER: data.booking_nbr,\r\n      cancelation: room.rateplan.cancelation,\r\n      guarantee: room.rateplan.guarantee,\r\n      TOTAL_PRICE: room.gross_total,\r\n      COUNTRY: data.guest.country_id,\r\n      FROM_DATE_STR: data.format.from_date,\r\n      TO_DATE_STR: data.format.to_date,\r\n      adult_child_offering: room.rateplan.selected_variation.adult_child_offering,\r\n      ARRIVAL_TIME: data.arrival.description,\r\n      origin: data.origin,\r\n      channel_booking_nbr: data.channel_booking_nbr,\r\n      is_direct: data.is_direct,\r\n      NOTES: data.is_direct ? data.remark : null,\r\n      SOURCE: { code: data.source.code, description: data.source.description, tag: data.source.tag },\r\n      ota_notes: data.ota_notes,\r\n      defaultDates: {\r\n        from_date: room.from_date,\r\n        to_date: room.to_date,\r\n      },\r\n    });\r\n  });\r\n\r\n  return bookings;\r\n}\r\nexport async function transformNewBLockedRooms(data: any): Promise<RoomBlockDetails> {\r\n  const stayStatus = await getStayStatus();\r\n  return {\r\n    ID: data.POOL,\r\n    NOTES: '',\r\n    BALANCE: '',\r\n    NAME:\r\n      data.NOTES !== ''\r\n        ? data.NOTES\r\n        : data.STAY_STATUS_CODE === '003'\r\n        ? renderBlock003Date(data.BLOCKED_TILL_DATE, data.BLOCKED_TILL_HOUR, data.BLOCKED_TILL_MINUTE)\r\n        : stayStatus.find(st => st.code === data.STAY_STATUS_CODE).value || '',\r\n    RELEASE_AFTER_HOURS: data.DESCRIPTION,\r\n    PR_ID: data.pr_id,\r\n    ENTRY_DATE: data.BLOCKED_TILL_DATE,\r\n    ENTRY_HOUR: data.BLOCKED_TILL_HOUR,\r\n    ENTRY_MINUTE: data.BLOCKED_TILL_MINUTE,\r\n    OPTIONAL_REASON: data.NOTES,\r\n    FROM_DATE: data.from_date,\r\n    TO_DATE: data.to_date,\r\n    NO_OF_DAYS: calculateDaysBetweenDates(data.from_date, data.to_date),\r\n    STATUS: status[data.STAY_STATUS_CODE],\r\n    POOL: data.POOL,\r\n    STATUS_CODE: data.STAY_STATUS_CODE,\r\n    OUT_OF_SERVICE: data.STAY_STATUS_CODE === '004',\r\n    FROM_DATE_STR: data.format.from_date,\r\n    TO_DATE_STR: data.format.to_date,\r\n    defaultDates: {\r\n      from_date: data.from_date,\r\n      to_date: data.to_date,\r\n    },\r\n  };\r\n}\r\nexport function calculateDaysBetweenDates(from_date: string, to_date: string) {\r\n  const startDate = moment(from_date, 'YYYY-MM-DD');\r\n  const endDate = moment(to_date, 'YYYY-MM-DD');\r\n  const daysDiff = endDate.diff(startDate, 'days');\r\n  return daysDiff || 1;\r\n}\r\n","import { DayData } from '../models/DayType';\r\nimport axios from 'axios';\r\nimport { BookingDetails, IBlockUnit, ICountry, IEntries, ISetupEntries, MonthType } from '../models/IBooking';\r\n\r\nimport { convertDateToCustomFormat, convertDateToTime, dateToFormattedString } from '../utils/utils';\r\nimport { getMyBookings } from '../utils/booking';\r\nimport { Booking, Day, Guest, IPmsLog } from '../models/booking.dto';\r\nimport { Token } from '@/models/Token';\r\n\r\nexport class BookingService extends Token {\r\n  public async getCalendarData(propertyid: number, from_date: string, to_date: string): Promise<{ [key: string]: any }> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Get_Exposed_Calendar?Ticket=${token}`, {\r\n          propertyid,\r\n          from_date,\r\n          to_date,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        const months: MonthType[] = data.My_Result.months;\r\n        const customMonths: { daysCount: number; monthName: string }[] = [];\r\n        const myBooking = await getMyBookings(months);\r\n        const days: DayData[] = months\r\n          .map(month => {\r\n            customMonths.push({\r\n              daysCount: month.days.length,\r\n              monthName: month.description,\r\n            });\r\n            return month.days.map(day => ({\r\n              day: convertDateToCustomFormat(day.description, month.description),\r\n              currentDate: convertDateToTime(day.description, month.description),\r\n              dayDisplayName: day.description,\r\n              rate: day.room_types,\r\n              unassigned_units_nbr: day.unassigned_units_nbr,\r\n              occupancy: day.occupancy,\r\n            }));\r\n          })\r\n          .flat();\r\n\r\n        return Promise.resolve({\r\n          ExceptionCode: null,\r\n          ExceptionMsg: '',\r\n          My_Params_Get_Rooming_Data: {\r\n            AC_ID: propertyid,\r\n            FROM: data.My_Params_Get_Exposed_Calendar.from_date,\r\n            TO: data.My_Params_Get_Exposed_Calendar.to_date,\r\n          },\r\n          days,\r\n          months: customMonths,\r\n          myBookings: myBooking,\r\n          defaultMonths: months,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  public async fetchGuest(email: string): Promise<Guest> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Get_Exposed_Guest?Ticket=${token}`, { email });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async fetchPMSLogs(booking_nbr: string | number): Promise<IPmsLog> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Get_Exposed_PMS_Logs?Ticket=${token}`, { booking_nbr });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async editExposedGuest(guest: Guest, book_nbr: string): Promise<any> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Edit_Exposed_Guest?Ticket=${token}`, { ...guest, book_nbr });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getBookingAvailability(\r\n    from_date: string,\r\n    to_date: string,\r\n    propertyid: number,\r\n    adultChildCount: { adult: number; child: number },\r\n    language: string,\r\n    room_type_ids: number[],\r\n    currency: { id: number; code: string },\r\n  ): Promise<BookingDetails> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Exposed_Booking_Availability?Ticket=${token}`, {\r\n          propertyid,\r\n          from_date,\r\n          to_date,\r\n          adult_nbr: adultChildCount.adult,\r\n          child_nbr: adultChildCount.child,\r\n          language,\r\n          currency_ref: currency.code,\r\n          room_type_ids,\r\n          is_backend: true,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data['My_Result'];\r\n      } else {\r\n        throw new Error(\"Token doesn't exist\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async getCountries(language: string): Promise<ICountry[]> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Exposed_Countries?Ticket=${token}`, {\r\n          language,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async fetchSetupEntries(): Promise<ISetupEntries> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI?Ticket=${token}`, {\r\n          TBL_NAMES: ['_ARRIVAL_TIME', '_RATE_PRICING_MODE', '_BED_PREFERENCE_TYPE'],\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        const res: any[] = data.My_Result;\r\n        return {\r\n          arrivalTime: res.filter(e => e.TBL_NAME === '_ARRIVAL_TIME'),\r\n\r\n          ratePricingMode: res.filter(e => e.TBL_NAME === '_RATE_PRICING_MODE'),\r\n          bedPreferenceType: res.filter(e => e.TBL_NAME === '_BED_PREFERENCE_TYPE'),\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getBlockedInfo(): Promise<IEntries[]> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI?Ticket=${token}`, { TBL_NAMES: ['_CALENDAR_BLOCKED_TILL'] });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getUserDefaultCountry() {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Country_By_IP?Ticket=${token}`, {\r\n          IP: '',\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data['My_Result'];\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async blockUnit(params: IBlockUnit) {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        const { data } = await axios.post(`/Block_Exposed_Unit?Ticket=${token}`, params);\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        console.log(data);\r\n        return data['My_Params_Block_Exposed_Unit'];\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async getUserInfo(email: string) {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        const { data } = await axios.post(`/GET_EXPOSED_GUEST?Ticket=${token}`, {\r\n          email,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getExposedBooking(booking_nbr: string, language: string): Promise<Booking> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Exposed_Booking?Ticket=${token}`, {\r\n          booking_nbr,\r\n          language,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  private generateDays(from_date: string, to_date: string, amount: number): Day[] {\r\n    const startDate = new Date(from_date);\r\n    const endDate = new Date(to_date);\r\n    const days: Day[] = [];\r\n\r\n    while (startDate < endDate) {\r\n      days.push({\r\n        date: startDate.toISOString().split('T')[0],\r\n        amount: amount,\r\n        cost: null,\r\n      });\r\n      startDate.setDate(startDate.getDate() + 1);\r\n    }\r\n\r\n    return days;\r\n  }\r\n  private calculateTotalRate(rate: number, totalNights: number, isRateModified: boolean, preference: number) {\r\n    if (isRateModified && preference === 2) {\r\n      return +rate;\r\n    }\r\n    return +rate / +totalNights;\r\n  }\r\n  public async fetchExposedGuest(email: string, property_id: number) {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        const { data } = await axios.post(`/Fetch_Exposed_Guests?Ticket=${token}`, {\r\n          email,\r\n          property_id,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data['My_Result'];\r\n      } else {\r\n        throw new Error(\"Token doesn't exist\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async fetchExposedBookings(booking_nbr: string, property_id: number, from_date: string, to_date: string) {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        const { data } = await axios.post(`/Fetch_Exposed_Bookings?Ticket=${token}`, {\r\n          booking_nbr,\r\n          property_id,\r\n          from_date,\r\n          to_date,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data['My_Result'];\r\n      } else {\r\n        throw new Error(\"Token doesn't exist\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getPCICardInfoURL(BOOK_NBR: string) {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_PCI_Card_Info_URL?Ticket=${token}`, {\r\n          BOOK_NBR,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data['My_Result'];\r\n      } else {\r\n        throw new Error(\"Token doesn't exist\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async bookUser(\r\n    bookedByInfoData,\r\n    check_in: boolean,\r\n    fromDate: Date,\r\n    toDate: Date,\r\n    guestData,\r\n    totalNights: number,\r\n    source: { code: string; description: string },\r\n    propertyid: number,\r\n    rooms: any[],\r\n    currency: { id: number; code: string },\r\n    bookingNumber?: string,\r\n    defaultGuest?: any,\r\n    arrivalTime?: any,\r\n    pr_id?: number,\r\n    identifier?: string,\r\n  ) {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        const fromDateStr = dateToFormattedString(fromDate);\r\n        const toDateStr = dateToFormattedString(toDate);\r\n        let guest: any = {\r\n          email: bookedByInfoData.email === '' ? null : bookedByInfoData.email || null,\r\n          first_name: bookedByInfoData.firstName,\r\n          last_name: bookedByInfoData.lastName,\r\n          country_id: bookedByInfoData.countryId === '' ? null : bookedByInfoData.countryId,\r\n          city: null,\r\n          mobile: bookedByInfoData.contactNumber === null ? '' : bookedByInfoData.contactNumber,\r\n          address: '',\r\n          dob: null,\r\n          subscribe_to_news_letter: bookedByInfoData.emailGuest || false,\r\n          cci: bookedByInfoData.cardNumber\r\n            ? {\r\n                nbr: bookedByInfoData.cardNumber,\r\n                holder_name: bookedByInfoData.cardHolderName,\r\n                expiry_month: bookedByInfoData.expiryMonth,\r\n                expiry_year: bookedByInfoData.expiryYear,\r\n              }\r\n            : null,\r\n        };\r\n        if (defaultGuest) {\r\n          guest = { ...defaultGuest, email: defaultGuest.email === '' ? null : defaultGuest.email };\r\n        }\r\n        if (bookedByInfoData.id) {\r\n          guest = { ...guest, id: bookedByInfoData.id };\r\n        }\r\n        const body = {\r\n          assign_units: true,\r\n          check_in,\r\n          is_pms: true,\r\n          is_direct: true,\r\n          is_in_loyalty_mode: false,\r\n          promo_key: null,\r\n          booking: {\r\n            booking_nbr: bookingNumber || '',\r\n            from_date: fromDateStr,\r\n            to_date: toDateStr,\r\n            remark: bookedByInfoData.message || null,\r\n            property: {\r\n              id: propertyid,\r\n            },\r\n            source,\r\n            currency,\r\n            arrival: { code: arrivalTime ? arrivalTime : bookedByInfoData.selectedArrivalTime },\r\n\r\n            guest,\r\n            rooms: [\r\n              ...guestData.map(data => ({\r\n                identifier: identifier || null,\r\n                roomtype: {\r\n                  id: data.roomCategoryId,\r\n                  name: data.roomCategoryName,\r\n                  physicalrooms: null,\r\n                  rateplans: null,\r\n                  availabilities: null,\r\n                  inventory: data.inventory,\r\n                  rate: data.rate / totalNights,\r\n                },\r\n                rateplan: {\r\n                  id: data.ratePlanId,\r\n                  name: data.ratePlanName,\r\n                  rate_restrictions: null,\r\n                  variations: null,\r\n                  cancelation: data.cancelation,\r\n                  guarantee: data.guarantee,\r\n                },\r\n                unit: typeof pr_id === 'undefined' && data.roomId === '' ? null : { id: +pr_id || +data.roomId },\r\n                occupancy: {\r\n                  adult_nbr: data.adultCount,\r\n                  children_nbr: data.childrenCount,\r\n                  infant_nbr: null,\r\n                },\r\n                bed_preference: data.preference,\r\n                from_date: fromDateStr,\r\n                to_date: toDateStr,\r\n                notes: null,\r\n                days: this.generateDays(fromDateStr, toDateStr, this.calculateTotalRate(data.rate, totalNights, data.isRateModified, data.rateType)),\r\n                guest: {\r\n                  email: null,\r\n                  first_name: data.guestName,\r\n                  last_name: null,\r\n                  country_id: null,\r\n                  city: null,\r\n                  mobile: null,\r\n                  address: null,\r\n                  dob: null,\r\n                  subscribe_to_news_letter: null,\r\n                },\r\n              })),\r\n              ...rooms,\r\n            ],\r\n          },\r\n        };\r\n        console.log('book user payload', body);\r\n        const { data } = await axios.post(`/DoReservation?Ticket=${token}`, body);\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        console.log(data['My_Result']);\r\n        return data['My_Result'];\r\n      } else {\r\n        throw new Error('Invalid token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n}\r\n"],"version":3}
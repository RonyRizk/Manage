{"file":"ir-tooltip.entry.js","mappings":";;AAAA,MAAM,YAAY,GAAG,wFAAwF;;MCOhG,SAAS;;;;;;EAIpB,UAAU,CAAC,UAAmB;IAC5B,IAAI,IAAI,CAAC,cAAc,EAAE;MACvB,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KACnC;IAED,IAAI,UAAU,EAAE;MACd,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;OAClB,EAAE,GAAG,CAAC,CAAC;KACT;SAAM;MACL,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KACnB;GACF;EACD,MAAM;IACJ,QACE,EAAC,IAAI,IAAC,KAAK,EAAC,SAAS,IACnB,YAAM,YAAY,EAAE,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,YAAY,EAAE,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAOzF,0BACc,SAAS,oBACN,KAAK,yBACA,YAAY,EAChC,KAAK,EAAC,4BAA4B,EAClC,MAAM,EAAC,IAAI,EACX,KAAK,EAAC,IAAI,EACV,KAAK,EAAC,cAAc,EACpB,OAAO,EAAC,aAAa,IAErB,YACE,IAAI,EAAC,SAAS,EACd,CAAC,EAAC,8PAA8P,GAChQ,CACE,CACD,EACN,IAAI,CAAC,IAAI,KACR,WAAK,KAAK,EAAC,uCAAuC,EAAC,IAAI,EAAC,SAAS,IAC/D,WAAK,KAAK,EAAC,eAAe,GAAO,EACjC,WAAK,KAAK,EAAC,mBAAmB,IAC5B,YAAM,SAAS,EAAE,IAAI,CAAC,OAAO,GAAS,CAClC,CACF,CACP,CACI,EACP;GACH;;;;;;","names":[],"sources":["src/components/ir-tooltip/ir-tooltip.css?tag=ir-tooltip&encapsulation=scoped","src/components/ir-tooltip/ir-tooltip.tsx"],"sourcesContent":[":host {\r\n  position: relative;\r\n}\r\n.tooltip-icon {\r\n  margin: 0 5px;\r\n  padding: 0;\r\n}\r\n/* p {\r\n  position: absolute;\r\n  top: 10px;\r\n  background-color: antiquewhite;\r\n  border-radius: 7px;\r\n  padding: 10px 15px;\r\n  z-index: 1000000;\r\n} */\r\n","import { Component, Host, Prop, State, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-tooltip',\r\n  styleUrl: 'ir-tooltip.css',\r\n  scoped: true,\r\n})\r\nexport class IrTooltip {\r\n  @Prop({ reflect: true }) message: string;\r\n  @State() open: boolean;\r\n  tooltipTimeout: any;\r\n  toggleOpen(shouldOpen: boolean) {\r\n    if (this.tooltipTimeout) {\r\n      clearTimeout(this.tooltipTimeout);\r\n    }\r\n\r\n    if (shouldOpen) {\r\n      this.tooltipTimeout = setTimeout(() => {\r\n        this.open = true;\r\n      }, 300);\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host class=\"m-0 p-0\">\r\n        <span onMouseEnter={() => this.toggleOpen(true)} onMouseLeave={() => this.toggleOpen(false)}>\r\n          {/* <i\r\n            class=\"ml-1 ft-info\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            data-original-title=\"Info popup\"\r\n          ></i> */}\r\n          <svg\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            data-original-title=\"Info popup\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            height=\"16\"\r\n            width=\"16\"\r\n            class=\"tooltip-icon\"\r\n            viewBox=\"0 0 512 512\"\r\n          >\r\n            <path\r\n              fill=\"#6b6f82\"\r\n              d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336h24V272H216c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"\r\n            />\r\n          </svg>\r\n        </span>\r\n        {this.open && (\r\n          <div class=\"tooltip bottom show position-absolute\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner fit\">\r\n              <span innerHTML={this.message}></span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}
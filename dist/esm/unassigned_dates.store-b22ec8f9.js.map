{"file":"unassigned_dates.store-b22ec8f9.js","mappings":";;AAMA,MAAMA,cAAY,GAAmB;EACnC,IAAI,EAAE,EAAE;EACR,MAAM,EAAE,EAAE;CACX,CAAC;MACW,EAAE,KAAK,EAAE,cAAc,EAAE,QAAQ,EAAE,qBAAqB,EAAE,GAAG,WAAW,CAAiBA,cAAY;;ACGlH,MAAM,YAAY,GAAoB,EAAE,CAAC;AACzC,IAAI,EAAE,KAAK,EAAE,gBAAgB,EAAE,GAAG,WAAW,CAAkB,YAAY,CAAC,CAAC;SAC7D,kBAAkB,CAAC,IAAqB;EACtD,gBAAgB,mCAAQ,gBAAgB,GAAK,IAAI,CAAE,CAAC;AACtD,CAAC;SACe,kBAAkB;EAChC,OAAO,gBAAgB,CAAC;AAC1B,CAAC;SACe,qBAAqB,CAAC,SAAiB,EAAE,OAAe;EACtE,MAAM,aAAa,GAAG,sBAAsB,CAAC,SAAS,CAAC,CAAC;EACxD,MAAM,WAAW,GAAG,sBAAsB,CAAC,OAAO,CAAC,CAAC;EACpD,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,GAAG;IACvC,MAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;IACnC,IAAI,aAAa,IAAI,YAAY,IAAI,YAAY,IAAI,WAAW,EAAE;MAChE,OAAO,gBAAgB,CAAC,GAAG,CAAC,CAAC;KAC9B;GACF,CAAC,CAAC;AACL,CAAC;AACD,SAAS,sBAAsB,CAAC,OAAe;EAC7C,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;EAC/B,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;AACxB;;;;","names":["initialState"],"sources":["src/stores/calendar-dates.store.ts","src/stores/unassigned_dates.store.ts"],"sourcesContent":["import { DayData } from '@/models/DayType';\r\nimport { createStore } from '@stencil/store';\r\nexport interface ICalendarDates {\r\n  days: DayData[];\r\n  months: { daysCount: number; monthName: string }[];\r\n}\r\nconst initialState: ICalendarDates = {\r\n  days: [],\r\n  months: [],\r\n};\r\nexport const { state: calendar_dates, onChange: onCalendarDatesChange } = createStore<ICalendarDates>(initialState);\r\n\r\nexport default calendar_dates;\r\n","import { createStore } from '@stencil/store';\r\n\r\ntype EventCategories = {};\r\n\r\ntype EventInfo = {\r\n  categories: EventCategories;\r\n  dateStr: string;\r\n};\r\n\r\ntype UnassignedDates = {\r\n  [timestamp: string]: EventInfo;\r\n};\r\n\r\nconst initialState: UnassignedDates = {};\r\nlet { state: unassigned_dates } = createStore<UnassignedDates>(initialState);\r\nexport function addUnassingedDates(data: UnassignedDates) {\r\n  unassigned_dates = { ...unassigned_dates, ...data };\r\n}\r\nexport function getUnassignedDates() {\r\n  return unassigned_dates;\r\n}\r\nexport function removeUnassignedDates(from_date: string, to_date: string) {\r\n  const fromTimestamp = convertToDateTimestamp(from_date);\r\n  const toTimestamp = convertToDateTimestamp(to_date);\r\n  Object.keys(unassigned_dates).forEach(key => {\r\n    const keyTimestamp = parseInt(key);\r\n    if (fromTimestamp <= keyTimestamp && keyTimestamp <= toTimestamp) {\r\n      delete unassigned_dates[key];\r\n    }\r\n  });\r\n}\r\nfunction convertToDateTimestamp(dateStr: string) {\r\n  const date = new Date(dateStr);\r\n  date.setHours(0, 0, 0, 0);\r\n  return date.getTime();\r\n}\r\n\r\nexport default unassigned_dates;\r\n"],"version":3}
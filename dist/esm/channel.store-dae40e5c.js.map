{"file":"channel.store-dae40e5c.js","mappings":";;AAQA,MAAM,YAAY,GAAkB;EAClC,QAAQ,EAAE,EAAE;EACZ,eAAe,EAAE,IAAI;EACrB,aAAa,EAAE,EAAE;EACjB,kBAAkB,EAAE,EAAE;CACvB,CAAC;MACW,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,GAAG,WAAW,CAAgB,YAAY,EAAE;SACrG,aAAa,CAAC,UAAkB;EAC9C,IAAI,UAAU,KAAK,EAAE,EAAE;IACrB,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC;IACrC,OAAO;GACR;EACD,MAAM,eAAe,GAAG,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,UAAU,CAAC,CAAC;EACzF,aAAa,CAAC,eAAe,GAAG,eAAe,CAAC;EAChD,gBAAgB,EAAE,CAAC;AACrB,CAAC;SACe,gBAAgB;EAC9B,IAAI,kBAAkB,GAAG,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,aAAa,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;EACvH,aAAa,CAAC,aAAa,GAAG,CAAC,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;AAC5D,CAAC;SACe,UAAU;EACxB,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC;EACrC,aAAa,CAAC,aAAa,GAAG,EAAE,CAAC;AACnC,CAAC;SACe,UAAU,CAAC,KAAa,EAAE,KAAa;EACrD,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC;IAC/B,UAAU,EAAE,KAAK;IACjB,KAAK;GACN,CAAC,CAAC;AACL,CAAC;SACe,cAAc,CAAC,KAAa;EAC1C,aAAa,CAAC,aAAa,GAAG,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;AAC3F;;;;","names":[],"sources":["src/stores/channel.store.ts"],"sourcesContent":["import { IChannel, IExposedChannel, IMap } from '@/models/calendarData';\r\nimport { createStore } from '@stencil/store';\r\nexport interface IChannelStore {\r\n  channels: IExposedChannel[];\r\n  connected_channels: IChannel[];\r\n  selectedChannel: IExposedChannel | null;\r\n  mappedChannel: IMap[];\r\n}\r\nconst initialState: IChannelStore = {\r\n  channels: [],\r\n  selectedChannel: null,\r\n  mappedChannel: [],\r\n  connected_channels: [],\r\n};\r\nexport const { state: channels_data, onChange: onChannelChange, dispose } = createStore<IChannelStore>(initialState);\r\nexport function selectChannel(channel_id: string) {\r\n  if (channel_id === '') {\r\n    channels_data.selectedChannel = null;\r\n    return;\r\n  }\r\n  const selectedChannel = channels_data.channels.find(c => c.id.toString() === channel_id);\r\n  channels_data.selectedChannel = selectedChannel;\r\n  setMappedChannel();\r\n}\r\nexport function setMappedChannel() {\r\n  let selectedChannelMap = channels_data.connected_channels.find(c => c.channel.id === channels_data.selectedChannel.id);\r\n  channels_data.mappedChannel = [...selectedChannelMap.map];\r\n}\r\nexport function resetStore() {\r\n  channels_data.selectedChannel = null;\r\n  channels_data.mappedChannel = [];\r\n}\r\nexport function addMapping(ir_id: string, fr_id: string) {\r\n  channels_data.mappedChannel.push({\r\n    channel_id: fr_id,\r\n    ir_id,\r\n  });\r\n}\r\nexport function removedMapping(ir_id: string) {\r\n  channels_data.mappedChannel = channels_data.mappedChannel.filter(c => c.ir_id !== ir_id);\r\n}\r\nexport default channels_data;\r\n"],"version":3}
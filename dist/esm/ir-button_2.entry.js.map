{"file":"ir-button.ir-modal.entry.js","mappings":"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","names":[],"sources":["src/components/ir-button/ir-button.css?tag=ir-button","src/components/ir-button/ir-button.tsx","src/components/ir-modal/ir-modal.css?tag=ir-modal","src/components/ir-modal/ir-modal.tsx"],"sourcesContent":["@import url('../../assets/feather/style.min.css');\r\n@import url('../../assets/fontawesome/css/all.css');\r\n@import url('../../assets/line-awesome/css/line-awesome.min.css');","import { Component, Prop, Event, EventEmitter, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-button',\r\n  styleUrl:\"ir-button.css\"\r\n})\r\nexport class IrButton {\r\n  @Prop() name: string;\r\n  @Prop() text;\r\n  @Prop() icon = 'ft-save';\r\n  @Prop() btn_color: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\r\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() btn_block = true;\r\n  @Prop() btn_disabled = false;\r\n  @Prop() btn_type = 'button';\r\n\r\n  connectedCallback() {}\r\n  disconnectedCallback() {}\r\n  @Event({ bubbles: true, composed: true }) clickHanlder: EventEmitter<any>;\r\n\r\n  render() {\r\n    let block = '';\r\n    if (this.btn_block) {\r\n      block = 'btn-block';\r\n    }\r\n    return (\r\n      <button\r\n        onClick={() => {\r\n          this.clickHanlder.emit();\r\n        }}\r\n        class={`btn btn-${this.btn_color} btn-${this.size} text-${this.textSize} ${block}`}\r\n        type={this.btn_type}\r\n      >\r\n        <i class={this.icon}></i>&nbsp;{this.text}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n",".backdropModal {\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 1000;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100%;\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease-in-out;\r\n  pointer-events: none;\r\n}\r\n.backdropModal.active {\r\n  cursor: pointer;\r\n  opacity: 1 !important;\r\n  pointer-events: all;\r\n}\r\n.modal {\r\n  z-index: 1001 !important;\r\n}\r\n\r\n.modal-dialog {\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.ir-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1050;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  outline: 0;\r\n  opacity: 0;\r\n  transform: translateY(-20%); /* change from translate(20%, -20%) for a vertical slide effect */\r\n  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\r\n  visibility: hidden; /* Add this line to ensure modal is hidden */\r\n  pointer-events: none; /* Avoid blocking other elements when modal is hidden */\r\n}\r\n\r\n.ir-modal.active {\r\n  opacity: 1;\r\n  transform: translateY(0);\r\n  visibility: visible; /* Make modal visible */\r\n  pointer-events: all; /* Restore pointer events */\r\n  transition: all 0.3s ease-in-out;\r\n}\r\n","import { Component, h, State, Method, Event, EventEmitter, Prop, Listen } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-modal',\r\n  styleUrl: 'ir-modal.css',\r\n})\r\nexport class IrModal {\r\n  @Prop() modalTitle: string = 'Modal Title';\r\n  @Prop() modalBody: string = 'Modal Body';\r\n\r\n  @Prop() rightBtnActive: boolean = true;\r\n  @Prop() leftBtnActive: boolean = true;\r\n\r\n  @Prop() rightBtnText: string = 'Close';\r\n  @Prop() leftBtnText: string = 'Confirm';\r\n\r\n  @Prop() rightBtnColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\r\n  @Prop() leftBtnColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'secondary';\r\n\r\n  @Prop() btnPosition: 'left' | 'right' | 'center' = 'right';\r\n  @Prop() iconAvailable: boolean = false;\r\n  @Prop() icon: string = '';\r\n\r\n  @State() isOpen: boolean = false;\r\n\r\n  @Method()\r\n  async closeModal() {\r\n    this.isOpen = false;\r\n  }\r\n  @Method()\r\n  async openModal() {\r\n    this.isOpen = true;\r\n  }\r\n  @Event({ bubbles: true, composed: true }) confirmModal: EventEmitter<any>;\r\n  @Event({ bubbles: true, composed: true }) cancelModal: EventEmitter<any>;\r\n\r\n  @Listen('clickHanlder')\r\n  btnClickHandler(event: CustomEvent) {\r\n    let target = event.target as HTMLInputElement;\r\n    let name = target.name;\r\n\r\n    if (name === this.leftBtnText) {\r\n      this.confirmModal.emit(this.item);\r\n      this.item = {};\r\n      this.closeModal();\r\n    } else if (name === this.rightBtnText) {\r\n      this.cancelModal.emit();\r\n      this.item = {};\r\n      this.closeModal();\r\n    }\r\n  }\r\n\r\n  @Prop() item: any = {};\r\n\r\n  render() {\r\n    return [\r\n      <div\r\n        class={`backdropModal ${this.isOpen ? 'active' : ''}`}\r\n        onClick={() => {\r\n          this.closeModal();\r\n        }}\r\n      ></div>,\r\n      <div class={`ir-modal  ${this.isOpen ? 'active' : ''}`} tabindex=\"-1\">\r\n        <div class=\"modal-dialog\">\r\n          <div class={` modal-content`}>\r\n            <div class={`modal-header align-items-center`}>\r\n              <div class=\"font-weight-bold d-flex align-items-center\">\r\n                {this.iconAvailable && <ir-icon class=\"mr-1\" icon={this.icon}></ir-icon>} {this.modalTitle}\r\n              </div>\r\n              <div class=\"font-weight-bold d-flex align-items-center font-size-large\">\r\n                <ir-icon icon=\"ft-x\" style={{ cursor: 'pointer' }} onClick={() => this.closeModal()}></ir-icon>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div>{this.modalBody}</div>\r\n            </div>\r\n\r\n            <div class={`modal-footer d-flex justify-content-${this.btnPosition === 'center' ? 'center' : this.btnPosition === 'left' ? 'start' : 'end'}`}>\r\n              {this.leftBtnActive && <ir-button icon={''} btn_color={this.leftBtnColor} btn_block text={this.leftBtnText} name={this.leftBtnText}></ir-button>}\r\n              {this.rightBtnActive && <ir-button icon={''} btn_color={this.rightBtnColor} btn_block text={this.rightBtnText} name={this.rightBtnText}></ir-button>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>,\r\n    ];\r\n  }\r\n}\r\n"],"version":3}
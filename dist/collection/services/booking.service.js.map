{"version":3,"file":"booking.service.js","sourceRoot":"","sources":["../../src/services/booking.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { DayData } from '../models/DayType';\r\nimport axios from 'axios';\r\nimport { BookingDetails, IBlockUnit, ICountry, IEntries, ISetupEntries, MonthType } from '../models/IBooking';\r\n\r\nimport { convertDateToCustomFormat, convertDateToTime, dateToFormattedString } from '../utils/utils';\r\nimport { getMyBookings } from '../utils/booking';\r\nimport { Booking, Day } from '../models/booking.dto';\r\n\r\nexport class BookingService {\r\n  public async getCalendarData(propertyid: number, from_date: string, to_date: string): Promise<{ [key: string]: any }> {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Get_Exposed_Calendar?Ticket=${token}`, {\r\n          propertyid,\r\n          from_date,\r\n          to_date,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        const months: MonthType[] = data.My_Result.months;\r\n        const customMonths: { daysCount: number; monthName: string }[] = [];\r\n        const myBooking = await getMyBookings(months);\r\n        const days: DayData[] = months\r\n          .map(month => {\r\n            customMonths.push({\r\n              daysCount: month.days.length,\r\n              monthName: month.description,\r\n            });\r\n            return month.days.map(day => ({\r\n              day: convertDateToCustomFormat(day.description, month.description),\r\n              currentDate: convertDateToTime(day.description, month.description),\r\n              dayDisplayName: day.description,\r\n              rate: day.room_types,\r\n              unassigned_units_nbr: day.unassigned_units_nbr,\r\n              occupancy: day.occupancy,\r\n            }));\r\n          })\r\n          .flat();\r\n\r\n        return Promise.resolve({\r\n          ExceptionCode: null,\r\n          ExceptionMsg: '',\r\n          My_Params_Get_Rooming_Data: {\r\n            AC_ID: propertyid,\r\n            FROM: data.My_Params_Get_Exposed_Calendar.from_date,\r\n            TO: data.My_Params_Get_Exposed_Calendar.to_date,\r\n          },\r\n          days,\r\n          months: customMonths,\r\n          myBookings: myBooking,\r\n          defaultMonths: months,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  public async getBookingAvailability(\r\n    from_date: string,\r\n    to_date: string,\r\n    propertyid: number,\r\n    adultChildCount: { adult: number; child: number },\r\n    language: string,\r\n    room_type_ids: number[],\r\n    currency: { id: number; code: string },\r\n  ): Promise<BookingDetails> {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Exposed_Booking_Availability?Ticket=${token}`, {\r\n          propertyid,\r\n          from_date,\r\n          to_date,\r\n          adult_nbr: adultChildCount.adult,\r\n          child_nbr: adultChildCount.child,\r\n          language,\r\n          currency_ref: currency.code,\r\n          room_type_ids,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data['My_Result'];\r\n      } else {\r\n        throw new Error(\"Token doesn't exist\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async getCountries(language: string): Promise<ICountry[]> {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Exposed_Countries?Ticket=${token}`, {\r\n          language,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async fetchSetupEntries(): Promise<ISetupEntries> {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI?Ticket=${token}`, {\r\n          TBL_NAMES: ['_ARRIVAL_TIME', '_RATE_PRICING_MODE', '_BED_PREFERENCE_TYPE'],\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        const res: any[] = data.My_Result;\r\n        return {\r\n          arrivalTime: res.filter(e => e.TBL_NAME === '_ARRIVAL_TIME'),\r\n\r\n          ratePricingMode: res.filter(e => e.TBL_NAME === '_RATE_PRICING_MODE'),\r\n          bedPreferenceType: res.filter(e => e.TBL_NAME === '_BED_PREFERENCE_TYPE'),\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getBlockedInfo(): Promise<IEntries[]> {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI?Ticket=${token}`, { TBL_NAMES: ['_CALENDAR_BLOCKED_TILL'] });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getUserDefaultCountry() {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Country_By_IP?Ticket=${token}`, {\r\n          IP: '',\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data['My_Result'];\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async blockUnit(params: IBlockUnit) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Block_Exposed_Unit?Ticket=${token}`, params);\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        console.log(data);\r\n        return data['My_Params_Block_Exposed_Unit'];\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async getUserInfo(email: string) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/GET_EXPOSED_GUEST?Ticket=${token}`, {\r\n          email,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getExoposedBooking(booking_nbr: string, language: string): Promise<Booking> {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Exposed_Booking?Ticket=${token}`, {\r\n          booking_nbr,\r\n          language,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  private generateDays(from_date: string, to_date: string, amount: number): Day[] {\r\n    const startDate = new Date(from_date);\r\n    const endDate = new Date(to_date);\r\n    const days: Day[] = [];\r\n\r\n    while (startDate < endDate) {\r\n      days.push({\r\n        date: startDate.toISOString().split('T')[0],\r\n        amount: amount,\r\n      });\r\n      startDate.setDate(startDate.getDate() + 1);\r\n    }\r\n\r\n    return days;\r\n  }\r\n  private calculateTotalRate(rate: number, totalNights: number, isRateModified: boolean, preference: number) {\r\n    if (isRateModified && preference === 2) {\r\n      return +rate;\r\n    }\r\n    return +rate / +totalNights;\r\n  }\r\n  public async bookUser(\r\n    bookedByInfoData,\r\n    check_in: boolean,\r\n    fromDate: Date,\r\n    toDate: Date,\r\n    guestData,\r\n    totalNights: number,\r\n    source: { code: string; description: string },\r\n    propertyid: number,\r\n    currency: { id: number; code: string },\r\n    bookingNumber?: string,\r\n    defaultGuest?: any,\r\n    arrivalTime?: any,\r\n    pr_id?: number,\r\n  ) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const fromDateStr = dateToFormattedString(fromDate);\r\n        const toDateStr = dateToFormattedString(toDate);\r\n        let guest: any = {\r\n          email: bookedByInfoData.email || null,\r\n          first_name: bookedByInfoData.firstName,\r\n          last_name: bookedByInfoData.lastName,\r\n          country_id: bookedByInfoData.countryId,\r\n          city: null,\r\n          mobile: bookedByInfoData.contactNumber,\r\n          address: '',\r\n          dob: null,\r\n          subscribe_to_news_letter: bookedByInfoData.emailGuest || false,\r\n          cci: bookedByInfoData.cardNumber\r\n            ? {\r\n                nbr: bookedByInfoData.cardNumber,\r\n                holder_name: bookedByInfoData.cardHolderName,\r\n                expiry_month: bookedByInfoData.expiryMonth,\r\n                expiry_year: bookedByInfoData.expiryYear,\r\n              }\r\n            : null,\r\n        };\r\n        if (bookedByInfoData.id) {\r\n          guest = { ...guest, id: bookedByInfoData.id };\r\n        }\r\n        const body = {\r\n          assign_units: true,\r\n          check_in,\r\n          booking: {\r\n            booking_nbr: bookingNumber || '',\r\n            from_date: fromDateStr,\r\n            to_date: toDateStr,\r\n            remark: bookedByInfoData.message || null,\r\n            property: {\r\n              id: propertyid,\r\n            },\r\n            source,\r\n            currency,\r\n            arrival: {\r\n              code: arrivalTime || bookedByInfoData.selectedArrivalTime,\r\n            },\r\n            guest: defaultGuest || guest,\r\n            rooms: guestData.map(data => ({\r\n              roomtype: {\r\n                id: data.roomCategoryId,\r\n                name: data.roomCategoryName,\r\n                physicalrooms: null,\r\n                rateplans: null,\r\n                availabilities: null,\r\n                inventory: data.inventory,\r\n                rate: data.rate / totalNights,\r\n              },\r\n              rateplan: {\r\n                id: data.ratePlanId,\r\n                name: data.ratePlanName,\r\n                rate_restrictions: null,\r\n                variations: null,\r\n                cancelation: data.cancelation,\r\n                guarantee: data.guarantee,\r\n              },\r\n              unit: typeof pr_id === 'undefined' && data.roomId === '' ? null : { id: +pr_id || +data.roomId },\r\n              occupancy: {\r\n                adult_nbr: data.adultCount,\r\n                children_nbr: data.childrenCount,\r\n                infant_nbr: null,\r\n              },\r\n              from_date: fromDateStr,\r\n              to_date: toDateStr,\r\n              notes: null,\r\n              days: this.generateDays(fromDateStr, toDateStr, this.calculateTotalRate(data.rate, totalNights, data.isRateModified, data.rateType)),\r\n              guest: {\r\n                email: null,\r\n                first_name: data.guestName,\r\n                last_name: null,\r\n                country_id: null,\r\n                city: null,\r\n                mobile: null,\r\n                address: null,\r\n                dob: null,\r\n                subscribe_to_news_letter: null,\r\n              },\r\n            })),\r\n          },\r\n        };\r\n        console.log('body', body);\r\n        const { data } = await axios.post(`/DoReservation?Ticket=${token}`, body);\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        console.log(data['My_Result']);\r\n        return data['My_Result'];\r\n      } else {\r\n        throw new Error('Invalid token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n}\r\n"]}
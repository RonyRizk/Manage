{"version":3,"file":"ir-modal.js","sourceRoot":"","sources":["../../../src/components/ir-modal/ir-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, State, Method, Event, EventEmitter, Prop, Listen } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-modal',\r\n  styleUrl: 'ir-modal.css',\r\n})\r\nexport class IrModal {\r\n  @Prop() modalTitle: string = 'Modal Title';\r\n  @Prop() modalBody: string = 'Modal Body';\r\n\r\n  @Prop() rightBtnActive: boolean = true;\r\n  @Prop() leftBtnActive: boolean = true;\r\n\r\n  @Prop() rightBtnText: string = 'Confirm';\r\n  @Prop() leftBtnText: string = 'Close';\r\n\r\n  @Prop() rightBtnColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\r\n  @Prop() leftBtnColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'secondary';\r\n\r\n  @Prop() btnPosition: 'left' | 'right' | 'center' = 'right';\r\n  @Prop() iconAvailable: boolean = false;\r\n  @Prop() icon: string = '';\r\n\r\n  @State() isOpen: boolean = false;\r\n\r\n  @Method()\r\n  async closeModal() {\r\n    this.isOpen = false;\r\n  }\r\n  @Method()\r\n  async openModal() {\r\n    this.isOpen = true;\r\n  }\r\n  @Event({ bubbles: true, composed: true }) confirmModal: EventEmitter<any>;\r\n  @Event({ bubbles: true, composed: true }) cancelModal: EventEmitter<any>;\r\n\r\n  @Listen('clickHanlder')\r\n  btnClickHandler(event: CustomEvent) {\r\n    let target = event.target as HTMLInputElement;\r\n    let name = target.name;\r\n\r\n    if (name === this.leftBtnText) {\r\n      this.cancelModal.emit();\r\n      this.item = {};\r\n      this.closeModal();\r\n    } else if (name === this.rightBtnText) {\r\n      this.confirmModal.emit(this.item);\r\n      this.item = {};\r\n      this.closeModal();\r\n    }\r\n  }\r\n\r\n  @Prop({ mutable: true }) item: any = {};\r\n\r\n  render() {\r\n    return [\r\n      <div\r\n        class={`backdropModal ${this.isOpen ? 'active' : ''}`}\r\n        onClick={() => {\r\n          this.closeModal();\r\n        }}\r\n      ></div>,\r\n      <div class={`ir-modal  ${this.isOpen ? 'active' : ''}`} tabindex=\"-1\">\r\n        <div class=\"modal-dialog\">\r\n          <div class={` modal-content`}>\r\n            <div class={`modal-header align-items-center border-0 `}>\r\n              <div class=\"font-weight-bold d-flex align-items-center\">\r\n                {this.iconAvailable && <ir-icon class=\"mr-1\" icon={this.icon}></ir-icon>} {this.modalBody}\r\n              </div>\r\n              <div class=\"font-weight-bold d-flex align-items-center font-size-large\">\r\n                <ir-icon\r\n                  icon=\"ft-x\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() => {\r\n                    this.closeModal();\r\n                    this.cancelModal.emit();\r\n                  }}\r\n                ></ir-icon>\r\n              </div>\r\n            </div>\r\n            {/* <div class=\"modal-body text-left\">\r\n              <div>{this.modalBody}</div>\r\n            </div> */}\r\n\r\n            <div class={`modal-footer border-0 d-flex justify-content-${this.btnPosition === 'center' ? 'center' : this.btnPosition === 'left' ? 'start' : 'end'}`}>\r\n              {this.leftBtnActive && <ir-button icon={''} btn_color={this.leftBtnColor} btn_block text={this.leftBtnText} name={this.leftBtnText}></ir-button>}\r\n              {this.rightBtnActive && <ir-button icon={''} btn_color={this.rightBtnColor} btn_block text={this.rightBtnText} name={this.rightBtnText}></ir-button>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>,\r\n    ];\r\n  }\r\n}\r\n"]}
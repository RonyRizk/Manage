{"version":3,"file":"ir-button.js","sourceRoot":"","sources":["../../../src/components/ir-button/ir-button.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAgB,CAAC,EAAE,MAAM,eAAe,CAAC;AAMxE,MAAM,OAAO,QAAQ;;;;gBAGJ,SAAS;qBACoF,SAAS;gBAClF,IAAI;oBACA,IAAI;qBACvB,IAAI;wBACD,KAAK;oBACT,QAAQ;qBACE,KAAK;;;EAGlC,iBAAiB,KAAI,CAAC;EACtB,oBAAoB,KAAI,CAAC;EAGzB,MAAM;IACJ,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;IACnD,OAAO,CACL,cACE,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EACvC,KAAK,EAAE,WAAW,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,kCAAkC,IAAI,CAAC,IAAI,SAAS,IAAI,CAAC,QAAQ,IAAI,UAAU,EAAE,EACpI,IAAI,EAAE,IAAI,CAAC,QAAQ,EACnB,QAAQ,EAAE,IAAI,CAAC,YAAY;MAE3B,YAAM,KAAK,EAAC,aAAa,gBAAa,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;QACnE,YAAM,IAAI,EAAC,MAAM,GAAQ,CACpB;MACN,IAAI,CAAC,SAAS,IAAI,YAAM,KAAK,EAAC,gBAAgB,GAAQ;MACtD,IAAI,CAAC,IAAI,IAAI,YAAM,KAAK,EAAC,iBAAiB,IAAE,IAAI,CAAC,IAAI,CAAQ,CACvD,CACV,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, Event, EventEmitter, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-button',\r\n  styleUrl: 'ir-button.css',\r\n})\r\nexport class IrButton {\r\n  @Prop() name: string;\r\n  @Prop() text;\r\n  @Prop() icon = 'ft-save';\r\n  @Prop() btn_color: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\r\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() btn_block = true;\r\n  @Prop() btn_disabled = false;\r\n  @Prop() btn_type = 'button';\r\n  @Prop() isLoading: boolean = false;\r\n  @Prop() btn_styles: string;\r\n\r\n  connectedCallback() {}\r\n  disconnectedCallback() {}\r\n  @Event({ bubbles: true, composed: true }) clickHanlder: EventEmitter<any>;\r\n\r\n  render() {\r\n    let blockClass = this.btn_block ? 'btn-block' : '';\r\n    return (\r\n      <button\r\n        onClick={() => this.clickHanlder.emit()}\r\n        class={`btn btn-${this.btn_color} ${this.btn_styles} d-flex align-items-center btn-${this.size} text-${this.textSize} ${blockClass}`}\r\n        type={this.btn_type}\r\n        disabled={this.btn_disabled}\r\n      >\r\n        <span class=\"button-icon\" data-state={this.isLoading ? 'loading' : ''}>\r\n          <slot name=\"icon\"></slot>\r\n        </span>\r\n        {this.isLoading && <span class=\"loader m-0 p-0\"></span>}\r\n        {this.text && <span class=\"button-text m-0\">{this.text}</span>}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n"]}
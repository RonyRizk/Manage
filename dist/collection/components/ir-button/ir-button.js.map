{"version":3,"file":"ir-button.js","sourceRoot":"","sources":["../../../src/components/ir-button/ir-button.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAgB,CAAC,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAMlF,MAAM,OAAO,QAAQ;;;;gBAGJ,SAAS;qBACoF,SAAS;gBAClF,IAAI;oBACA,IAAI;qBACvB,IAAI;wBACD,KAAK;oBACT,QAAQ;qBACE,KAAK;;;EAGlC,iBAAiB,KAAI,CAAC;EACtB,oBAAoB,KAAI,CAAC;EAGzB,MAAM;IACJ,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,IAAI,CAAC,SAAS,EAAE;MAClB,KAAK,GAAG,WAAW,CAAC;KACrB;IACD,OAAO,CACL,cACE,OAAO,EAAE,GAAG,EAAE;QACZ,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;MAC3B,CAAC,EACD,KAAK,EAAE,eAAe,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,eAAe,IAAI,CAAC,IAAI,SAAS,IAAI,CAAC,QAAQ,IAAI,KAAK,EAAE,EAChH,IAAI,EAAE,IAAI,CAAC,QAAQ;MAElB,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAC/B;QACE,SAAG,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,eAAe,GAAM;iBACtC,CACR;MACA,IAAI,CAAC,SAAS,IAAI,CACjB,EAAC,QAAQ;QACP,YAAM,KAAK,EAAE,gBAAgB,GAAS;iBAC7B,CACZ;MACD,YAAM,KAAK,EAAE,qBAAqB,IAAG,IAAI,CAAC,IAAI,CAAQ,CAC/C,CACV,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, Event, EventEmitter, h, Fragment } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-button',\r\n  styleUrl: 'ir-button.css',\r\n})\r\nexport class IrButton {\r\n  @Prop() name: string;\r\n  @Prop() text;\r\n  @Prop() icon = 'ft-save';\r\n  @Prop() btn_color: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\r\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() btn_block = true;\r\n  @Prop() btn_disabled = false;\r\n  @Prop() btn_type = 'button';\r\n  @Prop() isLoading: boolean = false;\r\n  @Prop() btn_styles: string;\r\n\r\n  connectedCallback() {}\r\n  disconnectedCallback() {}\r\n  @Event({ bubbles: true, composed: true }) clickHanlder: EventEmitter<any>;\r\n\r\n  render() {\r\n    let block = '';\r\n    if (this.btn_block) {\r\n      block = 'btn-block';\r\n    }\r\n    return (\r\n      <button\r\n        onClick={() => {\r\n          this.clickHanlder.emit();\r\n        }}\r\n        class={`m-0 btn btn-${this.btn_color} ${this.btn_styles} d-flex btn-${this.size} text-${this.textSize} ${block}`}\r\n        type={this.btn_type}\r\n      >\r\n        {this.icon && !this.isLoading && (\r\n          <span>\r\n            <i class={`${this.icon} font-small-3`}></i>&nbsp;\r\n          </span>\r\n        )}\r\n        {this.isLoading && (\r\n          <Fragment>\r\n            <span class={'m-0 p-0 loader'}></span>&nbsp;\r\n          </Fragment>\r\n        )}\r\n        <span class={'m-0 p-0 button-text'}>{this.text}</span>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n"]}
{"version":3,"file":"ir-combobox.js","sourceRoot":"","sources":["../../../src/components/ir-combobox/ir-combobox.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAgB,MAAM,EAAE,MAAM,eAAe,CAAC;AAOhG,MAAM,OAAO,UAAU;;gBAC2C,EAAE;oBACvC,GAAG;yBAEG,CAAC,CAAC;6BACG,KAAK;qBACb,IAAI;;sBAEJ,EAAE;;EAShC,aAAa,CAAC,KAAoB;;IAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAClC,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC9C,IAAI,QAAQ,GAAG,CAAC,EAAE;MAChB,QAAQ,KAAK,CAAC,GAAG,EAAE;QACjB,KAAK,SAAS;UACZ,KAAK,CAAC,cAAc,EAAE,CAAC;UACvB,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC;UACpE,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;UACtC,MAAM;QACR,KAAK,WAAW;UACd,KAAK,CAAC,cAAc,EAAE,CAAC;UACvB,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;UACzD,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;UACtC,MAAM;QACR,KAAK,OAAO,CAAC;QACb,KAAK,GAAG,CAAC;QACT,KAAK,YAAY;UACf,KAAK,CAAC,cAAc,EAAE,CAAC;UACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;UACpC,MAAM;QACR,KAAK,QAAQ;UACX,MAAA,IAAI,CAAC,QAAQ,0CAAE,IAAI,EAAE,CAAC;UACtB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;UAC/B,MAAM;OACT;KACF;EACH,CAAC;EACD,mBAAmB;IACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACpD,IAAI,QAAQ,EAAE;MACZ,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;MAC1C,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;KACvC;IACD,OAAO,CAAC,CAAC;EACX,CAAC;EACD,oBAAoB,CAAC,UAAU,EAAE,aAAa,GAAG,GAAG;IAClD,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACpD,IAAI,QAAQ,EAAE;MACZ,MAAM,MAAM,GAAG,CAAC,CAAC;MACjB,MAAM,eAAe,GAAG,UAAU,GAAG,MAAM,CAAC;MAC5C,MAAM,gBAAgB,GAAG,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC;MAC9D,IAAI,YAAY,GAAG,gBAAgB,GAAG,aAAa,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC;MACzE,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC;MAC1F,QAAQ,CAAC,QAAQ,CAAC;QAChB,GAAG,EAAE,YAAY;QACjB,QAAQ,EAAE,MAAM;OACjB,CAAC,CAAC;KACJ;EACH,CAAC;EAED,UAAU,CAAC,KAAK;IACd,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;MACpB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;MAC3B,sEAAsE;MACtE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;MACrB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;EACH,CAAC;EAED,iBAAiB;IACf,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACjC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,GAAG,EAAE;MACnC,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;EACpB,CAAC;EACD,WAAW;IACT,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;EAChC,CAAC;EACD,UAAU;IACR,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACrB,IAAI,CAAC,aAAa,EAAE,CAAC;IACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC/B,CAAC;EACD,aAAa,CAAC,WAAoB,IAAI;;IACpC,IAAI,QAAQ,EAAE;MACZ,MAAA,IAAI,CAAC,QAAQ,0CAAE,IAAI,EAAE,CAAC;KACvB;IACD,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACf,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;IACxB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;EACjC,CAAC;EACD,KAAK,CAAC,SAAS;IACb,IAAI;MACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;IAAC,OAAO,KAAK,EAAE;MACd,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KAC7B;YAAS;MACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;EACH,CAAC;EAED,iBAAiB,CAAC,KAAY;IAC5B,IAAI,CAAC,UAAU,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;IAC3D,IAAI,IAAI,CAAC,UAAU,EAAE;MACnB,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;SAAM;MACL,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;MACjC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;KAC3B;EACH,CAAC;EAGD,mBAAmB,CAAC,KAAiB;IACnC,MAAM,MAAM,GAAG,KAAK,CAAC,MAAqB,CAAC;IAC3C,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;MAC7B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;KAChC;EACH,CAAC;EAED,UAAU;IACR,UAAU,CAAC,GAAG,EAAE;MACd,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;QACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;OACtB;WAAM;QACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;OAC7B;IACH,CAAC,EAAE,GAAG,CAAC,CAAC;EACV,CAAC;EACD,cAAc,CAAC,OAAO;IACpB,OAAO,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;EACjD,CAAC;EAED,oBAAoB;;IAClB,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACjC,MAAA,IAAI,CAAC,QAAQ,0CAAE,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5D,MAAA,IAAI,CAAC,QAAQ,0CAAE,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7D,MAAA,IAAI,CAAC,QAAQ,0CAAE,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAClE,MAAA,IAAI,CAAC,QAAQ,0CAAE,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;EAChE,CAAC;EACD,iBAAiB,CAAC,KAAoB,EAAE,KAAa;;IACnD,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,KAAK,YAAY,EAAE;MAC5E,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;MACvB,KAAK,CAAC,cAAc,EAAE,CAAC;KACxB;SAAM,IAAI,KAAK,CAAC,GAAG,KAAK,QAAQ,EAAE;MACjC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;MAC/B,MAAA,IAAI,CAAC,QAAQ,0CAAE,IAAI,EAAE,CAAC;MACtB,KAAK,CAAC,cAAc,EAAE,CAAC;KACxB;SAAM;MACL,OAAO;KACR;EACH,CAAC;EACD,MAAM;IACJ,OAAO,CACL,gBAAU,KAAK,EAAC,SAAS;MACvB,aAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAC,cAAc,GAAG;MAC1C,UAAI,KAAK,EAAC,EAAE;QACV,sBAAa,CACV,CACI,CACZ,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { IToast } from '@/components';\r\nimport { Component, Prop, State, h, Element, Event, EventEmitter, Listen } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-combobox',\r\n  styleUrl: 'ir-combobox.css',\r\n  scoped: true,\r\n})\r\nexport class IrCombobox {\r\n  @Prop({ mutable: true }) data: { id: number; name: string }[] = [];\r\n  @Prop() duration: number = 300;\r\n\r\n  @State() selectedIndex: number = -1;\r\n  @State() isComboBoxVisible: boolean = false;\r\n  @State() isLoading: boolean = true;\r\n  @State() isItemSelected: boolean;\r\n  @State() inputValue: string = '';\r\n\r\n  @Element() el: HTMLElement;\r\n  @Event({ bubbles: true, composed: true }) comboboxValue: EventEmitter<{ key: string; data: unknown }>;\r\n  @Event() inputCleared: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n  private inputRef: HTMLInputElement;\r\n  private debounceTimer: any;\r\n\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    const dataSize = this.data.length;\r\n    const itemHeight = this.getHeightOfPElement();\r\n    if (dataSize > 0) {\r\n      switch (event.key) {\r\n        case 'ArrowUp':\r\n          event.preventDefault();\r\n          this.selectedIndex = (this.selectedIndex - 1 + dataSize) % dataSize;\r\n          this.adjustScrollPosition(itemHeight);\r\n          break;\r\n        case 'ArrowDown':\r\n          event.preventDefault();\r\n          this.selectedIndex = (this.selectedIndex + 1) % dataSize;\r\n          this.adjustScrollPosition(itemHeight);\r\n          break;\r\n        case 'Enter':\r\n        case ' ':\r\n        case 'ArrowRight':\r\n          event.preventDefault();\r\n          this.selectItem(this.selectedIndex);\r\n          break;\r\n        case 'Escape':\r\n          this.inputRef?.blur();\r\n          this.isComboBoxVisible = false;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  getHeightOfPElement() {\r\n    const combobox = this.el.querySelector('.combobox');\r\n    if (combobox) {\r\n      const pItem = combobox.querySelector('p');\r\n      return pItem ? pItem.offsetHeight : 0;\r\n    }\r\n    return 0;\r\n  }\r\n  adjustScrollPosition(itemHeight, visibleHeight = 250) {\r\n    const combobox = this.el.querySelector('.combobox');\r\n    if (combobox) {\r\n      const margin = 2;\r\n      const itemTotalHeight = itemHeight + margin;\r\n      const selectedPosition = itemTotalHeight * this.selectedIndex;\r\n      let newScrollTop = selectedPosition - visibleHeight / 2 + itemHeight / 2;\r\n      newScrollTop = Math.max(0, Math.min(newScrollTop, combobox.scrollHeight - visibleHeight));\r\n      combobox.scrollTo({\r\n        top: newScrollTop,\r\n        behavior: 'auto',\r\n      });\r\n    }\r\n  }\r\n\r\n  selectItem(index) {\r\n    if (this.data[index]) {\r\n      this.isItemSelected = true;\r\n      // this.comboboxValue.emit({ key: 'select', data: this.data[index] });\r\n      this.inputValue = '';\r\n      this.resetCombobox();\r\n    }\r\n  }\r\n\r\n  debounceFetchData() {\r\n    clearTimeout(this.debounceTimer);\r\n    this.debounceTimer = setTimeout(() => {\r\n      this.fetchData();\r\n    }, this.duration);\r\n  }\r\n  handleFocus() {\r\n    this.isComboBoxVisible = true;\r\n  }\r\n  clearInput() {\r\n    this.inputValue = '';\r\n    this.resetCombobox();\r\n    this.inputCleared.emit(null);\r\n  }\r\n  resetCombobox(withblur: boolean = true) {\r\n    if (withblur) {\r\n      this.inputRef?.blur();\r\n    }\r\n    this.data = [];\r\n    this.selectedIndex = -1;\r\n    this.isComboBoxVisible = false;\r\n  }\r\n  async fetchData() {\r\n    try {\r\n      this.isLoading = true;\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  handleInputChange(event: Event) {\r\n    this.inputValue = (event.target as HTMLInputElement).value;\r\n    if (this.inputValue) {\r\n      this.debounceFetchData();\r\n    } else {\r\n      clearTimeout(this.debounceTimer);\r\n      this.resetCombobox(false);\r\n    }\r\n  }\r\n\r\n  @Listen('click', { target: 'document' })\r\n  handleDocumentClick(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (!this.el.contains(target)) {\r\n      this.isComboBoxVisible = false;\r\n    }\r\n  }\r\n\r\n  handleBlur() {\r\n    setTimeout(() => {\r\n      if (!this.isItemSelected) {\r\n        this.comboboxValue.emit({ key: 'blur', data: this.inputValue });\r\n        this.inputValue = '';\r\n        this.resetCombobox();\r\n      } else {\r\n        this.isItemSelected = false;\r\n      }\r\n    }, 200);\r\n  }\r\n  isDropdownItem(element) {\r\n    return element && element.closest('.combobox');\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    clearTimeout(this.debounceTimer);\r\n    this.inputRef?.removeEventListener('blur', this.handleBlur);\r\n    this.inputRef?.removeEventListener('click', this.selectItem);\r\n    this.inputRef?.removeEventListener('keydown', this.handleKeyDown);\r\n    this.inputRef?.removeEventListener('focus', this.handleFocus);\r\n  }\r\n  handleItemKeyDown(event: KeyboardEvent, index: number) {\r\n    if (event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowRight') {\r\n      this.selectItem(index);\r\n      event.preventDefault();\r\n    } else if (event.key === 'Escape') {\r\n      this.isComboBoxVisible = false;\r\n      this.inputRef?.blur();\r\n      event.preventDefault();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <fieldset class=\"m-0 p-0\">\r\n        <input type=\"text\" class=\"form-control\" />\r\n        <ul class=\"\">\r\n          <p>Room 1</p>\r\n        </ul>\r\n      </fieldset>\r\n    );\r\n  }\r\n}\r\n"]}
{"version":3,"file":"ir-sidebar.js","sourceRoot":"","sources":["../../../src/components/ir-sidebar/ir-sidebar.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAgB,KAAK,EAAE,MAAM,eAAe,CAAC;AAOvF,MAAM,OAAO,SAAS;;;gBAEa,OAAO;2BACL,IAAI;gBACiB,KAAK;;;EAM7D,WAAW;IACT,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;MACzC,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;QAC/C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;OAChE;KACF;EACH,CAAC;EAED,yBAAyB;IACvB,IAAI,CAAC,WAAW,EAAE,CAAC;EACrB,CAAC;EACD,iBAAiB;IACf,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACrD,CAAC;EAED,gBAAgB;IACd,yCAAyC;IACzC,IAAI,CAAC,WAAW,EAAE,CAAC;IACnB,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;EAC3D,CAAC;EAEO,aAAa,CAAC,CAAgB;IACpC,IAAI,CAAC,CAAC,GAAG,KAAK,QAAQ,EAAE;MACtB,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;KAC7B;SAAM;MACL,OAAO;KACR;EACH,CAAC;EAED,sEAAsE;EACtE,oBAAoB;IAClB,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;EAC9D,CAAC;EAGD,KAAK,CAAC,aAAa;IACjB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvC,CAAC;EAED,MAAM;IACJ,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,IAAI,IAAI,CAAC,IAAI,EAAE;MACb,SAAS,GAAG,QAAQ,CAAC;KACtB;SAAM;MACL,SAAS,GAAG,EAAE,CAAC;KAChB;IAED,OAAO;MACL,WACE,KAAK,EAAE,YAAY,SAAS,EAAE,EAC9B,OAAO,EAAE,GAAG,EAAE;UACZ,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,GACI;MACP,WAAK,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,WAAW,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;QAC/E,IAAI,CAAC,eAAe,IAAI,CACvB,eACE,KAAK,EAAC,OAAO,EACb,kBAAkB,EAAE,GAAG,EAAE;YACvB,IAAI,CAAC,aAAa,EAAE,CAAC;UACvB,CAAC;UAED,WAAK,IAAI,EAAC,MAAM,EAAC,KAAK,EAAC,4BAA4B,EAAC,OAAO,EAAC,aAAa,EAAC,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE;YAC7F,YACE,IAAI,EAAC,SAAS,EACd,CAAC,EAAC,yRAAyR,GAC3R,CACE,CACE,CACX;QACD,eAAQ,CACJ;KACP,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, h, Method, Event, EventEmitter, Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-sidebar',\r\n  styleUrl: 'ir-sidebar.css',\r\n  shadow: true,\r\n})\r\nexport class IrSidebar {\r\n  @Prop() name: string;\r\n  @Prop() side: 'right' | 'left' = 'right';\r\n  @Prop() showCloseButton: boolean = true;\r\n  @Prop({ mutable: true, reflect: true }) open: boolean = false;\r\n  @Prop() sidebarStyles: Partial<CSSStyleDeclaration>;\r\n  @Event({ bubbles: true, composed: true }) irSidebarToggle: EventEmitter;\r\n\r\n  private sidebarRef: HTMLDivElement;\r\n\r\n  applyStyles() {\r\n    for (const property in this.sidebarStyles) {\r\n      if (this.sidebarStyles.hasOwnProperty(property)) {\r\n        this.sidebarRef.style[property] = this.sidebarStyles[property];\r\n      }\r\n    }\r\n  }\r\n  @Watch('sidebarStyles')\r\n  handleSidebarStylesChange() {\r\n    this.applyStyles();\r\n  }\r\n  componentWillLoad() {\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n  }\r\n\r\n  componentDidLoad() {\r\n    // If esc key is pressed, close the modal\r\n    this.applyStyles();\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  private handleKeyDown(e: KeyboardEvent) {\r\n    if (e.key === 'Escape') {\r\n      return this.toggleSidebar();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Unsubscribe to the event when the component is removed from the DOM\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  @Method()\r\n  async toggleSidebar() {\r\n    this.irSidebarToggle.emit(this.open);\r\n  }\r\n\r\n  render() {\r\n    let className = '';\r\n    if (this.open) {\r\n      className = 'active';\r\n    } else {\r\n      className = '';\r\n    }\r\n\r\n    return [\r\n      <div\r\n        class={`backdrop ${className}`}\r\n        onClick={() => {\r\n          this.toggleSidebar();\r\n        }}\r\n      ></div>,\r\n      <div ref={el => (this.sidebarRef = el)} class={`sidebar-${this.side} ${className}`}>\r\n        {this.showCloseButton && (\r\n          <ir-icon\r\n            class=\"close\"\r\n            onIconClickHandler={() => {\r\n              this.toggleSidebar();\r\n            }}\r\n          >\r\n            <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\r\n              <path\r\n                fill=\"#6b6f82\"\r\n                d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\r\n              />\r\n            </svg>\r\n          </ir-icon>\r\n        )}\r\n        <slot />\r\n      </div>,\r\n    ];\r\n  }\r\n}\r\n"]}
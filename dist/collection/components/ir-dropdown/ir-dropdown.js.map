{"version":3,"file":"ir-dropdown.js","sourceRoot":"","sources":["../../../src/components/ir-dropdown/ir-dropdown.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAM/E,MAAM,OAAO,UAAU;;gBAQjB,IAAI;kBAC+B,IAAI;gBAClB,KAAK;;EAG9B,MAAM;IACJ,IAAI,OAAO,GAAG,IAAI,CAAC;IACnB,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;MACtB,OAAO,GAAG,CACR,UAAI,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,mBAAmB,eAAY,UAAU;QACzF,SACE,KAAK,EAAC,0BAA0B,EAChC,OAAO,EAAE,GAAG,EAAE;YACZ,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;UACzB,CAAC,iBACW,UAAU;UAEtB,eAAS,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,GAAY;UACzC,yBAAgB,WAAW,EAAC,KAAK,EAAC,cAAc,IAC7C,IAAI,CAAC,IAAI,CAAC,IAAI,CACV,CACL;QACJ,UAAI,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,eAAe,IAC1D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;UAC9B,OAAO,CACL,uBAAc,EAAE;YACd,SACE,KAAK,EAAC,eAAe,iBACT,EAAE,EACd,OAAO,EAAE,GAAG,EAAE;gBACZ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;gBACzE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;cACpB,CAAC;cAED,eAAS,IAAI,EAAE,KAAK,CAAC,IAAI,GAAY;cACrC,yBAAiB,KAAK,CAAC,IAAI,IAAG,KAAK,CAAC,IAAI,CAAQ,CAC9C,CACD,CACN,CAAC;QACJ,CAAC,CAAC,CACC,CACF,CACN,CAAC;KACH;IACD,OAAO,CACL,UAAI,KAAK,EAAC,gBAAgB,EAAC,EAAE,EAAC,sBAAsB,eAAW,iBAAiB,IAC7E,OAAO,CACL,CACN,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, State, h, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-dropdown',\r\n  styleUrl: 'ir-dropdown.css',\r\n})\r\nexport class IrDropdown {\r\n  @Prop({ reflect: true }) data: {\r\n    name: string;\r\n    icon: string;\r\n    children: {\r\n      name: string;\r\n      icon: string;\r\n    }[];\r\n  } = null;\r\n  @Prop({ reflect: true }) object: any = null;\r\n  @State() show: boolean = false;\r\n\r\n  @Event({ bubbles: true, composed: true }) dropdownItemCLicked: EventEmitter<{ name: string; object: any }>;\r\n  render() {\r\n    let content = null;\r\n    if (this.data !== null) {\r\n      content = (\r\n        <li class={this.show ? 'dropdown nav-item show' : 'dropdown nav-item'} data-menu=\"dropdown\">\r\n          <a\r\n            class=\"dropdown-toggle nav-link\"\r\n            onClick={() => {\r\n              this.show = !this.show;\r\n            }}\r\n            data-toggle=\"dropdown\"\r\n          >\r\n            <ir-icon icon={this.data.icon}></ir-icon>\r\n            <span data-i18n=\"Dashboard\" class=\"text-primary\">\r\n              {this.data.name}\r\n            </span>\r\n          </a>\r\n          <ul class={this.show ? 'dropdown-menu show' : 'dropdown-menu'}>\r\n            {this.data.children.map(child => {\r\n              return (\r\n                <li data-menu=\"\">\r\n                  <a\r\n                    class=\"dropdown-item\"\r\n                    data-toggle=\"\"\r\n                    onClick={() => {\r\n                      this.dropdownItemCLicked.emit({ name: child.name, object: this.object });\r\n                      this.show = false;\r\n                    }}\r\n                  >\r\n                    <ir-icon icon={child.icon}></ir-icon>\r\n                    <span data-i18n={child.name}>{child.name}</span>\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </li>\r\n      );\r\n    }\r\n    return (\r\n      <ul class=\"nav navbar-nav\" id=\"main-menu-navigation\" data-menu=\"menu-navigation\">\r\n        {content}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n"]}
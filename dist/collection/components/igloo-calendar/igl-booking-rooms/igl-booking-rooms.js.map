{"version":3,"file":"igl-booking-rooms.js","sourceRoot":"","sources":["../../../../src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  Host,\r\n  h,\r\n  Prop,\r\n  Event,\r\n  EventEmitter,\r\n  State,\r\n} from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"igl-booking-rooms\",\r\n  styleUrl: \"igl-booking-rooms.css\",\r\n  scoped: true,\r\n})\r\nexport class IglBookingRooms {\r\n  @Prop({ reflect: true, mutable: true }) roomTypeData: { [key: string]: any };\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() bookingType: string = \"PLUS_BOOKING\";\r\n  @Prop({ reflect: true }) dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() currency;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() selectedRooms: number[] = [];\r\n  @State() roomsDistributions: number[] = [];\r\n  private validBookingTypes = [\"PLUS_BOOKING\", \"ADD_ROOM\", \"EDIT_BOOKING\"];\r\n  private totalRooms: number;\r\n  componentWillLoad() {\r\n    this.totalRooms = this.roomTypeData.physicalrooms.length;\r\n    this.selectedRooms = new Array(this.totalRooms).fill(0);\r\n    this.roomsDistributions = new Array(this.totalRooms).fill(this.totalRooms);\r\n  }\r\n\r\n  onRoomDataUpdate(event: CustomEvent<{ [key: string]: any }>, index: number) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    let data = { ...opt.data };\r\n    if (opt.changedKey === \"totalRooms\") {\r\n      let newValue = data.totalRooms;\r\n      this.selectedRooms[index] = newValue;\r\n      this.updateRatePlanTotalRooms(index);\r\n    }\r\n    data.roomCategoryId = this.roomTypeData.id;\r\n    data.roomCategoryName = this.roomTypeData.name;\r\n    data.inventory = this.roomTypeData.inventory;\r\n    this.dataUpdateEvent.emit({\r\n      key: opt.key,\r\n      data: data,\r\n      changedKey: opt.changedKey,\r\n    });\r\n  }\r\n  updateRatePlanTotalRooms(ratePlanIndex: number) {\r\n    const calculateTotalSelectedRoomsExcludingIndex = (excludedIndex) => {\r\n      return this.selectedRooms.reduce(\r\n        (acc, rooms, idx) => (idx !== excludedIndex ? acc + rooms : acc),\r\n        0\r\n      );\r\n    };\r\n    this.roomsDistributions = this.roomsDistributions.map((ratePlan, index) => {\r\n      if (index === ratePlanIndex) {\r\n        return ratePlan;\r\n      }\r\n      const totalSelectedRoomsExcludingCurrent =\r\n        calculateTotalSelectedRoomsExcludingIndex(index);\r\n      const availableRooms =\r\n        this.totalRooms - totalSelectedRoomsExcludingCurrent;\r\n\r\n      return availableRooms > 0 ? availableRooms : 0;\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.validBookingTypes.includes(this.bookingType) && (\r\n          <div class=\"font-weight-bold font-medium-1\">\r\n            {this.roomTypeData.name}\r\n          </div>\r\n        )}\r\n        {this.roomTypeData.rateplans.map((ratePlan, index) => {\r\n          if (ratePlan.variations !== null) {\r\n            return (\r\n              <igl-booking-room-rate-plan\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={\r\n                  this.validBookingTypes.includes(this.bookingType)\r\n                    ? \"ml-1\"\r\n                    : \"\"\r\n                }\r\n                currency={this.currency}\r\n                dateDifference={this.dateDifference}\r\n                ratePlanData={ratePlan}\r\n                totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                defaultData={\r\n                  (this.defaultData && this.defaultData[\"p_\" + ratePlan.id]) ||\r\n                  null\r\n                }\r\n                onDataUpdateEvent={(evt) => this.onRoomDataUpdate(evt, index)}\r\n              ></igl-booking-room-rate-plan>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}
{"version":3,"file":"igl-block-dates-view.js","sourceRoot":"","sources":["../../../../src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  Host,\r\n  h,\r\n  Prop,\r\n  State,\r\n  Event,\r\n  EventEmitter,\r\n} from \"@stencil/core\";\r\nimport { BookingService } from \"../../../services/booking.service\";\r\nimport { IEntries } from \"../../../models/IBooking\";\r\n\r\n@Component({\r\n  tag: \"igl-block-dates-view\",\r\n  styleUrl: \"igl-block-dates-view.css\",\r\n  scoped: true,\r\n})\r\nexport class IglBlockDatesView {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() fromDate: string;\r\n  @Prop() toDate: string;\r\n  @Prop({ mutable: true }) entryDate: string;\r\n  @Prop() entryHour: number;\r\n  @Prop() entryMinute: number;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private blockDatesData: { [key: string]: any } = {\r\n    RELEASE_AFTER_HOURS: 0,\r\n    OPTIONAL_REASON: \"\",\r\n    OUT_OF_SERVICE: false,\r\n  }; // Change of property name might require updates in booking-event-hover\r\n  private releaseList: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  async componentWillLoad() {\r\n    try {\r\n      this.releaseList = await this.bookingService.getBlockedInfo();\r\n      if (this.defaultData) {\r\n        this.blockDatesData = { ...this.defaultData };\r\n      } else {\r\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(\r\n          this.releaseList[0].CODE_NAME\r\n        );\r\n        this.emitData();\r\n      }\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleOptionalReason(event) {\r\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\r\n    this.emitData();\r\n  }\r\n\r\n  handleReleaseAfterChange(evt) {\r\n    if (this.entryDate) this.entryDate = undefined;\r\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  emitData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: \"blockDatesData\",\r\n      data: { ...this.blockDatesData },\r\n    });\r\n  }\r\n\r\n  getReleaseHoursString() {\r\n    // console.log(\"entry date\", this.entryDate);\r\n    // console.log(\"blocked date data\", this.blockDatesData);\r\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\r\n    if (this.entryDate && this.entryHour && this.entryMinute) {\r\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\r\n    } else {\r\n      dt.setHours(\r\n        dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS,\r\n        dt.getMinutes(),\r\n        0,\r\n        0\r\n      );\r\n    }\r\n\r\n    return (\r\n      dt.toLocaleString(\"default\", { month: \"short\" }) +\r\n      \" \" +\r\n      dt.getDate() +\r\n      \", \" +\r\n      dt.getHours() +\r\n      \":\" +\r\n      dt.getMinutes()\r\n    );\r\n  }\r\n\r\n  handleOutOfService(evt) {\r\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\r\n    if (this.blockDatesData.OUT_OF_SERVICE) {\r\n      this.blockDatesData.OPTIONAL_REASON = \"\";\r\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\r\n    }\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"row m-0 p-0 ml-1 mb-1\">\r\n          <div class=\"col-12 text-left p-0\">\r\n            <span class=\"pr-1\">\r\n              <span class=\"text-bold-700 font-medium-1\">From: </span>\r\n              {this.fromDate}\r\n            </span>{\" \"}\r\n            <span class=\"text-bold-700 font-medium-1\">To: </span>\r\n            {this.toDate}\r\n          </div>\r\n        </div>\r\n        <div class=\"col mb-1 text-left\">\r\n          <div class=\"mb-1\">\r\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">\r\n              Reason:\r\n            </label>\r\n            <div class=\"p-0 m-0 pr-1 controlContainer checkBoxContainer d-inline-block align-middle\">\r\n              <input\r\n                class=\"form-control\"\r\n                type=\"checkbox\"\r\n                checked={this.blockDatesData.OUT_OF_SERVICE}\r\n                id=\"userinput6\"\r\n                onChange={(event) => this.handleOutOfService(event)}\r\n              />\r\n            </div>{\" \"}\r\n            <span class=\"align-middle\">Out of service</span>\r\n          </div>\r\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\r\n            <div>\r\n              <div class=\"mb-1 d-flex w-100 align-items-center\">\r\n                <span class=\"align-middle\">or </span>\r\n                <div class=\"d-inline-flex col pr-0 align-middle\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Optional reason\"\r\n                    id=\"optReason\"\r\n                    value={this.blockDatesData.OPTIONAL_REASON}\r\n                    onInput={(event) => this.handleOptionalReason(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-1 w-100 pr-0 \">\r\n                <span class=\"text-bold-700 font-medium-1\">\r\n                  Automatic release in:{\" \"}\r\n                </span>\r\n                <div class=\"d-inline-block\">\r\n                  <select\r\n                    class=\"form-control input-sm\"\r\n                    id=\"zSmallSelect\"\r\n                    onChange={(evt) => this.handleReleaseAfterChange(evt)}\r\n                  >\r\n                    {this.releaseList.map((releaseItem) => (\r\n                      <option\r\n                        value={+releaseItem.CODE_NAME}\r\n                        selected={\r\n                          this.blockDatesData.RELEASE_AFTER_HOURS ==\r\n                          +releaseItem.CODE_NAME\r\n                        }\r\n                      >\r\n                        {releaseItem.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\r\n                  <div class=\"d-inline-block releaseTime\">\r\n                    <em>on {this.getReleaseHoursString()}</em>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}
{"version":3,"file":"igl-date-range.js","sourceRoot":"","sources":["../../../../src/components/igloo-calendar/igl-date-range/igl-date-range.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, State, Event, EventEmitter, Prop } from '@stencil/core';\r\nimport { IToast } from '../../ir-toast/toast';\r\nimport { Unsubscribe } from '@reduxjs/toolkit';\r\nimport { store } from '../../../redux/store';\r\n\r\n@Component({\r\n  tag: 'igl-date-range',\r\n  styleUrl: 'igl-date-range.css',\r\n  scoped: true,\r\n})\r\nexport class IglDateRange {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n  @Prop() minDate: string;\r\n  @Prop() dateLabel;\r\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() renderAgain: boolean = false;\r\n  @State() defaultTexts:any;\r\n  @Event() toast: EventEmitter<IToast>;\r\n\r\n  private totalNights: number = 0;\r\n  private fromDate: Date;\r\n  private toDate: Date;\r\n  private fromDateStr: string = 'from';\r\n  private toDateStr: string = 'to';\r\n  dateRangeInput: HTMLElement;\r\n  private unsubscribe:Unsubscribe;\r\n\r\n  getStringDateFormat(dt) {\r\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\r\n  }\r\n\r\n  componentWillLoad() {\r\n    this.updateFromStore()\r\n    this.unsubscribe=store.subscribe(()=>this.updateFromStore())\r\n    let dt = new Date();\r\n    dt.setHours(0, 0, 0, 0);\r\n    dt.setDate(dt.getDate() + 1);\r\n    if (this.defaultData) {\r\n      if (this.defaultData.fromDate) {\r\n        this.fromDate = new Date(this.defaultData.fromDate);\r\n        this.fromDate.setHours(0, 0, 0, 0);\r\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\r\n      }\r\n      if (this.defaultData.toDate) {\r\n        this.toDate = new Date(this.defaultData.toDate);\r\n        this.toDate.setHours(0, 0, 0, 0);\r\n        this.toDateStr = this.getFormattedDateString(this.toDate);\r\n      }\r\n    }\r\n    if (this.fromDate && this.toDate) {\r\n      this.calculateTotalNights();\r\n      this.handleDateSelectEvent('selectedDateRange', {\r\n        fromDate: this.fromDate.getTime(),\r\n        toDate: this.toDate.getTime(),\r\n        fromDateStr: this.fromDateStr,\r\n        toDateStr: this.toDateStr,\r\n        dateDifference: this.totalNights,\r\n      });\r\n    }\r\n  }\r\n  updateFromStore() {\r\n    const state = store.getState();\r\n    this.defaultTexts = state.languages;\r\n  }\r\n  disconnectedCallback(){\r\n    this.unsubscribe()\r\n  }\r\n\r\n  calculateTotalNights() {\r\n    this.totalNights = Math.floor((this.toDate.getTime() - this.fromDate.getTime()) / 86400000);\r\n  }\r\n  getFormattedDateString(dt) {\r\n    return dt.getDate() + ' ' + dt.toLocaleString('default', { month: 'short' }).toLowerCase() + ' ' + dt.getFullYear();\r\n  }\r\n\r\n  handleDateSelectEvent(key, data: any = '') {\r\n    this.dateSelectEvent.emit({ key, data });\r\n  }\r\n  handleDateChange(evt) {\r\n    const { start, end } = evt.detail;\r\n    this.fromDate = start.toDate();\r\n    this.toDate = end.toDate();\r\n    this.calculateTotalNights();\r\n\r\n    this.handleDateSelectEvent('selectedDateRange', {\r\n      fromDate: this.fromDate.getTime(),\r\n      toDate: this.toDate.getTime(),\r\n      fromDateStr: start.format('DD MMM YYYY'),\r\n      toDateStr: end.format('DD MMM YYYY'),\r\n      dateDifference: this.totalNights,\r\n    });\r\n\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"calendarPickerContainer ml-0 d-flex flex-column flex-lg-row align-items-lg-center \">\r\n          <h5 class=\"mt-0 mb-1 mb-lg-0 mr-lg-1 text-left\">{this.dateLabel}</h5>\r\n          <div class={'d-flex align-items-center mr-lg-1'}>\r\n            <div class=\"iglRangePicker\">\r\n              <ir-date-picker\r\n                class={'date-range-input'}\r\n                disabled={this.disabled}\r\n                fromDate={this.fromDate}\r\n                toDate={this.toDate}\r\n                minDate={this.minDate}\r\n                autoApply\r\n                onDateChanged={evt => {\r\n                  this.handleDateChange(evt);\r\n                }}\r\n              ></ir-date-picker>\r\n            </div>\r\n            {this.totalNights ? <span class=\"iglRangeNights\">{this.totalNights + (this.totalNights > 1 ?  ` ${this.defaultTexts.entries.Lcz_Nights}` : ` ${this.defaultTexts.entries.Lcz_Night}`)}</span> : ''}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}
{"version":3,"file":"igl-book-property.js","sourceRoot":"","sources":["../../../../src/components/igloo-calendar/igl-book-property/igl-book-property.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAC7F,OAAO,EAAE,cAAc,EAAE,MAAM,mCAAmC,CAAC;AACnE,OAAO,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,MAAM,sBAAsB,CAAC;AAGpF,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,wBAAwB,EAAE,mBAAmB,EAAE,MAAM,wBAAwB,CAAC;AAOvF,MAAM,OAAO,eAAe;;IAqBlB,cAAS,GAAW,WAAW,CAAC;IAChC,aAAQ,GAAW,UAAU,CAAC;IAC9B,aAAQ,GAAW,UAAU,CAAC;IAC9B,qBAAgB,GAAW,iBAAiB,CAAC;IAE7C,2BAAsB,GAAY,KAAK,CAAC;IACxC,kBAAa,GAAoC,EAAE,CAAC;IACpD,kBAAa,GAA2B,EAAE,CAAC;IAC3C,cAAS,GAA6B,EAAE,CAAC;IACzC,qBAAgB,GAA2B,EAAE,CAAC;IAC9C,mBAAc,GAA2B,EAAE,CAAC;IAC5C,oBAAe,GAAe,EAAE,CAAC;IACjC,sBAAiB,GAAe,EAAE,CAAC;IACnC,mBAAc,GAAmB,IAAI,cAAc,EAAE,CAAC;IACtD,kBAAa,GAAG,IAAI,aAAa,EAAE,CAAC;;;;8BA/BN,KAAK;;;wBAGoB;MAC7D,IAAI,EAAE,EAAE;MACR,WAAW,EAAE,EAAE;KAChB;0BAC8B,EAAE;uBACD,KAAK;mBACV,EAAE;;;;yBAIoB,EAAE;;EAmBnD,gBAAgB;IACd,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE;MACvC,IAAI,CAAC,CAAC,GAAG,KAAK,QAAQ,EAAE;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;OACpB;IACH,CAAC,CAAC,CAAC;EACL,CAAC;EACD,oBAAoB;IAClB,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;EACpD,CAAC;EACD,KAAK,CAAC,iBAAiB;IACrB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE;MACtC,OAAO;KACR;IAED,IAAI,CAAC,aAAa,qBAAQ,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAE,CAAC;IAE9D,IAAI;MACF,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;MACpD,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;MAClD,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;MAEtC,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE;QACpC,IAAI,CAAC,kBAAkB,EAAE,CAAC;OAC3B;MACD,kCAAkC;MAClC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;KACnC;IAAC,OAAO,KAAK,EAAE;MACd,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;KACvD;EACH,CAAC;EAED,KAAK,CAAC,iBAAiB;IACrB,OAAO,MAAM,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;EACvD,CAAC;EAED,gBAAgB,CAAC,aAAoB;IACnC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;MAChD,EAAE,EAAE,MAAM,CAAC,SAAS;MACpB,KAAK,EAAE,MAAM,CAAC,aAAa;KAC5B,CAAC,CAAC,CAAC;IACJ,IAAI,CAAC,YAAY,GAAG;MAClB,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS;MAChC,WAAW,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa;KAC5C,CAAC;EACJ,CAAC;EAED,kBAAkB,CAAC,GAAQ;IACzB,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,eAAe,CAAC;IAC3C,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;IACpD,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,iBAAiB,CAAC;EACjD,CAAC;EAED,kBAAkB;IAChB,MAAM,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,0BAA0B,EAAE,CAAC,CAAC;IACjF,MAAM,GAAG,GAAG,KAAK,QAAQ,CAAC,EAAE,EAAE,CAAC;IAC/B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG;MACxB,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,EAAE;QACtC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY;QACzC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;QAC3B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS;QACpC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY;QACzC,cAAc,EAAE,QAAQ,CAAC,EAAE;QAC3B,gBAAgB,EAAE,QAAQ,CAAC,IAAI;QAC/B,UAAU,EAAE,CAAC;QACb,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS;QACxC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;QAC9B,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;QAChC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;QACzC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS;QACrC,oBAAoB,EAAE,IAAI,CAAC,WAAW,CAAC,oBAAoB;OAC5D;KACF,CAAC;EACJ,CAAC;EAED,KAAK,CAAC,6BAA6B,CAAC,SAAiB,EAAE,OAAe;IACpE,IAAI;MACF,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;MACtE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;MAChJ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;MAClB,IAAI,CAAC,WAAW,mCACX,IAAI,CAAC,WAAW,KACnB,SAAS,EAAE,IAAI,CAAC,SAAS,GAC1B,CAAC;MACF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;MAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACnB;IAAC,OAAO,KAAK,EAAE;MACd,uBAAuB;KACxB;EACH,CAAC;EACD,uBAAuB,CAAC,MAAM;;IAC5B,OAAO,MAAA,IAAI,CAAC,WAAW,CAAC,SAAS,0CAAE,IAAI,CAAC,YAAY,CAAC,EAAE;MACrD,OAAO,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;EACL,CAAC;EAED,cAAc;IACZ,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,KAAK,aAAa,EAAE;MACjD,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;SAAM,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,KAAK,eAAe,EAAE;MAC1D,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;MACnC,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;SAAM;MACL,wDAAwD;MACxD,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;EACH,CAAC;EAED,0BAA0B;IACxB,gCAAgC;IAChC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;EACtF,CAAC;EAED,gBAAgB;IACd,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;EAC9G,CAAC;EACD,WAAW,CAAC,GAAW;IACrB,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,KAAK,GAAG,CAAC;EAC7C,CAAC;EAED,WAAW;IACT,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IAChC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;EACjC,CAAC;EACD,aAAa;IACX,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,KAAK,cAAc,CAAC;EACxD,CAAC;EACD,iBAAiB,CAAC,KAA0C;IAC1D,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC;IAC/C,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACrE,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAEzD,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE;MAC7B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KACzB;IAED,IAAI,CAAC,8BAA8B,CAAC,eAAe,CAAC,CAAC;IAErD,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;MACxB,IAAI,UAAU,KAAK,MAAM,EAAE;QACzB,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;UACzH,IAAI,CAAC,8BAA8B,CAAC,eAAe,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;SACzE;OACF;WAAM;QACL,IAAI,UAAU,KAAK,UAAU,EAAE;UAC7B,IAAI,UAAU,KAAK,sBAAsB,EAAE;YACzC,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;cACzH,IAAI,CAAC,8BAA8B,CAAC,eAAe,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;aACzE;WACF;eAAM;YACL,IAAI,CAAC,8BAA8B,CAAC,eAAe,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;WACzE;SACF;OACF;KACF;SAAM;MACL,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;KAC9D;IAED,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;IACpD,IAAI,CAAC,UAAU,EAAE,CAAC;EACpB,CAAC;EACD,kBAAkB,CAAC,cAAsB;IACvC,OAAO,KAAK,cAAc,EAAE,CAAC;EAC/B,CAAC;EAED,cAAc,CAAC,UAAkB;IAC/B,OAAO,KAAK,UAAU,EAAE,CAAC;EAC3B,CAAC;EAED,eAAe,CAAC,GAAuB;IACrC,OAAO,GAAG,KAAK,WAAW,IAAI,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;EAC7D,CAAC;EAED,kBAAkB,CAAC,GAAuB;IACxC,OAAO,GAAG,KAAK,cAAc,CAAC;EAChC,CAAC;EAED,8BAA8B,CAAC,eAAuB;IACpD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,EAAE;MACxC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;KAC1C;EACH,CAAC;EAED,mBAAmB,CAAC,eAAuB,EAAE,WAAmB,EAAE,IAAS;IACzE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;EAC1D,CAAC;EAED,mBAAmB,CAAC,eAAuB,EAAE,WAAmB;IAC9D,OAAO,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,CAAC;EACjG,CAAC;EAED,gBAAgB,CAAC,eAAuB,EAAE,WAAmB;;IAC3D,IAAI,CAAA,MAAA,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,0CAAE,UAAU,MAAK,CAAC,EAAE;MACtE,OAAO,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,CAAC;KACzD;IAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,MAAM,EAAE;MAC5D,OAAO,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;KAC5C;EACH,CAAC;EAED,8BAA8B,CAAC,eAAuB,EAAE,WAAmB,EAAE,IAAI;IAC/E,IAAI,CAAC,aAAa,GAAG;MACnB,CAAC,eAAe,CAAC,EAAE;QACjB,CAAC,WAAW,CAAC,kCACR,IAAI,KACP,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,EAChC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,GAC/B;OACF;KACF,CAAC;EACJ,CAAC;EAED,iBAAiB,CAAC,KAA0C;IAC1D,MAAM,GAAG,GAA2B,KAAK,CAAC,MAAM,CAAC;IACjD,IAAI,GAAG,CAAC,GAAG,KAAK,mBAAmB,EAAE;MACnC,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;MAC9B,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;MACnF,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;MAC/E,IAAI,CAAC,6BAA6B,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;KACxK;EACH,CAAC;EAED,qBAAqB,CAAC,KAA0C;IAC9D,KAAK,CAAC,wBAAwB,EAAE,CAAC;IACjC,KAAK,CAAC,eAAe,EAAE,CAAC;IACxB,MAAM,GAAG,GAA2B,KAAK,CAAC,MAAM,CAAC;IACjD,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,IAAI,CAAC;IAC/B,wDAAwD;EAC1D,CAAC;EAED,YAAY,CAAC,KAAK;IAChB,KAAK,CAAC,cAAc,EAAE,CAAC;IACvB,qBAAqB;EACvB,CAAC;EAED,qBAAqB,CAAC,KAA0C;IAC9D,KAAK,CAAC,wBAAwB,EAAE,CAAC;IACjC,KAAK,CAAC,eAAe,EAAE,CAAC;IAExB,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;IACzB,IAAI,GAAG,CAAC,WAAW,EAAE;MACnB,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE;QACnC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,mCAC1B,GAAG,CAAC,IAAI,KACX,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,GAC/B,CAAC;OACH;;QAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;KACnD;EACH,CAAC;EAED,wBAAwB,CAAC,KAA0C;IACjE,KAAK,CAAC,wBAAwB,EAAE,CAAC;IACjC,KAAK,CAAC,eAAe,EAAE,CAAC;IACxB,MAAM,GAAG,GAA2B,KAAK,CAAC,MAAM,CAAC;IACjD,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;EACzC,CAAC;EAED,mBAAmB,CAAC,QAAQ;IAC1B,OAAO,IAAI,CAAC,YAAY,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;EACxD,CAAC;EAED,oBAAoB,CAAC,cAAc;IACjC,IAAI,CAAC,YAAY,GAAG;MAClB,IAAI,EAAE,cAAc,CAAC,MAAM,CAAC,KAAK;MACjC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;KAC3G,CAAC;EACJ,CAAC;EAED,UAAU;IACR,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;EACvC,CAAC;EAGD,gBAAgB;IACd,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC/B,CAAC;EAED,QAAQ,CAAC,QAAQ;IACf,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;IACrB,IAAI,CAAC,UAAU,EAAE,CAAC;EACpB,CAAC;EAED,gBAAgB;IACd,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;IACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC/B,CAAC;EAED,2BAA2B,CAAC,SAAS;IACnC,IAAI,YAAY,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC;IACrF,OAAO,YAAY,CAAC,EAAE,GAAG,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC;EACnD,CAAC;EAED,0BAA0B,CAAC,SAAS;IAClC,OAAO,IAAI,CAAC,cAAc,KAAK,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;EAC3D,CAAC;EAED,0BAA0B,CAAC,GAAG;IAC5B,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;EACzC,CAAC;EAED,UAAU;IACR,OAAO,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,CAAC;EACtC,CAAC;EAED,SAAS;IACP,OAAO,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC;EACrC,CAAC;EAED,SAAS;IACP,OAAO,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC;EACrC,CAAC;EAED,gBAAgB;IACd,OAAO,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,gBAAgB,CAAC;EAC7C,CAAC;EAED,mBAAmB;IACjB,OAAO,CACL,gBAAU,KAAK,EAAC,6BAA6B;MAC3C,aAAO,KAAK,EAAC,IAAI,mBAAqB;MACtC,WAAK,KAAK,EAAC,gBAAgB;QACzB,cAAQ,KAAK,EAAC,uBAAuB,EAAC,EAAE,EAAC,cAAc,EAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC;UAC3G,cAAQ,KAAK,EAAC,EAAE,EAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,IAAI,EAAE,aAE3C;UACR,IAAI,CAAC,gBAAgB,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CACrC,cAAQ,KAAK,EAAE,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,cAAc,KAAK,MAAM,CAAC,EAAE,IAClE,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,EAAE,CAAC,CACrC,CACV,CAAC,CACK,CAQL,CACG,CACZ,CAAC;EACJ,CAAC;EAED,aAAa;IACX,OAAO,CACL,gBAAU,KAAK,EAAC,6BAA6B;MAC3C,aAAO,KAAK,EAAC,IAAI,cAAgB;MACjC,WAAK,KAAK,EAAC,gBAAgB;QACzB,cAAQ,KAAK,EAAC,uBAAuB,EAAC,EAAE,EAAC,cAAc,EAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IACpG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAChC,cAAQ,KAAK,EAAE,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,MAAM,CAAC,EAAE,IACrE,MAAM,CAAC,KAAK,CACN,CACV,CAAC,CACK,CACL,CACG,CACZ,CAAC;EACJ,CAAC;EAED,0BAA0B,CAAC,UAAU;;IACnC,IAAI,QAAQ,GAAG,MAAA,IAAI,CAAC,WAAW,CAAC,SAAS,0CAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,UAAU,CAAC,CAAC;IACxF,OAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;EACpD,CAAC;EAED,eAAe;IACb,OAAO,CACL,WAAK,KAAK,EAAC,eAAe;MACxB,WAAK,KAAK,EAAC,cAAc;QACvB,WAAK,KAAK,EAAC,yBAAyB;UAClC,cAAQ,KAAK,EAAC,4BAA4B,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,yBAE7E,CACL;QACL,IAAI,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAChC,WAAK,KAAK,EAAC,yBAAyB;UAClC,cAAQ,KAAK,EAAC,4BAA4B,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,mCAExE,CACL,CACP,CAAC,CAAC,CAAC,IAAI;QACR,WAAK,KAAK,EAAC,yBAAyB;UAClC,cAAQ,KAAK,EAAC,4BAA4B,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,kBAErF,CACL;QACN,WAAK,KAAK,EAAC,yBAAyB;UAClC,cAAQ,KAAK,EAAC,8BAA8B,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,aAErE,CACL,CACF,CACF,CACP,CAAC;EACJ,CAAC;EAED,cAAc;;IACZ,OAAO,CACL,WAAK,KAAK,EAAC,eAAe;MACvB,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE;MAE1J,gBAAU,KAAK,EAAC,uBAAuB;QACrC,sBAAgB,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,GAAmB,CACtJ;MAEX,WAAK,KAAK,EAAC,eAAe,IACvB,MAAA,IAAI,CAAC,WAAW,CAAC,SAAS,0CAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAC3C,yBACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,EACjD,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,EACxC,YAAY,EAAE,QAAQ,EACtB,KAAK,EAAC,WAAW,EACjB,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,QAAQ,CAAC,EAAE,CAAC,EACnD,iBAAiB,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,GAClC,CACtB,CAAC,CACE;MAEL,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAClC,WAAK,KAAK,EAAC,mBAAmB;QAC5B,WAAK,KAAK,EAAC,OAAO;UAChB,cAAQ,KAAK,EAAC,8BAA8B,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,aAErE,CACL;QACN,WAAK,KAAK,EAAC,OAAO;UAChB,cAAQ,KAAK,EAAC,4BAA4B,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,cAE7E,CACL,CACF,CACP,CAAC,CAAC,CAAC,CACF,WAAK,KAAK,EAAC,mBAAmB;QAC5B,WAAK,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,KAAK,cAAc,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ;UAC7G,cAAQ,KAAK,EAAC,8BAA8B,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,aAErE,CACL;QACL,IAAI,CAAC,WAAW,CAAC,UAAU,KAAK,cAAc,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAChF,WAAK,KAAK,EAAC,OAAO;UAChB,cAAQ,KAAK,EAAC,4BAA4B,EAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,cAErI,CACL,CACP,CAAC,CAAC,CAAC,IAAI,CACJ,CACP,CACG,CACP,CAAC;EACJ,CAAC;EAED,qBAAqB;IACnB,OAAO,CACL,WAAK,KAAK,EAAC,8BAA8B;MACvC,4BACE,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,EACxC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,EACpC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,EACtC,iBAAiB,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,GACvC;MACxB,WAAK,KAAK,EAAC,mBAAmB;QAC5B,WAAK,KAAK,EAAC,OAAO;UAChB,cAAQ,KAAK,EAAC,8BAA8B,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,aAErE,CACL;QACN,WAAK,KAAK,EAAC,OAAO;UAChB,cAAQ,KAAK,EAAC,4BAA4B,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,kBAEvE,CACL,CACF,CACF,CACP,CAAC;EACJ,CAAC;EAED,mBAAmB,CACjB,KAGE;IAEF,KAAK,CAAC,wBAAwB,EAAE,CAAC;IACjC,KAAK,CAAC,eAAe,EAAE,CAAC;IACxB,QAAQ,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE;MACxB,KAAK,MAAM;QACT,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM;MACR,KAAK,QAAQ;QACX,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,MAAM;MACR,KAAK,MAAM;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,MAAM;MACR,KAAK,MAAM;QACT,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM;MACR,KAAK,gBAAgB;QACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpB,MAAM;MACR;QACE,MAAM;KACT;EACH,CAAC;EACD,4BAA4B,CAAC,KAA2C;IACtE,KAAK,CAAC,wBAAwB,EAAE,CAAC;IACjC,KAAK,CAAC,eAAe,EAAE,CAAC;IACxB,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,KAAK,kBAAkB,EAAE;MAC3C,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;KACtC;SAAM;MACL,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;KACnC;EACH,CAAC;EACD,KAAK,CAAC,eAAe;IACnB,MAAM,WAAW,GAAG,qBAAqB,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;IACpF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,iBAChD,SAAS,EAAE,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAC5E,OAAO,EAAE,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,EACxE,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,eAAe,IAAI,EAAE,EAChD,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,EACxC,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,mBAAmB,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,EAC5H,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,mBAAmB,IAAI,EAAE,IACvD,WAAW,EACd,CAAC;IACH,MAAM,WAAW,GAAG,MAAM,wBAAwB,CAAC,MAAM,CAAC,CAAC;IAC3D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACtC,IAAI,CAAC,WAAW,EAAE,CAAC;IACnB,2BAA2B;EAC7B,CAAC;EAED,KAAK,CAAC,QAAQ,CAAC,QAAiB;IAC9B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;IAE/B,IAAI;MACF,IAAI,OAAO,GAAG;QACZ,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;OACT,CAAC;MACF,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE;QAChE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACtD,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;OACtC;MACD,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE;QACpC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;OACtC;MAED,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;MAC5F,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;MACnF,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC;MACnG,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE;QACpC,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;OACxD;MACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,CAC/C,IAAI,CAAC,gBAAgB,EACrB,QAAQ,EACR,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,QAAQ,EAC1C,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,EACxC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,aAAa,CAAC,cAAc,EACjC,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,QAAQ,EACb,WAAW,EACX,IAAI,CAAC,WAAW,CAAC,KAAK,EACtB,WAAW,EACX,KAAK,CACN,CAAC;MACF,IAAI,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE;QAChD,MAAM,WAAW,GAAyB,mBAAmB,CAAC,MAAM,CAAC,CAAC;QACtE,OAAO,CAAC,IAAI,GAAG,WAAW,CAAC;QAC3B,oCAAoC;OACrC;MACD,2BAA2B;MAC3B,iDAAiD;KAClD;IAAC,OAAO,KAAK,EAAE;MACd,wBAAwB;KACzB;YAAS;MACR,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;EACH,CAAC;EAED,eAAe,CAAC,YAAqB;IACnC,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE;MACpC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;KACzB;SAAM;MACL,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC;KAC3D;EACH,CAAC;EAED,wBAAwB;IACtB,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC;EAClH,CAAC;EAED,iBAAiB;IACf,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACpB,UAAU,CAAC,GAAG,EAAE;MACd,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC,CAAC;EACV,CAAC;EACD,MAAM;IACJ,OAAO,CACL,EAAC,IAAI;MACH,WAAK,KAAK,EAAC,oBAAoB,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,GAAQ;MACzE,WAAK,KAAK,EAAE,aAAa,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,sCAAsC,CAAC,CAAC,CAAC,uCAAuC,CAAC;QACtI,WAAK,KAAK,EAAC,2BAA2B;UACpC,WAAK,KAAK,EAAC,aAAa;YACtB,UAAI,KAAK,EAAC,yCAAyC,IAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAM;YAChJ,cAAQ,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAC,kBAAkB,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE;cAC9E,SAAG,KAAK,EAAC,MAAM,GAAK,CACb,CACL,CACF;QAEL,IAAI,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,eAAe,EAAE;QAE3C,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,cAAc,EAAE;QAEzC,IAAI,CAAC,SAAS,EAAE,IAAI,CACnB,mBACE,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,EAC3C,iBAAiB,EAAE,IAAI,CAAC,SAAS,EACjC,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,aAAa,EAAE,IAAI,CAAC,aAAa,EACjC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,EACzC,aAAa,EAAE,IAAI,CAAC,aAAa,EACjC,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,sBAAsB,EAAE,IAAI,CAAC,sBAAsB,EACnD,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EACvC,oBAAoB,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EACtF,iBAAiB,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC,EACpE,eAAe,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAC5C,CAChB;QAEA,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC,IAAI,CAC1D,CACD,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Event, EventEmitter, Host, Prop, State, h, Listen } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { dateToFormattedString, getReleaseHoursString } from '../../../utils/utils';\r\nimport { IEntries, RoomBlockDetails, RoomBookingDetails } from '../../../models/IBooking';\r\nimport { IPageTwoDataUpdateProps, PageTwoButtonsTypes } from '../../../models/models';\r\nimport { EventsService } from '../../../services/events.service';\r\nimport { transformNewBLockedRooms, transformNewBooking } from '../../../utils/booking';\r\n\r\n@Component({\r\n  tag: 'igl-book-property',\r\n  styleUrls: ['igl-book-property.css'],\r\n  scoped: true,\r\n})\r\nexport class IglBookProperty {\r\n  @Prop() propertyid: number;\r\n  @Prop() language: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() currency: { id: number; code: string };\r\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\r\n  @State() sourceOption: { code: string; description: string } = {\r\n    code: '',\r\n    description: '',\r\n  };\r\n  @State() splitBookingId: any = '';\r\n  @State() renderAgain: boolean = false;\r\n  @State() message: string = '';\r\n  @State() isLoading: string;\r\n  @State() isConvertedBooking: boolean;\r\n  @State() dateRangeData: { [key: string]: any };\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\r\n  @Event() bookingCreated: EventEmitter<{ pool?: string; data: RoomBookingDetails[] }>;\r\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\r\n  private PAGE_ZERO: string = 'page_zero';\r\n  private PAGE_ONE: string = 'page_one';\r\n  private PAGE_TWO: string = 'page_two';\r\n  private PAGE_BLOCK_DATES: string = 'page_block_date';\r\n  private page: string;\r\n  private showSplitBookingOption: boolean = false;\r\n  private sourceOptions: { id: string; value: string }[] = [];\r\n  private selectedRooms: { [key: string]: any } = {};\r\n  private guestData: { [key: string]: any }[] = [];\r\n  private bookedByInfoData: { [key: string]: any } = {};\r\n  private blockDatesData: { [key: string]: any } = {};\r\n  private ratePricingMode: IEntries[] = [];\r\n  private bedPreferenceType: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private eventsService = new EventsService();\r\n  componentDidLoad() {\r\n    document.addEventListener('keydown', e => {\r\n      if (e.key === 'Escape') {\r\n        this.closeWindow();\r\n      }\r\n    });\r\n  }\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', () => {});\r\n  }\r\n  async componentWillLoad() {\r\n    if (!this.bookingData.defaultDateRange) {\r\n      return;\r\n    }\r\n\r\n    this.dateRangeData = { ...this.bookingData.defaultDateRange };\r\n\r\n    try {\r\n      const setupEntries = await this.fetchSetupEntries();\r\n      this.setSourceOptions(setupEntries.bookingSource);\r\n      this.setOtherProperties(setupEntries);\r\n\r\n      if (this.isEventType('EDIT_BOOKING')) {\r\n        this.setEditingRoomInfo();\r\n      }\r\n      //this.bookingData.roomsInfo = [];\r\n      this.page = this.getDefaultPage();\r\n    } catch (error) {\r\n      console.error('Error fetching setup entries:', error);\r\n    }\r\n  }\r\n\r\n  async fetchSetupEntries() {\r\n    return await this.bookingService.fetchSetupEntries();\r\n  }\r\n\r\n  setSourceOptions(bookingSource: any[]) {\r\n    this.sourceOptions = bookingSource.map(source => ({\r\n      id: source.CODE_NAME,\r\n      value: source.CODE_VALUE_EN,\r\n    }));\r\n    this.sourceOption = {\r\n      code: bookingSource[0].CODE_NAME,\r\n      description: bookingSource[0].CODE_VALUE_EN,\r\n    };\r\n  }\r\n\r\n  setOtherProperties(res: any) {\r\n    this.ratePricingMode = res.ratePricingMode;\r\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\r\n    this.bedPreferenceType = res.bedPreferenceType;\r\n  }\r\n\r\n  setEditingRoomInfo() {\r\n    const category = this.getRoomCategoryByRoomId(this.getBookingPreferenceRoomId());\r\n    const key = `c_${category.id}`;\r\n    this.selectedRooms[key] = {\r\n      [`p_${this.bookingData.RATE_PLAN_ID}`]: {\r\n        adultCount: this.bookingData.ADULTS_COUNT,\r\n        rate: this.bookingData.RATE,\r\n        rateType: this.bookingData.RATE_TYPE,\r\n        ratePlanId: this.bookingData.RATE_PLAN_ID,\r\n        roomCategoryId: category.id,\r\n        roomCategoryName: category.name,\r\n        totalRooms: 1,\r\n        ratePlanName: this.bookingData.RATE_PLAN,\r\n        roomId: this.bookingData.PR_ID,\r\n        guestName: this.bookingData.NAME,\r\n        cancelation: this.bookingData.cancelation,\r\n        guarantee: this.bookingData.guarantee,\r\n        adult_child_offering: this.bookingData.adult_child_offering,\r\n      },\r\n    };\r\n  }\r\n\r\n  async initializeBookingAvailability(from_date: string, to_date: string) {\r\n    try {\r\n      const room_type_ids = this.bookingData.roomsInfo.map(room => room.id);\r\n      const data = await this.bookingService.getBookingAvailability(from_date, to_date, this.propertyid, this.language, room_type_ids, this.currency);\r\n      this.message = '';\r\n      this.bookingData = {\r\n        ...this.bookingData,\r\n        roomsInfo: data.roomtypes,\r\n      };\r\n      this.message = data.tax_statement;\r\n      console.log(data);\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n  getRoomCategoryByRoomId(roomId) {\r\n    return this.bookingData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.physicalrooms.find(room => room.id === +roomId);\r\n    });\r\n  }\r\n\r\n  getDefaultPage() {\r\n    if (this.bookingData.event_type === 'BLOCK_DATES') {\r\n      return this.PAGE_BLOCK_DATES;\r\n    } else if (this.bookingData.event_type === 'SPLIT_BOOKING') {\r\n      this.showSplitBookingOption = true;\r\n      return this.PAGE_ONE;\r\n    } else {\r\n      // if( || this.bookingData.event_type === \"NEW_BOOKING\")\r\n      return this.PAGE_ONE;\r\n    }\r\n  }\r\n\r\n  getBookingPreferenceRoomId() {\r\n    //console.log(this.bookingData);\r\n    return (this.bookingData.hasOwnProperty('PR_ID') && this.bookingData.PR_ID) || null;\r\n  }\r\n\r\n  getSplitBookings() {\r\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n\r\n  closeWindow() {\r\n    this.isConvertedBooking = false;\r\n    this.closeBookingWindow.emit();\r\n  }\r\n  isEditBooking() {\r\n    return this.bookingData.event_type === 'EDIT_BOOKING';\r\n  }\r\n  onRoomsDataUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    const { data, key, changedKey } = event.detail;\r\n    const roomCategoryKey = this.getRoomCategoryKey(data.roomCategoryId);\r\n    const ratePlanKey = this.getRatePlanKey(data.ratePlanId);\r\n\r\n    if (this.shouldClearData(key)) {\r\n      this.selectedRooms = {};\r\n    }\r\n\r\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey);\r\n\r\n    if (this.isEditBooking()) {\r\n      if (changedKey === 'rate') {\r\n        if (this.selectedRooms.hasOwnProperty(roomCategoryKey) && this.selectedRooms[roomCategoryKey].hasOwnProperty(ratePlanKey)) {\r\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data);\r\n        }\r\n      } else {\r\n        if (changedKey !== 'rateType') {\r\n          if (changedKey === 'adult_child_offering') {\r\n            if (this.selectedRooms.hasOwnProperty(roomCategoryKey) && this.selectedRooms[roomCategoryKey].hasOwnProperty(ratePlanKey)) {\r\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data);\r\n            }\r\n          } else {\r\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data);\r\n    }\r\n\r\n    this.cleanupEmptyData(roomCategoryKey, ratePlanKey);\r\n    this.renderPage();\r\n  }\r\n  getRoomCategoryKey(roomCategoryId: string): string {\r\n    return `c_${roomCategoryId}`;\r\n  }\r\n\r\n  getRatePlanKey(ratePlanId: string): string {\r\n    return `p_${ratePlanId}`;\r\n  }\r\n\r\n  shouldClearData(key: string | undefined): boolean {\r\n    return key === 'clearData' || this.isEditBookingEvent(key);\r\n  }\r\n\r\n  isEditBookingEvent(key: string | undefined): boolean {\r\n    return key === 'EDIT_BOOKING';\r\n  }\r\n\r\n  initializeRoomCategoryIfNeeded(roomCategoryKey: string) {\r\n    if (!this.selectedRooms[roomCategoryKey]) {\r\n      this.selectedRooms[roomCategoryKey] = {};\r\n    }\r\n  }\r\n\r\n  setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any) {\r\n    this.selectedRooms[roomCategoryKey][ratePlanKey] = data;\r\n  }\r\n\r\n  hasSelectedRoomData(roomCategoryKey: string, ratePlanKey: string): boolean {\r\n    return this.selectedRooms[roomCategoryKey] && this.selectedRooms[roomCategoryKey][ratePlanKey];\r\n  }\r\n\r\n  cleanupEmptyData(roomCategoryKey: string, ratePlanKey: string) {\r\n    if (this.selectedRooms[roomCategoryKey][ratePlanKey]?.totalRooms === 0) {\r\n      delete this.selectedRooms[roomCategoryKey][ratePlanKey];\r\n    }\r\n\r\n    if (!Object.keys(this.selectedRooms[roomCategoryKey]).length) {\r\n      delete this.selectedRooms[roomCategoryKey];\r\n    }\r\n  }\r\n\r\n  applyBookingEditToSelectedRoom(roomCategoryKey: string, ratePlanKey: string, data) {\r\n    this.selectedRooms = {\r\n      [roomCategoryKey]: {\r\n        [ratePlanKey]: {\r\n          ...data,\r\n          guestName: this.bookingData.NAME,\r\n          roomId: this.bookingData.PR_ID,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    const opt: { [key: string]: any } = event.detail;\r\n    if (opt.key === 'selectedDateRange') {\r\n      this.dateRangeData = opt.data;\r\n      this.bookingData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\r\n      this.bookingData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\r\n      this.initializeBookingAvailability(dateToFormattedString(this.bookingData.defaultDateRange.fromDate), dateToFormattedString(this.bookingData.defaultDateRange.toDate));\r\n    }\r\n  }\r\n\r\n  handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.blockDatesData = opt.data;\r\n    //console.log(\"blocked date data\", this.blockDatesData);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    //console.log(event);\r\n  }\r\n\r\n  handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n\r\n    const opt = event.detail;\r\n    if (opt.guestRefKey) {\r\n      if (this.isEventType('BAR_BOOKING')) {\r\n        this.guestData[opt.guestRefKey] = {\r\n          ...opt.data,\r\n          roomId: this.bookingData.PR_ID,\r\n        };\r\n      } else this.guestData[opt.guestRefKey] = opt.data;\r\n    }\r\n  }\r\n\r\n  handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookedByInfoData = opt.value.data;\r\n  }\r\n\r\n  isActiveSouceOption(srcIndex) {\r\n    return this.sourceOption === srcIndex ? 'active' : '';\r\n  }\r\n\r\n  handleSourceDropDown(selectedOption) {\r\n    this.sourceOption = {\r\n      code: selectedOption.target.value,\r\n      description: this.sourceOptions.find(opt => opt.id === selectedOption.target.value.toString()).value || '',\r\n    };\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\r\n  gotoSplitPageTwo() {\r\n    this.gotoPage(this.PAGE_TWO);\r\n  }\r\n\r\n  gotoPage(gotoPage) {\r\n    this.page = gotoPage;\r\n    this.renderPage();\r\n  }\r\n\r\n  showSplitBooking() {\r\n    this.showSplitBookingOption = true;\r\n    this.gotoPage(this.PAGE_ONE);\r\n  }\r\n\r\n  getSelectedSplitBookingName(bookingId) {\r\n    let splitBooking = this.getSplitBookings().find(booking => booking.ID === bookingId);\r\n    return splitBooking.ID + ' ' + splitBooking.NAME;\r\n  }\r\n\r\n  isActiveSplitBookingOption(spltIndex) {\r\n    return this.splitBookingId === spltIndex ? 'active' : '';\r\n  }\r\n\r\n  handleSplitBookingDropDown(evt) {\r\n    this.splitBookingId = evt.target.value;\r\n  }\r\n\r\n  isPageZero() {\r\n    return this.page === this.PAGE_ZERO;\r\n  }\r\n\r\n  isPageOne() {\r\n    return this.page === this.PAGE_ONE;\r\n  }\r\n\r\n  isPageTwo() {\r\n    return this.page === this.PAGE_TWO;\r\n  }\r\n\r\n  isPageBlockDates() {\r\n    return this.page === this.PAGE_BLOCK_DATES;\r\n  }\r\n\r\n  getSplitBookingList() {\r\n    return (\r\n      <fieldset class=\"form-group col-12 text-left\">\r\n        <label class=\"h5\">To booking# </label>\r\n        <div class=\"btn-group ml-1\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.handleSplitBookingDropDown(evt)}>\r\n            <option value=\"\" selected={this.splitBookingId != ''}>\r\n              Select\r\n            </option>\r\n            {this.getSplitBookings().map(option => (\r\n              <option value={option.ID} selected={this.splitBookingId === option.ID}>\r\n                {this.getSelectedSplitBookingName(option.ID)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          {/* <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" name=\"sourceType\" data-toggle=\"dropdown\">\r\n                    {this.splitBookingId!=null ? this.getSelectedSplitBookingName(this.splitBookingId) : \"Select\"}\r\n                </button>\r\n                <div class=\"dropdown-menu\">\r\n                  {this.getSplitBookings().map((option) => <button class={`dropdown-item ${this.isActiveSplitBookingOption(option.ID)}`}  type=\"button\" onClick={() => this.handleSplitBookingDropDown(option.ID)}>{this.getSelectedSplitBookingName(option.ID)}</button>)}\r\n                </div> */}\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n\r\n  getSourceNode() {\r\n    return (\r\n      <fieldset class=\"form-group col-12 text-left\">\r\n        <label class=\"h5\">Source </label>\r\n        <div class=\"btn-group ml-1\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.handleSourceDropDown(evt)}>\r\n            {this.sourceOptions.map(option => (\r\n              <option value={option.id} selected={this.sourceOption.code === option.id}>\r\n                {option.value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n\r\n  getRoomsListFromCategoryId(categoryId) {\r\n    let category = this.bookingData.roomsInfo?.find(category => category.id === categoryId);\r\n    return (category && category.physicalrooms) || [];\r\n  }\r\n\r\n  getPageZeroView() {\r\n    return (\r\n      <div class=\"scrollContent\">\r\n        <div class=\"row p-0 mb-1\">\r\n          <div class=\"col-md-3 col-sm-12 mb-1\">\r\n            <button class=\"btn btn-primary full-width\" onClick={() => this.gotoPage(this.PAGE_ONE)}>\r\n              Create New Booking\r\n            </button>\r\n          </div>\r\n          {this.getSplitBookings().length ? (\r\n            <div class=\"col-md-3 col-sm-12 mb-1\">\r\n              <button class=\"btn btn-primary full-width\" onClick={() => this.showSplitBooking()}>\r\n                Add Unit to Existing Booking\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n          <div class=\"col-md-3 col-sm-12 mb-1\">\r\n            <button class=\"btn btn-primary full-width\" onClick={() => this.gotoPage(this.PAGE_BLOCK_DATES)}>\r\n              Block Dates\r\n            </button>\r\n          </div>\r\n          <div class=\"col-md-3 col-sm-12 mb-1\">\r\n            <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPageOneView() {\r\n    return (\r\n      <div class=\"scrollContent\">\r\n        {this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? null : this.getSourceNode()}\r\n\r\n        <fieldset class=\"form-group col-12 row\">\r\n          <igl-date-range message={this.message} defaultData={this.bookingData.defaultDateRange} onDateSelectEvent={evt => this.onDateRangeSelect(evt)}></igl-date-range>\r\n        </fieldset>\r\n\r\n        <div class=\"col text-left\">\r\n          {this.bookingData.roomsInfo?.map(roomInfo => (\r\n            <igl-booking-rooms\r\n              currency={this.currency}\r\n              ratePricingMode={this.ratePricingMode}\r\n              dateDifference={this.dateRangeData.dateDifference}\r\n              bookingType={this.bookingData.event_type}\r\n              roomTypeData={roomInfo}\r\n              class=\"mt-2 mb-1\"\r\n              defaultData={this.selectedRooms['c_' + roomInfo.id]}\r\n              onDataUpdateEvent={evt => this.onRoomsDataUpdate(evt)}\r\n            ></igl-booking-rooms>\r\n          ))}\r\n        </div>\r\n\r\n        {this.isEventType('EDIT_BOOKING') ? (\r\n          <div class=\"row p-0 mb-1 mt-2\">\r\n            <div class=\"col-6\">\r\n              <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <div class=\"col-6\">\r\n              <button class=\"btn btn-primary full-width\" onClick={() => this.gotoPage(this.PAGE_TWO)}>\r\n                Next &gt;&gt;\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"row p-0 mb-1 mt-2\">\r\n            <div class={this.bookingData.event_type === 'PLUS_BOOKING' || this.isEventType('ADD_ROOM') ? 'col-6' : 'col-12'}>\r\n              <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            {this.bookingData.event_type === 'PLUS_BOOKING' || this.isEventType('ADD_ROOM') ? (\r\n              <div class=\"col-6\">\r\n                <button class=\"btn btn-primary full-width\" disabled={Object.keys(this.selectedRooms).length === 0} onClick={() => this.gotoPage(this.PAGE_TWO)}>\r\n                  Next &gt;&gt;\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPageBlockDatesView() {\r\n    return (\r\n      <div class=\"scrollContent blockDatesForm\">\r\n        <igl-block-dates-view\r\n          fromDate={this.dateRangeData.fromDateStr}\r\n          toDate={this.dateRangeData.toDateStr}\r\n          entryDate={this.bookingData.ENTRY_DATE}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"row p-0 mb-1 mt-2\">\r\n          <div class=\"col-6\">\r\n            <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <button class=\"btn btn-primary full-width\" onClick={() => this.handleBlockDate()}>\r\n              Block dates\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: PageTwoButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    switch (event.detail.key) {\r\n      case 'save':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'cancel':\r\n        this.closeWindow();\r\n        break;\r\n      case 'back':\r\n        this.gotoPage(this.PAGE_ONE);\r\n        break;\r\n      case 'book':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'bookAndCheckIn':\r\n        this.bookUser(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (event.detail.key === 'propertyBookedBy') {\r\n      this.handleBookedByInfoUpdate(event);\r\n    } else {\r\n      this.handleGuestInfoUpdate(event);\r\n    }\r\n  }\r\n  async handleBlockDate() {\r\n    const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\r\n    const result = await this.bookingService.blockUnit({\r\n      from_date: dateToFormattedString(this.bookingData.defaultDateRange.fromDate),\r\n      to_date: dateToFormattedString(this.bookingData.defaultDateRange.toDate),\r\n      NOTES: this.blockDatesData.OPTIONAL_REASON || '',\r\n      pr_id: this.bookingData.PR_ID.toString(),\r\n      STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n      DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\r\n      ...releaseData,\r\n    });\r\n    const blockedUnit = await transformNewBLockedRooms(result);\r\n    this.blockedCreated.emit(blockedUnit);\r\n    this.closeWindow();\r\n    //window.location.reload();\r\n  }\r\n\r\n  async bookUser(check_in: boolean) {\r\n    this.setLoadingState(check_in);\r\n\r\n    try {\r\n      let booking = {\r\n        pool: '',\r\n        data: [],\r\n      };\r\n      if (['003', '002', '004'].includes(this.bookingData.STATUS_CODE)) {\r\n        this.eventsService.deleteEvent(this.bookingData.POOL);\r\n        booking.pool = this.bookingData.POOL;\r\n      }\r\n      if (this.isEventType('EDIT_BOOKING')) {\r\n        booking.pool = this.bookingData.POOL;\r\n      }\r\n\r\n      const arrivalTime = this.isEventType('EDIT_BOOKING') ? this.getArrivalTimeForBooking() : '';\r\n      const pr_id = this.isEventType('BAR_BOOKING') ? this.bookingData.PR_ID : undefined;\r\n      const booking_nbr = this.isEventType('EDIT_BOOKING') ? this.bookingData.BOOKING_NUMBER : undefined;\r\n      if (this.isEventType('EDIT_BOOKING')) {\r\n        this.bookedByInfoData.message = this.bookingData.NOTES;\r\n      }\r\n      const result = await this.bookingService.bookUser(\r\n        this.bookedByInfoData,\r\n        check_in,\r\n        this.bookingData.defaultDateRange.fromDate,\r\n        this.bookingData.defaultDateRange.toDate,\r\n        this.guestData,\r\n        this.dateRangeData.dateDifference,\r\n        this.sourceOption,\r\n        this.propertyid,\r\n        this.currency,\r\n        booking_nbr,\r\n        this.bookingData.GUEST,\r\n        arrivalTime,\r\n        pr_id,\r\n      );\r\n      if (check_in || this.isEventType('EDIT_BOOKING')) {\r\n        const newBookings: RoomBookingDetails[] = transformNewBooking(result);\r\n        booking.data = newBookings;\r\n        //this.bookingCreated.emit(booking);\r\n      }\r\n      //window.location.reload();\r\n      //console.log(\"booking data \", this.bookingData);\r\n    } catch (error) {\r\n      //  toastr.error(error);\r\n    } finally {\r\n      this.resetLoadingState();\r\n    }\r\n  }\r\n\r\n  setLoadingState(assign_units: boolean) {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.isLoading = 'save';\r\n    } else {\r\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\r\n    }\r\n  }\r\n\r\n  getArrivalTimeForBooking(): string {\r\n    return this.bookedByInfoData.arrivalTime.find(e => e.CODE_VALUE_EN === this.bookingData.ARRIVAL_TIME).CODE_NAME;\r\n  }\r\n\r\n  resetLoadingState() {\r\n    this.isLoading = '';\r\n    setTimeout(() => {\r\n      this.closeWindow();\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\r\n        <div class={'sideWindow ' + (this.isPageBlockDates() ? 'col-sm-12 col-md-6 col-lg-5 col-xl-4' : 'col-sm-12 col-md-11 col-lg-9 col-xl-8')}>\r\n          <div class=\"card mb-0 shadow-none p-0\">\r\n            <div class=\"card-header\">\r\n              <h3 class=\"card-title text-left pb-1 font-medium-2\">{this.isPageBlockDates() ? this.bookingData.BLOCK_DATES_TITLE : this.bookingData.TITLE}</h3>\r\n              <button type=\"button\" class=\"close close-icon\" onClick={() => this.closeWindow()}>\r\n                <i class=\"ft-x\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {this.isPageZero() && this.getPageZeroView()}\r\n\r\n          {this.isPageOne() && this.getPageOneView()}\r\n\r\n          {this.isPageTwo() && (\r\n            <igl-pagetwo\r\n              showPaymentDetails={this.showPaymentDetails}\r\n              selectedGuestData={this.guestData}\r\n              countryNodeList={this.countryNodeList}\r\n              isLoading={this.isLoading}\r\n              selectedRooms={this.selectedRooms}\r\n              bedPreferenceType={this.bedPreferenceType}\r\n              dateRangeData={this.dateRangeData}\r\n              bookingData={this.bookingData}\r\n              showSplitBookingOption={this.showSplitBookingOption}\r\n              language={this.language}\r\n              bookedByInfoData={this.bookedByInfoData}\r\n              isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\r\n              onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\r\n              onButtonClicked={event => this.handleButtonClicked(event)}\r\n            ></igl-pagetwo>\r\n          )}\r\n\r\n          {this.isPageBlockDates() ? this.getPageBlockDatesView() : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}
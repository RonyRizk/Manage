{"version":3,"file":"ir-phone-input.js","sourceRoot":"","sources":["../../../src/components/ir-phone-input/ir-phone-input.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ICountry } from '@/components';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-phone-input',\r\n  styleUrl: 'ir-phone-input.css',\r\n  scoped: true,\r\n})\r\nexport class IrPhoneInput {\r\n  @Element() el: HTMLElement;\r\n  @Prop() label: string;\r\n  @Prop() value: string = '';\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() error: boolean = false;\r\n  @Prop() token: string;\r\n  @Prop() language: string;\r\n  @Prop() default_country: number = null;\r\n  @Prop() phone_prefix: string | null = null;\r\n  @Prop() placeholder: string;\r\n\r\n  @Event() textChange: EventEmitter<{ phone_prefix: string; mobile: string }>;\r\n  @State() inputValue: string = '';\r\n  @State() isDropdownVisible: boolean = false;\r\n  @State() currentCountry: ICountry;\r\n\r\n  private countries: ICountry[] = [];\r\n\r\n  private bookingService: BookingService = new BookingService();\r\n\r\n  async componentWillLoad() {\r\n    if (!this.token) {\r\n      throw new Error('Missing token');\r\n    }\r\n    this.bookingService.setToken(this.token);\r\n    const countries = await this.bookingService.getCountries(this.language);\r\n    this.countries = countries;\r\n    if (this.phone_prefix) {\r\n      this.setCountryFromPhonePrefix();\r\n    } else {\r\n      if (this.default_country) {\r\n        this.setCurrentCountry(this.default_country);\r\n      }\r\n    }\r\n    this.inputValue = this.value;\r\n  }\r\n  @Listen('click', { target: 'document' })\r\n  handleDocumentClick(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (!this.el.contains(target)) {\r\n      this.isDropdownVisible = false;\r\n    }\r\n  }\r\n  handleInputChange(e: InputEvent) {\r\n    let inputElement = e.target as HTMLInputElement;\r\n    let inputValue = inputElement.value;\r\n    inputValue = inputValue.replace(/[^+\\d]+/g, '');\r\n    inputElement.value = inputValue;\r\n    this.inputValue = inputValue;\r\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.inputValue });\r\n  }\r\n  setCountryFromPhonePrefix() {\r\n    const country = this.countries.find(country => country.phone_prefix === this.phone_prefix);\r\n    if (!country) {\r\n      throw new Error('Invalid country id');\r\n    }\r\n    this.currentCountry = { ...country };\r\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.value });\r\n  }\r\n  setCurrentCountry(id: number) {\r\n    const country = this.countries.find(country => country.id === id);\r\n    if (!country) {\r\n      throw new Error('Invalid country id');\r\n    }\r\n    this.currentCountry = { ...country };\r\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"form-group mr-0\">\r\n          {/* <p class=\"mb-0\">Phone</p> */}\r\n          <div class=\"input-group row m-0 p-0 position-relative\">\r\n            {this.label && (\r\n              <div class={`input-group-prepend col-3 p-0 text-dark border-none`}>\r\n                <label class={`input-group-text  border-theme flex-grow-1 text-dark  `}>{this.label}</label>\r\n              </div>\r\n            )}\r\n            <div class={'form-control  input-container  flex-fill' + (this.error ? ' is-invalid' : '')}>\r\n              <button onClick={() => (this.isDropdownVisible = !this.isDropdownVisible)} class=\"dropdown-trigger\">\r\n                <img src={this.currentCountry?.flag} class=\"flag\" />\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\r\n                  <path d=\"M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\" />\r\n                </svg>\r\n              </button>\r\n\r\n              <label>{this.currentCountry?.phone_prefix}</label>\r\n              <input type=\"text\" placeholder={this.placeholder} required value={this.inputValue} disabled={this.disabled} onInput={e => this.handleInputChange(e)} />\r\n            </div>{' '}\r\n            {this.isDropdownVisible && (\r\n              <div class=\"ir-dropdown-container\">\r\n                <ir-combobox\r\n                  onComboboxValueChange={e => {\r\n                    this.setCurrentCountry(+e.detail.data);\r\n                    this.isDropdownVisible = false;\r\n                  }}\r\n                  class=\"bg-white\"\r\n                  autoFocus\r\n                  placeholder=\"Search country\"\r\n                  data={this.countries.map(c => ({\r\n                    id: c.id.toString(),\r\n                    name: `${c.name} (${c.phone_prefix})`,\r\n                  }))}\r\n                ></ir-combobox>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {/* {this.error && <div class=\"invalid-feedback\">Please enter a valid phone number.</div>} */}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}
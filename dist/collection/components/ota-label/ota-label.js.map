{"version":3,"file":"ota-label.js","sourceRoot":"","sources":["../../../src/components/ota-label/ota-label.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAChE,OAAO,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC;AAE1B,OAAO,OAAO,MAAM,wBAAwB,CAAC;AAM7C,MAAM,OAAO,QAAQ;;IAOnB,kBAAa,GAAG,GAAG,EAAE;MACnB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAC/B,CAAC,CAAC;;;2BANgC,CAAC;mBAEP,KAAK;;EAMjC,MAAM;IACJ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;MACjB,OAAO,IAAI,CAAC;KACb;IAED,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IAEnG,OAAO,CACL,EAAC,IAAI;MACH,kBAAS,IAAI,CAAC,KAAK,CAAU;MAC7B,cACG,gBAAgB,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CACvC,UAAI,GAAG,EAAE,EAAE,EAAE;;QACR,MAAM,CAAC,SAAS;QAAE,GAAG;QACvB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,IAAI,KAAK,KAAK,gBAAgB,CAAC,MAAM,GAAG,CAAC,IAAI,CACtF,cAAQ,OAAO,EAAE,IAAI,CAAC,aAAa,IAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAU,CAC3H,CACE,CACN,CAAC,CACC,CAEA,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, Prop, State, h } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { IOtaNotes } from '@/models/booking.dto';\r\nimport locales from '@/stores/locales.store';\r\n@Component({\r\n  tag: 'ota-label',\r\n  styleUrl: 'ota-label.css',\r\n  scoped: true,\r\n})\r\nexport class OtaLabel {\r\n  @Prop() label: string;\r\n  @Prop() remarks: IOtaNotes[];\r\n  @Prop() maxVisibleItems: number = 3;\r\n\r\n  @State() showAll: boolean = false;\r\n\r\n  toggleShowAll = () => {\r\n    this.showAll = !this.showAll;\r\n  };\r\n\r\n  render() {\r\n    if (!this.remarks) {\r\n      return null;\r\n    }\r\n\r\n    const displayedRemarks = this.showAll ? this.remarks : this.remarks.slice(0, this.maxVisibleItems);\r\n\r\n    return (\r\n      <Host>\r\n        <strong>{this.label}</strong>\r\n        <ul>\r\n          {displayedRemarks.map((remark, index) => (\r\n            <li key={v4()}>\r\n              - {remark.statement}{' '}\r\n              {this.remarks.length > this.maxVisibleItems && index === displayedRemarks.length - 1 && (\r\n                <button onClick={this.toggleShowAll}>{this.showAll ? locales.entries.Lcz_ShowLess : locales.entries.Lcz_ShowMore}</button>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {/* Show toggle button if there are more remarks than `maxVisibleItems` */}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}
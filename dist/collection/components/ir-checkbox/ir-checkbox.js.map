{"version":3,"file":"ir-checkbox.js","sourceRoot":"","sources":["../../../src/components/ir-checkbox/ir-checkbox.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAC5F,OAAO,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC;AAO1B,MAAM,OAAO,UAAU;;mBACM,KAAK;;sBAEX,EAAE,EAAE;;;0BAIC,KAAK;;EAK/B,mBAAmB,CAAC,QAAiB;IACnC,IAAI,QAAQ,KAAK,IAAI,CAAC,cAAc,EAAE;MACpC,OAAO;KACR;IACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC;EACrC,CAAC;EAID,iBAAiB;IACf,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC;EACrC,CAAC;EACD,gBAAgB;IACd,IAAI,IAAI,CAAC,WAAW,EAAE;MACpB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;KAC7E;EACH,CAAC;EACD,iBAAiB;IACf,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;IAC3C,IAAI,IAAI,CAAC,WAAW,EAAE;MACpB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;KACpF;IACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;EAC7C,CAAC;EACD,MAAM;IACJ,OAAO,CACL,EAAC,IAAI;MACH,cACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAC1C,EAAE,EAAE,IAAI,CAAC,UAAU,gBACP,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,EACzD,KAAK,EAAE,IAAI,EACX,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,EACpC,IAAI,EAAC,QAAQ,EACb,IAAI,EAAC,UAAU,EACf,KAAK,EAAC,cAAc,IAEnB,IAAI,CAAC,cAAc,IAAI,CACtB,WAAK,KAAK,EAAC,4BAA4B,EAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,OAAO,EAAC,OAAO,EAAC,aAAa;QACrF,YACE,IAAI,EAAC,cAAc,EACnB,CAAC,EAAC,sLAAsL,GACxL,CACE,CACP,CACM;MACT,aAAO,IAAI,EAAC,UAAU,iBAAa,MAAM,EAAC,QAAQ,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,EAAC,UAAU,GAAG;MACnH,IAAI,CAAC,KAAK,IAAI,aAAO,OAAO,EAAE,IAAI,CAAC,UAAU,IAAG,IAAI,CAAC,KAAK,CAAS,CAC/D,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\n\r\n@Component({\r\n  tag: 'ir-checkbox',\r\n  styleUrl: 'ir-checkbox.css',\r\n  scoped: true,\r\n})\r\nexport class IrCheckbox {\r\n  @Prop() checked: boolean = false;\r\n  @Prop() label: string;\r\n  @Prop() checkboxId = v4();\r\n  @Prop() name: string;\r\n  @Prop() disabled: boolean;\r\n\r\n  @State() currentChecked = false;\r\n\r\n  @Event() checkChange: EventEmitter<boolean>;\r\n\r\n  @Watch('checked')\r\n  handleCheckedChange(newValue: boolean) {\r\n    if (newValue === this.currentChecked) {\r\n      return;\r\n    }\r\n    this.currentChecked = this.checked;\r\n  }\r\n\r\n  private checkboxRef: HTMLButtonElement;\r\n\r\n  componentWillLoad() {\r\n    this.currentChecked = this.checked;\r\n  }\r\n  componentDidLoad() {\r\n    if (this.checkboxRef) {\r\n      this.checkboxRef.setAttribute('aria-checked', JSON.stringify(this.checked));\r\n    }\r\n  }\r\n  handleCheckChange() {\r\n    this.currentChecked = !this.currentChecked;\r\n    if (this.checkboxRef) {\r\n      this.checkboxRef.setAttribute('aria-checked', JSON.stringify(this.currentChecked));\r\n    }\r\n    this.checkChange.emit(this.currentChecked);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <button\r\n          disabled={this.disabled}\r\n          name={this.name}\r\n          onClick={this.handleCheckChange.bind(this)}\r\n          id={this.checkboxId}\r\n          data-state={this.currentChecked ? 'checked' : 'unchecked'}\r\n          value={'on'}\r\n          ref={ref => (this.checkboxRef = ref)}\r\n          type=\"button\"\r\n          role=\"checkbox\"\r\n          class=\"CheckboxRoot\"\r\n        >\r\n          {this.currentChecked && (\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"\r\n              />\r\n            </svg>\r\n          )}\r\n        </button>\r\n        <input type=\"checkbox\" aria-hidden=\"true\" tabindex=\"-1\" value=\"on\" checked={this.currentChecked} class=\"checkbox\" />\r\n        {this.label && <label htmlFor={this.checkboxId}>{this.label}</label>}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}
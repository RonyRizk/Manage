{"version":3,"file":"ir-checlbox.js","sourceRoot":"","sources":["../../../src/components/ir-checkbox/ir-checlbox.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAMxE,MAAM,OAAO,UAAU;;IAUrB,sBAAiB,GAAG,GAAG,EAAE;MACvB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;QAClB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;OACzF;IACH,CAAC,CAAC;;mBAbyD,KAAK;iBACxC,SAAS;oBACL,KAAK;;yBAEW,OAAO;;EAWnD,MAAM;IACJ,OAAO,CACL,aAAO,KAAK,EAAE,mBAAmB,IAAI,CAAC,aAAa,EAAE;MAClD,IAAI,CAAC,aAAa,KAAK,QAAQ,IAAI,gBAAO,IAAI,CAAC,KAAK,CAAQ;MAC7D,aAAO,IAAI,EAAC,UAAU,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,iBAAiB,GAAI;MAC9I,YAAM,KAAK,EAAC,WAAW,GAAQ;MAC9B,IAAI,CAAC,aAAa,KAAK,OAAO,IAAI,gBAAO,IAAI,CAAC,KAAK,CAAQ,CACtD,CACT,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, h, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-checkbox',\r\n  styleUrl: 'ir-checkbox.css',\r\n})\r\nexport class IrCheckBox {\r\n  @Prop() name: string;\r\n  @Prop({ mutable: true, reflect: true }) checked: boolean = false;\r\n  @Prop() label: string = '<label>';\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() value: string; // Added value property\r\n  @Prop() labelPosition: 'before' | 'after' = 'after'; // Added labelPosition property\r\n\r\n  @Event({ bubbles: true, composed: true }) checkboxChange: EventEmitter<{ name: string; value: string; checked: boolean }>;\r\n\r\n  handleInputChange = () => {\r\n    if (!this.disabled) {\r\n      this.checked = !this.checked;\r\n      this.checkboxChange.emit({ name: this.name, value: this.value, checked: this.checked });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <label class={`check-container ${this.labelPosition}`}>\r\n        {this.labelPosition === 'before' && <span>{this.label}</span>}\r\n        <input type=\"checkbox\" name={this.name} value={this.value} checked={this.checked} disabled={this.disabled} onInput={this.handleInputChange} />\r\n        <span class=\"checkmark\"></span>\r\n        {this.labelPosition === 'after' && <span>{this.label}</span>}\r\n      </label>\r\n    );\r\n  }\r\n}\r\n"]}
{"version":3,"file":"ir-popover.js","sourceRoot":"","sources":["../../../src/components/ir-popover/ir-popover.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AAOzE,MAAM,OAAO,SAAS;;IAUpB,qBAAgB,GAAG,GAAG,EAAE;MACtB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;QACrB,OAAO;OACR;MACD,IAAI,IAAI,CAAC,WAAW,EAAE;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;OACvB;IACH,CAAC,CAAC;IAEF,qBAAgB,GAAG,GAAG,EAAE;MACtB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;QACrB,OAAO;OACR;MACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC,CAAC;;qBArB4B,KAAK;uBACH,KAAK;yBACL,MAAM;;EAEtC,iBAAiB;IACf,IAAI,CAAC,eAAe,EAAE,CAAC;EACzB,CAAC;EAiBD,eAAe;IACb,qBAAqB,CAAC,GAAG,EAAE;MACzB,MAAM,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;MAC7D,IAAI,YAAY,EAAE;QAChB,MAAM,KAAK,GAAG,YAAY,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC,4CAA4C;OAC7E;IACH,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI,IAAC,KAAK,EAAE,EAAE,mBAAmB,EAAE,IAAI,CAAC,aAAa,EAAE;MACtD,SAAG,KAAK,EAAC,eAAe,EAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,EAAE,YAAY,EAAE,IAAI,CAAC,gBAAgB,IAC9F,IAAI,CAAC,YAAY,CAChB;MACH,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,IAAI,CACrC,yBAAgB,MAAM,EAAC,KAAK,EAAC,mBAAmB,IAC7C,IAAI,CAAC,YAAY,CACd,CACP,CACI,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, Prop, State, h, Element } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-popover',\r\n  styleUrl: 'ir-popover.css',\r\n  scoped: true,\r\n})\r\nexport class IrPopover {\r\n  @Element() el: HTMLElement;\r\n  @Prop() popoverTitle: string;\r\n  @State() isHovered: boolean = false;\r\n  @State() showPopover: boolean = false;\r\n  @Prop() irPopoverLeft: string = '10px';\r\n\r\n  componentWillLoad() {\r\n    this.checkTitleWidth();\r\n  }\r\n  handleMouseEnter = () => {\r\n    if (!this.showPopover) {\r\n      return;\r\n    }\r\n    if (this.showPopover) {\r\n      this.isHovered = true;\r\n    }\r\n  };\r\n\r\n  handleMouseLeave = () => {\r\n    if (!this.showPopover) {\r\n      return;\r\n    }\r\n    this.isHovered = false;\r\n  };\r\n\r\n  checkTitleWidth() {\r\n    requestAnimationFrame(() => {\r\n      const titleElement = this.el.querySelector('.popover-title');\r\n      if (titleElement) {\r\n        const width = titleElement.scrollWidth;\r\n        this.showPopover = width > 170; // Show popover if title width exceeds 170px\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host style={{ '--ir-popover-left': this.irPopoverLeft }}>\r\n        <p class=\"popover-title\" onMouseLeave={this.handleMouseLeave} onMouseEnter={this.handleMouseEnter}>\r\n          {this.popoverTitle}\r\n        </p>\r\n        {this.showPopover && this.isHovered && (\r\n          <div data-state=\"show\" class=\"popover-container\">\r\n            {this.popoverTitle}\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}
{"version":3,"file":"ir-interceptor.js","sourceRoot":"","sources":["../../../src/components/ir-interceptor/ir-interceptor.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Fragment, Host, Prop, State, h } from \"@stencil/core\";\r\nimport axios from \"axios\";\r\n\r\n@Component({\r\n  tag: \"ir-interceptor\",\r\n  styleUrl: \"ir-interceptor.css\",\r\n  scoped: true,\r\n})\r\nexport class IrInterceptor {\r\n  @State() isShown = false;\r\n  @State() isLoading = false;\r\n  @State() isSuccess = false;\r\n\r\n  @Prop({ reflect: true, mutable: true }) defaultMessage = {\r\n    loadingMessage: \"Fetching Data\",\r\n    successMessage: \"Success\",\r\n    errorMessage: \"Something Went Wrong\",\r\n  };\r\n\r\n  @Prop({ reflect: true }) handledEndpoints = [\r\n    \"/Get_Exposed_Booking_Availability\",\r\n    \"/Get_Aggregated_UnAssigned_Rooms\",\r\n  ];\r\n\r\n  componentWillLoad() {\r\n    this.setupAxiosInterceptors();\r\n  }\r\n\r\n  setupAxiosInterceptors() {\r\n    axios.interceptors.request.use(\r\n      this.handleRequest.bind(this),\r\n      this.handleError.bind(this)\r\n    );\r\n    axios.interceptors.response.use(\r\n      this.handleResponse.bind(this),\r\n      this.handleError.bind(this)\r\n    );\r\n  }\r\n\r\n  extractEndpoint(url: string): string {\r\n    return url.split(\"?\")[0];\r\n  }\r\n\r\n  isHandledEndpoint(url: string): boolean {\r\n    return this.handledEndpoints.includes(this.extractEndpoint(url));\r\n  }\r\n\r\n  handleRequest(config) {\r\n    if (this.isHandledEndpoint(config.url)) {\r\n      this.isLoading = true;\r\n      this.showToast();\r\n    }\r\n    return config;\r\n  }\r\n\r\n  handleResponse(response) {\r\n    this.isLoading = false;\r\n\r\n    if (response.data.ExceptionMsg?.trim()) {\r\n      this.handleError(response.data.ExceptionMsg);\r\n      throw new Error(response.data.ExceptionMsg);\r\n    }\r\n\r\n    if (this.isHandledEndpoint(response.config.url)) {\r\n      this.handleCompletion(\"Success\", true);\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  handleError(error) {\r\n    if (!this.isShown) {\r\n      this.showToast();\r\n    }\r\n    this.handleCompletion(error, false);\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  showToast() {\r\n    this.isShown = true;\r\n  }\r\n\r\n  hideToastAfterDelay(isSuccess: boolean) {\r\n    const delay = isSuccess ? 2000 : 5000;\r\n    setTimeout(() => {\r\n      this.isShown = false;\r\n    }, delay);\r\n  }\r\n\r\n  handleCompletion(message: string, success: boolean) {\r\n    this.isSuccess = success;\r\n    this.defaultMessage = {\r\n      ...this.defaultMessage,\r\n      [success ? \"successMessage\" : \"errorMessage\"]: message,\r\n    };\r\n    this.hideToastAfterDelay(success);\r\n  }\r\n\r\n  renderMessage(): string {\r\n    if (this.isLoading) return this.defaultMessage.loadingMessage;\r\n    return this.isSuccess\r\n      ? this.defaultMessage.successMessage\r\n      : this.defaultMessage.errorMessage;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div\r\n          class=\"toast-container\"\r\n          data-state={this.isShown ? \"open\" : \"closed\"}\r\n        >\r\n          {this.isShown && (\r\n            <Fragment>\r\n              {this.isLoading ? (\r\n                <span class=\"loader\"></span>\r\n              ) : !this.isSuccess ? (\r\n                <div class=\"x-mark-container\">\r\n                  <svg\r\n                    width=\"15\"\r\n                    height=\"15\"\r\n                    viewBox=\"0 0 15 15\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z\"\r\n                      fill=\"white\"\r\n                      fill-rule=\"evenodd\"\r\n                      clip-rule=\"evenodd\"\r\n                    ></path>\r\n                  </svg>\r\n                </div>\r\n              ) : (\r\n                <div class=\"check-mark-container\">\r\n                  <svg\r\n                    width=\"15\"\r\n                    height=\"15\"\r\n                    viewBox=\"0 0 15 15\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M11.4669 3.72684C11.7558 3.91574 11.8369 4.30308 11.648 4.59198L7.39799 11.092C7.29783 11.2452 7.13556 11.3467 6.95402 11.3699C6.77247 11.3931 6.58989 11.3355 6.45446 11.2124L3.70446 8.71241C3.44905 8.48022 3.43023 8.08494 3.66242 7.82953C3.89461 7.57412 4.28989 7.55529 4.5453 7.78749L6.75292 9.79441L10.6018 3.90792C10.7907 3.61902 11.178 3.53795 11.4669 3.72684Z\"\r\n                      fill=\"white\"\r\n                      fill-rule=\"evenodd\"\r\n                      clip-rule=\"evenodd\"\r\n                    ></path>\r\n                  </svg>\r\n                </div>\r\n              )}\r\n\r\n              <p>{this.renderMessage()}</p>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}
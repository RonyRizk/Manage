{"version":3,"file":"ir-interceptor.js","sourceRoot":"","sources":["../../../src/components/ir-interceptor/ir-interceptor.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Event, EventEmitter, Host, Prop, State, h } from '@stencil/core';\r\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport { IToast } from '../ir-toast/toast';\r\nimport interceptor_requests from '@/stores/ir-interceptor.store';\r\n\r\n@Component({\r\n  tag: 'ir-interceptor',\r\n  styleUrl: 'ir-interceptor.css',\r\n  scoped: true,\r\n})\r\nexport class IrInterceptor {\r\n  @State() isShown = false;\r\n  @State() isLoading = false;\r\n  @State() isUnassignedUnit = false;\r\n  @State() endpointsCount = 0;\r\n\r\n  @Prop({ reflect: true }) handledEndpoints = ['/Get_Exposed_Calendar', '/ReAllocate_Exposed_Room', '/Do_Payment', '/Get_Exposed_Bookings'];\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n  componentWillLoad() {\r\n    this.setupAxiosInterceptors();\r\n  }\r\n\r\n  setupAxiosInterceptors() {\r\n    axios.interceptors.request.use(this.handleRequest.bind(this), this.handleError.bind(this));\r\n    axios.interceptors.response.use(this.handleResponse.bind(this), this.handleError.bind(this));\r\n  }\r\n\r\n  extractEndpoint(url: string): string {\r\n    return url.split('?')[0];\r\n  }\r\n\r\n  isHandledEndpoint(url: string): boolean {\r\n    return this.handledEndpoints.includes(url);\r\n  }\r\n\r\n  handleRequest(config: AxiosRequestConfig) {\r\n    const extractedUrl = this.extractEndpoint(config.url);\r\n    interceptor_requests[extractedUrl] = 'pending';\r\n    if (this.isHandledEndpoint(extractedUrl) && this.endpointsCount > 0) {\r\n      this.isLoading = true;\r\n    }\r\n    if (extractedUrl === '/Get_Exposed_Calendar') {\r\n      this.endpointsCount = this.endpointsCount + 1;\r\n    }\r\n    return config;\r\n  }\r\n\r\n  handleResponse(response: AxiosResponse) {\r\n    const extractedUrl = this.extractEndpoint(response.config.url);\r\n    if (this.isHandledEndpoint(extractedUrl)) {\r\n      this.isLoading = false;\r\n    }\r\n    interceptor_requests[extractedUrl] = 'done';\r\n    if (response.data.ExceptionMsg?.trim()) {\r\n      this.handleError(response.data.ExceptionMsg);\r\n      throw new Error(response.data.ExceptionMsg);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  handleError(error: string) {\r\n    this.toast.emit({\r\n      type: 'error',\r\n      title: error,\r\n      description: '',\r\n      position: 'top-right',\r\n    });\r\n    return Promise.reject(error);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.isLoading && (\r\n          <div class=\"loadingScreenContainer\">\r\n            <div class=\"loaderContainer\">\r\n              <span class=\"loader\"></span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}
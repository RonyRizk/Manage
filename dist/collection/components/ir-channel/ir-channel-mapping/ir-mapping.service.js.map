{"version":3,"file":"ir-mapping.service.js","sourceRoot":"","sources":["../../../../src/components/ir-channel/ir-channel-mapping/ir-mapping.service.ts"],"names":[],"mappings":"AAAA,OAAO,aAAa,MAAM,wBAAwB,CAAC;AACnD,OAAO,aAAa,MAAM,wBAAwB,CAAC;AAEnD,MAAM,OAAO,gBAAgB;EACpB,kBAAkB,CAAC,EAAU,EAAE,UAAmB,EAAE,UAAmB;IAC5E,MAAM,SAAS,GAAG,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC;IAC7E,IAAI,CAAC,SAAS,EAAE;MACd,OAAO,SAAS,CAAC;KAClB;IACD,IAAI,CAAC,UAAU,EAAE;MACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;MACtB,OAAO,SAAS,CAAC;KAClB;IACD,IAAI,UAAU,EAAE;MACd,OAAO,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,KAAK,CAAC,CAAC;KACrF;IACD,IAAI,CAAC,UAAU,EAAE;MACf,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;KACzC;IACD,MAAM,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,UAAU,CAAC,CAAC;IAC1F,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACvB,IAAI,CAAC,SAAS,EAAE;MACd,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;KACtC;IACD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACvB,OAAO,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,KAAK,CAAC,CAAC;EAC5E,CAAC;EACM,mBAAmB,CAAC,UAAmB,EAAE,UAAmB;IACjE,IAAI,UAAU,EAAE;MACd,MAAM,iBAAiB,GAAG,aAAa,CAAC,SAAS,CAAC,MAAM,CACtD,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,CACzH,CAAC;MACF,OAAO,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;KACrF;IACD,IAAI,CAAC,UAAU,EAAE;MACf,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;KACxC;IACD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACxB,MAAM,gBAAgB,GAAG,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,UAAU,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;IACjK,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAE9B,kCAAkC;IAClC,0CAA0C;EAC5C,CAAC;CACF","sourcesContent":["import calendar_data from '@/stores/calendar-data';\r\nimport channels_data from '@/stores/channel.store';\r\n\r\nexport class IrMappingService {\r\n  public checkMappingExists(id: string, isRoomType: boolean, roomTypeId?: string) {\r\n    const mapped_id = channels_data.mappedChannel.find(m => m.channel_id === id);\r\n    if (!mapped_id) {\r\n      return undefined;\r\n    }\r\n    if (!isRoomType) {\r\n      console.log('object');\r\n      return undefined;\r\n    }\r\n    if (isRoomType) {\r\n      return calendar_data.roomsInfo.find(room => room.id.toString() === mapped_id.ir_id);\r\n    }\r\n    if (!roomTypeId) {\r\n      throw new Error('Missing room type id');\r\n    }\r\n    const room_type = calendar_data.roomsInfo.find(room => room.id.toString() === roomTypeId);\r\n    console.log(room_type);\r\n    if (!room_type) {\r\n      throw new Error('Invalid Room type');\r\n    }\r\n    console.log(room_type);\r\n    return room_type.rateplans.find(r => r.id.toString() === mapped_id.ir_id);\r\n  }\r\n  public getAppropriateRooms(isRoomType: boolean, roomTypeId?: string) {\r\n    if (isRoomType) {\r\n      const filteredRoomTypes = calendar_data.roomsInfo.filter(\r\n        room => channels_data.mappedChannel.find(m => m.ir_id.toString() === room.id.toString()) === undefined && room.is_active,\r\n      );\r\n      return filteredRoomTypes.map(room => ({ id: room.id.toString(), name: room.name }));\r\n    }\r\n    if (!roomTypeId) {\r\n      throw new Error('Missing roomType id');\r\n    }\r\n    console.log(roomTypeId);\r\n    const selectedRoomType = calendar_data.roomsInfo.filter(room => channels_data.mappedChannel.find(m => m.channel_id.toString() === roomTypeId) && room.is_active);\r\n    console.log(selectedRoomType);\r\n\r\n    // console.log(filteredRoomTypes);\r\n    //filter all the room types that are taken\r\n  }\r\n}\r\n"]}
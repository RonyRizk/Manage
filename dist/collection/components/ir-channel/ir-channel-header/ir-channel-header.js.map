{"version":3,"file":"ir-channel-header.js","sourceRoot":"","sources":["../../../../src/components/ir-channel/ir-channel-header/ir-channel-header.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAgB,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAO9F,MAAM,OAAO,eAAe;;wBAEgD,EAAE;yBAC3C,CAAC;;EAMlC,gBAAgB;IACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;EAC/B,CAAC;EAED,oBAAoB;IAClB,IAAI,IAAI,CAAC,gBAAgB,EAAE;MACzB,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KAC7C;EACH,CAAC;EAED,kBAAkB,CAAC,KAAa;IAC9B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC3B,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,CAAC;EAED,qBAAqB;IACnB,IAAI,IAAI,CAAC,gBAAgB,EAAE;MACzB,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KAC7C;IACD,qBAAqB,CAAC,GAAG,EAAE;MACzB,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,+BAA+B,CAAC,CAAC;MAC3E,IAAI,WAAW,EAAE;QACf,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,WAAW,CAAC,qBAAqB,EAAE,CAAC;QAC5D,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC;QACxD,MAAM,QAAQ,GAAG,IAAI,GAAG,UAAU,CAAC;QACnC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,KAAK,IAAI,CAAC;QAChD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,GAAG,cAAc,QAAQ,KAAK,CAAC;OACpE;IACH,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI;MACH,cACG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CACvC,UACE,KAAK,EAAE,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,EAClD,GAAG,EAAE,KAAK,CAAC,EAAE,EACb,OAAO,EAAE,GAAG,EAAE;UACZ,IAAI,CAAC,KAAK,CAAC,QAAQ;YAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QACtD,CAAC,mBACc,KAAK,CAAC,QAAQ,gBACjB,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAEzD,KAAK,CAAC,IAAI,CACR,CACN,CAAC,CACC;MACL,YAAM,KAAK,EAAC,kBAAkB,EAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC,GAAS,CACzE,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, Event, EventEmitter, Host, Prop, State, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-channel-header',\r\n  styleUrl: 'ir-channel-header.css',\r\n  scoped: true,\r\n})\r\nexport class IrChannelHeader {\r\n  @Element() el: HTMLElement;\r\n  @Prop() headerTitles: { id: string; name: string; disabled: boolean }[] = [];\r\n  @State() selectedIndex: number = 0;\r\n  @Event() tabChanged: EventEmitter<string>;\r\n\r\n  private activeIndicator: HTMLSpanElement;\r\n  private animationFrameId: number;\r\n\r\n  componentDidLoad() {\r\n    this.updateActiveIndicator();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (this.animationFrameId) {\r\n      cancelAnimationFrame(this.animationFrameId);\r\n    }\r\n  }\r\n\r\n  handleTabSelection(index: number) {\r\n    this.selectedIndex = index;\r\n    this.updateActiveIndicator();\r\n    this.tabChanged.emit(this.headerTitles[this.selectedIndex].id);\r\n  }\r\n\r\n  updateActiveIndicator() {\r\n    if (this.animationFrameId) {\r\n      cancelAnimationFrame(this.animationFrameId);\r\n    }\r\n    requestAnimationFrame(() => {\r\n      const selectedTab = this.el.querySelector(`li.tab[data-state=\"selected\"]`);\r\n      if (selectedTab) {\r\n        const { left, width } = selectedTab.getBoundingClientRect();\r\n        const parentLeft = this.el.getBoundingClientRect().left;\r\n        const position = left - parentLeft;\r\n        this.activeIndicator.style.width = `${width}px`;\r\n        this.activeIndicator.style.transform = `translateX(${position}px)`;\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <ul>\r\n          {this.headerTitles.map((title, index) => (\r\n            <li\r\n              class={`tab ${title.disabled ? 'text-light' : ''}`}\r\n              key={title.id}\r\n              onClick={() => {\r\n                if (!title.disabled) this.handleTabSelection(index);\r\n              }}\r\n              data-disabled={title.disabled}\r\n              data-state={this.selectedIndex === index ? 'selected' : ''}\r\n            >\r\n              {title.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <span class=\"active-indicator\" ref={el => (this.activeIndicator = el)}></span>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}
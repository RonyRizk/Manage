{"version":3,"file":"events.utils.js","sourceRoot":"","sources":["../../src/utils/events.utils.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,mBAAmB,EAAE,MAAM,kCAAkC,CAAC;AACvE,OAAO,EAAE,qBAAqB,EAAE,MAAM,SAAS,CAAC;AAEhD,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,GAAG,EAAE,YAAY,EAAE,WAAW,EAAE,eAAe;EACpF,IAAI;IACF,MAAM,mBAAmB,GAAG,IAAI,mBAAmB,EAAE,CAAC;IACtD,IAAI,gBAAgB,GAAG,EAAE,CAAC;IAC1B,MAAM,MAAM,GAAG,MAAM,mBAAmB,CAAC,kBAAkB,CAAC,WAAW,EAAE,qBAAqB,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,mBAAmB,CAAC,CAAC;IAC1K,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;MACpB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QAChD,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;OACvC;WAAM;QACL,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACzC;IACH,CAAC,CAAC,CAAC;IACH,eAAe,CAAC,GAAG,CAAC,CAAC,UAAU,GAAG,gBAAgB,CAAC;GACpD;EAAC,OAAO,KAAK,EAAE;IACd,wBAAwB;GACzB;AACH,CAAC;AACD,MAAM,UAAU,6BAA6B,CAAC,OAAe;EAC3D,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;EAClD,OAAO,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACpC,CAAC","sourcesContent":["import moment from 'moment';\r\nimport { ToBeAssignedService } from '../services/toBeAssigned.service';\r\nimport { dateToFormattedString } from './utils';\r\n\r\nexport async function updateCategories(key, calendarData, property_id, unassignedDates) {\r\n  try {\r\n    const toBeAssignedService = new ToBeAssignedService();\r\n    let categorisedRooms = {};\r\n    const result = await toBeAssignedService.getUnassignedRooms(property_id, dateToFormattedString(new Date(+key)), calendarData.roomsInfo, calendarData.formattedLegendData);\r\n    result.forEach(room => {\r\n      if (!categorisedRooms.hasOwnProperty(room.RT_ID)) {\r\n        categorisedRooms[room.RT_ID] = [room];\r\n      } else {\r\n        categorisedRooms[room.RT_ID].push(room);\r\n      }\r\n    });\r\n    unassignedDates[key].categories = categorisedRooms;\r\n  } catch (error) {\r\n    //  toastr.error(error);\r\n  }\r\n}\r\nexport function transformDateFormatWithMoment(dateStr: string) {\r\n  var dateObj = moment(dateStr, 'ddd, DD MMM YYYY');\r\n  return dateObj.format('D_M_YYYY');\r\n}\r\n"]}
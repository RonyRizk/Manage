{"version":3,"file":"languages.js","sourceRoot":"","sources":["../../../src/redux/features/languages.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAiB,MAAM,kBAAkB,CAAC;AAO9D,MAAM,YAAY,GAAc;EAC9B,OAAO,EAAE,EAAE;EACX,SAAS,EAAE,KAAK;CACjB,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,WAAW,CAAC;EACxC,IAAI,EAAE,WAAW;EACjB,YAAY;EACZ,QAAQ,EAAE;IACR,YAAY,EAAE,CAAC,KAAK,EAAE,MAAgC,EAAE,EAAE;MACxD,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC;MAC9C,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;MACxB,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;IAC9B,CAAC;GACF;CACF,CAAC,CAAC;AACH,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,GAAG,cAAc,CAAC,OAAO,CAAC;AACvD,eAAe,cAAc,CAAC,OAAO,CAAC","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport interface Languages {\r\n  entries: { [key: string]: any };\r\n  direction: 'ltr' | 'rtl';\r\n}\r\n\r\nconst initialState: Languages = {\r\n  entries: {},\r\n  direction: 'ltr',\r\n};\r\n\r\nexport const languagesSlice = createSlice({\r\n  name: 'languages',\r\n  initialState,\r\n  reducers: {\r\n    addLanguages: (state, action: PayloadAction<Languages>) => {\r\n      const { direction, entries } = action.payload;\r\n      state.entries = entries;\r\n      state.direction = direction;\r\n    },\r\n  },\r\n});\r\nexport const { addLanguages } = languagesSlice.actions;\r\nexport default languagesSlice.reducer;\r\n"]}
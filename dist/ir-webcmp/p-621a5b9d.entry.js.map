{"version":3,"names":["IrButton","connectedCallback","disconnectedCallback","render","block","this","btn_block","h","onClick","clickHanlder","emit","class","btn_color","size","textSize","type","btn_type","icon","text"],"sources":["src/components/ir-button/ir-button.tsx"],"sourcesContent":["import { Component, Prop, Event, EventEmitter, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-button',\r\n})\r\nexport class IrButton {\r\n  @Prop() name: string;\r\n  @Prop() text;\r\n  @Prop() icon = 'ft-save';\r\n  @Prop() btn_color: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\r\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() btn_block = true;\r\n  @Prop() btn_disabled = false;\r\n  @Prop() btn_type = 'button';\r\n\r\n  connectedCallback() {}\r\n  disconnectedCallback() {}\r\n  @Event({ bubbles: true, composed: true }) clickHanlder: EventEmitter<any>;\r\n\r\n  render() {\r\n    let block = '';\r\n    if (this.btn_block) {\r\n      block = 'btn-block';\r\n    }\r\n    return (\r\n      <button\r\n        onClick={() => {\r\n          this.clickHanlder.emit();\r\n        }}\r\n        class={`btn btn-${this.btn_color} btn-${this.size} text-${this.textSize} ${block}`}\r\n        type={this.btn_type}\r\n      >\r\n        <i class={this.icon}></i>&nbsp;{this.text}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"wDAKaA,EAAQ,M,sHAGJ,U,eAC6F,U,UACzE,K,cACI,K,eACnB,K,kBACG,M,cACJ,Q,CAEnB,iBAAAC,GAAiB,CACjB,oBAAAC,GAAoB,CAGpB,MAAAC,GACE,IAAIC,EAAQ,GACZ,GAAIC,KAAKC,UAAW,CAClBF,EAAQ,W,CAEV,OACEG,EAAA,UACEC,QAAS,KACPH,KAAKI,aAAaC,MAAM,EAE1BC,MAAO,WAAWN,KAAKO,iBAAiBP,KAAKQ,aAAaR,KAAKS,YAAYV,IAC3EW,KAAMV,KAAKW,UAEXT,EAAA,KAAGI,MAAON,KAAKY,OAAU,IAAOZ,KAAKa,K"}
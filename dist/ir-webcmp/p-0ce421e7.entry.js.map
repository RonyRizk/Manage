{"version":3,"names":["iglApplicationInfoCss","IglApplicationInfo","this","userRate","componentWillLoad","console","log","guestInfo","isRateModified","rateType","rate","dateDifference","guestData","Object","assign","roomId","defaultGuestRoomId","roomsList","filter","e","id","toString","length","preference","defaultGuestPreference","updateRoomList","componentDidLoad","timeout","setTimeout","updateData","disconnectedCallback","clearTimeout","handleSelctedUnits","units","selectedUnits","index","filterdRoomList","includes","dataUpdateEvent","emit","key","guestRefKey","data","handleDataChange","value","find","room","name","handleGuestNameChange","event","guestName","target","handleButtonClicked","detail","isButtonPressed","render","h","Host","class","bookingType","roomCategoryName","ratePlanName","replace","message","cancelation","guarantee","adult_child_offering","v4","type","placeholder","locales","entries","Lcz_GuestFirstnameAndLastname","onInput","required","calendar_data","is_frontdesk_enabled","onChange","selected","Lcz_Assignunits","map","is_bed_configuration_enabled","Lcz_BedConfiguration","bedPreferenceType","CODE_NAME","CODE_VALUE_EN","getCurrencySymbol","currency","code","Number","toFixed","Lcz_Stay","iglBlockDatesViewCss","IglBlockDatesView","blockDatesData","RELEASE_AFTER_HOURS","OPTIONAL_REASON","OUT_OF_SERVICE","releaseList","bookingService","BookingService","setToken","token","getBlockedInfo","defaultData","parseInt","emitData","error","handleOptionalReason","handleReleaseAfterChange","evt","entryDate","undefined","renderPage","getReleaseHoursString","dt","Date","entryHour","entryMinute","setHours","getHours","getMinutes","toLocaleString","month","getDate","formatNumber","handleOutOfService","checked","renderAgain","fromDate","from_date","dateOption","showDateDifference","to_date","toDate","isEventHover","Lcz_Reason","Lcz_OutOfservice","Lcz_Or","Lcz_OptionalReason","Lcz_AutomaticReleaseIn","releaseItem","Lcz_On","IglBookPropertyService","setBookingInfoFromAutoComplete","context","res","bookedByInfoData","guest","email","firstName","first_name","lastName","last_name","countryId","country_id","isdCode","contactNumber","mobile","selectedArrivalTime","arrival","emailGuest","subscribe_to_news_letter","remark","cardNumber","cardHolderName","expiryMonth","expiryYear","bookingNumber","booking_nbr","rooms","resetRoomsInfoAndMessage","roomsInfo","onDataRoomUpdate","isEdit","isEditBooking","changedKey","roomCategoryKey","roomCategoryId","ratePlanKey","ratePlanId","shouldClearData","Map","initializeRoomCategoryIfNeeded","has","get","applyBookingEditToSelectedRoom","setSelectedRoomData","cleanupEmptyData","set","selectedRatePlans","totalRooms","inventory","delete","Array","fill","size","clear","prepareBookUserServiceParams","check_in","sourceOption","arrivalTime","isEventType","getArrivalTimeForBooking","bookingData","ARRIVAL","pr_id","PR_ID","BOOKING_NUMBER","ROOMS","identifier","IDENTIFIER","dateRangeData","propertyid","GUEST","getBookingPreferenceRoomId","hasOwnProperty","getRoomCategoryByRoomId","_a","roomCategory","RATE_TYPE","setEditingRoomInfo","category","room_id","RATE_PLAN_ID","adultCount","ADULTS_COUNT","RATE","RATE_PLAN","NAME","iglBookPropertyCss","IglBookProperty","initialRoomIds","showSplitBookingOption","sourceOptions","ratePricingMode","bookPropertyService","eventsService","EventsService","adult","child","handleKeyDown","closeWindow","document","addEventListener","removeEventListener","clearBooking","stopImmediatePropagation","stopPropagation","handleSpiltBookingSelected","getExposedBooking","language","source","defaultDateRange","FROM_DATE","TO_DATE","bind","setupEntries","fetchSetupEntries","setSourceOptions","allowedBookingSources","setOtherProperties","adultChildCount","CHILDREN_COUNT","roomName","roomTypeId","event_type","page","isGuestDataIncomplete","isButtonDisabled","isValidProperty","property","comparedBy","bookingSource","description","tag","SOURCE","handleAdultChildChange","initializeBookingAvailability","room_type_ids","getBookingAvailability","roomtypes","physicalrooms","getSplitBookings","splitBookingEvents","closeBookingWindow","onDateRangeSelect","opt","dateToFormattedString","handleBlockDateUpdate","handleGuestInfoUpdate","handleBookedByInfoUpdate","handleSourceDropDown","selectedSource","gotoSplitPageTwo","gotoPage","showSplitBooking","getPageBlockDatesView","Fragment","fromDateStr","toDateStr","ENTRY_DATE","onDataUpdateEvent","onClick","Lcz_Cancel","handleBlockDate","Lcz_Blockdates","bookUser","buttonName","animateIrSelect","_b","animateIrButton","toast","Lcz_SelectRatePlan","title","handlePageTwoDataUpdateEvent","releaseData","result","blockUnit","NOTES","STAY_STATUS_CODE","DESCRIPTION","blockedUnit","transformNewBLockedRooms","blockedCreated","setLoadingState","isLoading","STATUS_CODE","deleteEvent","POOL","serviceParams","resetBookingData","resetLoadingState","assign_units","ARRIVAL_TIME","onRoomDataUpdate","getCurrentPage","BLOCK_DATES_TITLE","TITLE","onIconClickHandler","slot","xmlns","viewBox","height","width","d","defaultDaterange","eventType","selectedRooms","adultChildConstraints","onRoomsDataUpdate","propertyId","showPaymentDetails","selectedGuestData","countryNodeList","defaultGuestData","isEditOrAddRoomEvent","iglBookPropertyContainerCss","IglBookPropertyContainer","roomService","RoomService","setRoomsData","roomServiceResp","roomsData","My_Result","forEach","expanded","calendarData","initializeApp","roomResponse","languageTexts","countriesList","Promise","all","fetchData","fetchLanguage","getCountries","direction","allowed_payment_methods","paymentMethods","allowed_booking_sources","adult_child_constraints","calendar_legends","legendData","paymentCodesToShow","some","method","baseurl","axios","defaults","baseURL","ticket","ticketChanged","handleCloseBookingWindow","bookingItem","handleTriggerClicked","tomorrow","setDate","EMAIL","ID","PHONE","REFERENCE_TYPE","Lcz_NewBooking","onResetBookingData","onCloseBookingWindow","initialState","state","interceptor_requests","onCalendarDatesChange","createStore","isRequestPending","url","iglBookPropertyFooterCss","IglBookPropertyFooter","editNext","label","renderButton","disabled","shouldRenderTwoButtons","buttonClicked","Lcz_Next","iglBookPropertyHeaderCss","IglBookPropertyHeader","getSplitBookingList","Lcz_Tobooking","keys","moment","bookingDataDefaultDateRange","format","Lcz_BookingNumber","onComboboxValue","spiltBookingSelected","isSplitBooking","getSourceNode","Lcz_Source","sourceDropDownChange","option","obj","adultChild","getAdultChildConstraints","Lcz_NumberOfGuests","onSelectChange","select_id","firstOption","Lcz_AdultsCaption","LabelAvailable","from","adult_max_nbr","_","i","text","child_max_nbr","renderChildCaption","btn_id","icon","Lcz_Check","onClickHanlder","maxAge","child_max_age","years","Lcz_Years","Lcz_Year","Lcz_ChildCaption","Lcz_ChooseBookingNumber","position","initialToDate","initialFromDate","selectedFromDate","selectedToDate","isBefore","isAfter","Lcz_CheckInDateShouldBeMAx","Lcz_PlzSelectNumberOfGuests","minDate","getTime","showSourceNode","dateLabel","Lcz_Dates","tax_statement","iglBookingOverviewPageCss","IglBookingOverviewPage","splitBookingId","splitBookings","roomInfo","isBookDisabled","roomTypeData","roomInfoId","roomsDataUpdate","iglBookingRoomRatePlanCss","IglBookingRoomRatePlan","initialRateValue","getAvailableRooms","assignable_units","unit","Is_Fully_Available","push","updateSelectedRatePlan","ratePlanData","disableForm","shouldBeDisabled","selectedData","is_closed","totalAvailableRooms","physicalRooms","setAvailableRooms","availableRooms","selectedRoom","sort","a","b","getSelectedOffering","variations","variation","amount","adult_nbr","childrenCount","child_nbr","defaultSelectedRate","ratePlanDataChanged","newData","handleRateDaysUpdate","selectedOffering","handleInput","inputElement","inputValue","validDecimalNumber","test","substring","updateOffering","updateRate","updateGenericData","offering","numericValue","bookProperty","gotoSplitPageTwoEvent","renderRate","split","isInputFocused","onFocus","onBlur","Lcz_Rate","Lcz_Current","Lcz_Select","Lcz_Book","iglBookingRoomsCss","IglBookingRooms","validBookingTypes","initializeRoomData","rateplans","roomsDistributions","calculateInitialDistributions","handleRoomTypeData","distributions","selectedIndexes","sum","updatedData","handleTotalRoomsUpdate","newValue","updateRatePlanTotalRooms","ratePlanIndex","calculateTotalSelectedRoomsExcludingIndex","excludedIndex","reduce","acc","idx","newRoomsDistributions","totalSelectedRoomsExcludingCurrent","JSON","stringify","isValidBookingType","ratePlan","defaultRoomId","iglDateRangeCss","IglDateRange","totalNights","getStringDateFormat","getFullYear","getMonth","getFormattedDateString","calculateTotalNights","handleDateSelectEvent","calculateDaysBetweenDates","toLowerCase","dateSelectEvent","handleDateChange","start","end","maxDate","autoApply","onDateChanged","withDateDifference","Lcz_Nights","Lcz_Night","iglPagetwoCss","IglPagetwo","initializeGuestData","selectedBookedByData","total","newSelectedUnits","getRate","rate_plan","TOTAL_PRICE","handleOnApplicationInfoDataUpdateEvent","categoryIdKey","updatedUnits","handleEventData","Lcz_TotalPrice","bed_preference","Lcz_Back","btn_color","btn_styles","Lcz_Save","iglPropertyBookedByCss","IglPropertyBookedBy","arrivalTimeList","expiryMonths","expiryYears","currentMonth","assignCountryCode","initializeExpiryYears","initializeDateData","populateBookedByData","currentYear","country","getUserDefaultCountry","bookedByData","foundTime","time","handleNumberInput","numericRegex","handleEmailInput","isValidEmail","checkUser","getUserInfo","emailId","emailPattern","handleComboboxChange","clearEvent","Lcz_BookedBy","danger_border","Lcz_FindEmailAddress","onInputCleared","Lcz_FirstName","Lcz_LastName","Lcz_Country","countryNode","Lcz_MobilePhone","Lcz_Isd","phone_prefix","Lcz_ContactNumber","Lcz_YourArrivalTime","Lcz_AnyMessageForUs","rows","Lcz_CardNumber","pattern","Lcz_CardHolderName","Lcz_ExpiryDate","year","htmlFor","Lcz_EmailTheGuest","irAutocompleteCss","IrAutocomplete","no_result_found","Lcz_NoResultsFound","dataSize","itemHeight","getHeightOfPElement","preventDefault","selectedIndex","adjustScrollPosition","selectItem","inputRef","blur","isComboBoxVisible","combobox","el","querySelector","pItem","offsetHeight","visibleHeight","margin","itemTotalHeight","selectedPosition","newScrollTop","Math","max","min","scrollHeight","scrollTo","top","behavior","isItemSelected","comboboxValue","resetCombobox","debounceFetchData","debounceTimer","duration","fetchExposedGuest","fetchExposedBookings","handleInputChange","handleDocumentClick","contains","handleBlur","inputFocused","isDropdownItem","activeElement","inputCleared","element","closest","_c","_d","handleFocus","handleItemKeyDown","renderDropdown","role","onKeyDown","tabIndex","clearInput","withblur","inputId","ref","irButtonCss","IrButton","handleButtonAnimation","buttonEl","classList","remove","add","blockClass","btn_block","clickHanlder","textSize","btn_type","btn_disabled","onlineResources","isCSS","link","IrCommon","parseRefs","initializeStyles","hrefsChanged","extraResources","resources","parse","appendTag","tagName","attributes","createElement","selectorParts","attr","setAttribute","selector","join","existingTag","head","appendChild","href","rel","isJS","src","irDatePickerCss","IrDatePicker","days","dateRangeInput","$","daterangepicker","singleDatePicker","opens","startDate","endDate","maxSpan","locale","separator","applyLabel","cancelLabel","fromLabel","toLabel","customRangeLabel","weekLabel","daysOfWeek","monthNames","firstDay","dateChanged","irDateViewCss","IrDateView","initializeDates","handleFromDateChange","newVal","oldVal","handleToDateChange","convertDate","dates","date_diffrence","date","isMoment","irIconCss","IrIcon","iconClickHandler","irInterceptorCss","IrInterceptor","setupAxiosInterceptors","interceptors","request","use","handleRequest","handleError","response","handleResponse","extractEndpoint","isHandledEndpoint","handledEndpoints","config","extractedUrl","ExceptionMsg","trim","Error","reject","irLoadingScreenCss","IrLoadingScreen","irSelectCss","IrSelect","count","watchHandler","valid","watchHandler2","initial","selectEl","componentwillload","handleSelectChange","checkValidity","selectedValue","selectChange","className","labelWidth","labelColor","labelPosition","labelBackground","labelBorder","selectStyle","selectContainerStyle","selectStyles","showFirstOption","item","irToastCss","IrToast","onToast","showToast","toastrOptions","positionClass","closeButton","timeOut","toastr","success","irTooltipCss","IrTooltip","toggleOpen","shouldOpen","tooltipTimeout","open","onMouseEnter","onMouseLeave","innerHTML"],"sources":["src/components/igloo-calendar/igl-application-info/igl-application-info.css?tag=igl-application-info&encapsulation=scoped","src/components/igloo-calendar/igl-application-info/igl-application-info.tsx","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.css?tag=igl-block-dates-view&encapsulation=scoped","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property.service.ts","src/components/igloo-calendar/igl-book-property/igl-book-property.css?tag=igl-book-property&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property.tsx","src/components/igl-book-property-container/igl-book-property-container.css?tag=igl-book-property-container&encapsulation=scoped","src/components/igl-book-property-container/igl-book-property-container.tsx","src/stores/ir-interceptor.store.ts","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.css?tag=igl-book-property-footer&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.css?tag=igl-book-property-header&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.css?tag=igl-booking-overview-page&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.tsx","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.css?tag=igl-booking-room-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.tsx","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.css?tag=igl-booking-rooms&encapsulation=scoped","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.tsx","src/components/igloo-calendar/igl-date-range/igl-date-range.css?tag=igl-date-range&encapsulation=scoped","src/components/igloo-calendar/igl-date-range/igl-date-range.tsx","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.css?tag=igl-pagetwo&encapsulation=scoped","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.tsx","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.css?tag=igl-property-booked-by&encapsulation=scoped","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.tsx","src/components/ir-autocomplete/ir-autocomplete.css?tag=ir-autocomplete&encapsulation=scoped","src/components/ir-autocomplete/ir-autocomplete.tsx","src/components/ir-button/ir-button.css?tag=ir-button&encapsulation=scoped","src/components/ir-button/ir-button.tsx","src/common/ir.common.resources.ts","src/components/ir-common/ir-common.tsx","src/components/ir-date-picker/ir-date-picker.css?tag=ir-date-picker&encapsulation=scoped","src/components/ir-date-picker/ir-date-picker.tsx","src/components/ir-date-view/ir-date-view.css?tag=ir-date-view&encapsulation=scoped","src/components/ir-date-view/ir-date-view.tsx","src/components/ir-icon/ir-icon.css?tag=ir-icon&encapsulation=scoped","src/components/ir-icon/ir-icon.tsx","src/components/ir-interceptor/ir-interceptor.css?tag=ir-interceptor&encapsulation=scoped","src/components/ir-interceptor/ir-interceptor.tsx","src/components/ir-loading-screen/ir-loading-screen.css?tag=ir-loading-screen&encapsulation=scoped","src/components/ir-loading-screen/ir-loading-screen.tsx","src/components/ir-select/ir-select.css?tag=ir-select&encapsulation=scoped","src/components/ir-select/ir-select.tsx","src/components/ir-toast/ir-toast.css?tag=ir-toast&encapsulation=scoped","src/components/ir-toast/ir-toast.tsx","src/components/ir-tooltip/ir-tooltip.css?tag=ir-tooltip&encapsulation=scoped","src/components/ir-tooltip/ir-tooltip.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n@media only screen and (min-width: 908px) {\r\n  .aplicationInfoContainer {\r\n    max-width: 80%;\r\n  }\r\n  .guest-info-container {\r\n    max-width: 300px;\r\n  }\r\n\r\n  .preference-select-container {\r\n    max-width: 250px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, Watch, State, Listen } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { getCurrencySymbol } from '../../../utils/utils';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-application-info',\r\n  styleUrl: 'igl-application-info.css',\r\n  scoped: true,\r\n})\r\nexport class IglApplicationInfo {\r\n  @Prop() guestInfo: { [key: string]: any };\r\n  @Prop() currency;\r\n  @Prop({ reflect: true, mutable: true }) roomsList: { [key: string]: any }[] = [];\r\n  @Prop() guestRefKey: string;\r\n  @Prop() bedPreferenceType = [];\r\n  @Prop() selectedUnits: number[] = [];\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() defaultGuestPreference: number | null;\r\n  @Prop() index: number;\r\n  @Prop() defaultGuestRoomId: number;\r\n  @Prop() dateDifference: number;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() filterdRoomList = [];\r\n  @State() isButtonPressed = false;\r\n  @State() guestData: { [key: string]: any };\r\n  private userRate = 0;\r\n  private timeout: NodeJS.Timeout;\r\n\r\n  componentWillLoad() {\r\n    console.log(this.guestInfo);\r\n    if (this.guestInfo.isRateModified && this.guestInfo.rateType === 2) {\r\n      this.userRate = this.guestInfo.rate * this.dateDifference;\r\n    } else {\r\n      this.userRate = this.guestInfo.rate;\r\n    }\r\n    this.guestData = this.guestInfo ? { ...this.guestInfo } : {};\r\n    this.guestData.roomId = '';\r\n    if (this.defaultGuestRoomId && this.roomsList.filter(e => e.id.toString() === this.defaultGuestRoomId.toString()).length > 0) {\r\n      this.guestData.roomId = this.defaultGuestRoomId;\r\n    }\r\n    this.guestData.preference = +this.defaultGuestPreference || '';\r\n    this.updateRoomList();\r\n  }\r\n  componentDidLoad() {\r\n    this.timeout = setTimeout(() => {\r\n      this.updateData();\r\n    }, 200);\r\n  }\r\n  disconnectedCallback() {\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  @Watch('selectedUnits')\r\n  async handleSelctedUnits() {\r\n    this.updateRoomList();\r\n  }\r\n  updateRoomList() {\r\n    const units = [...this.selectedUnits];\r\n    units[this.index] = -1;\r\n    this.filterdRoomList = this.roomsList.filter(e => !units.includes(e.id));\r\n  }\r\n  updateData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      guestRefKey: this.guestRefKey,\r\n      data: { ...this.guestData },\r\n    });\r\n  }\r\n\r\n  handleDataChange(key, value) {\r\n    this.guestData[key] = +value;\r\n    if (value === '') {\r\n      this.guestData['roomName'] = value;\r\n    }\r\n    if (key === 'roomId' && value !== '') {\r\n      this.guestData['roomName'] = this.filterdRoomList.find(room => room.id === +value).name || '';\r\n    }\r\n    console.log('guest data', this.guestData);\r\n    this.updateData();\r\n  }\r\n\r\n  handleGuestNameChange(event) {\r\n    // console.log(\"On Guest name Change::\", event.target.value);\r\n    this.guestData.guestName = event.target.value;\r\n    this.updateData();\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n      case 'save':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    //console.log(this.guestInfo, this.roomsList);\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-1 \">\r\n          <div class=\" mb-1 \">\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING' ? (\r\n              <span class=\"h5 mr-1\">{this.guestInfo.roomCategoryName}</span>\r\n            ) : null}\r\n            <span class=\" font-weight-bold\">\r\n              {this.guestInfo.ratePlanName.replace(this.guestInfo.roomCategoryName + '/', '')}\r\n              <ir-tooltip class=\" mr-1\" message={this.guestInfo.cancelation + this.guestInfo.guarantee}></ir-tooltip>\r\n            </span>\r\n            <span>{this.guestInfo.adult_child_offering}</span>\r\n          </div>\r\n\r\n          <div class=\"d-flex flex-column flex-md-row m-0 p-0 align-items-md-center aplicationInfoContainer \">\r\n            <div class=\"mr-1 flex-fill guest-info-container\">\r\n              <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class={`form-control ${this.isButtonPressed && this.guestData.guestName === '' && 'border-danger'}`}\r\n                placeholder={locales.entries.Lcz_GuestFirstnameAndLastname}\r\n                name=\"guestName\"\r\n                onInput={event => this.handleGuestNameChange(event)}\r\n                required\r\n                value={this.guestData.guestName}\r\n              />\r\n            </div>\r\n            <div class={'mt-1 mt-md-0 d-flex align-items-center flex-fill'}>\r\n              {calendar_data.is_frontdesk_enabled && (this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') ? (\r\n                <div class=\"mr-1 p-0 flex-fill  preference-select-container\">\r\n                  <select class={`form-control  input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('roomId', (event.target as HTMLInputElement).value)}>\r\n                    <option value=\"\" selected={this.guestData.roomId === ''}>\r\n                      {locales.entries.Lcz_Assignunits}\r\n                    </option>\r\n                    {this.filterdRoomList.map(room => (\r\n                      <option value={room.id} selected={+this.guestData.roomId === room.id}>\r\n                        {room.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              ) : null}\r\n\r\n              {this.guestData.is_bed_configuration_enabled && (\r\n                <div class=\"mr-1 flex-fill\">\r\n                  <select\r\n                    class={`form-control input-sm ${this.isButtonPressed && (this.guestData.preference === '' || this.guestData.preference === 0) && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('preference', (event.target as HTMLInputElement).value)}\r\n                  >\r\n                    <option value=\"\" selected={this.guestData.preference === ''}>\r\n                      {locales.entries.Lcz_BedConfiguration}\r\n                    </option>\r\n                    {this.bedPreferenceType.map(data => (\r\n                      <option value={+data.CODE_NAME} selected={this.guestData.preference === +data.CODE_NAME}>\r\n                        {data.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              )}\r\n              <div class=\"\">\r\n                {getCurrencySymbol(this.currency.code) + Number(this.userRate).toFixed(2)}/{locales.entries.Lcz_Stay}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n:host .controlContainer {\r\n  width: 24px;\r\n}\r\n\r\n:host .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n\r\n.releaseTime {\r\n  padding-left: 5px;\r\n}\r\n.out-of-service-label {\r\n  margin-left: 5px !important;\r\n}\r\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries } from '../../../models/IBooking';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-block-dates-view',\r\n  styleUrl: 'igl-block-dates-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglBlockDatesView {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() fromDate: string;\r\n  @Prop() toDate: string;\r\n  @Prop({ mutable: true }) entryDate: string;\r\n  @Prop() entryHour: number;\r\n  @Prop() isEventHover: boolean = false;\r\n  @Prop() entryMinute: number;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private blockDatesData: { [key: string]: any } = {\r\n    RELEASE_AFTER_HOURS: 0,\r\n    OPTIONAL_REASON: '',\r\n    OUT_OF_SERVICE: false,\r\n  }; // Change of property name might require updates in booking-event-hover\r\n  private releaseList: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n\r\n  async componentWillLoad() {\r\n    try {\r\n      this.bookingService.setToken(calendar_data.token);\r\n      this.releaseList = await this.bookingService.getBlockedInfo();\r\n      if (this.defaultData) {\r\n        this.blockDatesData = { ...this.defaultData };\r\n      } else {\r\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(this.releaseList[0].CODE_NAME);\r\n        this.emitData();\r\n      }\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleOptionalReason(event) {\r\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\r\n    this.emitData();\r\n  }\r\n\r\n  handleReleaseAfterChange(evt) {\r\n    if (this.entryDate) this.entryDate = undefined;\r\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  emitData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'blockDatesData',\r\n      data: { ...this.blockDatesData },\r\n    });\r\n  }\r\n\r\n  getReleaseHoursString() {\r\n    // console.log(\"entry date\", this.entryDate);\r\n    // console.log(\"blocked date data\", this.blockDatesData);\r\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\r\n    if (this.entryDate && this.entryHour && this.entryMinute) {\r\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\r\n    } else {\r\n      dt.setHours(dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS, dt.getMinutes(), 0, 0);\r\n    }\r\n\r\n    return dt.toLocaleString('default', { month: 'short' }) + ' ' + dt.getDate() + ', ' + this.formatNumber(dt.getHours()) + ':' + this.formatNumber(dt.getMinutes());\r\n  }\r\n  formatNumber(value: number) {\r\n    return value < 10 ? `0${value}` : value;\r\n  }\r\n  handleOutOfService(evt) {\r\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\r\n    if (this.blockDatesData.OUT_OF_SERVICE) {\r\n      this.blockDatesData.OPTIONAL_REASON = '';\r\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\r\n    }\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    console.log(this.fromDate);\r\n    return (\r\n      <Host>\r\n        <div class={`m-0 p-0 mb-1`}>\r\n          <div class=\"text-left p-0\">\r\n            <ir-date-view from_date={this.fromDate} dateOption=\"DD MMM YYYY\" showDateDifference={false} to_date={this.toDate}></ir-date-view>\r\n          </div>\r\n        </div>\r\n        <div class={` mb-1 text-left ${this.isEventHover && 'p-0'}`}>\r\n          <div class=\"mb-1 \">\r\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">{locales.entries.Lcz_Reason}:</label>\r\n            <div class=\"p-0 m-0 pr-1  controlContainer checkBoxContainer d-inline-block align-middle\">\r\n              <input class=\"form-control\" type=\"checkbox\" checked={this.blockDatesData.OUT_OF_SERVICE} id=\"userinput6\" onChange={event => this.handleOutOfService(event)} />\r\n            </div>\r\n            <span class=\"align-middle out-of-service-label\">{locales.entries.Lcz_OutOfservice}</span>\r\n          </div>\r\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\r\n            <div>\r\n              <div class=\"mb-1 d-flex  align-items-center\">\r\n                <span class=\"align-middle\">{locales.entries.Lcz_Or} </span>\r\n                <div class=\"d-inline-flex col pr-0 align-middle\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_OptionalReason}\r\n                    id=\"optReason\"\r\n                    value={this.blockDatesData.OPTIONAL_REASON}\r\n                    onInput={event => this.handleOptionalReason(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-1 w-100 pr-0 \">\r\n                <span class=\"text-bold-700 font-medium-1\">{locales.entries.Lcz_AutomaticReleaseIn}: </span>\r\n                <div class=\"d-inline-block\">\r\n                  <select class=\"form-control input-sm\" id=\"zSmallSelect\" onChange={evt => this.handleReleaseAfterChange(evt)}>\r\n                    {this.releaseList.map(releaseItem => (\r\n                      <option value={+releaseItem.CODE_NAME} selected={this.blockDatesData.RELEASE_AFTER_HOURS == +releaseItem.CODE_NAME}>\r\n                        {releaseItem.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\r\n                  <div class=\"d-inline-block releaseTime\">\r\n                    <em>\r\n                      {locales.entries.Lcz_On} {this.getReleaseHoursString()}\r\n                    </em>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { BookUserParams } from '../../../models/igl-book-property';\r\n//import { BookingService } from '../../../services/booking.service';\r\n\r\nexport class IglBookPropertyService {\r\n  public setBookingInfoFromAutoComplete(context, res) {\r\n    context.bookedByInfoData = {\r\n      id: res.guest.id,\r\n      email: res.guest.email,\r\n      firstName: res.guest.first_name,\r\n      lastName: res.guest.last_name,\r\n      countryId: res.guest.country_id,\r\n      isdCode: res.guest.country_id.toString(),\r\n      contactNumber: res.guest.mobile,\r\n      selectedArrivalTime: res.arrival,\r\n      emailGuest: res.guest.subscribe_to_news_letter,\r\n      message: res.remark,\r\n      cardNumber: '',\r\n      cardHolderName: '',\r\n      expiryMonth: '',\r\n      expiryYear: '',\r\n      bookingNumber: res.booking_nbr,\r\n      rooms: res.rooms,\r\n      from_date: res.from_date,\r\n      to_date: res.to_date,\r\n    };\r\n  }\r\n\r\n  public resetRoomsInfoAndMessage(context) {\r\n    context.defaultData.roomsInfo = [];\r\n    context.message = '';\r\n  }\r\n\r\n  public onDataRoomUpdate(event: CustomEvent, selectedUnits: Map<string, Map<string, any>>, isEdit: boolean, isEditBooking: boolean, name: string) {\r\n    let units = selectedUnits;\r\n    const { data, key, changedKey } = event.detail;\r\n    const roomCategoryKey = `c_${data.roomCategoryId}`;\r\n    const ratePlanKey = `p_${data.ratePlanId}`;\r\n\r\n    if (this.shouldClearData(key)) {\r\n      units = new Map();\r\n    }\r\n\r\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey, units);\r\n\r\n    if (isEditBooking) {\r\n      if (changedKey === 'rate') {\r\n        if (units.has(roomCategoryKey) && units.get(roomCategoryKey).has(ratePlanKey)) {\r\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n        }\r\n      } else {\r\n        if (changedKey !== 'rateType') {\r\n          if (changedKey === 'adult_child_offering') {\r\n            if (units.has(roomCategoryKey) && selectedUnits.get(roomCategoryKey).has(ratePlanKey)) {\r\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n            }\r\n          } else {\r\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data, units);\r\n    }\r\n    this.cleanupEmptyData(roomCategoryKey, units);\r\n    return units;\r\n  }\r\n\r\n  private shouldClearData(key: string | undefined): boolean {\r\n    return key === 'clearData' || key === 'EDIT_BOOKING';\r\n  }\r\n\r\n  private initializeRoomCategoryIfNeeded(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (!selectedUnits.has(roomCategoryKey)) {\r\n      selectedUnits.set(roomCategoryKey, new Map());\r\n    }\r\n  }\r\n  private setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any, selectedUnits: Map<string, Map<string, any>>) {\r\n    let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n    if (data.totalRooms === 0 || data.inventory === 0) {\r\n      selectedRatePlans.delete(ratePlanKey);\r\n    } else {\r\n      selectedUnits.set(roomCategoryKey, selectedRatePlans.set(ratePlanKey, { ...data, selectedUnits: Array(data.totalRooms).fill(-1) }));\r\n    }\r\n  }\r\n\r\n  private cleanupEmptyData(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (selectedUnits.has(roomCategoryKey)) {\r\n      let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n      if (selectedRatePlans.size === 0) {\r\n        selectedUnits.delete(roomCategoryKey);\r\n      }\r\n    }\r\n  }\r\n  private applyBookingEditToSelectedRoom(roomCategoryKey: string, ratePlanKey: string, data, selectedUnits: Map<string, Map<string, any>>, name: string, isEdit: boolean) {\r\n    selectedUnits.clear();\r\n    let res = {};\r\n    if (isEdit) {\r\n      res = { ...data, guestName: name || '', roomId: '' };\r\n    } else {\r\n      res = { ...data };\r\n    }\r\n    selectedUnits.set(roomCategoryKey, new Map().set(ratePlanKey, res));\r\n  }\r\n  async prepareBookUserServiceParams(context, check_in, sourceOption): Promise<BookUserParams> {\r\n    try {\r\n      const arrivalTime = context.isEventType('EDIT_BOOKING')\r\n        ? context.getArrivalTimeForBooking()\r\n        : context.isEventType('ADD_ROOM')\r\n        ? context.bookingData.ARRIVAL.code\r\n        : context.isEventType('SPLIT_BOOKING')\r\n        ? context.bookedByInfoData.selectedArrivalTime.code\r\n        : '';\r\n      const pr_id = context.isEventType('BAR_BOOKING') ? context.bookingData.PR_ID : undefined;\r\n      const bookingNumber =\r\n        context.isEventType('EDIT_BOOKING') || context.isEventType('ADD_ROOM')\r\n          ? context.bookingData.BOOKING_NUMBER\r\n          : context.isEventType('SPLIT_BOOKING')\r\n          ? context.bookedByInfoData.bookingNumber\r\n          : undefined;\r\n      let rooms = [];\r\n      if (context.isEventType('ADD_ROOM')) {\r\n        // const result = await (context.bookingService as BookingService).getExoposedBooking(bookingNumber, context.language);\r\n        //rooms = result.rooms;\r\n        rooms = context.bookingData.ROOMS;\r\n      } else if (context.isEventType('SPLIT_BOOKING')) {\r\n        rooms = context.bookedByInfoData.rooms;\r\n      } else if (context.isEventType('EDIT_BOOKING')) {\r\n        rooms = context.defaultData.ROOMS.filter(room => room.identifier !== context.bookingData.IDENTIFIER);\r\n      }\r\n      console.log('rooms', rooms);\r\n\r\n      return [\r\n        context.bookedByInfoData,\r\n        check_in,\r\n        new Date(context.dateRangeData.fromDate),\r\n        new Date(context.dateRangeData.toDate),\r\n        context.guestData,\r\n        context.dateRangeData.dateDifference,\r\n        sourceOption,\r\n        context.propertyid,\r\n        rooms,\r\n        context.currency,\r\n        bookingNumber,\r\n        context.bookingData.GUEST,\r\n        arrivalTime,\r\n        pr_id,\r\n        context.bookingData.IDENTIFIER,\r\n      ];\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  private getBookingPreferenceRoomId(bookingData) {\r\n    return (bookingData.hasOwnProperty('PR_ID') && bookingData.PR_ID) || null;\r\n  }\r\n  private getRoomCategoryByRoomId(bookingData) {\r\n    return bookingData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.id === bookingData.RATE_TYPE;\r\n    });\r\n  }\r\n  public setEditingRoomInfo(bookingData, selectedUnits) {\r\n    console.log(bookingData, bookingData.roomsInfo);\r\n    console.log(this.getBookingPreferenceRoomId(bookingData));\r\n    const category = this.getRoomCategoryByRoomId(bookingData);\r\n    const room_id = !category ? '' : `c_${category?.id}`;\r\n    const ratePlanId = `p_${bookingData.RATE_PLAN_ID}`;\r\n    const data = {\r\n      adultCount: bookingData.ADULTS_COUNT,\r\n      rate: bookingData.RATE,\r\n      rateType: bookingData.RATE_TYPE,\r\n      ratePlanId: bookingData.RATE_PLAN_ID,\r\n      roomCategoryId: category ? category.id : '',\r\n      roomCategoryName: category ? category.name : '',\r\n      totalRooms: 1,\r\n      ratePlanName: bookingData.RATE_PLAN,\r\n      roomId: bookingData.PR_ID,\r\n      guestName: bookingData.NAME,\r\n      cancelation: bookingData.cancelation,\r\n      guarantee: bookingData.guarantee,\r\n      adult_child_offering: bookingData.adult_child_offering,\r\n    };\r\n    selectedUnits.set(room_id, new Map().set(ratePlanId, data));\r\n  }\r\n}\r\n",":host {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 99;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n.block-date {\r\n  width: 100%;\r\n}\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n  width: 100vw;\r\n  overflow-y: auto;\r\n}\r\n.card {\r\n  top: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n@media only screen and (min-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 70%;\r\n  }\r\n}\r\n@media only screen and (min-width: 2000px) {\r\n  .sideWindow {\r\n    max-width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 768px) and (max-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 90%;\r\n  }\r\n}\r\n@media only screen and (min-width: 600px) and (max-width: 768px) {\r\n  .sideWindow {\r\n    max-width: 75%;\r\n  }\r\n}\r\n@media only screen and (min-width: 641px) {\r\n  .block-date {\r\n    max-width: 450px;\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h, Listen, Fragment } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { dateToFormattedString, getReleaseHoursString } from '../../../utils/utils';\r\nimport { IEntries, RoomBlockDetails, RoomBookingDetails } from '../../../models/IBooking';\r\nimport { IPageTwoDataUpdateProps } from '../../../models/models';\r\nimport { transformNewBLockedRooms } from '../../../utils/booking';\r\nimport { IglBookPropertyService } from './igl-book-property.service';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../models/igl-book-property';\r\nimport { EventsService } from '../../../services/events.service';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport { IToast } from '@/components/ir-toast/toast';\r\n\r\n@Component({\r\n  tag: 'igl-book-property',\r\n  styleUrls: ['igl-book-property.css'],\r\n  scoped: true,\r\n})\r\nexport class IglBookProperty {\r\n  @Prop() propertyid: number;\r\n  @Prop() allowedBookingSources: any;\r\n  @Prop() language: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() currency: { id: number; code: string };\r\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n\r\n  @State() adultChildCount: { adult: number; child: number } = {\r\n    adult: 0,\r\n    child: 0,\r\n  };\r\n  @State() renderAgain: boolean = false;\r\n  @State() dateRangeData: { [key: string]: any };\r\n  @State() defaultData: any;\r\n  @State() isLoading: string;\r\n  @State() buttonName = '';\r\n\r\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\r\n  @Event() bookingCreated: EventEmitter<{ pool?: string; data: RoomBookingDetails[] }>;\r\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\r\n  @Event() resetBookingData: EventEmitter<null>;\r\n\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n\r\n  private initialRoomIds: { roomName: string; ratePlanId: number; roomId: string; roomTypeId: string } | null = null;\r\n  private sourceOption: TSourceOption;\r\n  private page: string;\r\n  private showSplitBookingOption: boolean = false;\r\n  private sourceOptions: TSourceOptions[] = [];\r\n  private guestData: { [key: string]: any }[] = [];\r\n  private bookedByInfoData: { [key: string]: any } = {};\r\n  private blockDatesData: { [key: string]: any } = {};\r\n  private ratePricingMode: IEntries[] = [];\r\n  private selectedUnits: Map<string, Map<string, any>> = new Map();\r\n  private bedPreferenceType: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private bookPropertyService = new IglBookPropertyService();\r\n  private eventsService = new EventsService();\r\n  private defaultDateRange: { from_date: string; to_date: string };\r\n\r\n  handleKeyDown(e: KeyboardEvent) {\r\n    if (e.key === 'Escape') {\r\n      this.closeWindow();\r\n    } else return;\r\n  }\r\n  componentDidLoad() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  @Listen('inputCleared')\r\n  clearBooking(e: CustomEvent) {\r\n    if (this.isEventType('SPLIT_BOOKING')) {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      this.bookedByInfoData = {};\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n      this.renderPage();\r\n    }\r\n  }\r\n\r\n  @Listen('spiltBookingSelected')\r\n  async handleSpiltBookingSelected(e: CustomEvent<{ key: string; data: unknown }>) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation;\r\n    const { key, data } = e.detail;\r\n    if (key === 'select') {\r\n      const res = await this.bookingService.getExposedBooking((data as any).booking_nbr, this.language);\r\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\r\n      this.sourceOption = res.source;\r\n      this.renderPage();\r\n    } else if (key === 'blur' && data !== '') {\r\n      const res = await this.bookingService.getExposedBooking(data as string, this.language);\r\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\r\n      this.sourceOption = res.source;\r\n      this.renderPage();\r\n    }\r\n  }\r\n  async componentWillLoad() {\r\n    this.bookingService.setToken(calendar_data.token);\r\n    this.eventsService.setToken(calendar_data.token);\r\n    this.defaultDateRange = { from_date: this.bookingData.FROM_DATE, to_date: this.bookingData.TO_DATE };\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    if (!this.bookingData.defaultDateRange) {\r\n      return;\r\n    }\r\n    this.defaultData = this.bookingData;\r\n    this.dateRangeData = { ...this.defaultData.defaultDateRange };\r\n    try {\r\n      const setupEntries = await this.fetchSetupEntries();\r\n      console.log(setupEntries);\r\n      this.setSourceOptions(this.allowedBookingSources);\r\n      this.setOtherProperties(setupEntries);\r\n\r\n      if (this.isEventType('EDIT_BOOKING')) {\r\n        this.adultChildCount = {\r\n          adult: this.defaultData.ADULTS_COUNT,\r\n          child: this.defaultData.CHILDREN_COUNT,\r\n        };\r\n        this.initialRoomIds = {\r\n          roomName: this.defaultData.roomName,\r\n          ratePlanId: this.defaultData.RATE_PLAN_ID,\r\n          roomId: this.defaultData.PR_ID,\r\n          roomTypeId: this.defaultData.RATE_TYPE,\r\n        };\r\n        this.bookPropertyService.setEditingRoomInfo(this.defaultData, this.selectedUnits);\r\n      }\r\n      if (!this.isEventType('BAR_BOOKING')) {\r\n        this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n      }\r\n\r\n      if (this.defaultData.event_type === 'SPLIT_BOOKING') {\r\n        this.showSplitBookingOption = true;\r\n        this.page = 'page_one';\r\n      } else if (this.defaultData.event_type === 'BLOCK_DATES') {\r\n        this.page = 'page_block_date';\r\n      } else {\r\n        this.page = 'page_one';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching setup entries:', error);\r\n    }\r\n  }\r\n\r\n  async fetchSetupEntries() {\r\n    console.log('fetch setup entries');\r\n    return await this.bookingService.fetchSetupEntries();\r\n  }\r\n  isGuestDataIncomplete() {\r\n    //|| data.roomId === '' || data.roomId === 0 if the roomId is required\r\n    if (this.guestData.length === 0) {\r\n      return true;\r\n    }\r\n    console.log(this.guestData);\r\n    for (const data of this.guestData) {\r\n      if (data.guestName === '' || ((data.preference === '' || data.preference === 0) && data.is_bed_configuration_enabled)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled() {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.guestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      // const isCardDetails = ['cardNumber', 'cardHolderName', 'expiryMonth', 'expiryYear'].includes(key);\r\n      // if (!this.showPaymentDetails && isCardDetails) {\r\n      //   return false;\r\n      // }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      isValidProperty(this.guestData, 'guestName', '') ||\r\n      // isValidProperty(this.bookedByInfoData, 'isdCode', '') ||\r\n      // isValidProperty(this.bookedByInfoData, 'contactNumber', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'firstName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'lastName', '') ||\r\n      // isValidProperty(this.bookedByInfoData, 'countryId', -1) ||\r\n      isValidProperty(this.bookedByInfoData, 'selectedArrivalTime', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'email', '')\r\n    );\r\n  }\r\n\r\n  setSourceOptions(bookingSource: any[]) {\r\n    this.sourceOptions = bookingSource.map(source => ({\r\n      id: source.code,\r\n      value: source.description,\r\n      tag: source.tag,\r\n      type: source.type,\r\n    }));\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.sourceOption = { ...this.defaultData.SOURCE };\r\n    } else {\r\n      this.sourceOption = {\r\n        code: bookingSource[0].code,\r\n        description: bookingSource[0].description,\r\n        tag: bookingSource[0].tag,\r\n      };\r\n    }\r\n  }\r\n\r\n  setOtherProperties(res: any) {\r\n    this.ratePricingMode = res?.ratePricingMode;\r\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\r\n    this.bedPreferenceType = res.bedPreferenceType;\r\n  }\r\n  @Listen('adultChild')\r\n  handleAdultChildChange(event: CustomEvent) {\r\n    if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n    }\r\n    this.adultChildCount = { ...event.detail };\r\n  }\r\n\r\n  async initializeBookingAvailability(from_date: string, to_date: string) {\r\n    try {\r\n      const room_type_ids = this.defaultData.roomsInfo.map(room => room.id);\r\n      const data = await this.bookingService.getBookingAvailability(from_date, to_date, this.propertyid, this.adultChildCount, this.language, room_type_ids, this.currency);\r\n      if (!this.isEventType('EDIT_BOOKING')) {\r\n        this.defaultData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\r\n        this.defaultData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\r\n      }\r\n      this.defaultData = { ...this.defaultData, roomsInfo: data.roomtypes };\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n  getRoomCategoryByRoomId(roomId) {\r\n    return this.defaultData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.physicalrooms.find(room => room.id === +roomId);\r\n    });\r\n  }\r\n\r\n  getSplitBookings() {\r\n    return (this.defaultData.hasOwnProperty('splitBookingEvents') && this.defaultData.splitBookingEvents) || [];\r\n  }\r\n  closeWindow() {\r\n    this.dateRangeData = {};\r\n    this.closeBookingWindow.emit();\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  isEventType(key: string) {\r\n    return this.defaultData.event_type === key;\r\n  }\r\n  @Listen('dateSelectEvent')\r\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    if (opt.key === 'selectedDateRange') {\r\n      this.dateRangeData = opt.data;\r\n      if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.defaultData.roomsInfo = [];\r\n      } else if (this.adultChildCount.adult !== 0) {\r\n        this.initializeBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\r\n      }\r\n    }\r\n  }\r\n\r\n  handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.blockDatesData = opt.data;\r\n  }\r\n\r\n  handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt = event.detail;\r\n    if (opt.guestRefKey) {\r\n      if (this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.guestData[opt.guestRefKey] = {\r\n          ...opt.data,\r\n          roomId: this.defaultData.PR_ID,\r\n        };\r\n      } else this.guestData[opt.guestRefKey] = opt.data;\r\n    }\r\n  }\r\n\r\n  handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookedByInfoData = opt.value.data;\r\n  }\r\n  @Listen('sourceDropDownChange')\r\n  handleSourceDropDown(event: CustomEvent) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const value = event.detail;\r\n    const selectedSource = this.sourceOptions.find(opt => opt.id === value.toString());\r\n    this.sourceOption = {\r\n      code: value,\r\n      description: selectedSource.value || '',\r\n      tag: selectedSource.tag,\r\n    };\r\n  }\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\r\n  gotoSplitPageTwo() {\r\n    this.gotoPage('page_two');\r\n  }\r\n  gotoPage(gotoPage) {\r\n    this.page = gotoPage;\r\n    this.renderPage();\r\n  }\r\n\r\n  showSplitBooking() {\r\n    this.showSplitBookingOption = true;\r\n    this.gotoPage('page_one');\r\n  }\r\n\r\n  getPageBlockDatesView() {\r\n    return (\r\n      <Fragment>\r\n        <igl-block-dates-view\r\n          fromDate={this.dateRangeData.fromDateStr}\r\n          toDate={this.dateRangeData.toDateStr}\r\n          entryDate={this.defaultData.ENTRY_DATE}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"p-0 mb-1 mt-2 gap-30 d-flex align-items-center justify-content-between\">\r\n          <button class=\"btn btn-secondary flex-fill\" onClick={() => this.closeWindow()}>\r\n            {locales.entries.Lcz_Cancel}\r\n          </button>\r\n\r\n          <button class=\"btn btn-primary flex-fill\" onClick={() => this.handleBlockDate()}>\r\n            {locales.entries.Lcz_Blockdates}\r\n          </button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n  @Listen('buttonClicked')\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'save':\r\n        this.bookUser(false);\r\n        this.buttonName === 'save';\r\n        break;\r\n      case 'cancel':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.closeWindow();\r\n        break;\r\n      case 'back':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.gotoPage('page_one');\r\n        break;\r\n      case 'book':\r\n        this.bookUser(false);\r\n        this.buttonName = 'book';\r\n        break;\r\n      case 'bookAndCheckIn':\r\n        this.bookUser(true);\r\n        this.buttonName = 'bookAndCheckIn';\r\n        break;\r\n      case 'next':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        if (!this.adultChildCount?.adult) {\r\n          this.animateIrSelect.emit('adult_child_select');\r\n          break;\r\n        }\r\n        if (this.selectedUnits.size > 0) {\r\n          this.gotoPage('page_two');\r\n          break;\r\n        } else {\r\n          if (this.defaultData?.roomsInfo.length === 0) {\r\n            this.animateIrButton.emit('check_availability');\r\n            break;\r\n          }\r\n        }\r\n        this.toast.emit({\r\n          type: 'error',\r\n          description: locales.entries.Lcz_SelectRatePlan,\r\n          title: locales.entries.Lcz_SelectRatePlan,\r\n        });\r\n        break;\r\n      case 'check':\r\n        this.initializeBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (event.detail.key === 'propertyBookedBy') {\r\n      this.handleBookedByInfoUpdate(event);\r\n    } else {\r\n      this.handleGuestInfoUpdate(event);\r\n    }\r\n  }\r\n  async handleBlockDate() {\r\n    const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\r\n    const result = await this.bookingService.blockUnit({\r\n      from_date: dateToFormattedString(this.defaultData.defaultDateRange.fromDate),\r\n      to_date: dateToFormattedString(this.defaultData.defaultDateRange.toDate),\r\n      NOTES: this.blockDatesData.OPTIONAL_REASON || '',\r\n      pr_id: this.defaultData.PR_ID.toString(),\r\n      STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n      DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\r\n      ...releaseData,\r\n    });\r\n    const blockedUnit = await transformNewBLockedRooms(result);\r\n    this.blockedCreated.emit(blockedUnit);\r\n    this.closeWindow();\r\n  }\r\n\r\n  async bookUser(check_in: boolean) {\r\n    this.setLoadingState(check_in);\r\n    console.log('edit save clicked');\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      if (this.isGuestDataIncomplete()) {\r\n        this.isLoading = '';\r\n        return;\r\n      }\r\n    } else {\r\n      if (this.isButtonDisabled()) {\r\n        this.isLoading = '';\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      console.log('clicked');\r\n      if (['003', '002', '004'].includes(this.defaultData.STATUS_CODE)) {\r\n        this.eventsService.deleteEvent(this.defaultData.POOL);\r\n      }\r\n      if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n        this.bookedByInfoData.message = this.defaultData.NOTES;\r\n      }\r\n      const serviceParams = await this.bookPropertyService.prepareBookUserServiceParams(this, check_in, this.sourceOption);\r\n      await this.bookingService.bookUser(...serviceParams);\r\n      this.resetBookingData.emit(null);\r\n    } catch (error) {\r\n      // Handle error\r\n    } finally {\r\n      this.resetLoadingState();\r\n    }\r\n  }\r\n  setLoadingState(assign_units: boolean) {\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      this.isLoading = 'save';\r\n    } else {\r\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\r\n    }\r\n  }\r\n\r\n  getArrivalTimeForBooking(): string {\r\n    return this.bookedByInfoData.arrivalTime.find(e => e.CODE_VALUE_EN === this.defaultData.ARRIVAL_TIME).CODE_NAME;\r\n  }\r\n\r\n  resetLoadingState() {\r\n    this.isLoading = '';\r\n    setTimeout(() => {\r\n      this.closeWindow();\r\n    }, 100);\r\n  }\r\n  onRoomDataUpdate(event: CustomEvent) {\r\n    const units = this.bookPropertyService.onDataRoomUpdate(\r\n      event,\r\n      this.selectedUnits,\r\n      this.isEventType('EDIT_BOOKING'),\r\n      this.isEventType('EDIT_BOOKING') || this.isEventType('SPLIT_BOOKING') || this.isEventType('BAR_BOOKING'),\r\n      this.defaultData.NAME,\r\n    );\r\n    this.selectedUnits = new Map(units);\r\n    this.renderPage();\r\n  }\r\n  getCurrentPage(name: string) {\r\n    return this.page === name;\r\n  }\r\n  render() {\r\n    //console.log('render');\r\n    return (\r\n      <Host>\r\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\r\n        <div class={'sideWindow ' + (this.getCurrentPage('page_block_date') ? 'block-date' : '')}>\r\n          <div class=\"card position-sticky mb-0 shadow-none p-0 \">\r\n            <div class=\"d-flex mt-2 align-items-center justify-content-between  \">\r\n              <h3 class=\"card-title text-left pb-1 font-medium-2 px-2 px-md-3\">\r\n                {this.getCurrentPage('page_block_date') ? this.defaultData.BLOCK_DATES_TITLE : this.defaultData.TITLE}\r\n              </h3>\r\n              <ir-icon\r\n                class=\"close close-icon\"\r\n                onIconClickHandler={() => {\r\n                  this.closeWindow();\r\n                }}\r\n              >\r\n                <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\r\n                  <path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\" />\r\n                </svg>\r\n              </ir-icon>\r\n            </div>\r\n          </div>\r\n          <div class=\"px-2 px-md-3\">\r\n            {this.getCurrentPage('page_one') && (\r\n              <igl-booking-overview-page\r\n                initialRoomIds={this.initialRoomIds}\r\n                defaultDaterange={this.defaultDateRange}\r\n                class={'p-0 mb-1'}\r\n                eventType={this.defaultData.event_type}\r\n                selectedRooms={this.selectedUnits}\r\n                currency={this.currency}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                ratePricingMode={this.ratePricingMode}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                adultChildCount={this.adultChildCount}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                // bookingDataDefaultDateRange={this.dateRangeData}\r\n                adultChildConstraints={this.adultChildConstraints}\r\n                onRoomsDataUpdate={evt => {\r\n                  this.onRoomDataUpdate(evt);\r\n                }}\r\n                sourceOptions={this.sourceOptions}\r\n                propertyId={this.propertyid}\r\n              ></igl-booking-overview-page>\r\n            )}\r\n\r\n            {this.getCurrentPage('page_two') && (\r\n              <igl-pagetwo\r\n                currency={this.currency}\r\n                propertyId={this.propertyid}\r\n                showPaymentDetails={this.showPaymentDetails}\r\n                selectedGuestData={this.guestData}\r\n                countryNodeList={this.countryNodeList}\r\n                isLoading={this.isLoading}\r\n                selectedRooms={this.selectedUnits}\r\n                bedPreferenceType={this.bedPreferenceType}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                language={this.language}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                defaultGuestData={this.defaultData}\r\n                isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\r\n                onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\r\n              ></igl-pagetwo>\r\n            )}\r\n            {this.getCurrentPage('page_block_date') ? this.getPageBlockDatesView() : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n  letter-spacing: 0px !important;\r\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;\r\n  font-size: 1rem !important;\r\n  font-weight: 400 !important;\r\n  line-height: 1.45 !important;\r\n  color: #6b6f82 !important;\r\n  text-align: left !important;\r\n}\r\n.book-container {\r\n  width: min-content;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nh3 {\r\n  font-size: 1rem;\r\n}\r\n","import { IglBookPropertyPayloadPlusBooking } from '@/models/igl-book-property';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { RoomService } from '@/services/room.service';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport locales from '@/stores/locales.store';\r\nimport { Component, Host, State, h, Prop, Watch, Event, EventEmitter } from '@stencil/core';\r\nimport axios from 'axios';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-container',\r\n  styleUrl: 'igl-book-property-container.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyContainer {\r\n  @Prop() language: string = '';\r\n  @Prop() ticket: string = '';\r\n  @Prop() baseurl: string = '';\r\n  @Prop() propertyid: number;\r\n  @Prop() from_date: string;\r\n  @Prop() to_date: string;\r\n\r\n  @State() bookingItem: IglBookPropertyPayloadPlusBooking | null;\r\n  @State() showPaymentDetails: any;\r\n  @State() countryNodeList: any;\r\n  @State() calendarData: any = {};\r\n\r\n  @Event() resetBookingData: EventEmitter<null>;\r\n\r\n  private bookingService = new BookingService();\r\n  private roomService = new RoomService();\r\n\r\n  setRoomsData(roomServiceResp) {\r\n    let roomsData: { [key: string]: any }[] = new Array();\r\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\r\n      roomsData = roomServiceResp.My_Result.roomtypes;\r\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\r\n        roomCategory.expanded = true;\r\n      });\r\n    }\r\n    this.calendarData.roomsInfo = roomsData;\r\n  }\r\n  async initializeApp() {\r\n    try {\r\n      const [roomResponse, languageTexts, countriesList] = await Promise.all([\r\n        this.roomService.fetchData(this.propertyid, this.language),\r\n        this.roomService.fetchLanguage(this.language),\r\n        this.bookingService.getCountries(this.language),\r\n      ]);\r\n      console.log(languageTexts);\r\n      if (!locales.entries) {\r\n        locales.entries = languageTexts.entries;\r\n        locales.direction = languageTexts.direction;\r\n      }\r\n      this.countryNodeList = countriesList;\r\n\r\n      const { allowed_payment_methods: paymentMethods, currency, allowed_booking_sources, adult_child_constraints, calendar_legends } = roomResponse['My_Result'];\r\n      this.calendarData = { currency, allowed_booking_sources, adult_child_constraints, legendData: calendar_legends };\r\n      this.setRoomsData(roomResponse);\r\n      const paymentCodesToShow = ['001', '004'];\r\n      this.showPaymentDetails = paymentMethods.some(method => paymentCodesToShow.includes(method.code));\r\n    } catch (error) {\r\n      console.error('Error initializing app:', error);\r\n    }\r\n  }\r\n  componentWillLoad() {\r\n    if (this.baseurl) {\r\n      axios.defaults.baseURL = this.baseurl;\r\n    }\r\n    if (this.ticket !== '') {\r\n      calendar_data.token = this.ticket;\r\n      this.bookingService.setToken(this.ticket);\r\n      this.roomService.setToken(this.ticket);\r\n      this.initializeApp();\r\n    }\r\n  }\r\n  @Watch('ticket')\r\n  async ticketChanged() {\r\n    calendar_data.token = this.ticket;\r\n    this.bookingService.setToken(this.ticket);\r\n    this.roomService.setToken(this.ticket);\r\n\r\n    this.initializeApp();\r\n  }\r\n  handleCloseBookingWindow() {\r\n    this.bookingItem = null;\r\n  }\r\n  handleTriggerClicked() {\r\n    const tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    (this.bookingItem as IglBookPropertyPayloadPlusBooking) = {\r\n      FROM_DATE: this.from_date,\r\n      defaultDateRange: {\r\n        fromDate: new Date(),\r\n        fromDateStr: '',\r\n        toDate: tomorrow,\r\n        toDateStr: '',\r\n        dateDifference: 0,\r\n        message: '',\r\n      },\r\n      TO_DATE: this.to_date,\r\n      EMAIL: '',\r\n      event_type: 'PLUS_BOOKING',\r\n      ID: '',\r\n      NAME: '',\r\n      PHONE: '',\r\n      REFERENCE_TYPE: '',\r\n      TITLE: locales.entries.Lcz_NewBooking,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <ir-toast></ir-toast>\r\n        <ir-interceptor></ir-interceptor>\r\n        <div class=\"book-container\" onClick={this.handleTriggerClicked.bind(this)}>\r\n          <slot name=\"trigger\"></slot>\r\n        </div>\r\n        {this.bookingItem && (\r\n          <igl-book-property\r\n            allowedBookingSources={this.calendarData.allowed_booking_sources}\r\n            adultChildConstraints={this.calendarData.adult_child_constraints}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            countryNodeList={this.countryNodeList}\r\n            currency={this.calendarData.currency}\r\n            language={this.language}\r\n            propertyid={this.propertyid}\r\n            bookingData={this.bookingItem}\r\n            onResetBookingData={(e: CustomEvent) => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation();\r\n              this.resetBookingData.emit(null);\r\n            }}\r\n            onCloseBookingWindow={() => this.handleCloseBookingWindow()}\r\n          ></igl-book-property>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { createStore } from '@stencil/store';\r\n\r\nexport type TIrInterceptorStatus = 'pending' | 'done' | null;\r\n\r\nexport interface IRequestStatus {\r\n  [key: string]: TIrInterceptorStatus;\r\n}\r\n\r\nconst initialState: IRequestStatus = {};\r\n\r\nexport const { state: interceptor_requests, onChange: onCalendarDatesChange } = createStore<IRequestStatus>(initialState);\r\nexport function isRequestPending(url: string): boolean {\r\n  return interceptor_requests[url] === 'pending';\r\n}\r\n\r\nexport default interceptor_requests;\r\n",":host {\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n:host > * {\r\n  margin: auto;\r\n  padding: auto;\r\n}\r\n\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { FooterButtonType, TPropertyButtonsTypes } from '../../../../models/igl-book-property';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-footer',\r\n  styleUrl: 'igl-book-property-footer.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyFooter {\r\n  @Prop() eventType: string;\r\n  @Prop() disabled: boolean = true;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  private isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  editNext(label) {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      if (label === 'Cancel') {\r\n        return 'flex-fill';\r\n      } else {\r\n        return 'd-none d-md-block  flex-fill';\r\n      }\r\n    }\r\n    return 'flex-fill';\r\n  }\r\n\r\n  private renderButton(type: FooterButtonType, label: string, disabled = false) {\r\n    return (\r\n      <div class={this.shouldRenderTwoButtons() ? ` ${this.editNext(label)}` : 'flex-fill'}>\r\n        <button class={`btn btn-${type === 'cancel' ? 'secondary' : 'primary'} full-width`} onClick={() => this.buttonClicked.emit({ key: type })} disabled={disabled}>\r\n          {label}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private shouldRenderTwoButtons() {\r\n    return this.isEventType('PLUS_BOOKING') || this.isEventType('ADD_ROOM') || this.isEventType('EDIT_BOOKING');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex justify-content-between gap-30 align-items-center\">\r\n          {this.isEventType('EDIT_BOOKING') ? (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next} >>`, isRequestPending('/Get_Exposed_Booking_Availability'))}\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next} >>`)}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n.sourceContainer {\r\n  max-width: 350px;\r\n}\r\n.message-label {\r\n  font-size: 80%;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../../models/igl-book-property';\r\nimport { IToast } from '../../../ir-toast/toast';\r\nimport moment from 'moment';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-header',\r\n  styleUrl: 'igl-book-property-header.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyHeader {\r\n  @Prop() splitBookingId: any = '';\r\n  @Prop() bookingData: any = '';\r\n  @Prop() minDate: string;\r\n  @Prop() sourceOptions: TSourceOptions[] = [];\r\n  @Prop() message: string;\r\n  @Prop() bookingDataDefaultDateRange: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean = false;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() splitBookings: any[];\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() dateRangeData: any;\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() propertyId: number;\r\n\r\n  @Event() splitBookingDropDownChange: EventEmitter<any>;\r\n  @Event() sourceDropDownChange: EventEmitter<string>;\r\n  @Event() adultChild: EventEmitter<any>;\r\n  @Event() checkClicked: EventEmitter<any>;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  @Event() toast: EventEmitter<IToast>;\r\n  @Event() spiltBookingSelected: EventEmitter<{ key: string; data: unknown }>;\r\n\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n\r\n  private sourceOption: TSourceOption = {\r\n    code: '',\r\n    description: '',\r\n    tag: '',\r\n  };\r\n\r\n  getSplitBookingList() {\r\n    return (\r\n      <fieldset class=\"form-group  text-left\">\r\n        <label class=\"h5\">{locales.entries.Lcz_Tobooking}# </label>\r\n        <div class=\"btn-group ml-1\">\r\n          <ir-autocomplete\r\n            value={\r\n              Object.keys(this.bookedByInfoData).length > 1 ? `${this.bookedByInfoData.bookingNumber} ${this.bookedByInfoData.firstName} ${this.bookedByInfoData.lastName}` : ''\r\n            }\r\n            from_date={moment(this.bookingDataDefaultDateRange.fromDate).format('YYYY-MM-DD')}\r\n            to_date={moment(this.bookingDataDefaultDateRange.toDate).format('YYYY-MM-DD')}\r\n            propertyId={this.propertyId}\r\n            placeholder={locales.entries.Lcz_BookingNumber}\r\n            onComboboxValue={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation;\r\n              this.spiltBookingSelected.emit(e.detail);\r\n            }}\r\n            isSplitBooking\r\n          ></ir-autocomplete>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  getSourceNode() {\r\n    return (\r\n      <fieldset class=\"d-flex flex-column text-left flex-lg-row align-items-lg-center\">\r\n        <label class=\"mr-lg-1\">{locales.entries.Lcz_Source} </label>\r\n        <div class=\"btn-group mt-1 mt-lg-0 sourceContainer\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.sourceDropDownChange.emit((evt.target as HTMLSelectElement).value)}>\r\n            {this.sourceOptions.map(option => {\r\n              if (option.type === 'LABEL') {\r\n                return <optgroup label={option.value}></optgroup>;\r\n              }\r\n              return (\r\n                <option value={option.id} selected={this.sourceOption.code === option.id}>\r\n                  {option.value}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  handleAdultChildChange(key: string, value: string) {\r\n    //const value = (event.target as HTMLSelectElement).value;\r\n    let obj = {};\r\n    if (value === '') {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: 0,\r\n      };\r\n    } else {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: value,\r\n      };\r\n    }\r\n    this.adultChild.emit(obj);\r\n  }\r\n\r\n  getAdultChildConstraints() {\r\n    return (\r\n      <div class={'mt-1 mt-lg-0 d-flex flex-column text-left'}>\r\n        <label class=\"mb-1 d-lg-none\">{locales.entries.Lcz_NumberOfGuests} </label>\r\n        <div class=\"form-group my-lg-0 text-left d-flex align-items-center justify-content-between justify-content-sm-start\">\r\n          <fieldset>\r\n            <div class=\"btn-group \">\r\n              {/* <select class=\"form-control input-sm\" id=\"xAdultSmallSelect\" onChange={evt => this.handleAdultChildChange('adult', evt)}>\r\n                <option value=\"\">{locales.entries.Lcz_AdultsCaption}</option>\r\n                {Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => (\r\n                  <option value={option}>{option}</option>\r\n                ))}\r\n              </select> */}\r\n              <ir-select\r\n                onSelectChange={e => this.handleAdultChildChange('adult', e.detail)}\r\n                select_id=\"adult_child_select\"\r\n                firstOption={locales.entries.Lcz_AdultsCaption}\r\n                LabelAvailable={false}\r\n                data={Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => ({\r\n                  text: option.toString(),\r\n                  value: option.toString(),\r\n                }))}\r\n              ></ir-select>\r\n            </div>\r\n          </fieldset>\r\n          {this.adultChildConstraints.child_max_nbr > 0 && (\r\n            <fieldset>\r\n              <div class=\"btn-group ml-1\">\r\n                {/* <select class=\"form-control input-sm\" id=\"xChildrenSmallSelect\" onChange={evt => this.handleAdultChildChange('child', evt)}>\r\n                  <option value={''}>{this.renderChildCaption()}</option>\r\n                  {Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => (\r\n                    <option value={option}>{option}</option>\r\n                  ))}\r\n                </select> */}\r\n                <ir-select\r\n                  onSelectChange={e => this.handleAdultChildChange('child', e.detail)}\r\n                  select_id=\"child_select\"\r\n                  firstOption={this.renderChildCaption()}\r\n                  LabelAvailable={false}\r\n                  data={Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => ({\r\n                    text: option.toString(),\r\n                    value: option.toString(),\r\n                  }))}\r\n                ></ir-select>\r\n              </div>\r\n            </fieldset>\r\n          )}\r\n          <ir-button\r\n            btn_id=\"check_availability\"\r\n            isLoading={isRequestPending('/Get_Exposed_Booking_Availability')}\r\n            icon=\"\"\r\n            size=\"sm\"\r\n            class=\"ml-2\"\r\n            text={locales.entries.Lcz_Check}\r\n            onClickHanlder={() => this.handleButtonClicked()}\r\n          ></ir-button>\r\n          {/* <button class={'btn btn-primary btn-sm  ml-2'} onClick={() => this.handleButtonClicked()}>\r\n            {locales.entries.Lcz_Check}\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderChildCaption() {\r\n    const maxAge = this.adultChildConstraints.child_max_age;\r\n    let years = locales.entries.Lcz_Years;\r\n\r\n    if (maxAge === 1) {\r\n      years = locales.entries.Lcz_Year;\r\n    }\r\n    return `${locales.entries.Lcz_ChildCaption} < ${this.adultChildConstraints.child_max_age} ${years}`;\r\n  }\r\n  handleButtonClicked() {\r\n    if (this.isEventType('SPLIT_BOOKING') && Object.keys(this.bookedByInfoData).length <= 1) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: locales.entries.Lcz_ChooseBookingNumber,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      const initialToDate = moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date));\r\n      const initialFromDate = moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date));\r\n      const selectedFromDate = moment(new Date(this.dateRangeData.fromDate));\r\n      const selectedToDate = moment(new Date(this.dateRangeData.toDate));\r\n      if (selectedToDate.isBefore(initialFromDate) || selectedFromDate.isAfter(initialToDate)) {\r\n        this.toast.emit({\r\n          type: 'error',\r\n          title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n            '%1',\r\n            moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n          ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n          description: '',\r\n          position: 'top-right',\r\n        });\r\n        return;\r\n      } else if (this.adultChildCount.adult === 0) {\r\n        this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n        this.animateIrSelect.emit('adult_child_select');\r\n      } else {\r\n        this.buttonClicked.emit({ key: 'check' });\r\n      }\r\n    } else if (this.minDate && new Date(this.dateRangeData.fromDate).getTime() > new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date).getTime()) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n          '%1',\r\n          moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n        ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.adultChildCount.adult === 0) {\r\n      this.animateIrSelect.emit('adult_child_select');\r\n      this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n    } else {\r\n      this.buttonClicked.emit({ key: 'check' });\r\n    }\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n\r\n  render() {\r\n    const showSourceNode = this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? false : true;\r\n    return (\r\n      <Host>\r\n        {showSourceNode && this.getSourceNode()}\r\n        <div class={`d-flex flex-column flex-lg-row align-items-lg-center ${showSourceNode ? 'mt-1' : ''}`}>\r\n          <fieldset class=\"mt-lg-0  \">\r\n            <igl-date-range\r\n              dateLabel={locales.entries.Lcz_Dates}\r\n              minDate={this.minDate}\r\n              disabled={this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')}\r\n              defaultData={this.bookingDataDefaultDateRange}\r\n            ></igl-date-range>\r\n          </fieldset>\r\n          {!this.isEventType('EDIT_BOOKING') && this.getAdultChildConstraints()}\r\n        </div>\r\n        <p class=\"text-right mt-1 message-label\">{calendar_data.tax_statement}</p>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n:host > * {\r\n  margin: 0;\r\n  padding: auto;\r\n}\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n.loading-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  background: white;\r\n  position: absolute;\r\n  inset: 0;\r\n  z-index: 100;\r\n}\r\n.loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { TAdultChildConstraints, TSourceOptions } from '../../../../models/igl-book-property';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\n@Component({\r\n  tag: 'igl-booking-overview-page',\r\n  styleUrl: 'igl-booking-overview-page.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingOverviewPage {\r\n  @Prop() bookingData: any;\r\n  @Prop() propertyId: number;\r\n  @Prop() message: string;\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() eventType: string;\r\n  @Prop() currency: any;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() ratePricingMode: any;\r\n  @Prop() dateRangeData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() sourceOptions: TSourceOptions[];\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() initialRoomIds: any;\r\n\r\n  @Event() roomsDataUpdate: EventEmitter;\r\n\r\n  getSplitBookings() {\r\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\r\n  }\r\n  isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  render() {\r\n    //console.log(this.bookingData);\r\n    return (\r\n      <Host>\r\n        <igl-book-property-header\r\n          bookedByInfoData={this.bookedByInfoData}\r\n          defaultDaterange={this.defaultDaterange}\r\n          dateRangeData={this.dateRangeData}\r\n          // minDate={this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING') ? this.bookedByInfoData.from_date || this.bookingData.FROM_DATE : undefined}\r\n          adultChildCount={this.adultChildCount}\r\n          splitBookingId={this.showSplitBookingOption}\r\n          bookingData={this.bookingData}\r\n          sourceOptions={this.sourceOptions}\r\n          message={this.message}\r\n          bookingDataDefaultDateRange={this.bookingData.defaultDateRange}\r\n          showSplitBookingOption={this.showSplitBookingOption}\r\n          adultChildConstraints={this.adultChildConstraints}\r\n          splitBookings={this.getSplitBookings()}\r\n          propertyId={this.propertyId}\r\n        ></igl-book-property-header>\r\n        {/* {this.adultChildCount.adult === 0 && <p class={'col text-left'}>Please select the number of guests</p>} */}\r\n        <div class=\" text-left\">\r\n          {isRequestPending('/Get_Exposed_Booking_Availability') && this.isEventType('EDIT_BOOKING') ? (\r\n            <div class=\"loading-container\">\r\n              <div class=\"loader\"></div>\r\n            </div>\r\n          ) : (\r\n            <Fragment>\r\n              {this.bookingData?.roomsInfo?.map(roomInfo => {\r\n                //console.log(this.selectedRooms);\r\n                return (\r\n                  <igl-booking-rooms\r\n                    initialRoomIds={this.initialRoomIds}\r\n                    isBookDisabled={Object.keys(this.bookedByInfoData).length <= 1}\r\n                    key={`room-info-${roomInfo.id}`}\r\n                    currency={this.currency}\r\n                    ratePricingMode={this.ratePricingMode}\r\n                    dateDifference={this.dateRangeData.dateDifference}\r\n                    bookingType={this.bookingData.event_type}\r\n                    roomTypeData={roomInfo}\r\n                    class=\"mt-2 mb-1 p-0\"\r\n                    roomInfoId={this.selectedRooms.has(`c_${roomInfo.id}`) ? roomInfo.id : null}\r\n                    defaultData={this.selectedRooms.get(`c_${roomInfo.id}`)}\r\n                    onDataUpdateEvent={evt => this.roomsDataUpdate.emit(evt.detail)}\r\n                  ></igl-booking-rooms>\r\n                );\r\n              })}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n\r\n        <igl-book-property-footer class={'p-0 mb-1 mt-3'} eventType={this.bookingData.event_type} disabled={this.selectedRooms.size === 0}></igl-book-property-footer>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.currency {\r\n  display: block;\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: auto;\r\n  left: 10px;\r\n}\r\n.rate-input {\r\n  font-size: 14px;\r\n  line-height: 0;\r\n  padding: 0;\r\n  height: 0;\r\n  border-left: 0;\r\n}\r\n.rate-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-sizing: border-box;\r\n  flex: 1;\r\n}\r\n.new-currency {\r\n  color: #3b4781;\r\n  border: 1px solid #cacfe7;\r\n  font-size: 0.975rem;\r\n  height: 2rem;\r\n  background: white;\r\n  border-right: 0;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.input-group-prepend span[data-state='focus'] {\r\n  border-color: var(--blue);\r\n}\r\n.input-group-prepend span[data-disabled] {\r\n  background-color: #eceff1;\r\n  border-color: rgba(118, 118, 118, 0.3);\r\n}\r\n@media only screen and (min-width: 1200px) {\r\n  .rateplan-name-container {\r\n    width: 40%;\r\n  }\r\n  .rateplan-container {\r\n    width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) {\r\n  .max-w-300 {\r\n    max-width: 200px;\r\n  }\r\n  .rate-input-container {\r\n    max-width: 100px;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) and (max-width: 1300px) {\r\n  .rateplan-name-container {\r\n    width: 35%;\r\n  }\r\n}\r\n@media only screen and (max-width: 768px) {\r\n  .booking-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.total-nights-container {\r\n  width: max-content;\r\n}\r\n.nightBorder {\r\n  border-left-width: 0;\r\n  border-top-right-radius: 3px !important;\r\n  border-bottom-right-radius: 3px !important;\r\n}\r\n","import { Component, Host, Prop, h, State, Event, EventEmitter, Watch, Fragment } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { getCurrencySymbol } from '../../../utils/utils';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n@Component({\r\n  tag: 'igl-booking-room-rate-plan',\r\n  styleUrl: 'igl-booking-room-rate-plan.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRoomRatePlan {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() ratePlanData: { [key: string]: any };\r\n  @Prop() totalAvailableRooms: number;\r\n  @Prop() index: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() currency: any;\r\n  @Prop() physicalrooms;\r\n  @Prop() shouldBeDisabled: boolean;\r\n  @Prop() dateDifference: number;\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() fullyBlocked: boolean;\r\n  @Prop() isBookDisabled: boolean = false;\r\n  @Prop() defaultRoomId;\r\n  @Prop() selectedRoom;\r\n  @Prop() is_bed_configuration_enabled: boolean;\r\n  @State() isInputFocused = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() gotoSplitPageTwoEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() selectedData: { [key: string]: any };\r\n  @State() ratePlanChangedState: boolean = false;\r\n  private initialRateValue: number = 0;\r\n  getAvailableRooms(assignable_units: any[]) {\r\n    let result = [];\r\n    assignable_units.forEach(unit => {\r\n      if (unit.Is_Fully_Available) {\r\n        result.push({ name: unit.name, id: unit.pr_id });\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  componentWillLoad() {\r\n    // console.log('default data', this.defaultData);\r\n    this.updateSelectedRatePlan(this.ratePlanData);\r\n  }\r\n  disableForm() {\r\n    if (this.bookingType === 'EDIT_BOOKING' && this.shouldBeDisabled) {\r\n      return false;\r\n    } else {\r\n      return this.selectedData.is_closed || this.totalAvailableRooms === 0 || (calendar_data.is_frontdesk_enabled && this.selectedData.physicalRooms.length === 0);\r\n    }\r\n  }\r\n\r\n  setAvailableRooms(data) {\r\n    let availableRooms = this.getAvailableRooms(data);\r\n    if (this.bookingType === 'EDIT_BOOKING' && this.shouldBeDisabled) {\r\n      if (this.selectedRoom) {\r\n        availableRooms.push({\r\n          id: this.selectedRoom.roomId,\r\n          name: this.selectedRoom.roomName,\r\n        });\r\n        availableRooms.sort((a, b) => {\r\n          if (a.name < b.name) {\r\n            return -1;\r\n          }\r\n          if (a.name > b.name) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    return availableRooms;\r\n  }\r\n  getSelectedOffering(value: any) {\r\n    return this.ratePlanData.variations.find(variation => variation.adult_child_offering === value);\r\n  }\r\n\r\n  updateSelectedRatePlan(data) {\r\n    this.selectedData = {\r\n      is_bed_configuration_enabled: this.is_bed_configuration_enabled,\r\n      ratePlanId: data.id,\r\n      adult_child_offering: data.variations[data.variations.length - 1].adult_child_offering,\r\n      rateType: 1,\r\n      totalRooms: 0,\r\n      rate: data.variations[data.variations.length - 1].amount ?? 0,\r\n      ratePlanName: data.name,\r\n      adultCount: data.variations[data.variations.length - 1].adult_nbr,\r\n      childrenCount: data.variations[data.variations.length - 1].child_nbr,\r\n      cancelation: data.cancelation,\r\n      guarantee: data.guarantee,\r\n      isRateModified: false,\r\n      defaultSelectedRate: 0,\r\n      index: this.index,\r\n      is_closed: data.is_closed,\r\n      physicalRooms: this.setAvailableRooms(this.ratePlanData.assignable_units),\r\n      dateDifference: this.dateDifference,\r\n    };\r\n\r\n    if (this.defaultData) {\r\n      for (const [key, value] of Object.entries(this.defaultData)) {\r\n        this.selectedData[key] = value;\r\n      }\r\n      this.selectedData['rateType'] = 1;\r\n    }\r\n    if (this.defaultData && this.defaultData.isRateModified) {\r\n      console.log('object');\r\n      if (this.selectedData.rateType === 1) {\r\n        console.log('object1');\r\n        this.initialRateValue = this.selectedData.rate;\r\n      } else {\r\n        console.log('object2');\r\n        this.initialRateValue = this.selectedData.rate * this.dateDifference;\r\n      }\r\n    } else {\r\n      this.initialRateValue = this.selectedData.rate / this.dateDifference;\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    if (this.defaultData) {\r\n      this.dataUpdateEvent.emit({\r\n        key: 'roomRatePlanUpdate',\r\n        changedKey: 'physicalRooms',\r\n        data: this.selectedData,\r\n      });\r\n    }\r\n  }\r\n  @Watch('ratePlanData')\r\n  async ratePlanDataChanged(newData) {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      adult_child_offering: newData.variations[newData.variations.length - 1].adult_child_offering,\r\n      adultCount: newData.variations[newData.variations.length - 1].adult_nbr,\r\n      childrenCount: newData.variations[newData.variations.length - 1].child_nbr,\r\n      rate: this.handleRateDaysUpdate(),\r\n      physicalRooms: this.setAvailableRooms(newData.assignable_units),\r\n    };\r\n    this.initialRateValue = this.selectedData.rateType === 2 ? this.selectedData.rate / this.dateDifference : this.selectedData.rate;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: 'rate',\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  handleRateDaysUpdate() {\r\n    if (this.selectedData.isRateModified) {\r\n      return this.selectedData.defaultSelectedRate;\r\n    }\r\n    const selectedOffering = this.getSelectedOffering(this.selectedData.adult_child_offering);\r\n    return selectedOffering ? selectedOffering.amount : 0;\r\n  }\r\n\r\n  handleInput(event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let inputValue = inputElement.value.replace(/[^0-9.]/g, '');\r\n\r\n    const validDecimalNumber = /^\\d*\\.?\\d*$/;\r\n    if (!validDecimalNumber.test(inputValue)) {\r\n      inputValue = inputValue.substring(0, inputValue.length - 1);\r\n    }\r\n\r\n    inputElement.value = inputValue;\r\n    if (inputValue) {\r\n      this.selectedData.isRateModified = true;\r\n      this.handleDataChange('rate', event);\r\n    } else {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        rate: -1,\r\n        totalRooms: 0,\r\n      };\r\n      this.dataUpdateEvent.emit({\r\n        key: 'roomRatePlanUpdate',\r\n        changedKey: 'rate',\r\n        data: this.selectedData,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, evt) {\r\n    const value = evt.target.value;\r\n    switch (key) {\r\n      case 'adult_child_offering':\r\n        this.updateOffering(value);\r\n        break;\r\n      case 'rate':\r\n        this.updateRate(value);\r\n        break;\r\n      default:\r\n        this.updateGenericData(key, value);\r\n        break;\r\n    }\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: key,\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  updateOffering(value) {\r\n    const offering = this.getSelectedOffering(value);\r\n    if (offering) {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        adult_child_offering: value,\r\n        adultCount: offering.adult_nbr,\r\n        childrenCount: offering.child_nbr,\r\n        rate: offering.amount,\r\n        isRateModified: false,\r\n      };\r\n    }\r\n  }\r\n\r\n  updateRate(value) {\r\n    const numericValue = value === '' ? 0 : Number(value);\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      rate: numericValue,\r\n      totalRooms: value === '' ? 0 : this.selectedData.totalRooms,\r\n      defaultSelectedRate: this.selectedData.rateType === 2 ? numericValue / this.dateDifference : numericValue,\r\n    };\r\n  }\r\n\r\n  updateGenericData(key, value) {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      [key]: value === '' ? 0 : parseInt(value),\r\n    };\r\n  }\r\n  bookProperty() {\r\n    this.dataUpdateEvent.emit({ key: 'clearData', data: this.selectedData });\r\n    this.handleDataChange('totalRooms', { target: { value: '1' } });\r\n    this.gotoSplitPageTwoEvent.emit({ key: 'gotoSplitPage', data: '' });\r\n  }\r\n\r\n  renderRate(): string | number | string[] {\r\n    if (this.selectedData.isRateModified) {\r\n      console.log('selectedData.rate', this.selectedData.rate);\r\n      return this.selectedData.rate === -1 ? '' : this.selectedData.rate;\r\n    }\r\n    return this.selectedData.rateType === 1 ? Number(this.selectedData.rate).toFixed(2) : Number(this.initialRateValue).toFixed(2);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-column m-0 p-0 flex-lg-row align-items-lg-center justify-content-lg-between \">\r\n          <div class=\"rateplan-name-container\">\r\n            {this.bookingType === 'BAR_BOOKING' ? (\r\n              <Fragment>\r\n                <span class=\"font-weight-bold\t\">{this.ratePlanData.name.split('/')[0]}</span>\r\n                <span>/{this.ratePlanData.name.split('/')[1]}</span>\r\n              </Fragment>\r\n            ) : (\r\n              <span>{this.ratePlanData.name}</span>\r\n            )}\r\n            <ir-tooltip message={this.ratePlanData.cancelation + this.ratePlanData.guarantee}></ir-tooltip>\r\n          </div>\r\n\r\n          <div class={'d-md-flex justify-content-md-end  align-items-md-center  flex-fill rateplan-container'}>\r\n            <div class=\"mt-1 mt-lg-0 flex-fill max-w-300\">\r\n              <fieldset class=\"position-relative\">\r\n                <select disabled={this.disableForm()} class=\"form-control  input-sm\" id={v4()} onChange={evt => this.handleDataChange('adult_child_offering', evt)}>\r\n                  {this.ratePlanData.variations.map(variation => (\r\n                    <option value={variation.adult_child_offering} selected={this.selectedData.adult_child_offering === variation.adult_child_offering}>\r\n                      {variation.adult_child_offering}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </fieldset>\r\n            </div>\r\n            <div class={'m-0 p-0 d-md-flex justify-content-between ml-md-1 '}>\r\n              <div class=\" d-flex mt-1  mt-lg-0 m-0 p-0 rate-total-night-view   \">\r\n                <fieldset class=\"position-relative has-icon-left m-0 p-0 rate-input-container  \">\r\n                  <div class=\"input-group-prepend\">\r\n                    <span data-disabled={this.disableForm()} data-state={this.isInputFocused ? 'focus' : ''} class=\"input-group-text new-currency\" id=\"basic-addon1\">\r\n                      {getCurrencySymbol(this.currency.code)}\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    onFocus={() => (this.isInputFocused = true)}\r\n                    onBlur={() => (this.isInputFocused = false)}\r\n                    disabled={this.disableForm()}\r\n                    type=\"text\"\r\n                    class=\"form-control pl-0 input-sm rate-input py-0 m-0 rounded-0 rateInputBorder\"\r\n                    value={this.renderRate()}\r\n                    id={v4()}\r\n                    placeholder={locales.entries.Lcz_Rate || 'Rate'}\r\n                    onInput={(event: InputEvent) => this.handleInput(event)}\r\n                  />\r\n                  {/* <span class=\"currency\">{getCurrencySymbol(this.currency.code)}</span> */}\r\n                </fieldset>\r\n                <fieldset class=\"position-relative m-0 total-nights-container p-0 \">\r\n                  <select\r\n                    disabled={this.disableForm()}\r\n                    class=\"form-control input-sm m-0 nightBorder rounded-0  py-0\"\r\n                    id={v4()}\r\n                    onChange={evt => this.handleDataChange('rateType', evt)}\r\n                  >\r\n                    {this.ratePricingMode.map(data => (\r\n                      <option value={data.CODE_NAME} selected={this.selectedData.rateType === +data.CODE_NAME}>\r\n                        {data.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </fieldset>\r\n              </div>\r\n\r\n              {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' ? (\r\n                <div class=\"flex-lg-fill  mt-lg-0 ml-md-2 m-0 mt-1 p-0\">\r\n                  <fieldset class=\"position-relative\">\r\n                    <select\r\n                      disabled={this.selectedData.rate === 0 || this.disableForm()}\r\n                      class=\"form-control input-sm\"\r\n                      id={v4()}\r\n                      onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                    >\r\n                      {Array.from({ length: this.totalAvailableRooms + 1 }, (_, i) => i).map(i => (\r\n                        <option value={i} selected={this.selectedData.totalRooms === i}>\r\n                          {i}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </fieldset>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            {this.bookingType === 'EDIT_BOOKING' ? (\r\n              <Fragment>\r\n                <div class=\" m-0 p-0  mt-lg-0  ml-md-1 mt-md-1 d-none d-md-block\">\r\n                  <fieldset class=\"position-relative\">\r\n                    <input\r\n                      disabled={this.disableForm()}\r\n                      type=\"radio\"\r\n                      name=\"ratePlanGroup\"\r\n                      value=\"1\"\r\n                      onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                      checked={this.selectedData.totalRooms === 1}\r\n                    />\r\n                  </fieldset>\r\n                </div>\r\n                <button\r\n                  disabled={this.selectedData.rate === -1 || this.disableForm()}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1  mt-1 d-md-none \"\r\n                  onClick={() => this.bookProperty()}\r\n                >\r\n                  {this.selectedData.totalRooms === 1 ? locales.entries.Lcz_Current : locales.entries.Lcz_Select}\r\n                </button>\r\n              </Fragment>\r\n            ) : null}\r\n\r\n            {this.bookingType === 'BAR_BOOKING' || this.bookingType === 'SPLIT_BOOKING' ? (\r\n              <button\r\n                disabled={this.selectedData.rate === -1 || this.disableForm() || (this.bookingType === 'SPLIT_BOOKING' && this.isBookDisabled)}\r\n                type=\"button\"\r\n                class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1  mt-1 \"\r\n                onClick={() => this.bookProperty()}\r\n              >\r\n                {locales.entries.Lcz_Book}\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.margin-bottom-8 {\r\n  margin-bottom: 8px !important;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-booking-rooms',\r\n  styleUrl: 'igl-booking-rooms.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRooms {\r\n  @Prop() roomTypeData: { [key: string]: any };\r\n  @Prop() defaultData: Map<string, any>;\r\n  @Prop() bookingType = 'PLUS_BOOKING';\r\n  @Prop() dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() roomInfoId: number | null = null;\r\n  @Prop() currency;\r\n  @State() selectedRooms: number[] = [];\r\n  @State() totalRooms: number;\r\n  @Prop() isBookDisabled: boolean;\r\n  @Prop() initialRoomIds: any;\r\n  @State() roomsDistributions: number[] = [];\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  private validBookingTypes = ['PLUS_BOOKING', 'ADD_ROOM', 'EDIT_BOOKING', 'SPLIT_BOOKING'];\r\n\r\n  componentWillLoad() {\r\n    this.initializeRoomData();\r\n  }\r\n\r\n  private initializeRoomData() {\r\n    const { inventory, rateplans } = this.roomTypeData;\r\n    this.totalRooms = inventory || 0;\r\n    this.selectedRooms = new Array(rateplans.length).fill(0);\r\n    this.roomsDistributions = this.calculateInitialDistributions(rateplans, inventory);\r\n  }\r\n  @Watch('roomTypeData')\r\n  handleRoomTypeData() {\r\n    this.initializeRoomData();\r\n  }\r\n\r\n  private calculateInitialDistributions(rateplans, inventory) {\r\n    let distributions = new Array(rateplans.length).fill(inventory);\r\n    if (this.defaultData && this.bookingType !== 'EDIT_BOOKING' && inventory > 0) {\r\n      let selectedIndexes = [];\r\n      let sum = 0;\r\n      this.defaultData.forEach(category => {\r\n        this.selectedRooms[category.index] = category.totalRooms;\r\n        distributions[category.index] = category.totalRooms;\r\n        sum += category.totalRooms;\r\n        selectedIndexes.push(category.index);\r\n      });\r\n      if (selectedIndexes.length < distributions.length) {\r\n        distributions.forEach((_, index) => {\r\n          if (!selectedIndexes.includes(index)) {\r\n            if (sum === this.totalRooms) {\r\n              distributions[index] = 0;\r\n            } else {\r\n              distributions[index] = distributions[index] - sum;\r\n            }\r\n          } else {\r\n            if (sum < this.totalRooms) {\r\n              distributions[index] = this.totalRooms - sum + distributions[index];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      distributions.fill(inventory);\r\n    }\r\n    return distributions;\r\n  }\r\n\r\n  onRoomDataUpdate(event: CustomEvent<{ [key: string]: any }>, index: number) {\r\n    event.stopImmediatePropagation();\r\n    const {\r\n      detail: { data, changedKey },\r\n    } = event;\r\n    let updatedData = { ...data };\r\n\r\n    if (changedKey === 'totalRooms') {\r\n      this.handleTotalRoomsUpdate(index, updatedData.totalRooms);\r\n    }\r\n\r\n    updatedData = {\r\n      ...updatedData,\r\n      roomCategoryId: this.roomTypeData.id,\r\n      roomCategoryName: this.roomTypeData.name,\r\n      inventory: this.roomTypeData.inventory,\r\n    };\r\n\r\n    this.dataUpdateEvent.emit({ key: data.key, data: updatedData, changedKey });\r\n  }\r\n\r\n  private handleTotalRoomsUpdate(index: number, newValue: number) {\r\n    if (this.selectedRooms[index] !== newValue) {\r\n      this.selectedRooms[index] = newValue;\r\n      this.updateRatePlanTotalRooms(index);\r\n    }\r\n  }\r\n\r\n  updateRatePlanTotalRooms(ratePlanIndex: number) {\r\n    const calculateTotalSelectedRoomsExcludingIndex = excludedIndex => {\r\n      return this.selectedRooms.reduce((acc, rooms, idx) => (idx !== excludedIndex ? acc + rooms : acc), 0);\r\n    };\r\n    const newRoomsDistributions = this.selectedRooms.map((_, index) => {\r\n      if (index === ratePlanIndex) {\r\n        return this.roomsDistributions[index];\r\n      }\r\n      const totalSelectedRoomsExcludingCurrent = calculateTotalSelectedRoomsExcludingIndex(index);\r\n      const availableRooms = this.totalRooms - totalSelectedRoomsExcludingCurrent;\r\n\r\n      return availableRooms > 0 ? availableRooms : 0;\r\n    });\r\n\r\n    if (JSON.stringify(this.roomsDistributions) !== JSON.stringify(newRoomsDistributions)) {\r\n      this.roomsDistributions = [...newRoomsDistributions];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const isValidBookingType = this.validBookingTypes.includes(this.bookingType);\r\n    return (\r\n      <Host>\r\n        {isValidBookingType && <div class=\"font-weight-bold font-medium-1 margin-bottom-8 \">{this.roomTypeData.name}</div>}\r\n        {this.roomTypeData.rateplans.map((ratePlan, index) => {\r\n          if (ratePlan.variations !== null) {\r\n            let shouldBeDisabled = this.roomInfoId && this.roomInfoId === this.roomTypeData.id;\r\n            let roomId = -1;\r\n            if (shouldBeDisabled && this.initialRoomIds) {\r\n              roomId = this.initialRoomIds.roomId;\r\n            }\r\n            return (\r\n              <igl-booking-room-rate-plan\r\n                is_bed_configuration_enabled={this.roomTypeData.is_bed_configuration_enabled}\r\n                index={index}\r\n                isBookDisabled={this.isBookDisabled}\r\n                key={`rate-plan-${ratePlan.id}`}\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={isValidBookingType ? '' : ''}\r\n                currency={this.currency}\r\n                dateDifference={this.dateDifference}\r\n                ratePlanData={ratePlan}\r\n                totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                defaultData={(this.defaultData && this.defaultData.get(`p_${ratePlan.id}`)) || null}\r\n                shouldBeDisabled={shouldBeDisabled}\r\n                onDataUpdateEvent={evt => this.onRoomDataUpdate(evt, index)}\r\n                physicalrooms={this.roomTypeData.physicalrooms}\r\n                defaultRoomId={roomId}\r\n                selectedRoom={this.initialRoomIds}\r\n              ></igl-booking-room-rate-plan>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: flex;\r\n  align-items: center !important;\r\n}\r\n.date-range-input {\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex: 1;\r\n  cursor: pointer;\r\n  width: 220px !important;\r\n  opacity: 0;\r\n  user-select: none;\r\n}\r\n.iglRangeNights {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.date-view {\r\n  position: absolute;\r\n  background: white;\r\n  pointer-events: none;\r\n  cursor: pointer;\r\n  display: block;\r\n  margin-left: 1rem;\r\n  margin-right: 1rem;\r\n  font-size: 0.975rem !important;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.date-view svg {\r\n  padding: 0 !important;\r\n  margin: 0;\r\n  margin-right: 10px;\r\n}\r\n.calendarPickerContainer {\r\n  display: flex !important;\r\n  position: relative !important;\r\n  text-align: left;\r\n  align-items: center !important;\r\n  padding: 0 !important;\r\n  margin: 0;\r\n  border: 1px solid var(--ir-date-range-border, #379ff2);\r\n  width: var(--ir-date-range-width, 242px);\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.calendarPickerContainer:focus-within {\r\n  border-color: #379ff2;\r\n}\r\n.calendarPickerContainer[data-state='disabled'] {\r\n  border: 0px;\r\n  width: 280px;\r\n}\r\n.date-view[data-state='disabled'],\r\n.date-range-input[data-state='disabled'] {\r\n  margin: 0;\r\n  cursor: default;\r\n}\r\n","import { Component, Host, h, State, Event, EventEmitter, Prop } from '@stencil/core';\r\nimport { IToast } from '../../ir-toast/toast';\r\nimport locales from '@/stores/locales.store';\r\nimport { calculateDaysBetweenDates } from '@/utils/booking';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'igl-date-range',\r\n  styleUrl: 'igl-date-range.css',\r\n  scoped: true,\r\n})\r\nexport class IglDateRange {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n  @Prop() minDate: string;\r\n  @Prop() dateLabel: string;\r\n  @Prop() maxDate: string;\r\n  @Prop() withDateDifference: boolean = true;\r\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() toast: EventEmitter<IToast>;\r\n\r\n  private totalNights: number = 0;\r\n  private fromDate: Date;\r\n  private toDate: Date;\r\n  private fromDateStr: string = 'from';\r\n  private toDateStr: string = 'to';\r\n  dateRangeInput: HTMLElement;\r\n\r\n  getStringDateFormat(dt: Date) {\r\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\r\n  }\r\n\r\n  componentWillLoad() {\r\n    let dt = new Date();\r\n    dt.setHours(0, 0, 0, 0);\r\n    dt.setDate(dt.getDate() + 1);\r\n    if (this.defaultData) {\r\n      if (this.defaultData.fromDate) {\r\n        this.fromDate = new Date(this.defaultData.fromDate);\r\n        this.fromDate.setHours(0, 0, 0, 0);\r\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\r\n      }\r\n      if (this.defaultData.toDate) {\r\n        this.toDate = new Date(this.defaultData.toDate);\r\n        this.toDate.setHours(0, 0, 0, 0);\r\n        this.toDateStr = this.getFormattedDateString(this.toDate);\r\n      }\r\n    }\r\n    if (this.fromDate && this.toDate) {\r\n      this.calculateTotalNights();\r\n      this.handleDateSelectEvent('selectedDateRange', {\r\n        fromDate: this.fromDate.getTime(),\r\n        toDate: this.toDate.getTime(),\r\n        fromDateStr: this.fromDateStr,\r\n        toDateStr: this.toDateStr,\r\n        dateDifference: this.totalNights,\r\n      });\r\n    }\r\n  }\r\n\r\n  calculateTotalNights() {\r\n    this.totalNights = calculateDaysBetweenDates(moment(this.fromDate).format('YYYY-MM-DD'), moment(this.toDate).format('YYYY-MM-DD'));\r\n  }\r\n  getFormattedDateString(dt) {\r\n    return dt.getDate() + ' ' + dt.toLocaleString('default', { month: 'short' }).toLowerCase() + ' ' + dt.getFullYear();\r\n  }\r\n\r\n  handleDateSelectEvent(key, data: any = '') {\r\n    this.dateSelectEvent.emit({ key, data });\r\n  }\r\n  handleDateChange(evt) {\r\n    const { start, end } = evt.detail;\r\n    this.fromDate = start.toDate();\r\n    this.toDate = end.toDate();\r\n    this.calculateTotalNights();\r\n\r\n    this.handleDateSelectEvent('selectedDateRange', {\r\n      fromDate: this.fromDate.getTime(),\r\n      toDate: this.toDate.getTime(),\r\n      fromDateStr: start.format('DD MMM YYYY'),\r\n      toDateStr: end.format('DD MMM YYYY'),\r\n      dateDifference: this.totalNights,\r\n    });\r\n\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"calendarPickerContainer form-control input-sm\" data-state={this.disabled ? 'disabled' : 'active'}>\r\n          <ir-date-picker\r\n            maxDate={this.maxDate}\r\n            class={'date-range-input'}\r\n            disabled={this.disabled}\r\n            fromDate={this.fromDate}\r\n            toDate={this.toDate}\r\n            minDate={this.minDate}\r\n            autoApply\r\n            data-state={this.disabled ? 'disabled' : 'active'}\r\n            onDateChanged={evt => {\r\n              this.handleDateChange(evt);\r\n            }}\r\n          ></ir-date-picker>\r\n          <div data-state={this.disabled ? 'disabled' : 'active'} class=\"date-view\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"10.5\" viewBox=\"0 0 448 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\r\n              />\r\n            </svg>\r\n            <ir-date-view showDateDifference={this.disabled} from_date={this.fromDate} to_date={this.toDate}></ir-date-view>\r\n          </div>\r\n        </div>\r\n        {this.withDateDifference && (\r\n          <span>\r\n            {this.totalNights && !this.disabled ? (\r\n              <span class=\"iglRangeNights mx-1\">{this.totalNights + (this.totalNights > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`)}</span>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </span>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, Host, State } from '@stencil/core';\r\nimport { IPageTwoDataUpdateProps } from '../../../models/models';\r\nimport { IglBookPropertyPayloadEditBooking, TPropertyButtonsTypes } from '../../../models/igl-book-property';\r\nimport { getCurrencySymbol } from '../../../utils/utils';\r\nimport locales from '@/stores/locales.store';\r\n@Component({\r\n  tag: 'igl-pagetwo',\r\n  styleUrl: 'igl-pagetwo.css',\r\n  scoped: true,\r\n})\r\nexport class IglPagetwo {\r\n  @Prop() showPaymentDetails: boolean;\r\n  @Prop() currency;\r\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\r\n  @Prop() dateRangeData: { [key: string]: any };\r\n  @Prop() bookingData: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() language: string;\r\n  @Prop() bookedByInfoData: { [key: string]: any };\r\n  @Prop() propertyId: number;\r\n  @Prop() bedPreferenceType: any;\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop({ reflect: true }) isLoading: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() selectedGuestData;\r\n  @Prop() defaultGuestData: IglBookPropertyPayloadEditBooking;\r\n  @Event() dataUpdateEvent: EventEmitter<IPageTwoDataUpdateProps>;\r\n  @Event() buttonClicked: EventEmitter<{\r\n    key: TPropertyButtonsTypes;\r\n    data?: CustomEvent;\r\n  }>;\r\n  @State() selectedBookedByData;\r\n  @State() guestData: any;\r\n\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n\r\n  componentWillLoad() {\r\n    this.initializeGuestData();\r\n    this.selectedBookedByData = this.bookedByInfoData;\r\n  }\r\n\r\n  initializeGuestData() {\r\n    let total = 0;\r\n    const newSelectedUnits = { ...this.selectedUnits };\r\n    const getRate = (rate: number, totalNights: number, isRateModified: boolean, preference: number) => {\r\n      if (isRateModified && preference === 2) {\r\n        return rate * totalNights;\r\n      }\r\n      return rate;\r\n    };\r\n    this.selectedUnits = newSelectedUnits;\r\n    this.guestData = [];\r\n    this.selectedRooms.forEach((room, key) => {\r\n      room.forEach(rate_plan => {\r\n        newSelectedUnits[key] = rate_plan.selectedUnits;\r\n        total += rate_plan.totalRooms * getRate(rate_plan.rate, this.dateRangeData.dateDifference, rate_plan.isRateModified, rate_plan.rateType);\r\n        for (let i = 1; i <= rate_plan.totalRooms; i++) {\r\n          this.guestData.push({\r\n            guestName: '',\r\n            roomId: '',\r\n            preference: '',\r\n            ...rate_plan,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.bookingData.TOTAL_PRICE = total;\r\n  }\r\n  handleOnApplicationInfoDataUpdateEvent(event: CustomEvent, index: number) {\r\n    const opt = event.detail;\r\n    const categoryIdKey = `c_${opt.data.roomCategoryId}`;\r\n    const updatedUnits = [...(this.selectedUnits[categoryIdKey] || [])];\r\n    updatedUnits[index] = opt.data.roomId;\r\n    this.selectedUnits = {\r\n      ...this.selectedUnits,\r\n      [categoryIdKey]: updatedUnits,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'applicationInfoUpdateEvent',\r\n      value: event.detail,\r\n    });\r\n  }\r\n\r\n  handleEventData(event: any, key: string, index: number) {\r\n    if (key === 'application-info') {\r\n      this.handleOnApplicationInfoDataUpdateEvent(event, index);\r\n    } else {\r\n      this.selectedBookedByData = event.detail.data;\r\n      this.dataUpdateEvent.emit({\r\n        key: 'propertyBookedBy',\r\n        value: event.detail,\r\n      });\r\n    }\r\n  }\r\n  isGuestDataIncomplete() {\r\n    if (this.selectedGuestData.length !== this.guestData.length) {\r\n      return true;\r\n    }\r\n    for (const data of this.selectedGuestData) {\r\n      if (data.guestName === '' || data.preference === '' || data.roomId === '') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled(key: string) {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.selectedGuestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      // const isCardDetails = ['cardNumber', 'cardHolderName', 'expiryMonth', 'expiryYear'].includes(key);\r\n      // if (!this.showPaymentDetails && isCardDetails) {\r\n      //   return false;\r\n      // }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      this.isLoading === key ||\r\n      isValidProperty(this.selectedGuestData, 'guestName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'isdCode', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'contactNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'firstName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'lastName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'countryId', -1) ||\r\n      isValidProperty(this.selectedBookedByData, 'selectedArrivalTime', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'email', '')\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-wrap\">\r\n          <ir-date-view\r\n            class=\"mr-1 flex-fill font-weight-bold font-medium-1\"\r\n            from_date={this.dateRangeData.fromDateStr}\r\n            to_date={this.dateRangeData.toDateStr}\r\n            dateOption=\"DD MMM YYYY\"\r\n          ></ir-date-view>\r\n          {this.guestData.length > 1 && (\r\n            <div class=\"mt-1 mt-md-0 text-right\">\r\n              {locales.entries.Lcz_TotalPrice} <span class=\"font-weight-bold font-medium-1\">{getCurrencySymbol(this.currency.code) + this.bookingData.TOTAL_PRICE || '$0.00'}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {this.guestData.map((roomInfo, index) => {\r\n          return (\r\n            <igl-application-info\r\n              dateDifference={this.dateRangeData.dateDifference}\r\n              defaultGuestPreference={this.defaultGuestData.bed_preference}\r\n              defaultGuestRoomId={this.defaultGuestData.PR_ID}\r\n              currency={this.currency}\r\n              bedPreferenceType={this.bedPreferenceType}\r\n              index={index}\r\n              selectedUnits={this.selectedUnits[`c_${roomInfo.roomCategoryId}`]}\r\n              guestInfo={roomInfo}\r\n              guestRefKey={index}\r\n              bookingType={this.bookingData.event_type}\r\n              roomsList={roomInfo.physicalRooms}\r\n              onDataUpdateEvent={event => this.handleEventData(event, 'application-info', index)}\r\n            ></igl-application-info>\r\n          );\r\n        })}\r\n\r\n        {this.isEditOrAddRoomEvent || this.showSplitBookingOption ? null : (\r\n          <igl-property-booked-by\r\n            propertyId={this.propertyId}\r\n            countryNodeList={this.countryNodeList}\r\n            language={this.language}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            defaultData={this.bookedByInfoData}\r\n            onDataUpdateEvent={event =>\r\n              // this.dataUpdateEvent.emit({\r\n              //   key: \"propertyBookedBy\",\r\n              //   value: event.detail,\r\n              // })\r\n              this.handleEventData(event, 'propertyBookedBy', 0)\r\n            }\r\n          ></igl-property-booked-by>\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent ? (\r\n          <div class=\"d-flex p-0 mb-1 mt-2\">\r\n            <div class=\"flex-fill mr-2\">\r\n              {/* <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'cancel' })}>\r\n                {locales.entries.Lcz_Cancel}\r\n              </button> */}\r\n              <ir-button\r\n                icon=\"\"\r\n                text={locales.entries.Lcz_Back}\r\n                class=\"full-width\"\r\n                btn_color=\"secondary\"\r\n                btn_styles=\"justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'back' })}\r\n              ></ir-button>\r\n            </div>\r\n            <div class=\"flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'save'}\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'save' })}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                text={locales.entries.Lcz_Save}\r\n              ></ir-button>\r\n              {/* <button\r\n                disabled={this.isLoading === 'save'}\r\n                type=\"button\"\r\n                class=\"btn btn-primary full-width\"\r\n                onClick={() => {\r\n                  console.log('save button clicked');\r\n                  this.buttonClicked.emit({ key: 'save' });\r\n                }}\r\n              >\r\n                {this.isLoading === 'save' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                {locales.entries.Lcz_Save}\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"d-flex flex-column flex-md-row p-0 mb-1 mt-2 justify-content-md-between align-items-md-center\">\r\n            <div class=\"flex-fill mr-md-1\">\r\n              <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'back' })}>\r\n                <span class={'d-none d-md-inline-flex'}> &lt;&lt;</span> {locales.entries.Lcz_Back}\r\n              </button>\r\n            </div>\r\n            <div class=\"mt-1 mt-md-0 flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'book'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'book' })}\r\n                text={locales.entries.Lcz_Book}\r\n              ></ir-button>\r\n              {/* <button disabled={this.isLoading === 'book'} type=\"button\" class=\"btn btn-primary full-width\" onClick={() => this.buttonClicked.emit({ key: 'book' })}>\r\n                {this.isLoading === 'book' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                {locales.entries.Lcz_Book}\r\n              </button> */}\r\n            </div>\r\n            {/* <div class=\"mt-1 mt-md-0 flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'bookAndChekcIn'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n                text={locales.entries.Lcz_BookAndChekcIn}\r\n              ></ir-button>\r\n              // <button\r\n              //   //disabled={this.isButtonDisabled('bookAndCheckIn')}\r\n              //   type=\"button\"\r\n              //   class=\"btn btn-primary full-width\"\r\n              //   onClick={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n              // >\r\n              //   {this.isLoading === 'bookAndCheckIn' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n              //   {locales.entries.Lcz_BookAndChekcIn}\r\n              // </button>\r\n            </div> */}\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n\r\n.bookedByEmailContainer {\r\n  flex: auto;\r\n  max-width: 350px;\r\n}\r\n\r\n.bookedDetailsForm label {\r\n  min-width: 125px;\r\n  max-width: 125px;\r\n}\r\n\r\n.bookedDetailsForm .controlContainer {\r\n  /* width: calc(100% - 127px); */\r\n}\r\n\r\n.bookedDetailsForm .form-group {\r\n  margin-bottom: 10px !important;\r\n}\r\n\r\n.bookedDetailsForm .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n/* .controlContainer1 .textarea-container {\r\n  border: 1px solid #ced4da; \r\n  border-radius: 0.25rem; \r\n  height: 60px; \r\n  width: 100%;\r\n} */\r\n.controlContainer textarea {\r\n  height: 60px !important;\r\n}\r\n.margin3 {\r\n  margin-bottom: 5px !important;\r\n}\r\n@media (min-width: 768px) {\r\n  .bookedByEmailContainer {\r\n    margin-left: 37px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Fragment, Listen } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries, ICountry } from '../../../models/IBooking';\r\nimport { v4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-property-booked-by',\r\n  styleUrl: 'igl-property-booked-by.css',\r\n  scoped: true,\r\n})\r\nexport class IglPropertyBookedBy {\r\n  @Prop() language: string;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() countryNodeList: ICountry[] = [];\r\n  @Prop() propertyId: number;\r\n  @State() isButtonPressed: boolean = false;\r\n  private bookingService: BookingService = new BookingService();\r\n  private arrivalTimeList: IEntries[] = [];\r\n  private expiryMonths: string[] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\n  private expiryYears: string[] = [];\r\n  private currentMonth: string = '01';\r\n  private country;\r\n  @State() bookedByData: { [key: string]: any } = {\r\n    id: undefined,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    countryId: '',\r\n    isdCode: '',\r\n    contactNumber: '',\r\n    selectedArrivalTime: {\r\n      code: '',\r\n      description: '',\r\n    },\r\n    emailGuest: true,\r\n    message: '',\r\n    cardNumber: '',\r\n    cardHolderName: '',\r\n    expiryMonth: '',\r\n    expiryYear: '',\r\n  };\r\n\r\n  async componentWillLoad() {\r\n    this.bookingService.setToken(calendar_data.token);\r\n    this.assignCountryCode();\r\n    this.initializeExpiryYears();\r\n    this.initializeDateData();\r\n    this.populateBookedByData();\r\n  }\r\n\r\n  private initializeExpiryYears() {\r\n    const currentYear = new Date().getFullYear();\r\n    this.expiryYears = Array.from({ length: 4 }, (_, index) => (currentYear + index).toString());\r\n  }\r\n  private async assignCountryCode() {\r\n    const country = await this.bookingService.getUserDefaultCountry();\r\n\r\n    const countryId = country['COUNTRY_ID'];\r\n    this.country = countryId;\r\n    this.bookedByData = { ...this.bookedByData, isdCode: countryId.toString(), countryId };\r\n  }\r\n  private initializeDateData() {\r\n    const dt = new Date();\r\n    const month = dt.getMonth() + 1;\r\n    this.currentMonth = month < 10 ? `0${month}` : month.toString();\r\n  }\r\n\r\n  private populateBookedByData() {\r\n    this.bookedByData = this.defaultData ? { ...this.bookedByData, ...this.defaultData } : {};\r\n    this.arrivalTimeList = this.defaultData?.arrivalTime || [];\r\n    this.bookedByData = { ...this.bookedByData, selectedArrivalTime: { code: this.arrivalTimeList[0].CODE_NAME, description: this.arrivalTimeList[0].CODE_VALUE_EN } };\r\n    if (!this.bookedByData.expiryMonth) {\r\n      this.bookedByData.expiryMonth = this.currentMonth;\r\n    }\r\n    if (!this.bookedByData.expiryYear) {\r\n      this.bookedByData.expiryYear = new Date().getFullYear();\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, event) {\r\n    const foundTime = this.arrivalTimeList.find(time => time.CODE_NAME === event.target.value);\r\n\r\n    this.bookedByData[key] =\r\n      key === 'emailGuest'\r\n        ? event.target.checked\r\n        : key === 'arrivalTime'\r\n        ? {\r\n            code: event.target.value,\r\n            description: (foundTime && foundTime.CODE_VALUE_EN) || '',\r\n          }\r\n        : event.target.value;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    if (key === 'countryId') {\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        isdCode: event.target.value,\r\n      };\r\n    }\r\n  }\r\n\r\n  handleNumberInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n\r\n    // Regular expression to match only numeric characters (0-9)\r\n    const numericRegex = /^[0-9]+$/;\r\n\r\n    if (!numericRegex.test(inputValue)) {\r\n      // If the input is not numeric, prevent it from being entered\r\n      inputElement.value = inputValue.replace(/[^0-9]/g, '');\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n\r\n  async handleEmailInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n    if (this.isValidEmail(inputValue)) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n  async checkUser() {\r\n    try {\r\n      const email = this.bookedByData.email;\r\n      if (this.isValidEmail(email)) {\r\n        const res = await this.bookingService.getUserInfo(email);\r\n        if (res !== null) {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: res.id,\r\n            firstName: res.first_name,\r\n            lastName: res.last_name,\r\n            contactNumber: res.mobile,\r\n            countryId: res.country_id,\r\n            isdCode: res.country_id.toString(),\r\n          };\r\n        } else {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: undefined,\r\n            firstName: '',\r\n            lastName: '',\r\n            contactNumber: '',\r\n            countryId: '',\r\n            isdCode: '',\r\n          };\r\n        }\r\n        this.dataUpdateEvent.emit({\r\n          key: 'bookedByInfoUpdated',\r\n          data: { ...this.bookedByData },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n  isValidEmail(emailId) {\r\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    return emailPattern.test(emailId);\r\n  }\r\n  handleComboboxChange(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    switch (key) {\r\n      case 'blur':\r\n        if (data !== '') {\r\n          this.bookedByData.email = data;\r\n          this.checkUser();\r\n        }\r\n        break;\r\n      case 'select':\r\n        this.bookedByData.email = data.email;\r\n        this.bookedByData = {\r\n          ...this.bookedByData,\r\n          id: data.id,\r\n          firstName: data.first_name,\r\n          lastName: data.last_name,\r\n          contactNumber: data.mobile,\r\n          countryId: data.country_id,\r\n          isdCode: data.country_id.toString(),\r\n        };\r\n        this.dataUpdateEvent.emit({\r\n          key: 'bookedByInfoUpdated',\r\n          data: this.bookedByData,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  clearEvent() {\r\n    this.bookedByData.email = '';\r\n    this.bookedByData = {\r\n      ...this.bookedByData,\r\n      id: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      contactNumber: '',\r\n      isdCode: this.country.toString(),\r\n      countryId: this.country,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-3\">\r\n          <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center text-left \">\r\n            <label class=\"p-0 m-0 label-control mr-1 font-weight-bold\">{locales.entries.Lcz_BookedBy}</label>\r\n            <div class=\"bookedByEmailContainer mt-1 mt-md-0\">\r\n              {/* <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Email address\"\r\n                name=\"bookeyByEmail\"\r\n                value={this.bookedByData.email}\r\n                onInput={event => this.handleEmailInput('email', event)}\r\n                required\r\n                onBlur={() => this.checkUser()}\r\n              /> */}\r\n              <ir-autocomplete\r\n                danger_border={this.isButtonPressed && this.bookedByData.email === ''}\r\n                onComboboxValue={this.handleComboboxChange.bind(this)}\r\n                propertyId={this.propertyId}\r\n                type=\"email\"\r\n                value={this.bookedByData.email}\r\n                required\r\n                placeholder={locales.entries.Lcz_FindEmailAddress}\r\n                onInputCleared={() => this.clearEvent()}\r\n              ></ir-autocomplete>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bookedDetailsForm text-left mt-2 font-small-3 \">\r\n          <div class=\"d-flex flex-column flex-md-row  justify-content-md-between \">\r\n            <div class=\"p-0 flex-fill \">\r\n              <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center p-0 flex-fill \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_FirstName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill  \">\r\n                  <input\r\n                    class={`form-control flex-fill ${this.isButtonPressed && this.bookedByData.firstName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_FirstName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.firstName}\r\n                    onInput={event => this.handleDataChange('firstName', event)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_LastName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <input\r\n                    class={`form-control ${this.isButtonPressed && this.bookedByData.lastName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_LastName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.lastName}\r\n                    onInput={event => this.handleDataChange('lastName', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_Country}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('countryId', event)}>\r\n                    <option value=\"\" selected={this.bookedByData.countryId === ''}>\r\n                      {locales.entries.Lcz_Select}\r\n                    </option>\r\n                    {this.countryNodeList.map(countryNode => (\r\n                      <option value={countryNode.id} selected={this.bookedByData.countryId === countryNode.id}>\r\n                        {countryNode.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\r\n                <div class=\"p-0 m-0  d-flex  controlContainer flex-fill\">\r\n                  <div class=\" p-0 m-0\">\r\n                    <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('isdCode', event)}>\r\n                      <option value=\"\" selected={this.bookedByData.isdCode === ''}>\r\n                        {locales.entries.Lcz_Isd}\r\n                      </option>\r\n                      {this.countryNodeList.map(country => (\r\n                        <option value={country.id} selected={this.bookedByData.isdCode === country.id.toString()}>\r\n                          {country.phone_prefix}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"flex-fill p-0 m-0\">\r\n                    <input\r\n                      class={`form-control\r\n                     \r\n                      `}\r\n                      type=\"tel\"\r\n                      placeholder={locales.entries.Lcz_ContactNumber}\r\n                      id={v4()}\r\n                      value={this.bookedByData.contactNumber}\r\n                      onInput={event => this.handleNumberInput('contactNumber', event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_YourArrivalTime}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select\r\n                    class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.selectedArrivalTime.code === '' && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('selectedArrivalTime', event)}\r\n                  >\r\n                    {/* <option value=\"\" selected={this.bookedByData.selectedArrivalTime.code === ''}>\r\n                      -\r\n                    </option> */}\r\n                    {this.arrivalTimeList.map(time => (\r\n                      <option value={time.CODE_NAME} selected={this.bookedByData.selectedArrivalTime.code === time.CODE_NAME}>\r\n                        {time.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-0 flex-fill  ml-md-3\">\r\n              <div class=\"  p-0 d-flex flex-column flex-md-row align-items-md-center \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_AnyMessageForUs}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill \">\r\n                  <textarea\r\n                    id={v4()}\r\n                    rows={4}\r\n                    class=\"form-control \"\r\n                    name=\"message\"\r\n                    value={this.bookedByData.message}\r\n                    onInput={event => this.handleDataChange('message', event)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              {this.showPaymentDetails && (\r\n                <Fragment>\r\n                  <div class=\"form-group mt-md-1  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardNumber}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardNumber}\r\n                        onInput={event => this.handleNumberInput('cardNumber', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardHolderName}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardHolderName}\r\n                        onInput={event => this.handleDataChange('cardHolderName', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_ExpiryDate}</label>\r\n                    <div class=\"p-0 m-0 row  controlContainer flex-fill\">\r\n                      <div class=\"p-0 m-0\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryMonth', event)}>\r\n                          {this.expiryMonths.map(month => (\r\n                            <option value={month} selected={month === this.bookedByData.expiryMonth}>\r\n                              {month}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"p-0 m-0 ml-1\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryYear', event)}>\r\n                          {this.expiryYears.map((year, index) => (\r\n                            <option value={year} selected={index === this.bookedByData.expiryYear}>\r\n                              {year}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n              <div class=\"form-group mt-1 p-0 d-flex flex-row align-items-center\">\r\n                <label class=\"p-0 m-0\" htmlFor={'emailTheGuestId'}>\r\n                  {locales.entries.Lcz_EmailTheGuest}\r\n                </label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill checkBoxContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"checkbox\"\r\n                    checked={this.bookedByData.emailGuest}\r\n                    id={'emailTheGuestId'}\r\n                    onChange={event => this.handleDataChange('emailGuest', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  position: relative;\r\n}\r\n.selected {\r\n  color: #fff;\r\n  text-decoration: none;\r\n  background-color: #666ee8;\r\n}\r\ninput {\r\n  width: 100%;\r\n  position: relative;\r\n  border-top-left-radius: 0px !important;\r\n  border-left: 0 !important;\r\n  border-bottom-left-radius: 0px !important;\r\n}\r\nlabel {\r\n  margin: 0;\r\n  border-top-right-radius: 0px !important;\r\n  border-right: 0 !important;\r\n  border-bottom-right-radius: 0px !important;\r\n  width: fit-content;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  padding-right: 3px !important;\r\n  justify-content: center;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\nlabel[data-state='focused'] {\r\n  border-color: var(--blue);\r\n}\r\n\r\n.combobox {\r\n  margin: 0;\r\n  top: 30px;\r\n  min-width: 100%;\r\n  width: max-content;\r\n  display: block;\r\n  z-index: 10000;\r\n  padding: 1px;\r\n  background: white;\r\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n  padding: 5px 0;\r\n  max-height: 250px;\r\n  overflow-y: auto;\r\n}\r\n.dropdown-item {\r\n  cursor: pointer;\r\n}\r\nbutton {\r\n  all: unset;\r\n  right: 4px;\r\n}\r\n.combobox p,\r\nspan,\r\nloader-container {\r\n  padding: 5px 16px;\r\n  margin: 0px;\r\n  margin-top: 2px;\r\n  width: 100%;\r\n}\r\n.combobox p {\r\n  cursor: pointer;\r\n}\r\n.combobox p:hover {\r\n  background: #f4f5fa;\r\n}\r\n\r\n.combobox p[data-selected],\r\n.combobox p[data-selected]:hover {\r\n  color: #fff;\r\n  text-decoration: none;\r\n  background-color: #666ee8;\r\n}\r\n.loader {\r\n  width: 14px;\r\n  height: 14px;\r\n  border: 2px solid #0f0f0f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","import { Component, Host, Prop, State, h, Event, EventEmitter, Listen, Element, Fragment } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { BookingService } from '../../services/booking.service';\r\nimport { IToast } from '../ir-toast/toast';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'ir-autocomplete',\r\n  styleUrl: 'ir-autocomplete.css',\r\n  scoped: true,\r\n})\r\nexport class IrAutocomplete {\r\n  @Prop() duration: number = 300;\r\n  @Prop() placeholder: string = '';\r\n  @Prop() propertyId: number;\r\n  @Prop() isSplitBooking: boolean = false;\r\n  @Prop() type: 'email' | 'text' | 'password' | 'number' | 'search' = 'text';\r\n  @Prop() name: string = '';\r\n  @Prop() inputId: string = v4();\r\n  @Prop() required: boolean = false;\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() value: string;\r\n  @Prop() from_date: string = '';\r\n  @Prop() to_date: string = '';\r\n  @Prop() danger_border: boolean;\r\n\r\n  @State() inputValue: string = '';\r\n  @State() data: any[] = [];\r\n  @State() selectedIndex: number = -1;\r\n  @State() isComboBoxVisible: boolean = false;\r\n  @State() isLoading: boolean = true;\r\n  @State() isItemSelected: boolean;\r\n  @State() inputFocused: boolean = false;\r\n\r\n  @Event({ bubbles: true, composed: true }) comboboxValue: EventEmitter<{ key: string; data: unknown }>;\r\n  @Event() inputCleared: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n\r\n  @Element() el: HTMLElement;\r\n  private inputRef: HTMLInputElement;\r\n  private debounceTimer: any;\r\n  private bookingService = new BookingService();\r\n  private no_result_found = '';\r\n  componentWillLoad() {\r\n    this.bookingService.setToken(calendar_data.token);\r\n    this.no_result_found = locales.entries.Lcz_NoResultsFound;\r\n  }\r\n\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    const dataSize = this.data.length;\r\n    const itemHeight = this.getHeightOfPElement();\r\n    if (dataSize > 0) {\r\n      switch (event.key) {\r\n        case 'ArrowUp':\r\n          event.preventDefault();\r\n          this.selectedIndex = (this.selectedIndex - 1 + dataSize) % dataSize;\r\n          this.adjustScrollPosition(itemHeight);\r\n          break;\r\n        case 'ArrowDown':\r\n          event.preventDefault();\r\n          this.selectedIndex = (this.selectedIndex + 1) % dataSize;\r\n          this.adjustScrollPosition(itemHeight);\r\n          break;\r\n        case 'Enter':\r\n        case ' ':\r\n        case 'ArrowRight':\r\n          event.preventDefault();\r\n          this.selectItem(this.selectedIndex);\r\n          break;\r\n        case 'Escape':\r\n          this.inputRef?.blur();\r\n          this.isComboBoxVisible = false;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  getHeightOfPElement() {\r\n    const combobox = this.el.querySelector('.combobox');\r\n    if (combobox) {\r\n      const pItem = combobox.querySelector('p');\r\n      return pItem ? pItem.offsetHeight : 0;\r\n    }\r\n    return 0;\r\n  }\r\n  adjustScrollPosition(itemHeight, visibleHeight = 250) {\r\n    const combobox = this.el.querySelector('.combobox');\r\n    if (combobox) {\r\n      const margin = 2;\r\n      const itemTotalHeight = itemHeight + margin;\r\n      const selectedPosition = itemTotalHeight * this.selectedIndex;\r\n      let newScrollTop = selectedPosition - visibleHeight / 2 + itemHeight / 2;\r\n      newScrollTop = Math.max(0, Math.min(newScrollTop, combobox.scrollHeight - visibleHeight));\r\n      combobox.scrollTo({\r\n        top: newScrollTop,\r\n        behavior: 'auto',\r\n      });\r\n    }\r\n  }\r\n\r\n  selectItem(index) {\r\n    if (this.data[index]) {\r\n      this.isItemSelected = true;\r\n      this.comboboxValue.emit({ key: 'select', data: this.data[index] });\r\n      this.inputValue = '';\r\n      this.resetCombobox();\r\n    }\r\n  }\r\n\r\n  debounceFetchData() {\r\n    clearTimeout(this.debounceTimer);\r\n    this.debounceTimer = setTimeout(() => {\r\n      this.fetchData();\r\n    }, this.duration);\r\n  }\r\n\r\n  async fetchData() {\r\n    try {\r\n      this.isLoading = true;\r\n      let data = [];\r\n      if (!this.isSplitBooking) {\r\n        data = await this.bookingService.fetchExposedGuest(this.inputValue, this.propertyId);\r\n      } else {\r\n        if (this.inputValue.split(' ').length === 1) {\r\n          data = await this.bookingService.fetchExposedBookings(this.inputValue, this.propertyId, this.from_date, this.to_date);\r\n        }\r\n      }\r\n      this.data = data;\r\n      if (!this.isComboBoxVisible) {\r\n        this.isComboBoxVisible = true;\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  handleInputChange(event: Event) {\r\n    this.inputValue = (event.target as HTMLInputElement).value;\r\n    if (this.inputValue) {\r\n      this.debounceFetchData();\r\n    } else {\r\n      clearTimeout(this.debounceTimer);\r\n      this.resetCombobox(false);\r\n    }\r\n  }\r\n\r\n  @Listen('click', { target: 'document' })\r\n  handleDocumentClick(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (!this.el.contains(target)) {\r\n      this.isComboBoxVisible = false;\r\n    }\r\n  }\r\n  handleBlur() {\r\n    this.inputFocused = false;\r\n    setTimeout(() => {\r\n      if (this.isDropdownItem(document.activeElement)) {\r\n        return;\r\n      }\r\n      if (this.isSplitBooking) {\r\n        if (!this.isItemSelected) {\r\n          if (this.data.length > 0) {\r\n            this.comboboxValue.emit({ key: 'blur', data: this.inputValue });\r\n          } else {\r\n            if (this.inputValue !== '') {\r\n              this.toast.emit({\r\n                type: 'error',\r\n                description: '',\r\n                title: `The Booking #${this.inputValue} is not Available`,\r\n                position: 'top-right',\r\n              });\r\n              this.inputCleared.emit();\r\n            }\r\n          }\r\n          this.inputValue = '';\r\n          this.resetCombobox();\r\n        } else {\r\n          this.isItemSelected = false;\r\n        }\r\n      } else {\r\n        if (!this.isItemSelected) {\r\n          this.comboboxValue.emit({ key: 'blur', data: this.inputValue });\r\n          this.inputValue = '';\r\n          this.resetCombobox();\r\n        } else {\r\n          this.isItemSelected = false;\r\n        }\r\n      }\r\n    }, 200);\r\n  }\r\n  isDropdownItem(element) {\r\n    return element && element.closest('.combobox');\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    clearTimeout(this.debounceTimer);\r\n    this.inputRef?.removeEventListener('blur', this.handleBlur);\r\n    this.inputRef?.removeEventListener('click', this.selectItem);\r\n    this.inputRef?.removeEventListener('keydown', this.handleKeyDown);\r\n    this.inputRef?.removeEventListener('focus', this.handleFocus);\r\n  }\r\n  handleItemKeyDown(event: KeyboardEvent, index: number) {\r\n    if (event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowRight') {\r\n      this.selectItem(index);\r\n      event.preventDefault();\r\n    } else if (event.key === 'Escape') {\r\n      this.isComboBoxVisible = false;\r\n      this.inputRef?.blur();\r\n      event.preventDefault();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  renderDropdown() {\r\n    if (this.inputValue !== '') {\r\n      return (\r\n        <div class={`position-absolute border rounded combobox`}>\r\n          {this.data?.map((d, index) => (\r\n            <p role=\"button\" onKeyDown={e => this.handleItemKeyDown(e, index)} data-selected={this.selectedIndex === index} tabIndex={0} onClick={() => this.selectItem(index)}>\r\n              {this.isSplitBooking ? (\r\n                <Fragment>{`${d.booking_nbr} ${d.guest.first_name} ${d.guest.last_name}`}</Fragment>\r\n              ) : (\r\n                <div class={'d-flex align-items-center flex-fill'}>\r\n                  <p class={'p-0 m-0'}>\r\n                    {`${d.email}`} <span class={'p-0 m-0'}>{` - ${d.first_name} ${d.last_name}`}</span>\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </p>\r\n          ))}\r\n          {this.isLoading && (\r\n            <div class=\"loader-container d-flex align-items-center justify-content-center\">\r\n              <div class=\"loader\"></div>\r\n            </div>\r\n          )}\r\n          {this.data.length === 0 && !this.isLoading && <span class={'text-center'}>{this.no_result_found}</span>}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  handleFocus() {\r\n    this.isComboBoxVisible = true;\r\n    this.inputFocused = true;\r\n  }\r\n  clearInput() {\r\n    this.inputValue = '';\r\n    this.resetCombobox();\r\n    this.inputCleared.emit(null);\r\n  }\r\n  resetCombobox(withblur: boolean = true) {\r\n    if (withblur) {\r\n      this.inputRef?.blur();\r\n    }\r\n    this.data = [];\r\n    this.selectedIndex = -1;\r\n    this.isComboBoxVisible = false;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={'d-flex align-items-center '}>\r\n          <label data-state={this.inputFocused ? 'focused' : 'blured'} htmlFor={this.inputId} class={`form-control input-sm ${this.danger_border && 'border-danger'}`}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"12\" viewBox=\"0 0 512 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z\"\r\n              />\r\n            </svg>\r\n          </label>\r\n          <input\r\n            required={this.required}\r\n            disabled={this.disabled}\r\n            id={this.inputId}\r\n            onKeyDown={this.handleKeyDown.bind(this)}\r\n            class={`form-control input-sm flex-full ${this.danger_border && 'border-danger'}`}\r\n            type={this.type}\r\n            name={this.name}\r\n            value={this.value || this.inputValue}\r\n            placeholder={this.placeholder}\r\n            onBlur={this.handleBlur.bind(this)}\r\n            onInput={this.handleInputChange.bind(this)}\r\n            onFocus={this.handleFocus.bind(this)}\r\n            ref={el => (this.inputRef = el)}\r\n          />\r\n          {this.inputValue && (\r\n            <button type=\"button\" class={'position-absolute d-flex align-items-center justify-content-center '} onClick={this.clearInput.bind(this)}>\r\n              <p class={'sr-only'}>clear input</p>\r\n              <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z\"\r\n                  fill=\"currentColor\"\r\n                  fill-rule=\"evenodd\"\r\n                  clip-rule=\"evenodd\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n          )}\r\n        </div>\r\n        {this.isComboBoxVisible && this.renderDropdown()}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","/* .loader {\r\n  width: 11px;\r\n  height: 11px;\r\n  border: 2px solid #fff;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: inline-flex;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n} */\r\n\r\n.button-icon {\r\n  padding: 0;\r\n  margin-top: 0;\r\n}\r\n.button-icon[data-state='loading'] {\r\n  display: none;\r\n}\r\n.button-text {\r\n  padding: 0 5px;\r\n}\r\n.bounce-3 {\r\n  animation: bounce 1s 1;\r\n}\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n/* HTML: */\r\n.loader {\r\n  width: 15px;\r\n  height: 10px;\r\n  --c: no-repeat linear-gradient(#ffffff 0 0);\r\n  background: var(--c) 0% 50%, var(--c) 50% 50%, var(--c) 100% 50%;\r\n  background-size: 20% 100%;\r\n  animation: l1 1s infinite linear;\r\n}\r\n@keyframes l1 {\r\n  0% {\r\n    background-size: 20% 100%, 20% 100%, 20% 100%;\r\n  }\r\n  33% {\r\n    background-size: 20% 10%, 20% 100%, 20% 100%;\r\n  }\r\n  50% {\r\n    background-size: 20% 100%, 20% 10%, 20% 100%;\r\n  }\r\n  66% {\r\n    background-size: 20% 100%, 20% 100%, 20% 10%;\r\n  }\r\n  100% {\r\n    background-size: 20% 100%, 20% 100%, 20% 100%;\r\n  }\r\n}\r\n@keyframes bounce {\r\n  0%,\r\n  100% {\r\n    transform: scale(1);\r\n    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);\r\n  }\r\n  50% {\r\n    transform: scale(1.2);\r\n    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\r\n  }\r\n}\r\n@keyframes ping {\r\n  75%,\r\n  100% {\r\n    transform: scale(1.2);\r\n  }\r\n}\r\n","import { Component, Prop, Event, EventEmitter, h, Listen } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\n\r\n@Component({\r\n  tag: 'ir-button',\r\n  styleUrl: 'ir-button.css',\r\n  scoped: true,\r\n})\r\nexport class IrButton {\r\n  @Prop() name: string;\r\n  @Prop() text;\r\n  @Prop() icon = 'ft-save';\r\n  @Prop() btn_color: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\r\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() btn_block = true;\r\n  @Prop() btn_disabled = false;\r\n  @Prop() btn_type = 'button';\r\n  @Prop() isLoading: boolean = false;\r\n  @Prop() btn_styles: string;\r\n  @Prop() btn_id: string = v4();\r\n\r\n  @Event({ bubbles: true, composed: true }) clickHanlder: EventEmitter<any>;\r\n\r\n  private buttonEl: HTMLButtonElement;\r\n  @Listen('animateIrButton', { target: 'body' })\r\n  handleButtonAnimation(e: CustomEvent) {\r\n    if (!this.buttonEl || e.detail !== this.btn_id) {\r\n      return;\r\n    }\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.buttonEl.classList.remove('bounce-3');\r\n    void this.buttonEl.offsetWidth;\r\n    this.buttonEl.classList.add('bounce-3');\r\n  }\r\n  render() {\r\n    let blockClass = this.btn_block ? 'btn-block' : '';\r\n    return (\r\n      <button\r\n        id={this.btn_id}\r\n        ref={el => (this.buttonEl = el)}\r\n        onClick={() => this.clickHanlder.emit()}\r\n        class={`btn btn-${this.btn_color} ${this.btn_styles} d-flex align-items-center btn-${this.size} text-${this.textSize} ${blockClass}`}\r\n        type={this.btn_type}\r\n        disabled={this.btn_disabled}\r\n      >\r\n        <span class=\"button-icon\" data-state={this.isLoading ? 'loading' : ''}>\r\n          <slot name=\"icon\"></slot>\r\n        </span>\r\n        {this.text && <span class=\"button-text m-0\">{this.text}</span>}\r\n        {this.isLoading && <div class=\"loader m-0 p-0\"></div>}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import { IrOnlineResource } from './models';\r\nexport const onlineResources: IrOnlineResource[] = [\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/jquery.min.js\",\r\n  // },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i%7CQuicksand:300,400,500,700',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/bootstrap.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/bootstrap-extended.css',\r\n  },\r\n  { isCSS: true, link: 'https://x.igloorooms.com/app-assets/css/colors.css' },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/core/menu/menu-types/horizontal-menu.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/core/colors/palette-gradient.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/components.css',\r\n  },\r\n  { isCSS: true, link: 'https://x.igloorooms.com/assets/css/style.css' },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/vendors/css/forms/icheck/icheck.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/vendors/css/forms/icheck/custom.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/pages/login-register.css',\r\n  },\r\n  // {\r\n  //   isCSS: true,\r\n  //   link: 'https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/daterangepicker.css',\r\n  // },\r\n\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/moment.min.js\",\r\n  // },\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/daterangepicker.js\",\r\n  // },\r\n];\r\n","import { Component, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport { IrOnlineResource } from '../../common/models';\r\nimport { onlineResources } from '../../common/ir.common.resources';\r\n\r\n@Component({\r\n  tag: 'ir-common',\r\n})\r\nexport class IrCommon {\r\n  @Prop({ reflect: true }) extraResources: string = '';\r\n  @State() resources: IrOnlineResource[] = onlineResources;\r\n  componentWillLoad() {\r\n    this.parseRefs();\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.initializeStyles();\r\n  }\r\n\r\n  @Watch('extraResources')\r\n  hrefsChanged() {\r\n    this.parseRefs();\r\n    this.initializeStyles();\r\n  }\r\n\r\n  private parseRefs() {\r\n    if (this.extraResources !== '') this.resources.push(JSON.parse(this.extraResources));\r\n  }\r\n\r\n  private appendTag(tagName: string, attributes: any) {\r\n    const tag = document.createElement(tagName);\r\n    const selectorParts = [];\r\n\r\n    Object.keys(attributes).forEach(attr => {\r\n      tag.setAttribute(attr, attributes[attr]);\r\n      selectorParts.push(`[${attr}=\"${attributes[attr]}\"]`);\r\n    });\r\n\r\n    const selector = `${tagName}${selectorParts.join('')}`;\r\n    const existingTag = document.querySelector(selector);\r\n\r\n    if (!existingTag) {\r\n      document.head.appendChild(tag);\r\n    }\r\n  }\r\n\r\n  private initializeStyles() {\r\n    this.resources.forEach(res => {\r\n      if (res.isCSS) {\r\n        this.appendTag('link', {\r\n          href: res.link,\r\n          rel: 'stylesheet',\r\n          type: 'text/css',\r\n        });\r\n      }\r\n      if (res.isJS) {\r\n        this.appendTag('script', {\r\n          src: res.link,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <slot></slot>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","input {\r\n  all: unset;\r\n  box-sizing: border-box !important;\r\n  padding: 0;\r\n  margin: 0;\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\ninput:disabled {\r\n  text-align: start;\r\n  font-size: 14px;\r\n  width: 100%;\r\n}\r\n:host {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n}\r\n.icon {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n","import { Component, h, Element, Prop, Event, EventEmitter, Host } from '@stencil/core';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'ir-date-picker',\r\n  styleUrl: 'ir-date-picker.css',\r\n  scoped: true,\r\n})\r\nexport class IrDatePicker {\r\n  @Element() private element: HTMLElement;\r\n  @Prop() fromDate: Date;\r\n  @Prop() toDate: Date;\r\n\r\n  @Prop() opens: 'left' | 'right' | 'center';\r\n  @Prop() autoApply: boolean;\r\n  @Prop() firstDay: number = 1;\r\n  @Prop() monthNames: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  @Prop() daysOfWeek: string[] = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\r\n  @Prop() format: string = 'MMM DD, YYYY';\r\n  @Prop() separator: string = ' - ';\r\n  @Prop() applyLabel: string = 'Apply';\r\n  @Prop() cancelLabel: string = 'Cancel';\r\n  @Prop() fromLabel: string = 'Form';\r\n  @Prop() toLabel: string = 'To';\r\n  @Prop() customRangeLabel: string = 'Custom';\r\n  @Prop() weekLabel: string = 'W';\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() singleDatePicker = false;\r\n  @Prop() minDate: string;\r\n  @Prop() maxDate: string;\r\n  @Prop() maxSpan: moment.DurationInputArg1 = {\r\n    days: 240,\r\n  };\r\n  @Event() dateChanged: EventEmitter<{\r\n    start: moment.Moment;\r\n    end: moment.Moment;\r\n  }>;\r\n  dateRangeInput: HTMLElement;\r\n  componentDidLoad() {\r\n    this.dateRangeInput = this.element.querySelector('.date-range-input');\r\n    $(this.dateRangeInput).daterangepicker(\r\n      {\r\n        singleDatePicker: this.singleDatePicker,\r\n        opens: this.opens,\r\n        startDate: moment(this.fromDate),\r\n        endDate: moment(this.toDate),\r\n        minDate: moment(this.minDate || moment(new Date()).format('YYYY-MM-DD')),\r\n        maxDate: this.maxDate ? moment(this.maxDate) : undefined,\r\n        maxSpan: this.maxSpan,\r\n        autoApply: this.autoApply,\r\n        locale: {\r\n          format: this.format,\r\n          separator: this.separator,\r\n          applyLabel: this.applyLabel,\r\n          cancelLabel: this.cancelLabel,\r\n          fromLabel: this.fromLabel,\r\n          toLabel: this.toLabel,\r\n          customRangeLabel: this.customRangeLabel,\r\n          weekLabel: this.weekLabel,\r\n          daysOfWeek: this.daysOfWeek,\r\n          monthNames: this.monthNames,\r\n          firstDay: this.firstDay,\r\n        },\r\n      },\r\n      (start, end) => {\r\n        this.dateChanged.emit({ start, end });\r\n      },\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <input class=\"date-range-input\" type=\"text\" disabled={this.disabled} />\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.mx-01 {\r\n  --m: 5px;\r\n  margin-right: var(--m) !important;\r\n  margin-left: var(--m) !important;\r\n}\r\n","import locales from '@/stores/locales.store';\r\nimport { calculateDaysBetweenDates } from '@/utils/booking';\r\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'ir-date-view',\r\n  styleUrl: 'ir-date-view.css',\r\n  scoped: true,\r\n})\r\nexport class IrDateView {\r\n  @Prop() from_date: string | Date | moment.Moment;\r\n  @Prop() to_date: string | Date | moment.Moment;\r\n  @Prop() showDateDifference: boolean = true;\r\n  @Prop() dateOption: string = 'YYYY-MM-DD';\r\n  @State() dates: { from_date: string; to_date: string; date_diffrence: number };\r\n  componentWillLoad() {\r\n    this.initializeDates();\r\n  }\r\n  @Watch('from_date')\r\n  handleFromDateChange(newVal: any, oldVal: any) {\r\n    if (newVal !== oldVal) {\r\n      this.initializeDates();\r\n    }\r\n  }\r\n\r\n  @Watch('to_date')\r\n  handleToDateChange(newVal: any, oldVal: any) {\r\n    if (newVal !== oldVal) {\r\n      this.initializeDates();\r\n    }\r\n  }\r\n\r\n  initializeDates() {\r\n    this.convertDate('from_date', this.from_date);\r\n    this.convertDate('to_date', this.to_date);\r\n    const fromDate = moment(this.dates.from_date, 'MMM DD, YYYY').format('YYYY-MM-DD');\r\n    const toDate = moment(this.dates.to_date, 'MMM DD, YYYY').format('YYYY-MM-DD');\r\n    this.dates.date_diffrence = calculateDaysBetweenDates(fromDate, toDate);\r\n  }\r\n\r\n  convertDate(key: 'from_date' | 'to_date', date: string | Date | moment.Moment) {\r\n    this.dates = this.dates || {\r\n      from_date: '',\r\n      to_date: '',\r\n      date_diffrence: 0,\r\n    };\r\n\r\n    if (typeof date === 'string') {\r\n      this.dates[key] = moment(date, this.dateOption).format('MMM DD, YYYY');\r\n    } else if (date instanceof Date) {\r\n      this.dates[key] = moment(date).format('MMM DD, YYYY');\r\n    } else if (moment.isMoment(date)) {\r\n      this.dates[key] = date.format('MMM DD, YYYY');\r\n    } else {\r\n      console.error('Unsupported date type');\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host class=\"d-flex align-items-center\">\r\n        <span>{this.dates.from_date}</span>{' '}\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"mx-01\" height=\"14\" width=\"14\" viewBox=\"0 0 512 512\">\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\r\n          />\r\n        </svg>\r\n        <span>\r\n          {this.dates.to_date}{' '}\r\n          {this.showDateDifference && (\r\n            <span class=\"mx-01\">\r\n              {this.dates.date_diffrence}\r\n              {'   '}\r\n              {this.dates.date_diffrence > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`}\r\n            </span>\r\n          )}\r\n        </span>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.icon-button {\r\n  all: unset;\r\n  margin: 0;\r\n  padding: 0;\r\n  color: #104064;\r\n}\r\n.icon-button:hover {\r\n  cursor: pointer;\r\n  color: #1a6aa7;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-icon',\r\n  styleUrl: 'ir-icon.css',\r\n  scoped: true,\r\n})\r\nexport class IrIcon {\r\n  @Prop() icon = 'ft-check';\r\n\r\n  @Event({ bubbles: true, composed: true }) iconClickHandler: EventEmitter;\r\n\r\n  render() {\r\n    return (\r\n      <button class=\"icon-button\" onClick={() => this.iconClickHandler.emit()}>\r\n        <slot name=\"icon\"></slot>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  --viewport-padding: 25px;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: var(--viewport-padding);\r\n  gap: 10px;\r\n  max-width: 60vw;\r\n  margin: 0;\r\n  list-style: none;\r\n  z-index: 2147483647;\r\n  outline: none;\r\n  pointer-events: none;\r\n}\r\n\r\n.toast-container {\r\n  background-color: white;\r\n  border-radius: 6px;\r\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\r\n  padding: 15px 30px;\r\n  display: grid;\r\n  grid-template-areas: 'title action';\r\n  grid-template-columns: auto max-content;\r\n  column-gap: 15px;\r\n  align-items: center;\r\n  overflow: hidden;\r\n}\r\n.toast-container[data-state='open'] {\r\n  animation: slideIn 150ms cubic-bezier(0.16, 1, 0.3, 1) forwards;\r\n}\r\n.toast-container[data-state='closed'] {\r\n  pointer-events: none;\r\n  animation: fadeOut 150ms ease-in forwards;\r\n}\r\np {\r\n  margin: 0;\r\n  padding: 0;\r\n  grid-area: title;\r\n  font-weight: 500;\r\n  color: #1c2024;\r\n  font-size: 15px;\r\n}\r\n\r\n.x-mark-container,\r\n.check-mark-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 1.5rem;\r\n  width: 1.5rem;\r\n  border-radius: 50%;\r\n}\r\n.x-mark-container {\r\n  background: red;\r\n}\r\n.check-mark-container {\r\n  background: rgb(9, 153, 9);\r\n}\r\n\r\n.loadingScreenContainer {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 100000;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  pointer-events: all;\r\n}\r\n\r\n@keyframes fadeOut {\r\n  0% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n}\r\n@keyframes slideIn {\r\n  0% {\r\n    transform: translateX(calc(100% + var(--viewport-padding)));\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h } from '@stencil/core';\r\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport { IToast } from '../ir-toast/toast';\r\nimport interceptor_requests from '@/stores/ir-interceptor.store';\r\n\r\n@Component({\r\n  tag: 'ir-interceptor',\r\n  styleUrl: 'ir-interceptor.css',\r\n  scoped: true,\r\n})\r\nexport class IrInterceptor {\r\n  @State() isShown = false;\r\n  @State() isLoading = false;\r\n  @State() isUnassignedUnit = false;\r\n\r\n  @Prop({ reflect: true }) handledEndpoints = ['/ReAllocate_Exposed_Room', '/Do_Payment', '/Get_Exposed_Bookings'];\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n  componentWillLoad() {\r\n    this.setupAxiosInterceptors();\r\n  }\r\n\r\n  setupAxiosInterceptors() {\r\n    axios.interceptors.request.use(this.handleRequest.bind(this), this.handleError.bind(this));\r\n    axios.interceptors.response.use(this.handleResponse.bind(this), this.handleError.bind(this));\r\n  }\r\n\r\n  extractEndpoint(url: string): string {\r\n    return url.split('?')[0];\r\n  }\r\n\r\n  isHandledEndpoint(url: string): boolean {\r\n    return this.handledEndpoints.includes(url);\r\n  }\r\n\r\n  handleRequest(config: AxiosRequestConfig) {\r\n    const extractedUrl = this.extractEndpoint(config.url);\r\n    interceptor_requests[extractedUrl] = 'pending';\r\n    if (this.isHandledEndpoint(extractedUrl)) {\r\n      this.isLoading = true;\r\n    }\r\n    return config;\r\n  }\r\n\r\n  handleResponse(response: AxiosResponse) {\r\n    const extractedUrl = this.extractEndpoint(response.config.url);\r\n    if (this.isHandledEndpoint(extractedUrl)) {\r\n      this.isLoading = false;\r\n    }\r\n    interceptor_requests[extractedUrl] = 'done';\r\n    if (response.data.ExceptionMsg?.trim()) {\r\n      this.handleError(response.data.ExceptionMsg);\r\n      throw new Error(response.data.ExceptionMsg);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  handleError(error: string) {\r\n    this.toast.emit({\r\n      type: 'error',\r\n      title: error,\r\n      description: '',\r\n      position: 'top-right',\r\n    });\r\n    return Promise.reject(error);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.isLoading && (\r\n          <div class=\"loadingScreenContainer\">\r\n            <div class=\"loadingContainer\">\r\n              <ir-loading-screen></ir-loading-screen>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: fix;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 1000;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\n.loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n.backdrop {\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n.loaderContainer {\r\n  position: absolute;\r\n  z-index: 100001;\r\n  padding: 20px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  border-radius: 5px;\r\n  /* box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px; */\r\n}\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","import { Component, Host, Prop, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-loading-screen',\r\n  styleUrl: 'ir-loading-screen.css',\r\n  scoped: true,\r\n})\r\nexport class IrLoadingScreen {\r\n  @Prop() message: string = '';\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"loaderContainer\">\r\n          <span class=\"loader\"></span>\r\n          {/* {this.message && <p class={'m-0'}>{this.message}</p>} */}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",".border-theme {\r\n  border: 1px solid #cacfe7;\r\n}\r\n@keyframes bounce {\r\n  0%,\r\n  100% {\r\n    transform: scale(1);\r\n    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);\r\n  }\r\n  50% {\r\n    transform: scale(1.2);\r\n    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\r\n  }\r\n}\r\n.bounce-3 {\r\n  animation: bounce 1s 1;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, State, Watch, Listen } from '@stencil/core';\r\nimport { selectOption } from '../../common/models';\r\nimport { v4 } from 'uuid';\r\n\r\n@Component({\r\n  tag: 'ir-select',\r\n  styleUrl: 'ir-select.css',\r\n  scoped: true,\r\n})\r\nexport class IrSelect {\r\n  @Prop() name: string;\r\n  @Prop() data: selectOption[];\r\n  @Prop() label = '<label>';\r\n  @Prop() selectStyles: string;\r\n  @Prop() selectContainerStyle: string;\r\n  @Prop({ reflect: true, mutable: true }) selectedValue = null;\r\n  @Prop() required: boolean;\r\n  @Prop() LabelAvailable: boolean = true;\r\n  @Prop() firstOption: string = 'Select';\r\n  @Prop() selectStyle: boolean = true;\r\n  @Prop() showFirstOption: boolean = true;\r\n  @Prop() submited: boolean = false;\r\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() labelPosition: 'left' | 'right' | 'center' = 'left';\r\n  @Prop() labelBackground: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | null = null;\r\n  @Prop() labelColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'dark';\r\n  @Prop() labelBorder: 'theme' | 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | 'none' = 'theme';\r\n  @Prop() labelWidth: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 = 3;\r\n  @Prop() select_id: string = v4();\r\n\r\n  @State() initial: boolean = true;\r\n  @State() valid: boolean = false;\r\n  @Event({ bubbles: true, composed: true }) selectChange: EventEmitter;\r\n\r\n  private selectEl: HTMLSelectElement;\r\n\r\n  @Watch('selectedValue')\r\n  watchHandler(newValue: string) {\r\n    if (newValue !== null && this.required) {\r\n      this.valid = true;\r\n    }\r\n  }\r\n  @Watch('submited')\r\n  watchHandler2(newValue: boolean) {\r\n    if (newValue && this.required) {\r\n      this.initial = false;\r\n    }\r\n  }\r\n  @Listen('animateIrSelect', { target: 'body' })\r\n  handleButtonAnimation(e: CustomEvent) {\r\n    console.log(e.detail, this.select_id, e.detail === this.select_id);\r\n    if (!this.selectEl || e.detail !== this.select_id) {\r\n      return;\r\n    }\r\n    console.log('first1');\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.selectEl.classList.add('border-danger');\r\n  }\r\n  componentwillload() {}\r\n  disconnectedCallback() {}\r\n  handleSelectChange(event) {\r\n    this.selectEl.classList.remove('border-danger');\r\n    if (this.required) {\r\n      this.initial = false;\r\n      this.valid = event.target.checkValidity();\r\n      this.selectedValue = event.target.value;\r\n      this.selectChange.emit(this.selectedValue);\r\n    } else {\r\n      this.selectedValue = event.target.value;\r\n      this.selectChange.emit(this.selectedValue);\r\n    }\r\n  }\r\n  count = 0;\r\n\r\n  render() {\r\n    let className = 'form-control';\r\n    let label = (\r\n      <div class={`input-group-prepend col-${this.labelWidth} p-0 text-${this.labelColor}`}>\r\n        <label\r\n          htmlFor={this.select_id}\r\n          class={`input-group-text ${this.labelPosition === 'right' ? 'justify-content-end' : this.labelPosition === 'center' ? 'justify-content-center' : ''} ${\r\n            this.labelBackground ? 'bg-' + this.labelBackground : ''\r\n          } flex-grow-1 text-${this.labelColor} border-${this.labelBorder === 'none' ? 0 : this.labelBorder} `}\r\n        >\r\n          {this.label}\r\n          {this.required ? '*' : ''}\r\n        </label>\r\n      </div>\r\n    );\r\n    if (this.selectStyle === false) {\r\n      className = '';\r\n    }\r\n    if (this.required && !this.valid && !this.initial) {\r\n      className = `${className} border-danger`;\r\n    }\r\n\r\n    if (!this.LabelAvailable) {\r\n      label = '';\r\n    }\r\n\r\n    return (\r\n      <div class={`form-group m-0 ${this.selectContainerStyle}`}>\r\n        <div class=\"input-group row m-0\">\r\n          {label}\r\n          <select\r\n            ref={el => (this.selectEl = el)}\r\n            id={this.select_id}\r\n            class={`${this.selectStyles} ${className} form-control-${this.size} text-${this.textSize} col-${this.LabelAvailable ? 12 - this.labelWidth : 12}`}\r\n            onInput={this.handleSelectChange.bind(this)}\r\n            required={this.required}\r\n          >\r\n            {this.showFirstOption && <option value={''}>{this.firstOption}</option>}\r\n            {this.data.map(item => {\r\n              if (this.selectedValue === item.value) {\r\n                return (\r\n                  <option selected value={item.value}>\r\n                    {item.text}\r\n                  </option>\r\n                );\r\n              } else {\r\n                return <option value={item.value}>{item.text}</option>;\r\n              }\r\n            })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","button,\r\np,\r\nh3,\r\ndiv {\r\n  all: unset;\r\n}\r\n:host {\r\n  --rd-viewport-padding: 25px;\r\n  --rd-success: #2b9a66;\r\n  position: fixed;\r\n  bottom: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: var(--rd-viewport-padding);\r\n  gap: 10px;\r\n  max-width: 100vw;\r\n  margin: 0;\r\n  list-style: none;\r\n  z-index: 2147483647;\r\n  outline: none;\r\n  pointer-events: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n}\r\n@media (prefers-color-scheme: dark) {\r\n  :host {\r\n    --rd-success: #33b074;\r\n  }\r\n}\r\np {\r\n  color: hsla(222.2, 84%, 4.9%, 0.8);\r\n  font-size: 13px;\r\n  line-height: 1.3;\r\n}\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  font-weight: 500;\r\n  color: hsl(222.2, 84%, 4.9%);\r\n  font-size: 15px;\r\n}\r\n:host([position='top-left']) {\r\n  top: 0;\r\n  left: 0;\r\n}\r\n:host([position='top-right']) {\r\n  top: 0;\r\n  right: 0;\r\n}\r\n:host([position='bottom-left']) {\r\n  bottom: 0;\r\n  left: 0;\r\n}\r\n:host([position='bottom-right']) {\r\n  bottom: 0;\r\n  right: 0;\r\n}\r\n.icon-container {\r\n  height: 25px;\r\n  width: 25px;\r\n  border-radius: 25px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0;\r\n  margin: 0;\r\n  /* position: absolute;\r\n  top: 50%;\r\n  right: calc(var(--rd-viewport-padding) / 2); \r\n  transform: translateY(-50%);*/\r\n}\r\n.icon-container > svg {\r\n  margin: 0;\r\n  color: white;\r\n  stroke-width: 5px;\r\n}\r\n.success {\r\n  background-color: var(--rd-success);\r\n}\r\n.error {\r\n  background-color: red;\r\n}\r\n.ToastRoot {\r\n  background-color: hsl(0, 0%, 100%);\r\n  border-radius: 0.5rem;\r\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\r\n  padding: 15px;\r\n  display: grid;\r\n  grid-template-areas: 'title action' 'description action';\r\n  grid-template-columns: auto max-content;\r\n  column-gap: 15px;\r\n  align-items: center;\r\n  pointer-events: none;\r\n  opacity: 0;\r\n  border: 1px solid hsl(214.3, 31.8%, 91.4%);\r\n  position: relative;\r\n}\r\n.ToastRoot[data-state='open'] {\r\n  pointer-events: all;\r\n  animation: slideIn 150ms cubic-bezier(0.16, 1, 0.3, 1);\r\n}\r\n.ToastRoot[data-state='closed'] {\r\n  pointer-events: none;\r\n  animation: hide 100ms ease-in;\r\n}\r\n\r\n@-webkit-keyframes slideIn {\r\n  from {\r\n    transform: translateX(var(--rd-offset-width));\r\n  }\r\n  to {\r\n    transform: translateX(0);\r\n  }\r\n}\r\n@keyframes slideIn {\r\n  from {\r\n    transform: translateX(var(--rd-offset-width));\r\n  }\r\n  to {\r\n    transform: translateX(0);\r\n  }\r\n}\r\n.ToastTitle {\r\n  grid-area: title;\r\n  font-weight: 500;\r\n  color: hsl(222.2, 84%, 4.9%);\r\n  font-size: 15px;\r\n}\r\n\r\n.ToastDescription {\r\n  grid-area: description;\r\n  margin: 0;\r\n  margin-top: 5px;\r\n  color: hsla(222.2, 84%, 4.9%, 0.8);\r\n  font-size: 13px;\r\n  line-height: 1.3;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.ToastAction {\r\n  grid-area: action;\r\n}\r\n","import { Component, Host, Element, Listen, Prop, h, State } from '@stencil/core';\r\nimport { TPositions, IToast } from './toast';\r\n\r\n@Component({\r\n  tag: 'ir-toast',\r\n  styleUrl: 'ir-toast.css',\r\n  scoped: true,\r\n})\r\nexport class IrToast {\r\n  @Prop({ reflect: true, mutable: true }) position: TPositions = 'bottom-left';\r\n  @Element() element: HTMLElement;\r\n  @State() toasts: IToast[] = [];\r\n  @Listen('toast', { target: 'body' })\r\n  onToast(event: CustomEvent<IToast>) {\r\n    const toast: IToast = event.detail;\r\n    this.showToast(toast);\r\n  }\r\n  showToast(toast: IToast) {\r\n    const toastrOptions = {\r\n      positionClass: 'toast-top-right',\r\n      closeButton: true,\r\n      timeOut: toast.duration || 5000,\r\n    };\r\n\r\n    switch (toast.type) {\r\n      case 'success':\r\n        toastr.success(toast.title, '', toastrOptions);\r\n        break;\r\n      case 'error':\r\n        toastr.error(toast.title, '', toastrOptions);\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return <Host></Host>;\r\n  }\r\n}\r\n",":host {\r\n  position: relative;\r\n}\r\n.tooltip-icon {\r\n  margin: 0 5px;\r\n  padding: 0;\r\n}\r\n/* p {\r\n  position: absolute;\r\n  top: 10px;\r\n  background-color: antiquewhite;\r\n  border-radius: 7px;\r\n  padding: 10px 15px;\r\n  z-index: 1000000;\r\n} */\r\n","import { Component, Host, Prop, State, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-tooltip',\r\n  styleUrl: 'ir-tooltip.css',\r\n  scoped: true,\r\n})\r\nexport class IrTooltip {\r\n  @Prop({ reflect: true }) message: string;\r\n  @State() open: boolean;\r\n  tooltipTimeout: any;\r\n  toggleOpen(shouldOpen: boolean) {\r\n    if (this.tooltipTimeout) {\r\n      clearTimeout(this.tooltipTimeout);\r\n    }\r\n\r\n    if (shouldOpen) {\r\n      this.tooltipTimeout = setTimeout(() => {\r\n        this.open = true;\r\n      }, 300);\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host class=\"m-0 p-0\">\r\n        <span onMouseEnter={() => this.toggleOpen(true)} onMouseLeave={() => this.toggleOpen(false)}>\r\n          {/* <i\r\n            class=\"ml-1 ft-info\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            data-original-title=\"Info popup\"\r\n          ></i> */}\r\n          <svg data-toggle=\"tooltip\" data-placement=\"top\" xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" class=\"tooltip-icon\" viewBox=\"0 0 512 512\">\r\n            <path\r\n              fill=\"#6b6f82\"\r\n              d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336h24V272H216c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"\r\n            />\r\n          </svg>\r\n        </span>\r\n        {this.open && (\r\n          <div class=\"tooltip bottom show position-absolute\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner fit\">\r\n              <span innerHTML={this.message}></span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"0eAAA,MAAMA,EAAwB,yR,MCYjBC,EAAkB,M,0EAgBrBC,KAAAC,SAAW,E,gEAb2D,G,kDAElD,G,mBACM,G,iBACJ,e,gJAMH,G,qBACA,M,yBAK3B,iBAAAC,GACEC,QAAQC,IAAIJ,KAAKK,WACjB,GAAIL,KAAKK,UAAUC,gBAAkBN,KAAKK,UAAUE,WAAa,EAAG,CAClEP,KAAKC,SAAWD,KAAKK,UAAUG,KAAOR,KAAKS,c,KACtC,CACLT,KAAKC,SAAWD,KAAKK,UAAUG,I,CAEjCR,KAAKU,UAAYV,KAAKK,UAASM,OAAAC,OAAA,GAAQZ,KAAKK,WAAc,GAC1DL,KAAKU,UAAUG,OAAS,GACxB,GAAIb,KAAKc,oBAAsBd,KAAKe,UAAUC,QAAOC,GAAKA,EAAEC,GAAGC,aAAenB,KAAKc,mBAAmBK,aAAYC,OAAS,EAAG,CAC5HpB,KAAKU,UAAUG,OAASb,KAAKc,kB,CAE/Bd,KAAKU,UAAUW,YAAcrB,KAAKsB,wBAA0B,GAC5DtB,KAAKuB,gB,CAEP,gBAAAC,GACExB,KAAKyB,QAAUC,YAAW,KACxB1B,KAAK2B,YAAY,GAChB,I,CAEL,oBAAAC,GACEC,aAAa7B,KAAKyB,Q,CAIpB,wBAAMK,GACJ9B,KAAKuB,gB,CAEP,cAAAA,GACE,MAAMQ,EAAQ,IAAI/B,KAAKgC,eACvBD,EAAM/B,KAAKiC,QAAU,EACrBjC,KAAKkC,gBAAkBlC,KAAKe,UAAUC,QAAOC,IAAMc,EAAMI,SAASlB,EAAEC,K,CAEtE,UAAAS,GACE3B,KAAKoC,gBAAgBC,KAAK,CACxBC,IAAK,qBACLC,YAAavC,KAAKuC,YAClBC,KAAI7B,OAAAC,OAAA,GAAOZ,KAAKU,Y,CAIpB,gBAAA+B,CAAiBH,EAAKI,GACpB1C,KAAKU,UAAU4B,IAAQI,EACvB,GAAIA,IAAU,GAAI,CAChB1C,KAAKU,UAAU,YAAcgC,C,CAE/B,GAAIJ,IAAQ,UAAYI,IAAU,GAAI,CACpC1C,KAAKU,UAAU,YAAcV,KAAKkC,gBAAgBS,MAAKC,GAAQA,EAAK1B,MAAQwB,IAAOG,MAAQ,E,CAE7F1C,QAAQC,IAAI,aAAcJ,KAAKU,WAC/BV,KAAK2B,Y,CAGP,qBAAAmB,CAAsBC,GAEpB/C,KAAKU,UAAUsC,UAAYD,EAAME,OAAOP,MACxC1C,KAAK2B,Y,CAGP,mBAAAuB,CACEH,GAKA,OAAQA,EAAMI,OAAOb,KACnB,IAAK,OACL,IAAK,iBACL,IAAK,OACHtC,KAAKoD,gBAAkB,KACvB,M,CAGN,MAAAC,GAEE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,mBACTF,EAAA,OAAKE,MAAM,UACRxD,KAAKyD,cAAgB,gBAAkBzD,KAAKyD,cAAgB,YAAczD,KAAKyD,cAAgB,eAC9FH,EAAA,QAAME,MAAM,WAAWxD,KAAKK,UAAUqD,kBACpC,KACJJ,EAAA,QAAME,MAAM,qBACTxD,KAAKK,UAAUsD,aAAaC,QAAQ5D,KAAKK,UAAUqD,iBAAmB,IAAK,IAC5EJ,EAAA,cAAYE,MAAM,QAAQK,QAAS7D,KAAKK,UAAUyD,YAAc9D,KAAKK,UAAU0D,aAEjFT,EAAA,YAAOtD,KAAKK,UAAU2D,uBAGxBV,EAAA,OAAKE,MAAM,yFACTF,EAAA,OAAKE,MAAM,uCACTF,EAAA,SACEpC,GAAI+C,IACJC,KAAK,QACLV,MAAO,gBAAgBxD,KAAKoD,iBAAmBpD,KAAKU,UAAUsC,YAAc,IAAM,kBAClFmB,YAAaC,EAAQC,QAAQC,8BAC7BzB,KAAK,YACL0B,QAASxB,GAAS/C,KAAK8C,sBAAsBC,GAC7CyB,SAAQ,KACR9B,MAAO1C,KAAKU,UAAUsC,aAG1BM,EAAA,OAAKE,MAAO,oDACTiB,EAAcC,uBAAyB1E,KAAKyD,cAAgB,gBAAkBzD,KAAKyD,cAAgB,YAAczD,KAAKyD,cAAgB,gBACrIH,EAAA,OAAKE,MAAM,mDACTF,EAAA,UAAQE,MAAO,8BAA+BtC,GAAI+C,IAAMU,SAAU5B,GAAS/C,KAAKyC,iBAAiB,SAAWM,EAAME,OAA4BP,QAC5IY,EAAA,UAAQZ,MAAM,GAAGkC,SAAU5E,KAAKU,UAAUG,SAAW,IAClDuD,EAAQC,QAAQQ,iBAElB7E,KAAKkC,gBAAgB4C,KAAIlC,GACxBU,EAAA,UAAQZ,MAAOE,EAAK1B,GAAI0D,UAAW5E,KAAKU,UAAUG,SAAW+B,EAAK1B,IAC/D0B,EAAKC,UAKZ,KAEH7C,KAAKU,UAAUqE,8BACdzB,EAAA,OAAKE,MAAM,kBACTF,EAAA,UACEE,MAAO,yBAAyBxD,KAAKoD,kBAAoBpD,KAAKU,UAAUW,aAAe,IAAMrB,KAAKU,UAAUW,aAAe,IAAM,kBACjIH,GAAI+C,IACJU,SAAU5B,GAAS/C,KAAKyC,iBAAiB,aAAeM,EAAME,OAA4BP,QAE1FY,EAAA,UAAQZ,MAAM,GAAGkC,SAAU5E,KAAKU,UAAUW,aAAe,IACtD+C,EAAQC,QAAQW,sBAElBhF,KAAKiF,kBAAkBH,KAAItC,GAC1Bc,EAAA,UAAQZ,OAAQF,EAAK0C,UAAWN,SAAU5E,KAAKU,UAAUW,cAAgBmB,EAAK0C,WAC3E1C,EAAK2C,mBAMhB7B,EAAA,OAAKE,MAAM,IACR4B,EAAkBpF,KAAKqF,SAASC,MAAQC,OAAOvF,KAAKC,UAAUuF,QAAQ,GAAE,IAAGpB,EAAQC,QAAQoB,a,gFCxK5G,MAAMC,EAAuB,mY,MCWhBC,EAAiB,M,0EAWpB3F,KAAA4F,eAAyC,CAC/CC,oBAAqB,EACrBC,gBAAiB,GACjBC,eAAgB,OAEV/F,KAAAgG,YAA0B,GAC1BhG,KAAAiG,eAAiC,IAAIC,E,6IAXb,M,4CAEA,K,CAWhC,uBAAMhG,GACJ,IACEF,KAAKiG,eAAeE,SAAS1B,EAAc2B,OAC3CpG,KAAKgG,kBAAoBhG,KAAKiG,eAAeI,iBAC7C,GAAIrG,KAAKsG,YAAa,CACpBtG,KAAK4F,eAAcjF,OAAAC,OAAA,GAAQZ,KAAKsG,Y,KAC3B,CACLtG,KAAK4F,eAAeC,oBAAsBU,SAASvG,KAAKgG,YAAY,GAAGd,WACvElF,KAAKwG,U,EAEP,MAAOC,G,EAKX,oBAAAC,CAAqB3D,GACnB/C,KAAK4F,eAAeE,gBAAkB/C,EAAME,OAAOP,MACnD1C,KAAKwG,U,CAGP,wBAAAG,CAAyBC,GACvB,GAAI5G,KAAK6G,UAAW7G,KAAK6G,UAAYC,UACrC9G,KAAK4F,eAAeC,oBAAsBU,SAASK,EAAI3D,OAAOP,OAC9D1C,KAAK+G,aACL/G,KAAKwG,U,CAGP,QAAAA,GACExG,KAAKoC,gBAAgBC,KAAK,CACxBC,IAAK,iBACLE,KAAI7B,OAAAC,OAAA,GAAOZ,KAAK4F,iB,CAIpB,qBAAAoB,GAGE,IAAIC,EAAKjH,KAAK6G,UAAY,IAAIK,KAAKlH,KAAK6G,WAAa,IAAIK,KACzD,GAAIlH,KAAK6G,WAAa7G,KAAKmH,WAAanH,KAAKoH,YAAa,CACxDH,EAAGI,SAASrH,KAAKmH,UAAWnH,KAAKoH,YAAa,EAAG,E,KAC5C,CACLH,EAAGI,SAASJ,EAAGK,WAAatH,KAAK4F,eAAeC,oBAAqBoB,EAAGM,aAAc,EAAG,E,CAG3F,OAAON,EAAGO,eAAe,UAAW,CAAEC,MAAO,UAAa,IAAMR,EAAGS,UAAY,KAAO1H,KAAK2H,aAAaV,EAAGK,YAAc,IAAMtH,KAAK2H,aAAaV,EAAGM,a,CAEtJ,YAAAI,CAAajF,GACX,OAAOA,EAAQ,GAAK,IAAIA,IAAUA,C,CAEpC,kBAAAkF,CAAmBhB,GACjB5G,KAAK4F,eAAeG,eAAiBa,EAAI3D,OAAO4E,QAChD,GAAI7H,KAAK4F,eAAeG,eAAgB,CACtC/F,KAAK4F,eAAeE,gBAAkB,GACtC9F,KAAK4F,eAAeC,oBAAsB,C,CAE5C7F,KAAK+G,aACL/G,KAAKwG,U,CAGP,UAAAO,GACE/G,KAAK8H,aAAe9H,KAAK8H,W,CAG3B,MAAAzE,GACElD,QAAQC,IAAIJ,KAAK+H,UACjB,OACEzE,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAO,gBACVF,EAAA,OAAKE,MAAM,iBACTF,EAAA,gBAAc0E,UAAWhI,KAAK+H,SAAUE,WAAW,cAAcC,mBAAoB,MAAOC,QAASnI,KAAKoI,WAG9G9E,EAAA,OAAKE,MAAO,mBAAmBxD,KAAKqI,cAAgB,SAClD/E,EAAA,OAAKE,MAAM,SACTF,EAAA,SAAOE,MAAM,oDAAoDY,EAAQC,QAAQiE,WAAU,KAC3FhF,EAAA,OAAKE,MAAM,gFACTF,EAAA,SAAOE,MAAM,eAAeU,KAAK,WAAW2D,QAAS7H,KAAK4F,eAAeG,eAAgB7E,GAAG,aAAayD,SAAU5B,GAAS/C,KAAK4H,mBAAmB7E,MAEtJO,EAAA,QAAME,MAAM,qCAAqCY,EAAQC,QAAQkE,oBAEjEvI,KAAK4F,eAAeG,eACpBzC,EAAA,WACEA,EAAA,OAAKE,MAAM,mCACTF,EAAA,QAAME,MAAM,gBAAgBY,EAAQC,QAAQmE,OAAM,KAClDlF,EAAA,OAAKE,MAAM,uCACTF,EAAA,SACEE,MAAM,eACNU,KAAK,OACLC,YAAaC,EAAQC,QAAQoE,mBAC7BvH,GAAG,YACHwB,MAAO1C,KAAK4F,eAAeE,gBAC3BvB,QAASxB,GAAS/C,KAAK0G,qBAAqB3D,OAIlDO,EAAA,OAAKE,MAAM,oBACTF,EAAA,QAAME,MAAM,+BAA+BY,EAAQC,QAAQqE,uBAAsB,MACjFpF,EAAA,OAAKE,MAAM,kBACTF,EAAA,UAAQE,MAAM,wBAAwBtC,GAAG,eAAeyD,SAAUiC,GAAO5G,KAAK2G,yBAAyBC,IACpG5G,KAAKgG,YAAYlB,KAAI6D,GACpBrF,EAAA,UAAQZ,OAAQiG,EAAYzD,UAAWN,SAAU5E,KAAK4F,eAAeC,sBAAwB8C,EAAYzD,WACtGyD,EAAYxD,mBAKpBnF,KAAK4F,eAAeC,oBACnBvC,EAAA,OAAKE,MAAM,8BACTF,EAAA,UACGc,EAAQC,QAAQuE,OAAM,IAAG5I,KAAKgH,0BAGjC,OAGN,M,mBC9ID6B,EACJ,8BAAAC,CAA+BC,EAASC,GAC7CD,EAAQE,iBAAmB,CACzB/H,GAAI8H,EAAIE,MAAMhI,GACdiI,MAAOH,EAAIE,MAAMC,MACjBC,UAAWJ,EAAIE,MAAMG,WACrBC,SAAUN,EAAIE,MAAMK,UACpBC,UAAWR,EAAIE,MAAMO,WACrBC,QAASV,EAAIE,MAAMO,WAAWtI,WAC9BwI,cAAeX,EAAIE,MAAMU,OACzBC,oBAAqBb,EAAIc,QACzBC,WAAYf,EAAIE,MAAMc,yBACtBnG,QAASmF,EAAIiB,OACbC,WAAY,GACZC,eAAgB,GAChBC,YAAa,GACbC,WAAY,GACZC,cAAetB,EAAIuB,YACnBC,MAAOxB,EAAIwB,MACXxC,UAAWgB,EAAIhB,UACfG,QAASa,EAAIb,Q,CAIV,wBAAAsC,CAAyB1B,GAC9BA,EAAQzC,YAAYoE,UAAY,GAChC3B,EAAQlF,QAAU,E,CAGb,gBAAA8G,CAAiB5H,EAAoBf,EAA8C4I,EAAiBC,EAAwBhI,GACjI,IAAId,EAAQC,EACZ,MAAMQ,KAAEA,EAAIF,IAAEA,EAAGwI,WAAEA,GAAe/H,EAAMI,OACxC,MAAM4H,EAAkB,KAAKvI,EAAKwI,iBAClC,MAAMC,EAAc,KAAKzI,EAAK0I,aAE9B,GAAIlL,KAAKmL,gBAAgB7I,GAAM,CAC7BP,EAAQ,IAAIqJ,G,CAGdpL,KAAKqL,+BAA+BN,EAAiBhJ,GAErD,GAAI8I,EAAe,CACjB,GAAIC,IAAe,OAAQ,CACzB,GAAI/I,EAAMuJ,IAAIP,IAAoBhJ,EAAMwJ,IAAIR,GAAiBO,IAAIL,GAAc,CAC7EjL,KAAKwL,+BAA+BT,EAAiBE,EAAazI,EAAMT,EAAOc,EAAM+H,E,MAElF,CACL,GAAIE,IAAe,WAAY,CAC7B,GAAIA,IAAe,uBAAwB,CACzC,GAAI/I,EAAMuJ,IAAIP,IAAoB/I,EAAcuJ,IAAIR,GAAiBO,IAAIL,GAAc,CACrFjL,KAAKwL,+BAA+BT,EAAiBE,EAAazI,EAAMT,EAAOc,EAAM+H,E,MAElF,CACL5K,KAAKwL,+BAA+BT,EAAiBE,EAAazI,EAAMT,EAAOc,EAAM+H,E,QAItF,CACL5K,KAAKyL,oBAAoBV,EAAiBE,EAAazI,EAAMT,E,CAE/D/B,KAAK0L,iBAAiBX,EAAiBhJ,GACvC,OAAOA,C,CAGD,eAAAoJ,CAAgB7I,GACtB,OAAOA,IAAQ,aAAeA,IAAQ,c,CAGhC,8BAAA+I,CAA+BN,EAAyB/I,GAC9D,IAAKA,EAAcsJ,IAAIP,GAAkB,CACvC/I,EAAc2J,IAAIZ,EAAiB,IAAIK,I,EAGnC,mBAAAK,CAAoBV,EAAyBE,EAAqBzI,EAAWR,GACnF,IAAI4J,EAAoB5J,EAAcuJ,IAAIR,GAC1C,GAAIvI,EAAKqJ,aAAe,GAAKrJ,EAAKsJ,YAAc,EAAG,CACjDF,EAAkBG,OAAOd,E,KACpB,CACLjJ,EAAc2J,IAAIZ,EAAiBa,EAAkBD,IAAIV,EAAWtK,OAAAC,OAAAD,OAAAC,OAAA,GAAO4B,GAAI,CAAER,cAAegK,MAAMxJ,EAAKqJ,YAAYI,MAAM,M,EAIzH,gBAAAP,CAAiBX,EAAyB/I,GAChD,GAAIA,EAAcsJ,IAAIP,GAAkB,CACtC,IAAIa,EAAoB5J,EAAcuJ,IAAIR,GAC1C,GAAIa,EAAkBM,OAAS,EAAG,CAChClK,EAAc+J,OAAOhB,E,GAInB,8BAAAS,CAA+BT,EAAyBE,EAAqBzI,EAAMR,EAA8Ca,EAAc+H,GACrJ5I,EAAcmK,QACd,IAAInD,EAAM,GACV,GAAI4B,EAAQ,CACV5B,EAAGrI,OAAAC,OAAAD,OAAAC,OAAA,GAAQ4B,GAAI,CAAEQ,UAAWH,GAAQ,GAAIhC,OAAQ,I,KAC3C,CACLmI,EAAGrI,OAAAC,OAAA,GAAQ4B,E,CAEbR,EAAc2J,IAAIZ,GAAiB,IAAIK,KAAMO,IAAIV,EAAajC,G,CAEhE,kCAAMoD,CAA6BrD,EAASsD,EAAUC,GACpD,IACE,MAAMC,EAAcxD,EAAQyD,YAAY,gBACpCzD,EAAQ0D,2BACR1D,EAAQyD,YAAY,YACpBzD,EAAQ2D,YAAYC,QAAQrH,KAC5ByD,EAAQyD,YAAY,iBACpBzD,EAAQE,iBAAiBY,oBAAoBvE,KAC7C,GACJ,MAAMsH,EAAQ7D,EAAQyD,YAAY,eAAiBzD,EAAQ2D,YAAYG,MAAQ/F,UAC/E,MAAMwD,EACJvB,EAAQyD,YAAY,iBAAmBzD,EAAQyD,YAAY,YACvDzD,EAAQ2D,YAAYI,eACpB/D,EAAQyD,YAAY,iBACpBzD,EAAQE,iBAAiBqB,cACzBxD,UACN,IAAI0D,EAAQ,GACZ,GAAIzB,EAAQyD,YAAY,YAAa,CAGnChC,EAAQzB,EAAQ2D,YAAYK,K,MACvB,GAAIhE,EAAQyD,YAAY,iBAAkB,CAC/ChC,EAAQzB,EAAQE,iBAAiBuB,K,MAC5B,GAAIzB,EAAQyD,YAAY,gBAAiB,CAC9ChC,EAAQzB,EAAQzC,YAAYyG,MAAM/L,QAAO4B,GAAQA,EAAKoK,aAAejE,EAAQ2D,YAAYO,Y,CAE3F9M,QAAQC,IAAI,QAASoK,GAErB,MAAO,CACLzB,EAAQE,iBACRoD,EACA,IAAInF,KAAK6B,EAAQmE,cAAcnF,UAC/B,IAAIb,KAAK6B,EAAQmE,cAAc9E,QAC/BW,EAAQrI,UACRqI,EAAQmE,cAAczM,eACtB6L,EACAvD,EAAQoE,WACR3C,EACAzB,EAAQ1D,SACRiF,EACAvB,EAAQ2D,YAAYU,MACpBb,EACAK,EACA7D,EAAQ2D,YAAYO,W,CAEtB,MAAOxG,GACPtG,QAAQC,IAAIqG,E,EAGR,0BAAA4G,CAA2BX,GACjC,OAAQA,EAAYY,eAAe,UAAYZ,EAAYG,OAAU,I,CAE/D,uBAAAU,CAAwBb,G,MAC9B,OAAOc,EAAAd,EAAYhC,aAAS,MAAA8C,SAAA,SAAAA,EAAE7K,MAAK8K,GAC1BA,EAAavM,KAAOwL,EAAYgB,W,CAGpC,kBAAAC,CAAmBjB,EAAa1K,GACrC7B,QAAQC,IAAIsM,EAAaA,EAAYhC,WACrCvK,QAAQC,IAAIJ,KAAKqN,2BAA2BX,IAC5C,MAAMkB,EAAW5N,KAAKuN,wBAAwBb,GAC9C,MAAMmB,GAAWD,EAAW,GAAK,KAAKA,IAAQ,MAARA,SAAQ,SAARA,EAAU1M,KAChD,MAAMgK,EAAa,KAAKwB,EAAYoB,eACpC,MAAMtL,EAAO,CACXuL,WAAYrB,EAAYsB,aACxBxN,KAAMkM,EAAYuB,KAClB1N,SAAUmM,EAAYgB,UACtBxC,WAAYwB,EAAYoB,aACxB9C,eAAgB4C,EAAWA,EAAS1M,GAAK,GACzCwC,iBAAkBkK,EAAWA,EAAS/K,KAAO,GAC7CgJ,WAAY,EACZlI,aAAc+I,EAAYwB,UAC1BrN,OAAQ6L,EAAYG,MACpB7J,UAAW0J,EAAYyB,KACvBrK,YAAa4I,EAAY5I,YACzBC,UAAW2I,EAAY3I,UACvBC,qBAAsB0I,EAAY1I,sBAEpChC,EAAc2J,IAAIkC,GAAS,IAAIzC,KAAMO,IAAIT,EAAY1I,G,ECrLzD,MAAM4L,EAAqB,0oD,MCkBdC,EAAe,M,gWA6BlBrO,KAAAsO,eAAsG,KAGtGtO,KAAAuO,uBAAkC,MAClCvO,KAAAwO,cAAkC,GAClCxO,KAAAU,UAAsC,GACtCV,KAAAiJ,iBAA2C,GAC3CjJ,KAAA4F,eAAyC,GACzC5F,KAAAyO,gBAA8B,GAC9BzO,KAAAgC,cAA+C,IAAIoJ,IACnDpL,KAAAiF,kBAAgC,GAChCjF,KAAAiG,eAAiC,IAAIC,EACrClG,KAAA0O,oBAAsB,IAAI7F,EAC1B7I,KAAA2O,cAAgB,IAAIC,E,8IArCU,M,6GAKuB,CAC3DC,MAAO,EACPC,MAAO,G,iBAEuB,M,iGAIV,E,CA2BtB,aAAAC,CAAc9N,GACZ,GAAIA,EAAEqB,MAAQ,SAAU,CACtBtC,KAAKgP,a,MACA,M,CAET,gBAAAxN,GACEyN,SAASC,iBAAiB,UAAWlP,KAAK+O,c,CAE5C,oBAAAnN,GACEqN,SAASE,oBAAoB,UAAWnP,KAAK+O,c,CAG/C,YAAAK,CAAanO,GACX,GAAIjB,KAAKwM,YAAY,iBAAkB,CACrCvL,EAAEoO,2BACFpO,EAAEqO,kBACFtP,KAAKiJ,iBAAmB,GACxBjJ,KAAK0O,oBAAoBjE,yBAAyBzK,MAClDA,KAAK+G,Y,EAKT,gCAAMwI,CAA2BtO,GAC/BA,EAAEoO,2BAEF,MAAM/M,IAAEA,EAAGE,KAAEA,GAASvB,EAAEkC,OACxB,GAAIb,IAAQ,SAAU,CACpB,MAAM0G,QAAYhJ,KAAKiG,eAAeuJ,kBAAmBhN,EAAa+H,YAAavK,KAAKyP,UACxFzP,KAAK0O,oBAAoB5F,+BAA+B9I,KAAMgJ,GAC9DhJ,KAAKsM,aAAetD,EAAI0G,OACxB1P,KAAK+G,Y,MACA,GAAIzE,IAAQ,QAAUE,IAAS,GAAI,CACxC,MAAMwG,QAAYhJ,KAAKiG,eAAeuJ,kBAAkBhN,EAAgBxC,KAAKyP,UAC7EzP,KAAK0O,oBAAoB5F,+BAA+B9I,KAAMgJ,GAC9DhJ,KAAKsM,aAAetD,EAAI0G,OACxB1P,KAAK+G,Y,EAGT,uBAAM7G,GACJF,KAAKiG,eAAeE,SAAS1B,EAAc2B,OAC3CpG,KAAK2O,cAAcxI,SAAS1B,EAAc2B,OAC1CpG,KAAK2P,iBAAmB,CAAE3H,UAAWhI,KAAK0M,YAAYkD,UAAWzH,QAASnI,KAAK0M,YAAYmD,SAC3F7P,KAAK+O,cAAgB/O,KAAK+O,cAAce,KAAK9P,MAC7C,IAAKA,KAAK0M,YAAYiD,iBAAkB,CACtC,M,CAEF3P,KAAKsG,YAActG,KAAK0M,YACxB1M,KAAKkN,cAAavM,OAAAC,OAAA,GAAQZ,KAAKsG,YAAYqJ,kBAC3C,IACE,MAAMI,QAAqB/P,KAAKgQ,oBAChC7P,QAAQC,IAAI2P,GACZ/P,KAAKiQ,iBAAiBjQ,KAAKkQ,uBAC3BlQ,KAAKmQ,mBAAmBJ,GAExB,GAAI/P,KAAKwM,YAAY,gBAAiB,CACpCxM,KAAKoQ,gBAAkB,CACrBvB,MAAO7O,KAAKsG,YAAY0H,aACxBc,MAAO9O,KAAKsG,YAAY+J,gBAE1BrQ,KAAKsO,eAAiB,CACpBgC,SAAUtQ,KAAKsG,YAAYgK,SAC3BpF,WAAYlL,KAAKsG,YAAYwH,aAC7BjN,OAAQb,KAAKsG,YAAYuG,MACzB0D,WAAYvQ,KAAKsG,YAAYoH,WAE/B1N,KAAK0O,oBAAoBf,mBAAmB3N,KAAKsG,YAAatG,KAAKgC,c,CAErE,IAAKhC,KAAKwM,YAAY,eAAgB,CACpCxM,KAAK0O,oBAAoBjE,yBAAyBzK,K,CAGpD,GAAIA,KAAKsG,YAAYkK,aAAe,gBAAiB,CACnDxQ,KAAKuO,uBAAyB,KAC9BvO,KAAKyQ,KAAO,U,MACP,GAAIzQ,KAAKsG,YAAYkK,aAAe,cAAe,CACxDxQ,KAAKyQ,KAAO,iB,KACP,CACLzQ,KAAKyQ,KAAO,U,EAEd,MAAOhK,GACPtG,QAAQsG,MAAM,gCAAiCA,E,EAInD,uBAAMuJ,GACJ7P,QAAQC,IAAI,uBACZ,aAAaJ,KAAKiG,eAAe+J,mB,CAEnC,qBAAAU,GAEE,GAAI1Q,KAAKU,UAAUU,SAAW,EAAG,CAC/B,OAAO,I,CAETjB,QAAQC,IAAIJ,KAAKU,WACjB,IAAK,MAAM8B,KAAQxC,KAAKU,UAAW,CACjC,GAAI8B,EAAKQ,YAAc,KAAQR,EAAKnB,aAAe,IAAMmB,EAAKnB,aAAe,IAAMmB,EAAKuC,6BAA+B,CACrH,OAAO,I,EAGX,OAAO,K,CAET,gBAAA4L,GACE,MAAMC,EAAkB,CAACC,EAAUvO,EAAKwO,KACtC,IAAKD,EAAU,CACb,OAAO,I,CAET,GAAIA,IAAa7Q,KAAKU,UAAW,CAC/B,OAAOV,KAAK0Q,uB,CAMd,GAAIpO,IAAQ,sBAAuB,CACjC,GAAIuO,EAASvO,KAASwE,UAAW,CAC/B,OAAO+J,EAASvO,GAAKgD,OAAS,E,KACzB,CACL,OAAO,I,EAGX,OAAOuL,EAASvO,KAASwO,GAAcD,EAASvO,KAASwE,SAAS,EAEpE,OACE8J,EAAgB5Q,KAAKU,UAAW,YAAa,KAG7CkQ,EAAgB5Q,KAAKiJ,iBAAkB,YAAa,KACpD2H,EAAgB5Q,KAAKiJ,iBAAkB,WAAY,KAEnD2H,EAAgB5Q,KAAKiJ,iBAAkB,sBAAuB,KAC9D2H,EAAgB5Q,KAAKiJ,iBAAkB,QAAS,G,CAIpD,gBAAAgH,CAAiBc,GACf/Q,KAAKwO,cAAgBuC,EAAcjM,KAAI4K,IAAM,CAC3CxO,GAAIwO,EAAOpK,KACX5C,MAAOgN,EAAOsB,YACdC,IAAKvB,EAAOuB,IACZ/M,KAAMwL,EAAOxL,SAEf,GAAIlE,KAAKwM,YAAY,gBAAiB,CACpCxM,KAAKsM,aAAY3L,OAAAC,OAAA,GAAQZ,KAAKsG,YAAY4K,O,KACrC,CACLlR,KAAKsM,aAAe,CAClBhH,KAAMyL,EAAc,GAAGzL,KACvB0L,YAAaD,EAAc,GAAGC,YAC9BC,IAAKF,EAAc,GAAGE,I,EAK5B,kBAAAd,CAAmBnH,GACjBhJ,KAAKyO,gBAAkBzF,IAAG,MAAHA,SAAG,SAAHA,EAAKyF,gBAC5BzO,KAAKiJ,iBAAiBsD,YAAcvD,EAAIuD,YACxCvM,KAAKiF,kBAAoB+D,EAAI/D,iB,CAG/B,sBAAAkM,CAAuBpO,GACrB,GAAI/C,KAAKwM,YAAY,aAAexM,KAAKwM,YAAY,iBAAkB,CACrExM,KAAK0O,oBAAoBjE,yBAAyBzK,K,CAEpDA,KAAKoQ,gBAAezP,OAAAC,OAAA,GAAQmC,EAAMI,O,CAGpC,mCAAMiO,CAA8BpJ,EAAmBG,GACrD,IACE,MAAMkJ,EAAgBrR,KAAKsG,YAAYoE,UAAU5F,KAAIlC,GAAQA,EAAK1B,KAClE,MAAMsB,QAAaxC,KAAKiG,eAAeqL,uBAAuBtJ,EAAWG,EAASnI,KAAKmN,WAAYnN,KAAKoQ,gBAAiBpQ,KAAKyP,SAAU4B,EAAerR,KAAKqF,UAC5J,IAAKrF,KAAKwM,YAAY,gBAAiB,CACrCxM,KAAKsG,YAAYqJ,iBAAiB5H,SAAW,IAAIb,KAAKlH,KAAKkN,cAAcnF,UACzE/H,KAAKsG,YAAYqJ,iBAAiBvH,OAAS,IAAIlB,KAAKlH,KAAKkN,cAAc9E,O,CAEzEpI,KAAKsG,YAAW3F,OAAAC,OAAAD,OAAAC,OAAA,GAAQZ,KAAKsG,aAAW,CAAEoE,UAAWlI,EAAK+O,W,CAC1D,MAAO9K,G,EAIX,uBAAA8G,CAAwB1M,G,MACtB,OAAO2M,EAAAxN,KAAKsG,YAAYoE,aAAS,MAAA8C,SAAA,SAAAA,EAAE7K,MAAK8K,GAC/BA,EAAa+D,cAAc7O,MAAKC,GAAQA,EAAK1B,MAAQL,K,CAIhE,gBAAA4Q,GACE,OAAQzR,KAAKsG,YAAYgH,eAAe,uBAAyBtN,KAAKsG,YAAYoL,oBAAuB,E,CAE3G,WAAA1C,GACEhP,KAAKkN,cAAgB,GACrBlN,KAAK2R,mBAAmBtP,OACxB4M,SAASE,oBAAoB,UAAWnP,KAAK+O,c,CAE/C,WAAAvC,CAAYlK,GACV,OAAOtC,KAAKsG,YAAYkK,aAAelO,C,CAGzC,iBAAAsP,CAAkB7O,GAChBA,EAAMsM,2BACNtM,EAAMuM,kBACN,MAAMuC,EAA8B9O,EAAMI,OAC1C,GAAI0O,EAAIvP,MAAQ,oBAAqB,CACnCtC,KAAKkN,cAAgB2E,EAAIrP,KACzB,GAAIxC,KAAKwM,YAAY,aAAexM,KAAKwM,YAAY,iBAAkB,CACrExM,KAAKsG,YAAYoE,UAAY,E,MACxB,GAAI1K,KAAKoQ,gBAAgBvB,QAAU,EAAG,CAC3C7O,KAAKoR,8BAA8BU,EAAsB,IAAI5K,KAAKlH,KAAKkN,cAAcnF,WAAY+J,EAAsB,IAAI5K,KAAKlH,KAAKkN,cAAc9E,S,GAKzJ,qBAAA2J,CAAsBhP,GACpBA,EAAMsM,2BACNtM,EAAMuM,kBACN,MAAMuC,EAA8B9O,EAAMI,OAC1CnD,KAAK4F,eAAiBiM,EAAIrP,I,CAG5B,qBAAAwP,CAAsBjP,GACpBA,EAAMsM,2BACNtM,EAAMuM,kBACN,MAAMuC,EAAM9O,EAAMI,OAClB,GAAI0O,EAAItP,YAAa,CACnB,GAAIvC,KAAKwM,YAAY,gBAAkBxM,KAAKwM,YAAY,iBAAkB,CACxExM,KAAKU,UAAUmR,EAAItP,aAAY5B,OAAAC,OAAAD,OAAAC,OAAA,GAC1BiR,EAAIrP,MAAI,CACX3B,OAAQb,KAAKsG,YAAYuG,O,MAEtB7M,KAAKU,UAAUmR,EAAItP,aAAesP,EAAIrP,I,EAIjD,wBAAAyP,CAAyBlP,GACvBA,EAAMsM,2BACNtM,EAAMuM,kBACN,MAAMuC,EAA8B9O,EAAMI,OAC1CnD,KAAKiJ,iBAAmB4I,EAAInP,MAAMF,I,CAGpC,oBAAA0P,CAAqBnP,GACnBA,EAAMsM,2BACNtM,EAAMuM,kBACN,MAAM5M,EAAQK,EAAMI,OACpB,MAAMgP,EAAiBnS,KAAKwO,cAAc7L,MAAKkP,GAAOA,EAAI3Q,KAAOwB,EAAMvB,aACvEnB,KAAKsM,aAAe,CAClBhH,KAAM5C,EACNsO,YAAamB,EAAezP,OAAS,GACrCuO,IAAKkB,EAAelB,I,CAGxB,UAAAlK,GACE/G,KAAK8H,aAAe9H,KAAK8H,W,CAI3B,gBAAAsK,GACEpS,KAAKqS,SAAS,W,CAEhB,QAAAA,CAASA,GACPrS,KAAKyQ,KAAO4B,EACZrS,KAAK+G,Y,CAGP,gBAAAuL,GACEtS,KAAKuO,uBAAyB,KAC9BvO,KAAKqS,SAAS,W,CAGhB,qBAAAE,GACE,OACEjP,EAACkP,EAAQ,KACPlP,EAAA,wBACEyE,SAAU/H,KAAKkN,cAAcuF,YAC7BrK,OAAQpI,KAAKkN,cAAcwF,UAC3B7L,UAAW7G,KAAKsG,YAAYqM,WAC5BC,kBAAmB7P,GAAS/C,KAAK+R,sBAAsBhP,KAEzDO,EAAA,OAAKE,MAAM,0EACTF,EAAA,UAAQE,MAAM,8BAA8BqP,QAAS,IAAM7S,KAAKgP,eAC7D5K,EAAQC,QAAQyO,YAGnBxP,EAAA,UAAQE,MAAM,4BAA4BqP,QAAS,IAAM7S,KAAK+S,mBAC3D3O,EAAQC,QAAQ2O,iB,CAO3B,mBAAA9P,CACEH,G,QAKA,OAAQA,EAAMI,OAAOb,KACnB,IAAK,OACHtC,KAAKiT,SAAS,OAEd,MACF,IAAK,SACHlQ,EAAMsM,2BACNtM,EAAMuM,kBACNtP,KAAKgP,cACL,MACF,IAAK,OACHjM,EAAMsM,2BACNtM,EAAMuM,kBACNtP,KAAKqS,SAAS,YACd,MACF,IAAK,OACHrS,KAAKiT,SAAS,OACdjT,KAAKkT,WAAa,OAClB,MACF,IAAK,iBACHlT,KAAKiT,SAAS,MACdjT,KAAKkT,WAAa,iBAClB,MACF,IAAK,OACHnQ,EAAMsM,2BACNtM,EAAMuM,kBACN,MAAK9B,EAAAxN,KAAKoQ,mBAAe,MAAA5C,SAAA,SAAAA,EAAEqB,OAAO,CAChC7O,KAAKmT,gBAAgB9Q,KAAK,sBAC1B,K,CAEF,GAAIrC,KAAKgC,cAAckK,KAAO,EAAG,CAC/BlM,KAAKqS,SAAS,YACd,K,KACK,CACL,KAAIe,EAAApT,KAAKsG,eAAW,MAAA8M,SAAA,SAAAA,EAAE1I,UAAUtJ,UAAW,EAAG,CAC5CpB,KAAKqT,gBAAgBhR,KAAK,sBAC1B,K,EAGJrC,KAAKsT,MAAMjR,KAAK,CACd6B,KAAM,QACN8M,YAAa5M,EAAQC,QAAQkP,mBAC7BC,MAAOpP,EAAQC,QAAQkP,qBAEzB,MACF,IAAK,QACHvT,KAAKoR,8BAA8BU,EAAsB,IAAI5K,KAAKlH,KAAKkN,cAAcnF,WAAY+J,EAAsB,IAAI5K,KAAKlH,KAAKkN,cAAc9E,UACnJ,M,CAKN,4BAAAqL,CAA6B1Q,GAC3BA,EAAMsM,2BACNtM,EAAMuM,kBACN,GAAIvM,EAAMI,OAAOb,MAAQ,mBAAoB,CAC3CtC,KAAKiS,yBAAyBlP,E,KACzB,CACL/C,KAAKgS,sBAAsBjP,E,EAG/B,qBAAMgQ,GACJ,MAAMW,EAAc1M,GAAuBhH,KAAK4F,eAAeC,qBAC/D,MAAM8N,QAAe3T,KAAKiG,eAAe2N,UAASjT,OAAAC,OAAA,CAChDoH,UAAW8J,EAAsB9R,KAAKsG,YAAYqJ,iBAAiB5H,UACnEI,QAAS2J,EAAsB9R,KAAKsG,YAAYqJ,iBAAiBvH,QACjEyL,MAAO7T,KAAK4F,eAAeE,iBAAmB,GAC9C8G,MAAO5M,KAAKsG,YAAYuG,MAAM1L,WAC9B2S,iBAAkB9T,KAAK4F,eAAeG,eAAiB,MAAQ/F,KAAK4F,eAAeC,sBAAwB,EAAI,MAAQ,MACvHkO,YAAa/T,KAAK4F,eAAeC,qBAAuB,IACrD6N,IAEL,MAAMM,QAAoBC,EAAyBN,GACnD3T,KAAKkU,eAAe7R,KAAK2R,GACzBhU,KAAKgP,a,CAGP,cAAMiE,CAAS5G,GACbrM,KAAKmU,gBAAgB9H,GACrBlM,QAAQC,IAAI,qBACZ,GAAIJ,KAAKwM,YAAY,iBAAmBxM,KAAKwM,YAAY,YAAa,CACpE,GAAIxM,KAAK0Q,wBAAyB,CAChC1Q,KAAKoU,UAAY,GACjB,M,MAEG,CACL,GAAIpU,KAAK2Q,mBAAoB,CAC3B3Q,KAAKoU,UAAY,GACjB,M,EAGJ,IACEjU,QAAQC,IAAI,WACZ,GAAI,CAAC,MAAO,MAAO,OAAO+B,SAASnC,KAAKsG,YAAY+N,aAAc,CAChErU,KAAK2O,cAAc2F,YAAYtU,KAAKsG,YAAYiO,K,CAElD,GAAIvU,KAAKwM,YAAY,iBAAmBxM,KAAKwM,YAAY,YAAa,CACpExM,KAAKiJ,iBAAiBpF,QAAU7D,KAAKsG,YAAYuN,K,CAEnD,MAAMW,QAAsBxU,KAAK0O,oBAAoBtC,6BAA6BpM,KAAMqM,EAAUrM,KAAKsM,oBACjGtM,KAAKiG,eAAegN,YAAYuB,GACtCxU,KAAKyU,iBAAiBpS,KAAK,K,CAC3B,MAAOoE,G,SAGPzG,KAAK0U,mB,EAGT,eAAAP,CAAgBQ,GACd,GAAI3U,KAAKwM,YAAY,iBAAmBxM,KAAKwM,YAAY,YAAa,CACpExM,KAAKoU,UAAY,M,KACZ,CACLpU,KAAKoU,UAAYO,EAAe,iBAAmB,M,EAIvD,wBAAAlI,GACE,OAAOzM,KAAKiJ,iBAAiBsD,YAAY5J,MAAK1B,GAAKA,EAAEkE,gBAAkBnF,KAAKsG,YAAYsO,eAAc1P,S,CAGxG,iBAAAwP,GACE1U,KAAKoU,UAAY,GACjB1S,YAAW,KACT1B,KAAKgP,aAAa,GACjB,I,CAEL,gBAAA6F,CAAiB9R,GACf,MAAMhB,EAAQ/B,KAAK0O,oBAAoB/D,iBACrC5H,EACA/C,KAAKgC,cACLhC,KAAKwM,YAAY,gBACjBxM,KAAKwM,YAAY,iBAAmBxM,KAAKwM,YAAY,kBAAoBxM,KAAKwM,YAAY,eAC1FxM,KAAKsG,YAAY6H,MAEnBnO,KAAKgC,cAAgB,IAAIoJ,IAAIrJ,GAC7B/B,KAAK+G,Y,CAEP,cAAA+N,CAAejS,GACb,OAAO7C,KAAKyQ,OAAS5N,C,CAEvB,MAAAQ,GAEE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,qBAAqBqP,QAAS,IAAM7S,KAAKgP,gBACpD1L,EAAA,OAAKE,MAAO,eAAiBxD,KAAK8U,eAAe,mBAAqB,aAAe,KACnFxR,EAAA,OAAKE,MAAM,8CACTF,EAAA,OAAKE,MAAM,4DACTF,EAAA,MAAIE,MAAM,wDACPxD,KAAK8U,eAAe,mBAAqB9U,KAAKsG,YAAYyO,kBAAoB/U,KAAKsG,YAAY0O,OAElG1R,EAAA,WACEE,MAAM,mBACNyR,mBAAoB,KAClBjV,KAAKgP,aAAa,GAGpB1L,EAAA,OAAK4R,KAAK,OAAOC,MAAM,6BAA6BC,QAAQ,cAAcC,OAAQ,GAAIC,MAAO,IAC3FhS,EAAA,QAAMiS,EAAE,gSAKhBjS,EAAA,OAAKE,MAAM,gBACRxD,KAAK8U,eAAe,aACnBxR,EAAA,6BACEgL,eAAgBtO,KAAKsO,eACrBkH,iBAAkBxV,KAAK2P,iBACvBnM,MAAO,WACPiS,UAAWzV,KAAKsG,YAAYkK,WAC5BkF,cAAe1V,KAAKgC,cACpBqD,SAAUrF,KAAKqF,SACfkJ,uBAAwBvO,KAAKuO,uBAC7BE,gBAAiBzO,KAAKyO,gBACtBvB,cAAelN,KAAKkN,cACpBR,YAAa1M,KAAKsG,YAClB8J,gBAAiBpQ,KAAKoQ,gBACtBnH,iBAAkBjJ,KAAKiJ,iBAEvB0M,sBAAuB3V,KAAK2V,sBAC5BC,kBAAmBhP,IACjB5G,KAAK6U,iBAAiBjO,EAAI,EAE5B4H,cAAexO,KAAKwO,cACpBqH,WAAY7V,KAAKmN,aAIpBnN,KAAK8U,eAAe,aACnBxR,EAAA,eACE+B,SAAUrF,KAAKqF,SACfwQ,WAAY7V,KAAKmN,WACjB2I,mBAAoB9V,KAAK8V,mBACzBC,kBAAmB/V,KAAKU,UACxBsV,gBAAiBhW,KAAKgW,gBACtB5B,UAAWpU,KAAKoU,UAChBsB,cAAe1V,KAAKgC,cACpBiD,kBAAmBjF,KAAKiF,kBACxBiI,cAAelN,KAAKkN,cACpBR,YAAa1M,KAAKsG,YAClBiI,uBAAwBvO,KAAKuO,uBAC7BkB,SAAUzP,KAAKyP,SACfxG,iBAAkBjJ,KAAKiJ,iBACvBgN,iBAAkBjW,KAAKsG,YACvB4P,qBAAsBlW,KAAKwM,YAAY,iBAAmBxM,KAAKwM,YAAY,YAC3EoG,kBAAmB7P,GAAS/C,KAAKyT,6BAA6B1Q,KAGjE/C,KAAK8U,eAAe,mBAAqB9U,KAAKuS,wBAA0B,O,aCvjBrF,MAAM4D,EAA8B,6e,MCavBC,EAAwB,M,4EAe3BpW,KAAAiG,eAAiB,IAAIC,EACrBlG,KAAAqW,YAAc,IAAIC,E,cAfC,G,YACF,G,aACC,G,wLAQG,E,CAO7B,YAAAC,CAAaC,G,QACX,IAAIC,EAAsC,IAAIzK,MAC9C,IAAIoH,GAAA5F,EAAAgJ,EAAgBE,aAAS,MAAAlJ,SAAA,SAAAA,EAAE+D,aAAS,MAAA6B,SAAA,SAAAA,EAAEhS,OAAQ,CAChDqV,EAAYD,EAAgBE,UAAUnF,UACtCiF,EAAgBE,UAAUnF,UAAUoF,SAAQlJ,IAC1CA,EAAamJ,SAAW,IAAI,G,CAGhC5W,KAAK6W,aAAanM,UAAY+L,C,CAEhC,mBAAMK,GACJ,IACE,MAAOC,EAAcC,EAAeC,SAAuBC,QAAQC,IAAI,CACrEnX,KAAKqW,YAAYe,UAAUpX,KAAKmN,WAAYnN,KAAKyP,UACjDzP,KAAKqW,YAAYgB,cAAcrX,KAAKyP,UACpCzP,KAAKiG,eAAeqR,aAAatX,KAAKyP,YAExCtP,QAAQC,IAAI4W,GACZ,IAAK5S,EAAQC,QAAS,CACpBD,EAAQC,QAAU2S,EAAc3S,QAChCD,EAAQmT,UAAYP,EAAcO,S,CAEpCvX,KAAKgW,gBAAkBiB,EAEvB,MAAQO,wBAAyBC,EAAcpS,SAAEA,EAAQqS,wBAAEA,EAAuBC,wBAAEA,EAAuBC,iBAAEA,GAAqBb,EAAa,aAC/I/W,KAAK6W,aAAe,CAAExR,WAAUqS,0BAAyBC,0BAAyBE,WAAYD,GAC9F5X,KAAKuW,aAAaQ,GAClB,MAAMe,EAAqB,CAAC,MAAO,OACnC9X,KAAK8V,mBAAqB2B,EAAeM,MAAKC,GAAUF,EAAmB3V,SAAS6V,EAAO1S,O,CAC3F,MAAOmB,GACPtG,QAAQsG,MAAM,0BAA2BA,E,EAG7C,iBAAAvG,GACE,GAAIF,KAAKiY,QAAS,CAChBC,EAAMC,SAASC,QAAUpY,KAAKiY,O,CAEhC,GAAIjY,KAAKqY,SAAW,GAAI,CACtB5T,EAAc2B,MAAQpG,KAAKqY,OAC3BrY,KAAKiG,eAAeE,SAASnG,KAAKqY,QAClCrY,KAAKqW,YAAYlQ,SAASnG,KAAKqY,QAC/BrY,KAAK8W,e,EAIT,mBAAMwB,GACJ7T,EAAc2B,MAAQpG,KAAKqY,OAC3BrY,KAAKiG,eAAeE,SAASnG,KAAKqY,QAClCrY,KAAKqW,YAAYlQ,SAASnG,KAAKqY,QAE/BrY,KAAK8W,e,CAEP,wBAAAyB,GACEvY,KAAKwY,YAAc,I,CAErB,oBAAAC,GACE,MAAMC,EAAW,IAAIxR,KACrBwR,EAASC,QAAQD,EAAShR,UAAY,GACrC1H,KAAKwY,YAAoD,CACxD5I,UAAW5P,KAAKgI,UAChB2H,iBAAkB,CAChB5H,SAAU,IAAIb,KACduL,YAAa,GACbrK,OAAQsQ,EACRhG,UAAW,GACXjS,eAAgB,EAChBoD,QAAS,IAEXgM,QAAS7P,KAAKmI,QACdyQ,MAAO,GACPpI,WAAY,eACZqI,GAAI,GACJ1K,KAAM,GACN2K,MAAO,GACPC,eAAgB,GAChB/D,MAAO5Q,EAAQC,QAAQ2U,e,CAG3B,MAAA3V,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,iBACAA,EAAA,uBACAA,EAAA,OAAKE,MAAM,iBAAiBqP,QAAS7S,KAAKyY,qBAAqB3I,KAAK9P,OAClEsD,EAAA,QAAMT,KAAK,aAEZ7C,KAAKwY,aACJlV,EAAA,qBACE4M,sBAAuBlQ,KAAK6W,aAAaa,wBACzC/B,sBAAuB3V,KAAK6W,aAAac,wBACzC7B,mBAAoB9V,KAAK8V,mBACzBE,gBAAiBhW,KAAKgW,gBACtB3Q,SAAUrF,KAAK6W,aAAaxR,SAC5BoK,SAAUzP,KAAKyP,SACftC,WAAYnN,KAAKmN,WACjBT,YAAa1M,KAAKwY,YAClBS,mBAAqBhY,IACnBA,EAAEoO,2BACFpO,EAAEqO,kBACFtP,KAAKyU,iBAAiBpS,KAAK,KAAK,EAElC6W,qBAAsB,IAAMlZ,KAAKuY,6B,oEC5H7C,MAAMY,EAA+B,GAE9B,MAAQC,MAAOC,EAAsB1U,SAAU2U,GAA0BC,EAA4BJ,G,SAC5FK,EAAiBC,GAC/B,OAAOJ,EAAqBI,KAAS,SACvC,CCbA,MAAMC,EAA2B,sM,MCUpBC,EAAqB,M,6GAEJ,I,CAEpB,WAAAnN,CAAYzJ,GAClB,OAAOA,IAAU/C,KAAKyV,S,CAExB,QAAAmE,CAASC,GACP,GAAI7Z,KAAKwM,YAAY,gBAAiB,CACpC,GAAIqN,IAAU,SAAU,CACtB,MAAO,W,KACF,CACL,MAAO,8B,EAGX,MAAO,W,CAGD,YAAAC,CAAa5V,EAAwB2V,EAAeE,EAAW,OACrE,OACEzW,EAAA,OAAKE,MAAOxD,KAAKga,yBAA2B,IAAIha,KAAK4Z,SAASC,KAAW,aACvEvW,EAAA,UAAQE,MAAO,WAAWU,IAAS,SAAW,YAAc,uBAAwB2O,QAAS,IAAM7S,KAAKia,cAAc5X,KAAK,CAAEC,IAAK4B,IAAS6V,SAAUA,GAClJF,G,CAMD,sBAAAG,GACN,OAAOha,KAAKwM,YAAY,iBAAmBxM,KAAKwM,YAAY,aAAexM,KAAKwM,YAAY,e,CAG9F,MAAAnJ,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,4DACRxD,KAAKwM,YAAY,gBAChBlJ,EAACkP,EAAQ,KACNxS,KAAK8Z,aAAa,SAAU1V,EAAQC,QAAQyO,YAC5C9S,KAAKga,0BAA4Bha,KAAK8Z,aAAa,OAAQ,GAAG1V,EAAQC,QAAQ6V,cAAeV,EAAiB,uCAGjHlW,EAACkP,EAAQ,KACNxS,KAAK8Z,aAAa,SAAU1V,EAAQC,QAAQyO,YAC5C9S,KAAKga,0BAA4Bha,KAAK8Z,aAAa,OAAQ,GAAG1V,EAAQC,QAAQ6V,iB,aCtD7F,MAAMC,EAA2B,mO,MCapBC,EAAqB,M,odA2BxBpa,KAAAsM,aAA8B,CACpChH,KAAM,GACN0L,YAAa,GACbC,IAAK,I,oBA7BuB,G,iBACH,G,0CAEe,G,8FAGA,M,wNA0B1C,mBAAAoJ,GACE,OACE/W,EAAA,YAAUE,MAAM,yBACdF,EAAA,SAAOE,MAAM,MAAMY,EAAQC,QAAQiW,cAAa,MAChDhX,EAAA,OAAKE,MAAM,kBACTF,EAAA,mBACEZ,MACE/B,OAAO4Z,KAAKva,KAAKiJ,kBAAkB7H,OAAS,EAAI,GAAGpB,KAAKiJ,iBAAiBqB,iBAAiBtK,KAAKiJ,iBAAiBG,aAAapJ,KAAKiJ,iBAAiBK,WAAa,GAElKtB,UAAWwS,EAAOxa,KAAKya,4BAA4B1S,UAAU2S,OAAO,cACpEvS,QAASqS,EAAOxa,KAAKya,4BAA4BrS,QAAQsS,OAAO,cAChE7E,WAAY7V,KAAK6V,WACjB1R,YAAaC,EAAQC,QAAQsW,kBAC7BC,gBAAiB3Z,IACfA,EAAEoO,2BAEFrP,KAAK6a,qBAAqBxY,KAAKpB,EAAEkC,OAAO,EAE1C2X,eAAc,Q,CAMxB,aAAAC,GACE,OACEzX,EAAA,YAAUE,MAAM,kEACdF,EAAA,SAAOE,MAAM,WAAWY,EAAQC,QAAQ2W,WAAU,KAClD1X,EAAA,OAAKE,MAAM,0CACTF,EAAA,UAAQE,MAAM,wBAAwBtC,GAAG,eAAeyD,SAAUiC,GAAO5G,KAAKib,qBAAqB5Y,KAAMuE,EAAI3D,OAA6BP,QACvI1C,KAAKwO,cAAc1J,KAAIoW,IACtB,GAAIA,EAAOhX,OAAS,QAAS,CAC3B,OAAOZ,EAAA,YAAUuW,MAAOqB,EAAOxY,O,CAEjC,OACEY,EAAA,UAAQZ,MAAOwY,EAAOha,GAAI0D,SAAU5E,KAAKsM,aAAahH,OAAS4V,EAAOha,IACnEga,EAAOxY,MACD,M,CAQvB,sBAAAyO,CAAuB7O,EAAaI,GAElC,IAAIyY,EAAM,GACV,GAAIzY,IAAU,GAAI,CAChByY,EAAGxa,OAAAC,OAAAD,OAAAC,OAAA,GACEZ,KAAKoQ,iBAAe,CACvB9N,CAACA,GAAM,G,KAEJ,CACL6Y,EAAGxa,OAAAC,OAAAD,OAAAC,OAAA,GACEZ,KAAKoQ,iBAAe,CACvB9N,CAACA,GAAMI,G,CAGX1C,KAAKob,WAAW/Y,KAAK8Y,E,CAGvB,wBAAAE,GACE,OACE/X,EAAA,OAAKE,MAAO,6CACVF,EAAA,SAAOE,MAAM,kBAAkBY,EAAQC,QAAQiX,mBAAkB,KACjEhY,EAAA,OAAKE,MAAM,2GACTF,EAAA,gBACEA,EAAA,OAAKE,MAAM,cAOTF,EAAA,aACEiY,eAAgBta,GAAKjB,KAAKmR,uBAAuB,QAASlQ,EAAEkC,QAC5DqY,UAAU,qBACVC,YAAarX,EAAQC,QAAQqX,kBAC7BC,eAAgB,MAChBnZ,KAAMwJ,MAAM4P,KAAK5P,MAAMhM,KAAK2V,sBAAsBkG,gBAAgB,CAACC,EAAGC,IAAMA,EAAI,IAAGjX,KAAIoW,IAAM,CAC3Fc,KAAMd,EAAO/Z,WACbuB,MAAOwY,EAAO/Z,mBAKrBnB,KAAK2V,sBAAsBsG,cAAgB,GAC1C3Y,EAAA,gBACEA,EAAA,OAAKE,MAAM,kBAOTF,EAAA,aACEiY,eAAgBta,GAAKjB,KAAKmR,uBAAuB,QAASlQ,EAAEkC,QAC5DqY,UAAU,eACVC,YAAazb,KAAKkc,qBAClBP,eAAgB,MAChBnZ,KAAMwJ,MAAM4P,KAAK5P,MAAMhM,KAAK2V,sBAAsBsG,gBAAgB,CAACH,EAAGC,IAAMA,EAAI,IAAGjX,KAAIoW,IAAM,CAC3Fc,KAAMd,EAAO/Z,WACbuB,MAAOwY,EAAO/Z,mBAMxBmC,EAAA,aACE6Y,OAAO,qBACP/H,UAAWoF,EAAiB,qCAC5B4C,KAAK,GACLlQ,KAAK,KACL1I,MAAM,OACNwY,KAAM5X,EAAQC,QAAQgY,UACtBC,eAAgB,IAAMtc,KAAKkD,yB,CASrC,kBAAAgZ,GACE,MAAMK,EAASvc,KAAK2V,sBAAsB6G,cAC1C,IAAIC,EAAQrY,EAAQC,QAAQqY,UAE5B,GAAIH,IAAW,EAAG,CAChBE,EAAQrY,EAAQC,QAAQsY,Q,CAE1B,MAAO,GAAGvY,EAAQC,QAAQuY,sBAAsB5c,KAAK2V,sBAAsB6G,iBAAiBC,G,CAE9F,mBAAAvZ,GACE,GAAIlD,KAAKwM,YAAY,kBAAoB7L,OAAO4Z,KAAKva,KAAKiJ,kBAAkB7H,QAAU,EAAG,CACvFpB,KAAKsT,MAAMjR,KAAK,CACd6B,KAAM,QACNsP,MAAOpP,EAAQC,QAAQwY,wBACvB7L,YAAa,GACb8L,SAAU,a,MAEP,GAAI9c,KAAKwM,YAAY,aAAexM,KAAKwM,YAAY,iBAAkB,CAC5E,MAAMuQ,EAAgBvC,EAAO,IAAItT,KAAKlH,KAAKiJ,iBAAiBd,SAAWnI,KAAKwV,iBAAiBrN,UAC7F,MAAM6U,EAAkBxC,EAAO,IAAItT,KAAKlH,KAAKiJ,iBAAiBjB,WAAahI,KAAKwV,iBAAiBxN,YACjG,MAAMiV,EAAmBzC,EAAO,IAAItT,KAAKlH,KAAKkN,cAAcnF,WAC5D,MAAMmV,EAAiB1C,EAAO,IAAItT,KAAKlH,KAAKkN,cAAc9E,SAC1D,GAAI8U,EAAeC,SAASH,IAAoBC,EAAiBG,QAAQL,GAAgB,CACvF/c,KAAKsT,MAAMjR,KAAK,CACd6B,KAAM,QACNsP,MAAO,GAAGpP,EAAQC,QAAQgZ,2BAA2BzZ,QACnD,KACA4W,EAAO,IAAItT,KAAKlH,KAAKiJ,iBAAiBjB,WAAahI,KAAKwV,iBAAiBxN,YAAY0S,OAAO,qBAC5F9W,QAAQ,KAAM4W,EAAO,IAAItT,KAAKlH,KAAKiJ,iBAAiBd,SAAWnI,KAAKwV,iBAAiBrN,UAAUuS,OAAO,yBACxG1J,YAAa,GACb8L,SAAU,cAEZ,M,MACK,GAAI9c,KAAKoQ,gBAAgBvB,QAAU,EAAG,CAC3C7O,KAAKsT,MAAMjR,KAAK,CAAE6B,KAAM,QAASsP,MAAOpP,EAAQC,QAAQiZ,4BAA6BtM,YAAa,GAAI8L,SAAU,cAChH9c,KAAKmT,gBAAgB9Q,KAAK,qB,KACrB,CACLrC,KAAKia,cAAc5X,KAAK,CAAEC,IAAK,S,OAE5B,GAAItC,KAAKud,SAAW,IAAIrW,KAAKlH,KAAKkN,cAAcnF,UAAUyV,UAAY,IAAItW,KAAKlH,KAAKiJ,iBAAiBd,SAAWnI,KAAKwV,iBAAiBrN,SAASqV,UAAW,CAC/Jxd,KAAKsT,MAAMjR,KAAK,CACd6B,KAAM,QACNsP,MAAO,GAAGpP,EAAQC,QAAQgZ,2BAA2BzZ,QACnD,KACA4W,EAAO,IAAItT,KAAKlH,KAAKiJ,iBAAiBjB,WAAahI,KAAKwV,iBAAiBxN,YAAY0S,OAAO,qBAC5F9W,QAAQ,KAAM4W,EAAO,IAAItT,KAAKlH,KAAKiJ,iBAAiBd,SAAWnI,KAAKwV,iBAAiBrN,UAAUuS,OAAO,yBACxG1J,YAAa,GACb8L,SAAU,a,MAEP,GAAI9c,KAAKoQ,gBAAgBvB,QAAU,EAAG,CAC3C7O,KAAKmT,gBAAgB9Q,KAAK,sBAC1BrC,KAAKsT,MAAMjR,KAAK,CAAE6B,KAAM,QAASsP,MAAOpP,EAAQC,QAAQiZ,4BAA6BtM,YAAa,GAAI8L,SAAU,a,KAC3G,CACL9c,KAAKia,cAAc5X,KAAK,CAAEC,IAAK,S,EAGnC,WAAAkK,CAAYlK,GACV,OAAOtC,KAAK0M,YAAY8D,aAAelO,C,CAGzC,MAAAe,GACE,MAAMoa,EAAiBzd,KAAKuO,uBAAyBvO,KAAKqa,sBAAwBra,KAAKwM,YAAY,iBAAmBxM,KAAKwM,YAAY,YAAc,MAAQ,KAC7J,OACElJ,EAACC,EAAI,KACFka,GAAkBzd,KAAK+a,gBACxBzX,EAAA,OAAKE,MAAO,wDAAwDia,EAAiB,OAAS,MAC5Fna,EAAA,YAAUE,MAAM,aACdF,EAAA,kBACEoa,UAAWtZ,EAAQC,QAAQsZ,UAC3BJ,QAASvd,KAAKud,QACdxD,SAAU/Z,KAAKwM,YAAY,gBAAkBxM,KAAKwM,YAAY,iBAC9DlG,YAAatG,KAAKya,gCAGpBza,KAAKwM,YAAY,iBAAmBxM,KAAKqb,4BAE7C/X,EAAA,KAAGE,MAAM,iCAAiCiB,EAAcmZ,e,aCvPhE,MAAMC,EAA4B,qnB,MCQrBC,EAAsB,M,qgBAmBjC,gBAAArM,GACE,OAAQzR,KAAK0M,YAAYY,eAAe,uBAAyBtN,KAAK0M,YAAYgF,oBAAuB,E,CAE3G,WAAAlF,CAAYzJ,GACV,OAAOA,IAAU/C,KAAKyV,S,CAExB,MAAApS,G,QAEE,OACEC,EAACC,EAAI,KACHD,EAAA,4BACE2F,iBAAkBjJ,KAAKiJ,iBACvBuM,iBAAkBxV,KAAKwV,iBACvBtI,cAAelN,KAAKkN,cAEpBkD,gBAAiBpQ,KAAKoQ,gBACtB2N,eAAgB/d,KAAKuO,uBACrB7B,YAAa1M,KAAK0M,YAClB8B,cAAexO,KAAKwO,cACpB3K,QAAS7D,KAAK6D,QACd4W,4BAA6Bza,KAAK0M,YAAYiD,iBAC9CpB,uBAAwBvO,KAAKuO,uBAC7BoH,sBAAuB3V,KAAK2V,sBAC5BqI,cAAehe,KAAKyR,mBACpBoE,WAAY7V,KAAK6V,aAGnBvS,EAAA,OAAKE,MAAM,cACRgW,EAAiB,sCAAwCxZ,KAAKwM,YAAY,gBACzElJ,EAAA,OAAKE,MAAM,qBACTF,EAAA,OAAKE,MAAM,YAGbF,EAACkP,EAAQ,MACNY,GAAA5F,EAAAxN,KAAK0M,eAAW,MAAAc,SAAA,SAAAA,EAAE9C,aAAS,MAAA0I,SAAA,SAAAA,EAAEtO,KAAImZ,GAG9B3a,EAAA,qBACEgL,eAAgBtO,KAAKsO,eACrB4P,eAAgBvd,OAAO4Z,KAAKva,KAAKiJ,kBAAkB7H,QAAU,EAC7DkB,IAAK,aAAa2b,EAAS/c,KAC3BmE,SAAUrF,KAAKqF,SACfoJ,gBAAiBzO,KAAKyO,gBACtBhO,eAAgBT,KAAKkN,cAAczM,eACnCgD,YAAazD,KAAK0M,YAAY8D,WAC9B2N,aAAcF,EACdza,MAAM,gBACN4a,WAAYpe,KAAK0V,cAAcpK,IAAI,KAAK2S,EAAS/c,MAAQ+c,EAAS/c,GAAK,KACvEoF,YAAatG,KAAK0V,cAAcnK,IAAI,KAAK0S,EAAS/c,MAClD0R,kBAAmBhM,GAAO5G,KAAKqe,gBAAgBhc,KAAKuE,EAAIzD,cAQpEG,EAAA,4BAA0BE,MAAO,gBAAiBiS,UAAWzV,KAAK0M,YAAY8D,WAAYuJ,SAAU/Z,KAAK0V,cAAcxJ,OAAS,I,aCpFxI,MAAMoS,EAA4B,0vD,MCUrBC,EAAsB,M,uIAqBzBve,KAAAwe,iBAA2B,E,oIAhBT,G,oIAKI,e,gDAEI,M,yHAIR,M,sDAIe,K,CAEzC,iBAAAC,CAAkBC,GAChB,IAAI/K,EAAS,GACb+K,EAAiB/H,SAAQgI,IACvB,GAAIA,EAAKC,mBAAoB,CAC3BjL,EAAOkL,KAAK,CAAEhc,KAAM8b,EAAK9b,KAAM3B,GAAIyd,EAAK/R,O,KAG5C,OAAO+G,C,CAET,iBAAAzT,GAEEF,KAAK8e,uBAAuB9e,KAAK+e,a,CAEnC,WAAAC,GACE,GAAIhf,KAAKyD,cAAgB,gBAAkBzD,KAAKif,iBAAkB,CAChE,OAAO,K,KACF,CACL,OAAOjf,KAAKkf,aAAaC,WAAanf,KAAKof,sBAAwB,GAAM3a,EAAcC,sBAAwB1E,KAAKkf,aAAaG,cAAcje,SAAW,C,EAI9J,iBAAAke,CAAkB9c,GAChB,IAAI+c,EAAiBvf,KAAKye,kBAAkBjc,GAC5C,GAAIxC,KAAKyD,cAAgB,gBAAkBzD,KAAKif,iBAAkB,CAChE,GAAIjf,KAAKwf,aAAc,CACrBD,EAAeV,KAAK,CAClB3d,GAAIlB,KAAKwf,aAAa3e,OACtBgC,KAAM7C,KAAKwf,aAAalP,WAE1BiP,EAAeE,MAAK,CAACC,EAAGC,KACtB,GAAID,EAAE7c,KAAO8c,EAAE9c,KAAM,CACnB,OAAQ,C,CAEV,GAAI6c,EAAE7c,KAAO8c,EAAE9c,KAAM,CACnB,OAAO,C,CAET,OAAO,CAAC,G,EAId,OAAO0c,C,CAET,mBAAAK,CAAoBld,GAClB,OAAO1C,KAAK+e,aAAac,WAAWld,MAAKmd,GAAaA,EAAU9b,uBAAyBtB,G,CAG3F,sBAAAoc,CAAuBtc,G,MACrBxC,KAAKkf,aAAe,CAClBna,6BAA8B/E,KAAK+E,6BACnCmG,WAAY1I,EAAKtB,GACjB8C,qBAAsBxB,EAAKqd,WAAWrd,EAAKqd,WAAWze,OAAS,GAAG4C,qBAClEzD,SAAU,EACVsL,WAAY,EACZrL,MAAMgN,EAAAhL,EAAKqd,WAAWrd,EAAKqd,WAAWze,OAAS,GAAG2e,UAAM,MAAAvS,SAAA,EAAAA,EAAI,EAC5D7J,aAAcnB,EAAKK,KACnBkL,WAAYvL,EAAKqd,WAAWrd,EAAKqd,WAAWze,OAAS,GAAG4e,UACxDC,cAAezd,EAAKqd,WAAWrd,EAAKqd,WAAWze,OAAS,GAAG8e,UAC3Dpc,YAAatB,EAAKsB,YAClBC,UAAWvB,EAAKuB,UAChBzD,eAAgB,MAChB6f,oBAAqB,EACrBle,MAAOjC,KAAKiC,MACZkd,UAAW3c,EAAK2c,UAChBE,cAAerf,KAAKsf,kBAAkBtf,KAAK+e,aAAaL,kBACxDje,eAAgBT,KAAKS,gBAGvB,GAAIT,KAAKsG,YAAa,CACpB,IAAK,MAAOhE,EAAKI,KAAU/B,OAAO0D,QAAQrE,KAAKsG,aAAc,CAC3DtG,KAAKkf,aAAa5c,GAAOI,C,CAE3B1C,KAAKkf,aAAa,YAAc,C,CAElC,GAAIlf,KAAKsG,aAAetG,KAAKsG,YAAYhG,eAAgB,CACvDH,QAAQC,IAAI,UACZ,GAAIJ,KAAKkf,aAAa3e,WAAa,EAAG,CACpCJ,QAAQC,IAAI,WACZJ,KAAKwe,iBAAmBxe,KAAKkf,aAAa1e,I,KACrC,CACLL,QAAQC,IAAI,WACZJ,KAAKwe,iBAAmBxe,KAAKkf,aAAa1e,KAAOR,KAAKS,c,MAEnD,CACLT,KAAKwe,iBAAmBxe,KAAKkf,aAAa1e,KAAOR,KAAKS,c,EAG1D,gBAAAe,GACE,GAAIxB,KAAKsG,YAAa,CACpBtG,KAAKoC,gBAAgBC,KAAK,CACxBC,IAAK,qBACLwI,WAAY,gBACZtI,KAAMxC,KAAKkf,c,EAKjB,yBAAMkB,CAAoBC,GACxBrgB,KAAKkf,aAAYve,OAAAC,OAAAD,OAAAC,OAAA,GACZZ,KAAKkf,cAAY,CACpBlb,qBAAsBqc,EAAQR,WAAWQ,EAAQR,WAAWze,OAAS,GAAG4C,qBACxE+J,WAAYsS,EAAQR,WAAWQ,EAAQR,WAAWze,OAAS,GAAG4e,UAC9DC,cAAeI,EAAQR,WAAWQ,EAAQR,WAAWze,OAAS,GAAG8e,UACjE1f,KAAMR,KAAKsgB,uBACXjB,cAAerf,KAAKsf,kBAAkBe,EAAQ3B,oBAEhD1e,KAAKwe,iBAAmBxe,KAAKkf,aAAa3e,WAAa,EAAIP,KAAKkf,aAAa1e,KAAOR,KAAKS,eAAiBT,KAAKkf,aAAa1e,KAC5HR,KAAKoC,gBAAgBC,KAAK,CACxBC,IAAK,qBACLwI,WAAY,OACZtI,KAAMxC,KAAKkf,c,CAIf,oBAAAoB,GACE,GAAItgB,KAAKkf,aAAa5e,eAAgB,CACpC,OAAON,KAAKkf,aAAaiB,mB,CAE3B,MAAMI,EAAmBvgB,KAAK4f,oBAAoB5f,KAAKkf,aAAalb,sBACpE,OAAOuc,EAAmBA,EAAiBR,OAAS,C,CAGtD,WAAAS,CAAYzd,GACV,MAAM0d,EAAe1d,EAAME,OAC3B,IAAIyd,EAAaD,EAAa/d,MAAMkB,QAAQ,WAAY,IAExD,MAAM+c,EAAqB,cAC3B,IAAKA,EAAmBC,KAAKF,GAAa,CACxCA,EAAaA,EAAWG,UAAU,EAAGH,EAAWtf,OAAS,E,CAG3Dqf,EAAa/d,MAAQge,EACrB,GAAIA,EAAY,CACd1gB,KAAKkf,aAAa5e,eAAiB,KACnCN,KAAKyC,iBAAiB,OAAQM,E,KACzB,CACL/C,KAAKkf,aAAYve,OAAAC,OAAAD,OAAAC,OAAA,GACZZ,KAAKkf,cAAY,CACpB1e,MAAO,EACPqL,WAAY,IAEd7L,KAAKoC,gBAAgBC,KAAK,CACxBC,IAAK,qBACLwI,WAAY,OACZtI,KAAMxC,KAAKkf,c,EAKjB,gBAAAzc,CAAiBH,EAAKsE,GACpB,MAAMlE,EAAQkE,EAAI3D,OAAOP,MACzB,OAAQJ,GACN,IAAK,uBACHtC,KAAK8gB,eAAepe,GACpB,MACF,IAAK,OACH1C,KAAK+gB,WAAWre,GAChB,MACF,QACE1C,KAAKghB,kBAAkB1e,EAAKI,GAC5B,MAEJ1C,KAAKoC,gBAAgBC,KAAK,CACxBC,IAAK,qBACLwI,WAAYxI,EACZE,KAAMxC,KAAKkf,c,CAIf,cAAA4B,CAAepe,GACb,MAAMue,EAAWjhB,KAAK4f,oBAAoBld,GAC1C,GAAIue,EAAU,CACZjhB,KAAKkf,aAAYve,OAAAC,OAAAD,OAAAC,OAAA,GACZZ,KAAKkf,cAAY,CACpBlb,qBAAsBtB,EACtBqL,WAAYkT,EAASjB,UACrBC,cAAegB,EAASf,UACxB1f,KAAMygB,EAASlB,OACfzf,eAAgB,O,EAKtB,UAAAygB,CAAWre,GACT,MAAMwe,EAAexe,IAAU,GAAK,EAAI6C,OAAO7C,GAC/C1C,KAAKkf,aAAYve,OAAAC,OAAAD,OAAAC,OAAA,GACZZ,KAAKkf,cAAY,CACpB1e,KAAM0gB,EACNrV,WAAYnJ,IAAU,GAAK,EAAI1C,KAAKkf,aAAarT,WACjDsU,oBAAqBngB,KAAKkf,aAAa3e,WAAa,EAAI2gB,EAAelhB,KAAKS,eAAiBygB,G,CAIjG,iBAAAF,CAAkB1e,EAAKI,GACrB1C,KAAKkf,aAAYve,OAAAC,OAAAD,OAAAC,OAAA,GACZZ,KAAKkf,cAAY,CACpB5c,CAACA,GAAMI,IAAU,GAAK,EAAI6D,SAAS7D,I,CAGvC,YAAAye,GACEnhB,KAAKoC,gBAAgBC,KAAK,CAAEC,IAAK,YAAaE,KAAMxC,KAAKkf,eACzDlf,KAAKyC,iBAAiB,aAAc,CAAEQ,OAAQ,CAAEP,MAAO,OACvD1C,KAAKohB,sBAAsB/e,KAAK,CAAEC,IAAK,gBAAiBE,KAAM,I,CAGhE,UAAA6e,GACE,GAAIrhB,KAAKkf,aAAa5e,eAAgB,CACpCH,QAAQC,IAAI,oBAAqBJ,KAAKkf,aAAa1e,MACnD,OAAOR,KAAKkf,aAAa1e,QAAU,EAAI,GAAKR,KAAKkf,aAAa1e,I,CAEhE,OAAOR,KAAKkf,aAAa3e,WAAa,EAAIgF,OAAOvF,KAAKkf,aAAa1e,MAAMgF,QAAQ,GAAKD,OAAOvF,KAAKwe,kBAAkBhZ,QAAQ,E,CAE9H,MAAAnC,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,4FACTF,EAAA,OAAKE,MAAM,2BACRxD,KAAKyD,cAAgB,cACpBH,EAACkP,EAAQ,KACPlP,EAAA,QAAME,MAAM,sBAAqBxD,KAAK+e,aAAalc,KAAKye,MAAM,KAAK,IACnEhe,EAAA,gBAAQtD,KAAK+e,aAAalc,KAAKye,MAAM,KAAK,KAG5Che,EAAA,YAAOtD,KAAK+e,aAAalc,MAE3BS,EAAA,cAAYO,QAAS7D,KAAK+e,aAAajb,YAAc9D,KAAK+e,aAAahb,aAGzET,EAAA,OAAKE,MAAO,yFACVF,EAAA,OAAKE,MAAM,oCACTF,EAAA,YAAUE,MAAM,qBACdF,EAAA,UAAQyW,SAAU/Z,KAAKgf,cAAexb,MAAM,yBAAyBtC,GAAI+C,IAAMU,SAAUiC,GAAO5G,KAAKyC,iBAAiB,uBAAwBmE,IAC3I5G,KAAK+e,aAAac,WAAW/a,KAAIgb,GAChCxc,EAAA,UAAQZ,MAAOod,EAAU9b,qBAAsBY,SAAU5E,KAAKkf,aAAalb,uBAAyB8b,EAAU9b,sBAC3G8b,EAAU9b,2BAMrBV,EAAA,OAAKE,MAAO,sDACVF,EAAA,OAAKE,MAAM,0DACTF,EAAA,YAAUE,MAAM,kEACdF,EAAA,OAAKE,MAAM,uBACTF,EAAA,wBAAqBtD,KAAKgf,cAAa,aAAchf,KAAKuhB,eAAiB,QAAU,GAAI/d,MAAM,gCAAgCtC,GAAG,gBAC/HkE,EAAkBpF,KAAKqF,SAASC,QAGrChC,EAAA,SACEke,QAAS,IAAOxhB,KAAKuhB,eAAiB,KACtCE,OAAQ,IAAOzhB,KAAKuhB,eAAiB,MACrCxH,SAAU/Z,KAAKgf,cACf9a,KAAK,OACLV,MAAM,2EACNd,MAAO1C,KAAKqhB,aACZngB,GAAI+C,IACJE,YAAaC,EAAQC,QAAQqd,UAAY,OACzCnd,QAAUxB,GAAsB/C,KAAKwgB,YAAYzd,MAIrDO,EAAA,YAAUE,MAAM,qDACdF,EAAA,UACEyW,SAAU/Z,KAAKgf,cACfxb,MAAM,wDACNtC,GAAI+C,IACJU,SAAUiC,GAAO5G,KAAKyC,iBAAiB,WAAYmE,IAElD5G,KAAKyO,gBAAgB3J,KAAItC,GACxBc,EAAA,UAAQZ,MAAOF,EAAK0C,UAAWN,SAAU5E,KAAKkf,aAAa3e,YAAciC,EAAK0C,WAC3E1C,EAAK2C,oBAOfnF,KAAKyD,cAAgB,gBAAkBzD,KAAKyD,cAAgB,WAC3DH,EAAA,OAAKE,MAAM,8CACTF,EAAA,YAAUE,MAAM,qBACdF,EAAA,UACEyW,SAAU/Z,KAAKkf,aAAa1e,OAAS,GAAKR,KAAKgf,cAC/Cxb,MAAM,wBACNtC,GAAI+C,IACJU,SAAUiC,GAAO5G,KAAKyC,iBAAiB,aAAcmE,IAEpDoF,MAAM4P,KAAK,CAAExa,OAAQpB,KAAKof,oBAAsB,IAAK,CAACtD,EAAGC,IAAMA,IAAGjX,KAAIiX,GACrEzY,EAAA,UAAQZ,MAAOqZ,EAAGnX,SAAU5E,KAAKkf,aAAarT,aAAekQ,GAC1DA,QAMT,MAGL/b,KAAKyD,cAAgB,eACpBH,EAACkP,EAAQ,KACPlP,EAAA,OAAKE,MAAM,wDACTF,EAAA,YAAUE,MAAM,qBACdF,EAAA,SACEyW,SAAU/Z,KAAKgf,cACf9a,KAAK,QACLrB,KAAK,gBACLH,MAAM,IACNiC,SAAUiC,GAAO5G,KAAKyC,iBAAiB,aAAcmE,GACrDiB,QAAS7H,KAAKkf,aAAarT,aAAe,MAIhDvI,EAAA,UACEyW,SAAU/Z,KAAKkf,aAAa1e,QAAU,GAAKR,KAAKgf,cAChD9a,KAAK,SACLV,MAAM,sEACNqP,QAAS,IAAM7S,KAAKmhB,gBAEnBnhB,KAAKkf,aAAarT,aAAe,EAAIzH,EAAQC,QAAQsd,YAAcvd,EAAQC,QAAQud,aAGtF,KAEH5hB,KAAKyD,cAAgB,eAAiBzD,KAAKyD,cAAgB,gBAC1DH,EAAA,UACEyW,SAAU/Z,KAAKkf,aAAa1e,QAAU,GAAKR,KAAKgf,eAAkBhf,KAAKyD,cAAgB,iBAAmBzD,KAAKke,eAC/Gha,KAAK,SACLV,MAAM,4DACNqP,QAAS,IAAM7S,KAAKmhB,gBAEnB/c,EAAQC,QAAQwd,UAEjB,O,gFC1WhB,MAAMC,EAAqB,4G,MCOdC,EAAe,M,0EAclB/hB,KAAAgiB,kBAAoB,CAAC,eAAgB,WAAY,eAAgB,iB,wEAXnD,e,mDAEI,G,gBACU,K,2CAED,G,8GAIK,E,CAIxC,iBAAA9hB,GACEF,KAAKiiB,oB,CAGC,kBAAAA,GACN,MAAMnW,UAAEA,EAASoW,UAAEA,GAAcliB,KAAKme,aACtCne,KAAK6L,WAAaC,GAAa,EAC/B9L,KAAK0V,cAAgB,IAAI1J,MAAMkW,EAAU9gB,QAAQ6K,KAAK,GACtDjM,KAAKmiB,mBAAqBniB,KAAKoiB,8BAA8BF,EAAWpW,E,CAG1E,kBAAAuW,GACEriB,KAAKiiB,oB,CAGC,6BAAAG,CAA8BF,EAAWpW,GAC/C,IAAIwW,EAAgB,IAAItW,MAAMkW,EAAU9gB,QAAQ6K,KAAKH,GACrD,GAAI9L,KAAKsG,aAAetG,KAAKyD,cAAgB,gBAAkBqI,EAAY,EAAG,CAC5E,IAAIyW,EAAkB,GACtB,IAAIC,EAAM,EACVxiB,KAAKsG,YAAYqQ,SAAQ/I,IACvB5N,KAAK0V,cAAc9H,EAAS3L,OAAS2L,EAAS/B,WAC9CyW,EAAc1U,EAAS3L,OAAS2L,EAAS/B,WACzC2W,GAAO5U,EAAS/B,WAChB0W,EAAgB1D,KAAKjR,EAAS3L,MAAM,IAEtC,GAAIsgB,EAAgBnhB,OAASkhB,EAAclhB,OAAQ,CACjDkhB,EAAc3L,SAAQ,CAACmF,EAAG7Z,KACxB,IAAKsgB,EAAgBpgB,SAASF,GAAQ,CACpC,GAAIugB,IAAQxiB,KAAK6L,WAAY,CAC3ByW,EAAcrgB,GAAS,C,KAClB,CACLqgB,EAAcrgB,GAASqgB,EAAcrgB,GAASugB,C,MAE3C,CACL,GAAIA,EAAMxiB,KAAK6L,WAAY,CACzByW,EAAcrgB,GAASjC,KAAK6L,WAAa2W,EAAMF,EAAcrgB,E,WAKhE,CACLqgB,EAAcrW,KAAKH,E,CAErB,OAAOwW,C,CAGT,gBAAAzN,CAAiB9R,EAA4Cd,GAC3Dc,EAAMsM,2BACN,MACElM,QAAQX,KAAEA,EAAIsI,WAAEA,IACd/H,EACJ,IAAI0f,EAAW9hB,OAAAC,OAAA,GAAQ4B,GAEvB,GAAIsI,IAAe,aAAc,CAC/B9K,KAAK0iB,uBAAuBzgB,EAAOwgB,EAAY5W,W,CAGjD4W,EAAW9hB,OAAAC,OAAAD,OAAAC,OAAA,GACN6hB,GAAW,CACdzX,eAAgBhL,KAAKme,aAAajd,GAClCwC,iBAAkB1D,KAAKme,aAAatb,KACpCiJ,UAAW9L,KAAKme,aAAarS,YAG/B9L,KAAKoC,gBAAgBC,KAAK,CAAEC,IAAKE,EAAKF,IAAKE,KAAMigB,EAAa3X,c,CAGxD,sBAAA4X,CAAuBzgB,EAAe0gB,GAC5C,GAAI3iB,KAAK0V,cAAczT,KAAW0gB,EAAU,CAC1C3iB,KAAK0V,cAAczT,GAAS0gB,EAC5B3iB,KAAK4iB,yBAAyB3gB,E,EAIlC,wBAAA2gB,CAAyBC,GACvB,MAAMC,EAA4CC,GACzC/iB,KAAK0V,cAAcsN,QAAO,CAACC,EAAKzY,EAAO0Y,IAASA,IAAQH,EAAgBE,EAAMzY,EAAQyY,GAAM,GAErG,MAAME,EAAwBnjB,KAAK0V,cAAc5Q,KAAI,CAACgX,EAAG7Z,KACvD,GAAIA,IAAU4gB,EAAe,CAC3B,OAAO7iB,KAAKmiB,mBAAmBlgB,E,CAEjC,MAAMmhB,EAAqCN,EAA0C7gB,GACrF,MAAMsd,EAAiBvf,KAAK6L,WAAauX,EAEzC,OAAO7D,EAAiB,EAAIA,EAAiB,CAAC,IAGhD,GAAI8D,KAAKC,UAAUtjB,KAAKmiB,sBAAwBkB,KAAKC,UAAUH,GAAwB,CACrFnjB,KAAKmiB,mBAAqB,IAAIgB,E,EAIlC,MAAA9f,GACE,MAAMkgB,EAAqBvjB,KAAKgiB,kBAAkB7f,SAASnC,KAAKyD,aAChE,OACEH,EAACC,EAAI,KACFggB,GAAsBjgB,EAAA,OAAKE,MAAM,mDAAmDxD,KAAKme,aAAatb,MACtG7C,KAAKme,aAAa+D,UAAUpd,KAAI,CAAC0e,EAAUvhB,KAC1C,GAAIuhB,EAAS3D,aAAe,KAAM,CAChC,IAAIZ,EAAmBjf,KAAKoe,YAAcpe,KAAKoe,aAAepe,KAAKme,aAAajd,GAChF,IAAIL,GAAU,EACd,GAAIoe,GAAoBjf,KAAKsO,eAAgB,CAC3CzN,EAASb,KAAKsO,eAAezN,M,CAE/B,OACEyC,EAAA,8BACEyB,6BAA8B/E,KAAKme,aAAapZ,6BAChD9C,MAAOA,EACPic,eAAgBle,KAAKke,eACrB5b,IAAK,aAAakhB,EAAStiB,KAC3BuN,gBAAiBzO,KAAKyO,gBACtBjL,MAAO+f,EAAqB,GAAK,GACjCle,SAAUrF,KAAKqF,SACf5E,eAAgBT,KAAKS,eACrBse,aAAcyE,EACdpE,oBAAqBpf,KAAKmiB,mBAAmBlgB,GAC7CwB,YAAazD,KAAKyD,YAClB6C,YAActG,KAAKsG,aAAetG,KAAKsG,YAAYiF,IAAI,KAAKiY,EAAStiB,OAAU,KAC/E+d,iBAAkBA,EAClBrM,kBAAmBhM,GAAO5G,KAAK6U,iBAAiBjO,EAAK3E,GACrDuP,cAAexR,KAAKme,aAAa3M,cACjCiS,cAAe5iB,EACf2e,aAAcxf,KAAKsO,gB,KAGlB,CACL,OAAO,I,oFCvJnB,MAAMoV,EAAkB,gsC,MCWXC,EAAY,M,uGAWf3jB,KAAA4jB,YAAsB,EAGtB5jB,KAAAyS,YAAsB,OACtBzS,KAAA0S,UAAoB,K,yCAbiB,M,+FAIP,K,iBAEN,K,CAUhC,mBAAAmR,CAAoB5c,GAClB,OAAOA,EAAG6c,cAAgB,KAAO7c,EAAG8c,WAAa,EAAI,IAAM,KAAO9c,EAAG8c,WAAa,GAAK,KAAO9c,EAAGS,WAAa,EAAI,IAAM,IAAMT,EAAGS,S,CAGnI,iBAAAxH,GACE,IAAI+G,EAAK,IAAIC,KACbD,EAAGI,SAAS,EAAG,EAAG,EAAG,GACrBJ,EAAG0R,QAAQ1R,EAAGS,UAAY,GAC1B,GAAI1H,KAAKsG,YAAa,CACpB,GAAItG,KAAKsG,YAAYyB,SAAU,CAC7B/H,KAAK+H,SAAW,IAAIb,KAAKlH,KAAKsG,YAAYyB,UAC1C/H,KAAK+H,SAASV,SAAS,EAAG,EAAG,EAAG,GAChCrH,KAAKyS,YAAczS,KAAKgkB,uBAAuBhkB,KAAK+H,S,CAEtD,GAAI/H,KAAKsG,YAAY8B,OAAQ,CAC3BpI,KAAKoI,OAAS,IAAIlB,KAAKlH,KAAKsG,YAAY8B,QACxCpI,KAAKoI,OAAOf,SAAS,EAAG,EAAG,EAAG,GAC9BrH,KAAK0S,UAAY1S,KAAKgkB,uBAAuBhkB,KAAKoI,O,EAGtD,GAAIpI,KAAK+H,UAAY/H,KAAKoI,OAAQ,CAChCpI,KAAKikB,uBACLjkB,KAAKkkB,sBAAsB,oBAAqB,CAC9Cnc,SAAU/H,KAAK+H,SAASyV,UACxBpV,OAAQpI,KAAKoI,OAAOoV,UACpB/K,YAAazS,KAAKyS,YAClBC,UAAW1S,KAAK0S,UAChBjS,eAAgBT,KAAK4jB,a,EAK3B,oBAAAK,GACEjkB,KAAK4jB,YAAcO,EAA0B3J,EAAOxa,KAAK+H,UAAU2S,OAAO,cAAeF,EAAOxa,KAAKoI,QAAQsS,OAAO,c,CAEtH,sBAAAsJ,CAAuB/c,GACrB,OAAOA,EAAGS,UAAY,IAAMT,EAAGO,eAAe,UAAW,CAAEC,MAAO,UAAW2c,cAAgB,IAAMnd,EAAG6c,a,CAGxG,qBAAAI,CAAsB5hB,EAAKE,EAAY,IACrCxC,KAAKqkB,gBAAgBhiB,KAAK,CAAEC,MAAKE,Q,CAEnC,gBAAA8hB,CAAiB1d,GACf,MAAM2d,MAAEA,EAAKC,IAAEA,GAAQ5d,EAAIzD,OAC3BnD,KAAK+H,SAAWwc,EAAMnc,SACtBpI,KAAKoI,OAASoc,EAAIpc,SAClBpI,KAAKikB,uBAELjkB,KAAKkkB,sBAAsB,oBAAqB,CAC9Cnc,SAAU/H,KAAK+H,SAASyV,UACxBpV,OAAQpI,KAAKoI,OAAOoV,UACpB/K,YAAa8R,EAAM7J,OAAO,eAC1BhI,UAAW8R,EAAI9J,OAAO,eACtBja,eAAgBT,KAAK4jB,cAGvB5jB,KAAK8H,aAAe9H,KAAK8H,W,CAE3B,MAAAzE,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,gDAA+C,aAAaxD,KAAK+Z,SAAW,WAAa,UAClGzW,EAAA,kBACEmhB,QAASzkB,KAAKykB,QACdjhB,MAAO,mBACPuW,SAAU/Z,KAAK+Z,SACfhS,SAAU/H,KAAK+H,SACfK,OAAQpI,KAAKoI,OACbmV,QAASvd,KAAKud,QACdmH,UAAS,kBACG1kB,KAAK+Z,SAAW,WAAa,SACzC4K,cAAe/d,IACb5G,KAAKskB,iBAAiB1d,EAAI,IAG9BtD,EAAA,oBAAiBtD,KAAK+Z,SAAW,WAAa,SAAUvW,MAAM,aAC5DF,EAAA,OAAK6R,MAAM,6BAA6BE,OAAO,KAAKC,MAAM,OAAOF,QAAQ,eACvE9R,EAAA,QACE2I,KAAK,eACLsJ,EAAE,yRAGNjS,EAAA,gBAAc4E,mBAAoBlI,KAAK+Z,SAAU/R,UAAWhI,KAAK+H,SAAUI,QAASnI,KAAKoI,WAG5FpI,KAAK4kB,oBACJthB,EAAA,YACGtD,KAAK4jB,cAAgB5jB,KAAK+Z,SACzBzW,EAAA,QAAME,MAAM,uBAAuBxD,KAAK4jB,aAAe5jB,KAAK4jB,YAAc,EAAI,IAAIxf,EAAQC,QAAQwgB,aAAe,IAAIzgB,EAAQC,QAAQygB,cAAoB,I,aCrHvK,MAAMC,EAAgB,y3B,MCUTC,EAAU,M,4oBAwB4B,E,CAEjD,iBAAA9kB,GACEF,KAAKilB,sBACLjlB,KAAKklB,qBAAuBllB,KAAKiJ,gB,CAGnC,mBAAAgc,GACE,IAAIE,EAAQ,EACZ,MAAMC,EAAgBzkB,OAAAC,OAAA,GAAQZ,KAAKgC,eACnC,MAAMqjB,EAAU,CAAC7kB,EAAcojB,EAAqBtjB,EAAyBe,KAC3E,GAAIf,GAAkBe,IAAe,EAAG,CACtC,OAAOb,EAAOojB,C,CAEhB,OAAOpjB,CAAI,EAEbR,KAAKgC,cAAgBojB,EACrBplB,KAAKU,UAAY,GACjBV,KAAK0V,cAAciB,SAAQ,CAAC/T,EAAMN,KAChCM,EAAK+T,SAAQ2O,IACXF,EAAiB9iB,GAAOgjB,EAAUtjB,cAClCmjB,GAASG,EAAUzZ,WAAawZ,EAAQC,EAAU9kB,KAAMR,KAAKkN,cAAczM,eAAgB6kB,EAAUhlB,eAAgBglB,EAAU/kB,UAC/H,IAAK,IAAIwb,EAAI,EAAGA,GAAKuJ,EAAUzZ,WAAYkQ,IAAK,CAC9C/b,KAAKU,UAAUme,KAAIle,OAAAC,OAAA,CACjBoC,UAAW,GACXnC,OAAQ,GACRQ,WAAY,IACTikB,G,IAGP,IAEJtlB,KAAK0M,YAAY6Y,YAAcJ,C,CAEjC,sCAAAK,CAAuCziB,EAAoBd,GACzD,MAAM4P,EAAM9O,EAAMI,OAClB,MAAMsiB,EAAgB,KAAK5T,EAAIrP,KAAKwI,iBACpC,MAAM0a,EAAe,IAAK1lB,KAAKgC,cAAcyjB,IAAkB,IAC/DC,EAAazjB,GAAS4P,EAAIrP,KAAK3B,OAC/Bb,KAAKgC,cAAarB,OAAAC,OAAAD,OAAAC,OAAA,GACbZ,KAAKgC,eAAa,CACrByjB,CAACA,GAAgBC,IAEnB1lB,KAAKoC,gBAAgBC,KAAK,CACxBC,IAAK,6BACLI,MAAOK,EAAMI,Q,CAIjB,eAAAwiB,CAAgB5iB,EAAYT,EAAaL,GACvC,GAAIK,IAAQ,mBAAoB,CAC9BtC,KAAKwlB,uCAAuCziB,EAAOd,E,KAC9C,CACLjC,KAAKklB,qBAAuBniB,EAAMI,OAAOX,KACzCxC,KAAKoC,gBAAgBC,KAAK,CACxBC,IAAK,mBACLI,MAAOK,EAAMI,Q,EAInB,qBAAAuN,GACE,GAAI1Q,KAAK+V,kBAAkB3U,SAAWpB,KAAKU,UAAUU,OAAQ,CAC3D,OAAO,I,CAET,IAAK,MAAMoB,KAAQxC,KAAK+V,kBAAmB,CACzC,GAAIvT,EAAKQ,YAAc,IAAMR,EAAKnB,aAAe,IAAMmB,EAAK3B,SAAW,GAAI,CACzE,OAAO,I,EAGX,OAAO,K,CAET,gBAAA8P,CAAiBrO,GACf,MAAMsO,EAAkB,CAACC,EAAUvO,EAAKwO,KACtC,IAAKD,EAAU,CACb,OAAO,I,CAET,GAAIA,IAAa7Q,KAAK+V,kBAAmB,CACvC,OAAO/V,KAAK0Q,uB,CAMd,GAAIpO,IAAQ,sBAAuB,CACjC,GAAIuO,EAASvO,KAASwE,UAAW,CAC/B,OAAO+J,EAASvO,GAAKgD,OAAS,E,KACzB,CACL,OAAO,I,EAGX,OAAOuL,EAASvO,KAASwO,GAAcD,EAASvO,KAASwE,SAAS,EAEpE,OACE9G,KAAKoU,YAAc9R,GACnBsO,EAAgB5Q,KAAK+V,kBAAmB,YAAa,KACrDnF,EAAgB5Q,KAAKklB,qBAAsB,UAAW,KACtDtU,EAAgB5Q,KAAKklB,qBAAsB,gBAAiB,KAC5DtU,EAAgB5Q,KAAKklB,qBAAsB,YAAa,KACxDtU,EAAgB5Q,KAAKklB,qBAAsB,WAAY,KACvDtU,EAAgB5Q,KAAKklB,qBAAsB,aAAc,IACzDtU,EAAgB5Q,KAAKklB,qBAAsB,sBAAuB,KAClEtU,EAAgB5Q,KAAKklB,qBAAsB,QAAS,G,CAIxD,MAAA7hB,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,oBACTF,EAAA,gBACEE,MAAM,gDACNwE,UAAWhI,KAAKkN,cAAcuF,YAC9BtK,QAASnI,KAAKkN,cAAcwF,UAC5BzK,WAAW,gBAEZjI,KAAKU,UAAUU,OAAS,GACvBkC,EAAA,OAAKE,MAAM,2BACRY,EAAQC,QAAQuhB,eAAc,IAAEtiB,EAAA,QAAME,MAAM,kCAAkC4B,EAAkBpF,KAAKqF,SAASC,MAAQtF,KAAK0M,YAAY6Y,aAAe,WAK5JvlB,KAAKU,UAAUoE,KAAI,CAACmZ,EAAUhc,IAE3BqB,EAAA,wBACE7C,eAAgBT,KAAKkN,cAAczM,eACnCa,uBAAwBtB,KAAKiW,iBAAiB4P,eAC9C/kB,mBAAoBd,KAAKiW,iBAAiBpJ,MAC1CxH,SAAUrF,KAAKqF,SACfJ,kBAAmBjF,KAAKiF,kBACxBhD,MAAOA,EACPD,cAAehC,KAAKgC,cAAc,KAAKic,EAASjT,kBAChD3K,UAAW4d,EACX1b,YAAaN,EACbwB,YAAazD,KAAK0M,YAAY8D,WAC9BzP,UAAWkd,EAASoB,cACpBzM,kBAAmB7P,GAAS/C,KAAK2lB,gBAAgB5iB,EAAO,mBAAoBd,OAKjFjC,KAAKkW,sBAAwBlW,KAAKuO,uBAAyB,KAC1DjL,EAAA,0BACEuS,WAAY7V,KAAK6V,WACjBG,gBAAiBhW,KAAKgW,gBACtBvG,SAAUzP,KAAKyP,SACfqG,mBAAoB9V,KAAK8V,mBACzBxP,YAAatG,KAAKiJ,iBAClB2J,kBAAmB7P,GAKjB/C,KAAK2lB,gBAAgB5iB,EAAO,mBAAoB,KAKrD/C,KAAKkW,qBACJ5S,EAAA,OAAKE,MAAM,wBACTF,EAAA,OAAKE,MAAM,kBAITF,EAAA,aACE8Y,KAAK,GACLJ,KAAM5X,EAAQC,QAAQyhB,SACtBtiB,MAAM,aACNuiB,UAAU,YACVC,WAAW,yBACX1J,eAAgB,IAAMtc,KAAKia,cAAc5X,KAAK,CAAEC,IAAK,YAGzDgB,EAAA,OAAKE,MAAM,aACTF,EAAA,aACE8Q,UAAWpU,KAAKoU,YAAc,OAC9BkI,eAAgB,IAAMtc,KAAKia,cAAc5X,KAAK,CAAEC,IAAK,SACrD0jB,WAAW,uDACXhK,KAAM5X,EAAQC,QAAQ4hB,aAiB5B3iB,EAAA,OAAKE,MAAM,iGACTF,EAAA,OAAKE,MAAM,qBACTF,EAAA,UAAQY,KAAK,SAASV,MAAM,+BAA+BqP,QAAS,IAAM7S,KAAKia,cAAc5X,KAAK,CAAEC,IAAK,UACvGgB,EAAA,QAAME,MAAO,2BAAyB,OAAkB,IAAEY,EAAQC,QAAQyhB,WAG9ExiB,EAAA,OAAKE,MAAM,0BACTF,EAAA,aACE8Q,UAAWpU,KAAKoU,YAAc,OAC9B4R,WAAW,uDACX1J,eAAgB,IAAMtc,KAAKia,cAAc5X,KAAK,CAAEC,IAAK,SACrD0Z,KAAM5X,EAAQC,QAAQwd,a,aChPtC,MAAMqE,EAAyB,qzB,MCalBC,EAAmB,M,0EAQtBnmB,KAAAiG,eAAiC,IAAIC,EACrClG,KAAAomB,gBAA8B,GAC9BpmB,KAAAqmB,aAAyB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5FrmB,KAAAsmB,YAAwB,GACxBtmB,KAAAumB,aAAuB,K,gDAVO,M,gDAGA,G,+CAEF,M,kBAOY,CAC9CrlB,GAAI4F,UACJqC,MAAO,GACPC,UAAW,GACXE,SAAU,GACVE,UAAW,GACXE,QAAS,GACTC,cAAe,GACfE,oBAAqB,CACnBvE,KAAM,GACN0L,YAAa,IAEfjH,WAAY,KACZlG,QAAS,GACTqG,WAAY,GACZC,eAAgB,GAChBC,YAAa,GACbC,WAAY,G,CAGd,uBAAMnK,GACJF,KAAKiG,eAAeE,SAAS1B,EAAc2B,OAC3CpG,KAAKwmB,oBACLxmB,KAAKymB,wBACLzmB,KAAK0mB,qBACL1mB,KAAK2mB,sB,CAGC,qBAAAF,GACN,MAAMG,GAAc,IAAI1f,MAAO4c,cAC/B9jB,KAAKsmB,YAActa,MAAM4P,KAAK,CAAExa,OAAQ,IAAK,CAAC0a,EAAG7Z,KAAW2kB,EAAc3kB,GAAOd,Y,CAE3E,uBAAMqlB,GACZ,MAAMK,QAAgB7mB,KAAKiG,eAAe6gB,wBAE1C,MAAMtd,EAAYqd,EAAQ,cAC1B7mB,KAAK6mB,QAAUrd,EACfxJ,KAAK+mB,aAAYpmB,OAAAC,OAAAD,OAAAC,OAAA,GAAQZ,KAAK+mB,cAAY,CAAErd,QAASF,EAAUrI,WAAYqI,a,CAErE,kBAAAkd,GACN,MAAMzf,EAAK,IAAIC,KACf,MAAMO,EAAQR,EAAG8c,WAAa,EAC9B/jB,KAAKumB,aAAe9e,EAAQ,GAAK,IAAIA,IAAUA,EAAMtG,U,CAG/C,oBAAAwlB,G,MACN3mB,KAAK+mB,aAAe/mB,KAAKsG,YAAW3F,OAAAC,OAAAD,OAAAC,OAAA,GAAQZ,KAAK+mB,cAAiB/mB,KAAKsG,aAAgB,GACvFtG,KAAKomB,kBAAkB5Y,EAAAxN,KAAKsG,eAAW,MAAAkH,SAAA,SAAAA,EAAEjB,cAAe,GACxDvM,KAAK+mB,aAAYpmB,OAAAC,OAAAD,OAAAC,OAAA,GAAQZ,KAAK+mB,cAAY,CAAEld,oBAAqB,CAAEvE,KAAMtF,KAAKomB,gBAAgB,GAAGlhB,UAAW8L,YAAahR,KAAKomB,gBAAgB,GAAGjhB,iBACjJ,IAAKnF,KAAK+mB,aAAa3c,YAAa,CAClCpK,KAAK+mB,aAAa3c,YAAcpK,KAAKumB,Y,CAEvC,IAAKvmB,KAAK+mB,aAAa1c,WAAY,CACjCrK,KAAK+mB,aAAa1c,YAAa,IAAInD,MAAO4c,a,EAI9C,gBAAArhB,CAAiBH,EAAKS,GACpB,MAAMikB,EAAYhnB,KAAKomB,gBAAgBzjB,MAAKskB,GAAQA,EAAK/hB,YAAcnC,EAAME,OAAOP,QAEpF1C,KAAK+mB,aAAazkB,GAChBA,IAAQ,aACJS,EAAME,OAAO4E,QACbvF,IAAQ,cACR,CACEgD,KAAMvC,EAAME,OAAOP,MACnBsO,YAAcgW,GAAaA,EAAU7hB,eAAkB,IAEzDpC,EAAME,OAAOP,MACnB1C,KAAKoC,gBAAgBC,KAAK,CACxBC,IAAK,sBACLE,KAAI7B,OAAAC,OAAA,GAAOZ,KAAK+mB,gBAElB,GAAIzkB,IAAQ,YAAa,CACvBtC,KAAK+mB,aAAYpmB,OAAAC,OAAAD,OAAAC,OAAA,GACZZ,KAAK+mB,cAAY,CACpBrd,QAAS3G,EAAME,OAAOP,O,EAK5B,iBAAAwkB,CAAkB5kB,EAAKS,GACrB,MAAM0d,EAAe1d,EAAME,OAC3B,MAAMyd,EAAaD,EAAa/d,MAGhC,MAAMykB,EAAe,WAErB,IAAKA,EAAavG,KAAKF,GAAa,CAElCD,EAAa/d,MAAQge,EAAW9c,QAAQ,UAAW,G,CAErD,GAAI8c,IAAeD,EAAa/d,MAAO,CACrC1C,KAAKyC,iBAAiBH,EAAKS,E,EAI/B,sBAAMqkB,CAAiB9kB,EAAKS,GAC1B,MAAM0d,EAAe1d,EAAME,OAC3B,MAAMyd,EAAaD,EAAa/d,MAChC,GAAI1C,KAAKqnB,aAAa3G,GAAa,CACjC1gB,KAAKyC,iBAAiBH,EAAKS,E,EAG/B,eAAMukB,GACJ,IACE,MAAMne,EAAQnJ,KAAK+mB,aAAa5d,MAChC,GAAInJ,KAAKqnB,aAAale,GAAQ,CAC5B,MAAMH,QAAYhJ,KAAKiG,eAAeshB,YAAYpe,GAClD,GAAIH,IAAQ,KAAM,CAChBhJ,KAAK+mB,aAAYpmB,OAAAC,OAAAD,OAAAC,OAAA,GACZZ,KAAK+mB,cAAY,CACpB7lB,GAAI8H,EAAI9H,GACRkI,UAAWJ,EAAIK,WACfC,SAAUN,EAAIO,UACdI,cAAeX,EAAIY,OACnBJ,UAAWR,EAAIS,WACfC,QAASV,EAAIS,WAAWtI,Y,KAErB,CACLnB,KAAK+mB,aAAYpmB,OAAAC,OAAAD,OAAAC,OAAA,GACZZ,KAAK+mB,cAAY,CACpB7lB,GAAI4F,UACJsC,UAAW,GACXE,SAAU,GACVK,cAAe,GACfH,UAAW,GACXE,QAAS,I,CAGb1J,KAAKoC,gBAAgBC,KAAK,CACxBC,IAAK,sBACLE,KAAI7B,OAAAC,OAAA,GAAOZ,KAAK+mB,e,EAGpB,MAAOtgB,G,EAIX,YAAA4gB,CAAaG,GACX,MAAMC,EAAe,mDACrB,OAAOA,EAAa7G,KAAK4G,E,CAE3B,oBAAAE,CAAqBzmB,GACnBA,EAAEoO,2BACFpO,EAAEqO,kBACF,MAAMhN,IAAEA,EAAGE,KAAEA,GAASvB,EAAEkC,OACxB,OAAQb,GACN,IAAK,OACH,GAAIE,IAAS,GAAI,CACfxC,KAAK+mB,aAAa5d,MAAQ3G,EAC1BxC,KAAKsnB,W,CAEP,MACF,IAAK,SACHtnB,KAAK+mB,aAAa5d,MAAQ3G,EAAK2G,MAC/BnJ,KAAK+mB,aAAYpmB,OAAAC,OAAAD,OAAAC,OAAA,GACZZ,KAAK+mB,cAAY,CACpB7lB,GAAIsB,EAAKtB,GACTkI,UAAW5G,EAAK6G,WAChBC,SAAU9G,EAAK+G,UACfI,cAAenH,EAAKoH,OACpBJ,UAAWhH,EAAKiH,WAChBC,QAASlH,EAAKiH,WAAWtI,aAE3BnB,KAAKoC,gBAAgBC,KAAK,CACxBC,IAAK,sBACLE,KAAMxC,KAAK+mB,eAEb,M,CAKN,UAAAY,GACE3nB,KAAK+mB,aAAa5d,MAAQ,GAC1BnJ,KAAK+mB,aAAYpmB,OAAAC,OAAAD,OAAAC,OAAA,GACZZ,KAAK+mB,cAAY,CACpB7lB,GAAI,GACJkI,UAAW,GACXE,SAAU,GACVK,cAAe,GACfD,QAAS1J,KAAK6mB,QAAQ1lB,WACtBqI,UAAWxJ,KAAK6mB,UAElB7mB,KAAKoC,gBAAgBC,KAAK,CACxBC,IAAK,sBACLE,KAAI7B,OAAAC,OAAA,GAAOZ,KAAK+mB,e,CAIpB,mBAAA7jB,CACEH,GAKA,OAAQA,EAAMI,OAAOb,KACnB,IAAK,OACL,IAAK,iBACHtC,KAAKoD,gBAAkB,KACvB,M,CAGN,MAAAC,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,kBACTF,EAAA,OAAKE,MAAM,8EACTF,EAAA,SAAOE,MAAM,+CAA+CY,EAAQC,QAAQujB,cAC5EtkB,EAAA,OAAKE,MAAM,uCAYTF,EAAA,mBACEukB,cAAe7nB,KAAKoD,iBAAmBpD,KAAK+mB,aAAa5d,QAAU,GACnEyR,gBAAiB5a,KAAK0nB,qBAAqB5X,KAAK9P,MAChD6V,WAAY7V,KAAK6V,WACjB3R,KAAK,QACLxB,MAAO1C,KAAK+mB,aAAa5d,MACzB3E,SAAQ,KACRL,YAAaC,EAAQC,QAAQyjB,qBAC7BC,eAAgB,IAAM/nB,KAAK2nB,kBAKnCrkB,EAAA,OAAKE,MAAM,kDACTF,EAAA,OAAKE,MAAM,+DACTF,EAAA,OAAKE,MAAM,kBACTF,EAAA,OAAKE,MAAM,kFACTF,EAAA,SAAOE,MAAM,mBAAmBY,EAAQC,QAAQ2jB,eAChD1kB,EAAA,OAAKE,MAAM,yCACTF,EAAA,SACEE,MAAO,0BAA0BxD,KAAKoD,iBAAmBpD,KAAK+mB,aAAa3d,YAAc,IAAM,kBAC/FlF,KAAK,OACLC,YAAaC,EAAQC,QAAQ2jB,cAC7B9mB,GAAI+C,IACJvB,MAAO1C,KAAK+mB,aAAa3d,UACzB7E,QAASxB,GAAS/C,KAAKyC,iBAAiB,YAAaM,GACrDyB,SAAQ,SAKdlB,EAAA,OAAKE,MAAM,wEACTF,EAAA,SAAOE,MAAM,mBAAmBY,EAAQC,QAAQ4jB,cAChD3kB,EAAA,OAAKE,MAAM,uCACTF,EAAA,SACEE,MAAO,gBAAgBxD,KAAKoD,iBAAmBpD,KAAK+mB,aAAazd,WAAa,IAAM,kBACpFpF,KAAK,OACLC,YAAaC,EAAQC,QAAQ4jB,aAC7B/mB,GAAI+C,IACJvB,MAAO1C,KAAK+mB,aAAazd,SACzB/E,QAASxB,GAAS/C,KAAKyC,iBAAiB,WAAYM,OAK1DO,EAAA,OAAKE,MAAM,wEACTF,EAAA,SAAOE,MAAM,mBAAmBY,EAAQC,QAAQ6jB,aAChD5kB,EAAA,OAAKE,MAAM,uCACTF,EAAA,UAAQE,MAAO,6BAA8BtC,GAAI+C,IAAMU,SAAU5B,GAAS/C,KAAKyC,iBAAiB,YAAaM,IAC3GO,EAAA,UAAQZ,MAAM,GAAGkC,SAAU5E,KAAK+mB,aAAavd,YAAc,IACxDpF,EAAQC,QAAQud,YAElB5hB,KAAKgW,gBAAgBlR,KAAIqjB,GACxB7kB,EAAA,UAAQZ,MAAOylB,EAAYjnB,GAAI0D,SAAU5E,KAAK+mB,aAAavd,YAAc2e,EAAYjnB,IAClFinB,EAAYtlB,WAOvBS,EAAA,OAAKE,MAAM,wEACTF,EAAA,SAAOE,MAAM,mBAAmBY,EAAQC,QAAQ+jB,iBAChD9kB,EAAA,OAAKE,MAAM,+CACTF,EAAA,OAAKE,MAAM,YACTF,EAAA,UAAQE,MAAO,6BAA8BtC,GAAI+C,IAAMU,SAAU5B,GAAS/C,KAAKyC,iBAAiB,UAAWM,IACzGO,EAAA,UAAQZ,MAAM,GAAGkC,SAAU5E,KAAK+mB,aAAard,UAAY,IACtDtF,EAAQC,QAAQgkB,SAElBroB,KAAKgW,gBAAgBlR,KAAI+hB,GACxBvjB,EAAA,UAAQZ,MAAOmkB,EAAQ3lB,GAAI0D,SAAU5E,KAAK+mB,aAAard,UAAYmd,EAAQ3lB,GAAGC,YAC3E0lB,EAAQyB,kBAKjBhlB,EAAA,OAAKE,MAAM,qBACTF,EAAA,SACEE,MAAO,8DAGPU,KAAK,MACLC,YAAaC,EAAQC,QAAQkkB,kBAC7BrnB,GAAI+C,IACJvB,MAAO1C,KAAK+mB,aAAapd,cACzBpF,QAASxB,GAAS/C,KAAKknB,kBAAkB,gBAAiBnkB,QAMlEO,EAAA,OAAKE,MAAM,wEACTF,EAAA,SAAOE,MAAM,mBAAmBY,EAAQC,QAAQmkB,qBAChDllB,EAAA,OAAKE,MAAM,uCACTF,EAAA,UACEE,MAAO,8BAA8BxD,KAAKoD,iBAAmBpD,KAAK+mB,aAAald,oBAAoBvE,OAAS,IAAM,kBAClHpE,GAAI+C,IACJU,SAAU5B,GAAS/C,KAAKyC,iBAAiB,sBAAuBM,IAK/D/C,KAAKomB,gBAAgBthB,KAAImiB,GACxB3jB,EAAA,UAAQZ,MAAOukB,EAAK/hB,UAAWN,SAAU5E,KAAK+mB,aAAald,oBAAoBvE,OAAS2hB,EAAK/hB,WAC1F+hB,EAAK9hB,qBAOlB7B,EAAA,OAAKE,MAAM,0BACTF,EAAA,OAAKE,MAAM,+DACTF,EAAA,SAAOE,MAAM,mBAAmBY,EAAQC,QAAQokB,qBAChDnlB,EAAA,OAAKE,MAAM,wCACTF,EAAA,YACEpC,GAAI+C,IACJykB,KAAM,EACNllB,MAAM,gBACNX,KAAK,UACLH,MAAO1C,KAAK+mB,aAAaljB,QACzBU,QAASxB,GAAS/C,KAAKyC,iBAAiB,UAAWM,OAIxD/C,KAAK8V,oBACJxS,EAACkP,EAAQ,KACPlP,EAAA,OAAKE,MAAM,gFACTF,EAAA,SAAOE,MAAM,mBAAmBY,EAAQC,QAAQskB,gBAChDrlB,EAAA,OAAKE,MAAM,uCACTF,EAAA,SACEE,MAAM,eACNU,KAAK,OACLC,YAAY,GACZykB,QAAQ,OACR1nB,GAAI+C,IACJvB,MAAO1C,KAAK+mB,aAAa7c,WACzB3F,QAASxB,GAAS/C,KAAKknB,kBAAkB,aAAcnkB,OAI7DO,EAAA,OAAKE,MAAM,wEACTF,EAAA,SAAOE,MAAM,mBAAmBY,EAAQC,QAAQwkB,oBAChDvlB,EAAA,OAAKE,MAAM,uCACTF,EAAA,SACEE,MAAM,eACNU,KAAK,OACLC,YAAY,GACZykB,QAAQ,OACR1nB,GAAI+C,IACJvB,MAAO1C,KAAK+mB,aAAa5c,eACzB5F,QAASxB,GAAS/C,KAAKyC,iBAAiB,iBAAkBM,OAIhEO,EAAA,OAAKE,MAAM,wEACTF,EAAA,SAAOE,MAAM,mBAAmBY,EAAQC,QAAQykB,gBAChDxlB,EAAA,OAAKE,MAAM,2CACTF,EAAA,OAAKE,MAAM,WACTF,EAAA,UAAQE,MAAM,6BAA6BtC,GAAI+C,IAAMU,SAAU5B,GAAS/C,KAAKyC,iBAAiB,cAAeM,IAC1G/C,KAAKqmB,aAAavhB,KAAI2C,GACrBnE,EAAA,UAAQZ,MAAO+E,EAAO7C,SAAU6C,IAAUzH,KAAK+mB,aAAa3c,aACzD3C,OAKTnE,EAAA,OAAKE,MAAM,gBACTF,EAAA,UAAQE,MAAM,6BAA6BtC,GAAI+C,IAAMU,SAAU5B,GAAS/C,KAAKyC,iBAAiB,aAAcM,IACzG/C,KAAKsmB,YAAYxhB,KAAI,CAACikB,EAAM9mB,IAC3BqB,EAAA,UAAQZ,MAAOqmB,EAAMnkB,SAAU3C,IAAUjC,KAAK+mB,aAAa1c,YACxD0e,UASjBzlB,EAAA,OAAKE,MAAM,0DACTF,EAAA,SAAOE,MAAM,UAAUwlB,QAAS,mBAC7B5kB,EAAQC,QAAQ4kB,mBAEnB3lB,EAAA,OAAKE,MAAM,yDACTF,EAAA,SACEE,MAAM,eACNU,KAAK,WACL2D,QAAS7H,KAAK+mB,aAAahd,WAC3B7I,GAAI,kBACJyD,SAAU5B,GAAS/C,KAAKyC,iBAAiB,aAAcM,U,aCvb3E,MAAMmmB,EAAoB,0wD,MCYbC,EAAc,M,8IA8BjBnpB,KAAAiG,eAAiB,IAAIC,EACrBlG,KAAAopB,gBAAkB,G,cA9BC,I,iBACG,G,8CAEI,M,UACkC,O,UAC7C,G,aACGnlB,I,cACE,M,cACA,M,oCAEA,G,aACF,G,6CAGI,G,UACP,G,oBACW,E,uBACI,M,eACR,K,gDAEG,K,CAWjC,iBAAA/D,GACEF,KAAKiG,eAAeE,SAAS1B,EAAc2B,OAC3CpG,KAAKopB,gBAAkBhlB,EAAQC,QAAQglB,kB,CAGzC,aAAAta,CAAchM,G,MACZ,MAAMumB,EAAWtpB,KAAKwC,KAAKpB,OAC3B,MAAMmoB,EAAavpB,KAAKwpB,sBACxB,GAAIF,EAAW,EAAG,CAChB,OAAQvmB,EAAMT,KACZ,IAAK,UACHS,EAAM0mB,iBACNzpB,KAAK0pB,eAAiB1pB,KAAK0pB,cAAgB,EAAIJ,GAAYA,EAC3DtpB,KAAK2pB,qBAAqBJ,GAC1B,MACF,IAAK,YACHxmB,EAAM0mB,iBACNzpB,KAAK0pB,eAAiB1pB,KAAK0pB,cAAgB,GAAKJ,EAChDtpB,KAAK2pB,qBAAqBJ,GAC1B,MACF,IAAK,QACL,IAAK,IACL,IAAK,aACHxmB,EAAM0mB,iBACNzpB,KAAK4pB,WAAW5pB,KAAK0pB,eACrB,MACF,IAAK,UACHlc,EAAAxN,KAAK6pB,YAAQ,MAAArc,SAAA,SAAAA,EAAEsc,OACf9pB,KAAK+pB,kBAAoB,MACzB,M,EAIR,mBAAAP,GACE,MAAMQ,EAAWhqB,KAAKiqB,GAAGC,cAAc,aACvC,GAAIF,EAAU,CACZ,MAAMG,EAAQH,EAASE,cAAc,KACrC,OAAOC,EAAQA,EAAMC,aAAe,C,CAEtC,OAAO,C,CAET,oBAAAT,CAAqBJ,EAAYc,EAAgB,KAC/C,MAAML,EAAWhqB,KAAKiqB,GAAGC,cAAc,aACvC,GAAIF,EAAU,CACZ,MAAMM,EAAS,EACf,MAAMC,EAAkBhB,EAAae,EACrC,MAAME,EAAmBD,EAAkBvqB,KAAK0pB,cAChD,IAAIe,EAAeD,EAAmBH,EAAgB,EAAId,EAAa,EACvEkB,EAAeC,KAAKC,IAAI,EAAGD,KAAKE,IAAIH,EAAcT,EAASa,aAAeR,IAC1EL,EAASc,SAAS,CAChBC,IAAKN,EACLO,SAAU,Q,EAKhB,UAAApB,CAAW3nB,GACT,GAAIjC,KAAKwC,KAAKP,GAAQ,CACpBjC,KAAKirB,eAAiB,KACtBjrB,KAAKkrB,cAAc7oB,KAAK,CAAEC,IAAK,SAAUE,KAAMxC,KAAKwC,KAAKP,KACzDjC,KAAK0gB,WAAa,GAClB1gB,KAAKmrB,e,EAIT,iBAAAC,GACEvpB,aAAa7B,KAAKqrB,eAClBrrB,KAAKqrB,cAAgB3pB,YAAW,KAC9B1B,KAAKoX,WAAW,GACfpX,KAAKsrB,S,CAGV,eAAMlU,GACJ,IACEpX,KAAKoU,UAAY,KACjB,IAAI5R,EAAO,GACX,IAAKxC,KAAK8a,eAAgB,CACxBtY,QAAaxC,KAAKiG,eAAeslB,kBAAkBvrB,KAAK0gB,WAAY1gB,KAAK6V,W,KACpE,CACL,GAAI7V,KAAK0gB,WAAWY,MAAM,KAAKlgB,SAAW,EAAG,CAC3CoB,QAAaxC,KAAKiG,eAAeulB,qBAAqBxrB,KAAK0gB,WAAY1gB,KAAK6V,WAAY7V,KAAKgI,UAAWhI,KAAKmI,Q,EAGjHnI,KAAKwC,KAAOA,EACZ,IAAKxC,KAAK+pB,kBAAmB,CAC3B/pB,KAAK+pB,kBAAoB,I,EAE3B,MAAOtjB,GACPtG,QAAQC,IAAI,QAASqG,E,SAErBzG,KAAKoU,UAAY,K,EAIrB,iBAAAqX,CAAkB1oB,GAChB/C,KAAK0gB,WAAc3d,EAAME,OAA4BP,MACrD,GAAI1C,KAAK0gB,WAAY,CACnB1gB,KAAKorB,mB,KACA,CACLvpB,aAAa7B,KAAKqrB,eAClBrrB,KAAKmrB,cAAc,M,EAKvB,mBAAAO,CAAoB3oB,GAClB,MAAME,EAASF,EAAME,OACrB,IAAKjD,KAAKiqB,GAAG0B,SAAS1oB,GAAS,CAC7BjD,KAAK+pB,kBAAoB,K,EAG7B,UAAA6B,GACE5rB,KAAK6rB,aAAe,MACpBnqB,YAAW,KACT,GAAI1B,KAAK8rB,eAAe7c,SAAS8c,eAAgB,CAC/C,M,CAEF,GAAI/rB,KAAK8a,eAAgB,CACvB,IAAK9a,KAAKirB,eAAgB,CACxB,GAAIjrB,KAAKwC,KAAKpB,OAAS,EAAG,CACxBpB,KAAKkrB,cAAc7oB,KAAK,CAAEC,IAAK,OAAQE,KAAMxC,KAAK0gB,Y,KAC7C,CACL,GAAI1gB,KAAK0gB,aAAe,GAAI,CAC1B1gB,KAAKsT,MAAMjR,KAAK,CACd6B,KAAM,QACN8M,YAAa,GACbwC,MAAO,gBAAgBxT,KAAK0gB,8BAC5B5D,SAAU,cAEZ9c,KAAKgsB,aAAa3pB,M,EAGtBrC,KAAK0gB,WAAa,GAClB1gB,KAAKmrB,e,KACA,CACLnrB,KAAKirB,eAAiB,K,MAEnB,CACL,IAAKjrB,KAAKirB,eAAgB,CACxBjrB,KAAKkrB,cAAc7oB,KAAK,CAAEC,IAAK,OAAQE,KAAMxC,KAAK0gB,aAClD1gB,KAAK0gB,WAAa,GAClB1gB,KAAKmrB,e,KACA,CACLnrB,KAAKirB,eAAiB,K,KAGzB,I,CAEL,cAAAa,CAAeG,GACb,OAAOA,GAAWA,EAAQC,QAAQ,Y,CAGpC,oBAAAtqB,G,YACEC,aAAa7B,KAAKqrB,gBAClB7d,EAAAxN,KAAK6pB,YAAQ,MAAArc,SAAA,SAAAA,EAAE2B,oBAAoB,OAAQnP,KAAK4rB,aAChDxY,EAAApT,KAAK6pB,YAAQ,MAAAzW,SAAA,SAAAA,EAAEjE,oBAAoB,QAASnP,KAAK4pB,aACjDuC,EAAAnsB,KAAK6pB,YAAQ,MAAAsC,SAAA,SAAAA,EAAEhd,oBAAoB,UAAWnP,KAAK+O,gBACnDqd,EAAApsB,KAAK6pB,YAAQ,MAAAuC,SAAA,SAAAA,EAAEjd,oBAAoB,QAASnP,KAAKqsB,Y,CAEnD,iBAAAC,CAAkBvpB,EAAsBd,G,MACtC,GAAIc,EAAMT,MAAQ,SAAWS,EAAMT,MAAQ,KAAOS,EAAMT,MAAQ,aAAc,CAC5EtC,KAAK4pB,WAAW3nB,GAChBc,EAAM0mB,gB,MACD,GAAI1mB,EAAMT,MAAQ,SAAU,CACjCtC,KAAK+pB,kBAAoB,OACzBvc,EAAAxN,KAAK6pB,YAAQ,MAAArc,SAAA,SAAAA,EAAEsc,OACf/mB,EAAM0mB,gB,KACD,CACL,M,EAGJ,cAAA8C,G,MACE,GAAIvsB,KAAK0gB,aAAe,GAAI,CAC1B,OACEpd,EAAA,OAAKE,MAAO,8CACTgK,EAAAxN,KAAKwC,QAAI,MAAAgL,SAAA,S,EAAE1I,KAAI,CAACyQ,EAAGtT,IAClBqB,EAAA,KAAGkpB,KAAK,SAASC,UAAWxrB,GAAKjB,KAAKssB,kBAAkBrrB,EAAGgB,GAAM,gBAAiBjC,KAAK0pB,gBAAkBznB,EAAOyqB,SAAU,EAAG7Z,QAAS,IAAM7S,KAAK4pB,WAAW3nB,IACzJjC,KAAK8a,eACJxX,EAACkP,EAAQ,KAAE,GAAG+C,EAAEhL,eAAegL,EAAErM,MAAMG,cAAckM,EAAErM,MAAMK,aAE7DjG,EAAA,OAAKE,MAAO,uCACVF,EAAA,KAAGE,MAAO,WACP,GAAG+R,EAAEpM,QAAO,IAAE7F,EAAA,QAAME,MAAO,WAAY,MAAM+R,EAAElM,cAAckM,EAAEhM,kBAMzEvJ,KAAKoU,WACJ9Q,EAAA,OAAKE,MAAM,qEACTF,EAAA,OAAKE,MAAM,YAGdxD,KAAKwC,KAAKpB,SAAW,IAAMpB,KAAKoU,WAAa9Q,EAAA,QAAME,MAAO,eAAgBxD,KAAKopB,iB,EAKxF,WAAAiD,GACErsB,KAAK+pB,kBAAoB,KACzB/pB,KAAK6rB,aAAe,I,CAEtB,UAAAc,GACE3sB,KAAK0gB,WAAa,GAClB1gB,KAAKmrB,gBACLnrB,KAAKgsB,aAAa3pB,KAAK,K,CAEzB,aAAA8oB,CAAcyB,EAAoB,M,MAChC,GAAIA,EAAU,EACZpf,EAAAxN,KAAK6pB,YAAQ,MAAArc,SAAA,SAAAA,EAAEsc,M,CAEjB9pB,KAAKwC,KAAO,GACZxC,KAAK0pB,eAAiB,EACtB1pB,KAAK+pB,kBAAoB,K,CAE3B,MAAA1mB,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAO,8BACVF,EAAA,sBAAmBtD,KAAK6rB,aAAe,UAAY,SAAU7C,QAAShpB,KAAK6sB,QAASrpB,MAAO,yBAAyBxD,KAAK6nB,eAAiB,mBACxIvkB,EAAA,OAAK6R,MAAM,6BAA6BE,OAAO,KAAKC,MAAM,KAAKF,QAAQ,eACrE9R,EAAA,QACE2I,KAAK,eACLsJ,EAAE,+OAIRjS,EAAA,SACEkB,SAAUxE,KAAKwE,SACfuV,SAAU/Z,KAAK+Z,SACf7Y,GAAIlB,KAAK6sB,QACTJ,UAAWzsB,KAAK+O,cAAce,KAAK9P,MACnCwD,MAAO,mCAAmCxD,KAAK6nB,eAAiB,kBAChE3jB,KAAMlE,KAAKkE,KACXrB,KAAM7C,KAAK6C,KACXH,MAAO1C,KAAK0C,OAAS1C,KAAK0gB,WAC1Bvc,YAAanE,KAAKmE,YAClBsd,OAAQzhB,KAAK4rB,WAAW9b,KAAK9P,MAC7BuE,QAASvE,KAAKyrB,kBAAkB3b,KAAK9P,MACrCwhB,QAASxhB,KAAKqsB,YAAYvc,KAAK9P,MAC/B8sB,IAAK7C,GAAOjqB,KAAK6pB,SAAWI,IAE7BjqB,KAAK0gB,YACJpd,EAAA,UAAQY,KAAK,SAASV,MAAO,sEAAuEqP,QAAS7S,KAAK2sB,WAAW7c,KAAK9P,OAChIsD,EAAA,KAAGE,MAAO,WAAS,eACnBF,EAAA,OAAKgS,MAAM,KAAKD,OAAO,KAAKD,QAAQ,YAAYnJ,KAAK,OAAOkJ,MAAM,8BAChE7R,EAAA,QACEiS,EAAE,0gBACFtJ,KAAK,eAAc,YACT,UAAS,YACT,eAMnBjM,KAAK+pB,mBAAqB/pB,KAAKusB,iB,qCC5SxC,MAAMQ,EAAc,o8B,MCQPC,GAAQ,M,sHAGJ,U,eAC6F,U,UACzE,K,cACI,K,eACnB,K,kBACG,M,cACJ,S,eACU,M,sCAEJ/oB,G,CAMzB,qBAAAgpB,CAAsBhsB,GACpB,IAAKjB,KAAKktB,UAAYjsB,EAAEkC,SAAWnD,KAAKmc,OAAQ,CAC9C,M,CAEFlb,EAAEoO,2BACFpO,EAAEqO,kBACFtP,KAAKktB,SAASC,UAAUC,OAAO,YAE/BptB,KAAKktB,SAASC,UAAUE,IAAI,W,CAE9B,MAAAhqB,GACE,IAAIiqB,EAAattB,KAAKutB,UAAY,YAAc,GAChD,OACEjqB,EAAA,UACEpC,GAAIlB,KAAKmc,OACT2Q,IAAK7C,GAAOjqB,KAAKktB,SAAWjD,EAC5BpX,QAAS,IAAM7S,KAAKwtB,aAAanrB,OACjCmB,MAAO,WAAWxD,KAAK+lB,aAAa/lB,KAAKgmB,4CAA4ChmB,KAAKkM,aAAalM,KAAKytB,YAAYH,IACxHppB,KAAMlE,KAAK0tB,SACX3T,SAAU/Z,KAAK2tB,cAEfrqB,EAAA,QAAME,MAAM,cAAa,aAAaxD,KAAKoU,UAAY,UAAY,IACjE9Q,EAAA,QAAMT,KAAK,UAEZ7C,KAAKgc,MAAQ1Y,EAAA,QAAME,MAAM,mBAAmBxD,KAAKgc,MACjDhc,KAAKoU,WAAa9Q,EAAA,OAAKE,MAAM,mB,cClD/B,MAAMoqB,GAAsC,CAKjD,CACEC,MAAO,KACPC,KAAM,qHAER,CACED,MAAO,KACPC,KAAM,yDAER,CACED,MAAO,KACPC,KAAM,kEAER,CAAED,MAAO,KAAMC,KAAM,sDACrB,CACED,MAAO,KACPC,KAAM,oFAER,CACED,MAAO,KACPC,KAAM,4EAER,CACED,MAAO,KACPC,KAAM,0DAER,CAAED,MAAO,KAAMC,KAAM,iDACrB,CACED,MAAO,KACPC,KAAM,2EAER,CACED,MAAO,KACPC,KAAM,2EAER,CACED,MAAO,KACPC,KAAM,qE,MCnCGC,GAAQ,M,6CAC+B,G,eACTH,E,CACzC,iBAAA1tB,GACEF,KAAKguB,W,CAGP,gBAAAxsB,GACExB,KAAKiuB,kB,CAIP,YAAAC,GACEluB,KAAKguB,YACLhuB,KAAKiuB,kB,CAGC,SAAAD,GACN,GAAIhuB,KAAKmuB,iBAAmB,GAAInuB,KAAKouB,UAAUvP,KAAKwE,KAAKgL,MAAMruB,KAAKmuB,gB,CAG9D,SAAAG,CAAUC,EAAiBC,GACjC,MAAMvd,EAAMhC,SAASwf,cAAcF,GACnC,MAAMG,EAAgB,GAEtB/tB,OAAO4Z,KAAKiU,GAAY7X,SAAQgY,IAC9B1d,EAAI2d,aAAaD,EAAMH,EAAWG,IAClCD,EAAc7P,KAAK,IAAI8P,MAASH,EAAWG,OAAU,IAGvD,MAAME,EAAW,GAAGN,IAAUG,EAAcI,KAAK,MACjD,MAAMC,EAAc9f,SAASib,cAAc2E,GAE3C,IAAKE,EAAa,CAChB9f,SAAS+f,KAAKC,YAAYhe,E,EAItB,gBAAAgd,GACNjuB,KAAKouB,UAAUzX,SAAQ3N,IACrB,GAAIA,EAAI6kB,MAAO,CACb7tB,KAAKsuB,UAAU,OAAQ,CACrBY,KAAMlmB,EAAI8kB,KACVqB,IAAK,aACLjrB,KAAM,Y,CAGV,GAAI8E,EAAIomB,KAAM,CACZpvB,KAAKsuB,UAAU,SAAU,CACvBe,IAAKrmB,EAAI8kB,M,KAMjB,MAAAzqB,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,a,iECjER,MAAMgsB,GAAkB,0V,MCQXC,GAAY,M,4KAOI,E,gBACI,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,Y,gBAC/G,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,M,YAC3C,e,eACG,M,gBACC,Q,iBACC,S,eACF,O,aACF,K,sBACS,S,eACP,I,cACA,M,sBACD,M,2DAGiB,CAC1CC,KAAM,I,CAOR,gBAAAhuB,GACExB,KAAKyvB,eAAiBzvB,KAAKisB,QAAQ/B,cAAc,qBACjDwF,EAAE1vB,KAAKyvB,gBAAgBE,gBACrB,CACEC,iBAAkB5vB,KAAK4vB,iBACvBC,MAAO7vB,KAAK6vB,MACZC,UAAWtV,EAAOxa,KAAK+H,UACvBgoB,QAASvV,EAAOxa,KAAKoI,QACrBmV,QAAS/C,EAAOxa,KAAKud,SAAW/C,EAAO,IAAItT,MAAQwT,OAAO,eAC1D+J,QAASzkB,KAAKykB,QAAUjK,EAAOxa,KAAKykB,SAAW3d,UAC/CkpB,QAAShwB,KAAKgwB,QACdtL,UAAW1kB,KAAK0kB,UAChBuL,OAAQ,CACNvV,OAAQ1a,KAAK0a,OACbwV,UAAWlwB,KAAKkwB,UAChBC,WAAYnwB,KAAKmwB,WACjBC,YAAapwB,KAAKowB,YAClBC,UAAWrwB,KAAKqwB,UAChBC,QAAStwB,KAAKswB,QACdC,iBAAkBvwB,KAAKuwB,iBACvBC,UAAWxwB,KAAKwwB,UAChBC,WAAYzwB,KAAKywB,WACjBC,WAAY1wB,KAAK0wB,WACjBC,SAAU3wB,KAAK2wB,YAGnB,CAACpM,EAAOC,KACNxkB,KAAK4wB,YAAYvuB,KAAK,CAAEkiB,QAAOC,OAAM,G,CAK3C,MAAAnhB,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,SAAOE,MAAM,mBAAmBU,KAAK,OAAO6V,SAAU/Z,KAAK+Z,W,4CCzEnE,MAAM8W,GAAgB,oI,MCUTC,GAAU,M,iGAGiB,K,gBACT,a,qBAE7B,iBAAA5wB,GACEF,KAAK+wB,iB,CAGP,oBAAAC,CAAqBC,EAAaC,GAChC,GAAID,IAAWC,EAAQ,CACrBlxB,KAAK+wB,iB,EAKT,kBAAAI,CAAmBF,EAAaC,GAC9B,GAAID,IAAWC,EAAQ,CACrBlxB,KAAK+wB,iB,EAIT,eAAAA,GACE/wB,KAAKoxB,YAAY,YAAapxB,KAAKgI,WACnChI,KAAKoxB,YAAY,UAAWpxB,KAAKmI,SACjC,MAAMJ,EAAWyS,EAAOxa,KAAKqxB,MAAMrpB,UAAW,gBAAgB0S,OAAO,cACrE,MAAMtS,EAASoS,EAAOxa,KAAKqxB,MAAMlpB,QAAS,gBAAgBuS,OAAO,cACjE1a,KAAKqxB,MAAMC,eAAiBnN,EAA0Bpc,EAAUK,E,CAGlE,WAAAgpB,CAAY9uB,EAA8BivB,GACxCvxB,KAAKqxB,MAAQrxB,KAAKqxB,OAAS,CACzBrpB,UAAW,GACXG,QAAS,GACTmpB,eAAgB,GAGlB,UAAWC,IAAS,SAAU,CAC5BvxB,KAAKqxB,MAAM/uB,GAAOkY,EAAO+W,EAAMvxB,KAAKiI,YAAYyS,OAAO,e,MAClD,GAAI6W,aAAgBrqB,KAAM,CAC/BlH,KAAKqxB,MAAM/uB,GAAOkY,EAAO+W,GAAM7W,OAAO,e,MACjC,GAAIF,EAAOgX,SAASD,GAAO,CAChCvxB,KAAKqxB,MAAM/uB,GAAOivB,EAAK7W,OAAO,e,KACzB,CACLva,QAAQsG,MAAM,wB,EAGlB,MAAApD,GACE,OACEC,EAACC,EAAI,CAACC,MAAM,6BACVF,EAAA,YAAOtD,KAAKqxB,MAAMrpB,WAAkB,IACpC1E,EAAA,OAAK6R,MAAM,6BAA6B3R,MAAM,QAAQ6R,OAAO,KAAKC,MAAM,KAAKF,QAAQ,eACnF9R,EAAA,QACE2I,KAAK,eACLsJ,EAAE,iOAGNjS,EAAA,YACGtD,KAAKqxB,MAAMlpB,QAAS,IACpBnI,KAAKkI,oBACJ5E,EAAA,QAAME,MAAM,SACTxD,KAAKqxB,MAAMC,eACX,MACAtxB,KAAKqxB,MAAMC,eAAiB,EAAI,IAAIltB,EAAQC,QAAQwgB,aAAe,IAAIzgB,EAAQC,QAAQygB,c,+GC1EtG,MAAM2M,GAAY,kK,MCOLC,GAAM,M,sFACF,U,CAIf,MAAAruB,GACE,OACEC,EAAA,UAAQE,MAAM,cAAcqP,QAAS,IAAM7S,KAAK2xB,iBAAiBtvB,QAC/DiB,EAAA,QAAMT,KAAK,S,eCfnB,MAAM+uB,GAAmB,kgD,MCUZC,GAAa,M,mEACL,M,eACE,M,sBACO,M,sBAEgB,CAAC,2BAA4B,cAAe,wB,CAExF,iBAAA3xB,GACEF,KAAK8xB,wB,CAGP,sBAAAA,GACE5Z,EAAM6Z,aAAaC,QAAQC,IAAIjyB,KAAKkyB,cAAcpiB,KAAK9P,MAAOA,KAAKmyB,YAAYriB,KAAK9P,OACpFkY,EAAM6Z,aAAaK,SAASH,IAAIjyB,KAAKqyB,eAAeviB,KAAK9P,MAAOA,KAAKmyB,YAAYriB,KAAK9P,M,CAGxF,eAAAsyB,CAAgB7Y,GACd,OAAOA,EAAI6H,MAAM,KAAK,E,CAGxB,iBAAAiR,CAAkB9Y,GAChB,OAAOzZ,KAAKwyB,iBAAiBrwB,SAASsX,E,CAGxC,aAAAyY,CAAcO,GACZ,MAAMC,EAAe1yB,KAAKsyB,gBAAgBG,EAAOhZ,KACjDJ,EAAqBqZ,GAAgB,UACrC,GAAI1yB,KAAKuyB,kBAAkBG,GAAe,CACxC1yB,KAAKoU,UAAY,I,CAEnB,OAAOqe,C,CAGT,cAAAJ,CAAeD,G,MACb,MAAMM,EAAe1yB,KAAKsyB,gBAAgBF,EAASK,OAAOhZ,KAC1D,GAAIzZ,KAAKuyB,kBAAkBG,GAAe,CACxC1yB,KAAKoU,UAAY,K,CAEnBiF,EAAqBqZ,GAAgB,OACrC,IAAIllB,EAAA4kB,EAAS5vB,KAAKmwB,gBAAY,MAAAnlB,SAAA,SAAAA,EAAEolB,OAAQ,CACtC5yB,KAAKmyB,YAAYC,EAAS5vB,KAAKmwB,cAC/B,MAAM,IAAIE,MAAMT,EAAS5vB,KAAKmwB,a,CAEhC,OAAOP,C,CAGT,WAAAD,CAAY1rB,GACVzG,KAAKsT,MAAMjR,KAAK,CACd6B,KAAM,QACNsP,MAAO/M,EACPuK,YAAa,GACb8L,SAAU,cAEZ,OAAO5F,QAAQ4b,OAAOrsB,E,CAExB,MAAApD,GACE,OACEC,EAACC,EAAI,KACFvD,KAAKoU,WACJ9Q,EAAA,OAAKE,MAAM,0BACTF,EAAA,OAAKE,MAAM,oBACTF,EAAA,4B,eCvEd,MAAMyvB,GAAqB,4tB,MCOdC,GAAe,M,sCACA,E,CAC1B,MAAA3vB,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,mBACTF,EAAA,QAAME,MAAM,Y,eCbtB,MAAMyvB,GAAc,qR,MCSPC,GAAQ,M,oEAiEnBlzB,KAAAmzB,MAAQ,E,mDA9DQ,U,mFAGwC,K,4CAEtB,K,iBACJ,S,iBACC,K,qBACI,K,cACP,M,UACO,K,cACI,K,mBACc,O,qBACoE,K,gBACZ,O,iBACoB,Q,gBAC/D,E,eACtClvB,I,aAEA,K,WACF,K,CAM1B,YAAAmvB,CAAazQ,GACX,GAAIA,IAAa,MAAQ3iB,KAAKwE,SAAU,CACtCxE,KAAKqzB,MAAQ,I,EAIjB,aAAAC,CAAc3Q,GACZ,GAAIA,GAAY3iB,KAAKwE,SAAU,CAC7BxE,KAAKuzB,QAAU,K,EAInB,qBAAAtG,CAAsBhsB,GACpBd,QAAQC,IAAIa,EAAEkC,OAAQnD,KAAKwb,UAAWva,EAAEkC,SAAWnD,KAAKwb,WACxD,IAAKxb,KAAKwzB,UAAYvyB,EAAEkC,SAAWnD,KAAKwb,UAAW,CACjD,M,CAEFrb,QAAQC,IAAI,UACZa,EAAEoO,2BACFpO,EAAEqO,kBACFtP,KAAKwzB,SAASrG,UAAUE,IAAI,gB,CAE9B,iBAAAoG,GAAiB,CACjB,oBAAA7xB,GAAoB,CACpB,kBAAA8xB,CAAmB3wB,GACjB/C,KAAKwzB,SAASrG,UAAUC,OAAO,iBAC/B,GAAIptB,KAAKwE,SAAU,CACjBxE,KAAKuzB,QAAU,MACfvzB,KAAKqzB,MAAQtwB,EAAME,OAAO0wB,gBAC1B3zB,KAAK4zB,cAAgB7wB,EAAME,OAAOP,MAClC1C,KAAK6zB,aAAaxxB,KAAKrC,KAAK4zB,c,KACvB,CACL5zB,KAAK4zB,cAAgB7wB,EAAME,OAAOP,MAClC1C,KAAK6zB,aAAaxxB,KAAKrC,KAAK4zB,c,EAKhC,MAAAvwB,GACE,IAAIywB,EAAY,eAChB,IAAIja,EACFvW,EAAA,OAAKE,MAAO,2BAA2BxD,KAAK+zB,uBAAuB/zB,KAAKg0B,cACtE1wB,EAAA,SACE0lB,QAAShpB,KAAKwb,UACdhY,MAAO,oBAAoBxD,KAAKi0B,gBAAkB,QAAU,sBAAwBj0B,KAAKi0B,gBAAkB,SAAW,yBAA2B,MAC/Ij0B,KAAKk0B,gBAAkB,MAAQl0B,KAAKk0B,gBAAkB,uBACnCl0B,KAAKg0B,qBAAqBh0B,KAAKm0B,cAAgB,OAAS,EAAIn0B,KAAKm0B,gBAErFn0B,KAAK6Z,MACL7Z,KAAKwE,SAAW,IAAM,KAI7B,GAAIxE,KAAKo0B,cAAgB,MAAO,CAC9BN,EAAY,E,CAEd,GAAI9zB,KAAKwE,WAAaxE,KAAKqzB,QAAUrzB,KAAKuzB,QAAS,CACjDO,EAAY,GAAGA,iB,CAGjB,IAAK9zB,KAAK2b,eAAgB,CACxB9B,EAAQ,E,CAGV,OACEvW,EAAA,OAAKE,MAAO,kBAAkBxD,KAAKq0B,wBACjC/wB,EAAA,OAAKE,MAAM,uBACRqW,EACDvW,EAAA,UACEwpB,IAAK7C,GAAOjqB,KAAKwzB,SAAWvJ,EAC5B/oB,GAAIlB,KAAKwb,UACThY,MAAO,GAAGxD,KAAKs0B,gBAAgBR,kBAA0B9zB,KAAKkM,aAAalM,KAAKytB,gBAAgBztB,KAAK2b,eAAiB,GAAK3b,KAAK+zB,WAAa,KAC7IxvB,QAASvE,KAAK0zB,mBAAmB5jB,KAAK9P,MACtCwE,SAAUxE,KAAKwE,UAEdxE,KAAKu0B,iBAAmBjxB,EAAA,UAAQZ,MAAO,IAAK1C,KAAKyb,aACjDzb,KAAKwC,KAAKsC,KAAI0vB,IACb,GAAIx0B,KAAK4zB,gBAAkBY,EAAK9xB,MAAO,CACrC,OACEY,EAAA,UAAQsB,SAAQ,KAAClC,MAAO8xB,EAAK9xB,OAC1B8xB,EAAKxY,K,KAGL,CACL,OAAO1Y,EAAA,UAAQZ,MAAO8xB,EAAK9xB,OAAQ8xB,EAAKxY,K,8GC1HxD,MAAMyY,GAAa,o0E,MCQNC,GAAO,M,uCAC6C,c,YAEnC,E,CAE5B,OAAAC,CAAQ5xB,GACN,MAAMuQ,EAAgBvQ,EAAMI,OAC5BnD,KAAK40B,UAAUthB,E,CAEjB,SAAAshB,CAAUthB,GACR,MAAMuhB,EAAgB,CACpBC,cAAe,kBACfC,YAAa,KACbC,QAAS1hB,EAAMgY,UAAY,KAG7B,OAAQhY,EAAMpP,MACZ,IAAK,UACH+wB,OAAOC,QAAQ5hB,EAAME,MAAO,GAAIqhB,GAChC,MACF,IAAK,QACHI,OAAOxuB,MAAM6M,EAAME,MAAO,GAAIqhB,GAC9B,M,CAGN,MAAAxxB,GACE,OAAOC,EAACC,EAAI,K,4CClChB,MAAM4xB,GAAe,yF,MCORC,GAAS,M,oEAIpB,UAAAC,CAAWC,GACT,GAAIt1B,KAAKu1B,eAAgB,CACvB1zB,aAAa7B,KAAKu1B,e,CAGpB,GAAID,EAAY,CACdt1B,KAAKu1B,eAAiB7zB,YAAW,KAC/B1B,KAAKw1B,KAAO,IAAI,GACf,I,KACE,CACLx1B,KAAKw1B,KAAO,K,EAGhB,MAAAnyB,GACE,OACEC,EAACC,EAAI,CAACC,MAAM,WACVF,EAAA,QAAMmyB,aAAc,IAAMz1B,KAAKq1B,WAAW,MAAOK,aAAc,IAAM11B,KAAKq1B,WAAW,QAOnF/xB,EAAA,qBAAiB,UAAS,iBAAgB,MAAM6R,MAAM,6BAA6BE,OAAO,KAAKC,MAAM,KAAK9R,MAAM,eAAe4R,QAAQ,eACrI9R,EAAA,QACE2I,KAAK,UACLsJ,EAAE,mQAIPvV,KAAKw1B,MACJlyB,EAAA,OAAKE,MAAM,wCAAwCgpB,KAAK,WACtDlpB,EAAA,OAAKE,MAAM,kBACXF,EAAA,OAAKE,MAAM,qBACTF,EAAA,QAAMqyB,UAAW31B,KAAK6D,Y"}
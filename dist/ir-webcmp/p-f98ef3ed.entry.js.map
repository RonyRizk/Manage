{"version":3,"names":["iglApplicationInfoCss","IglApplicationInfo","this","userRate","componentWillLoad","console","log","guestInfo","isRateModified","rateType","rate","dateDifference","guestData","Object","assign","roomId","defaultGuestRoomId","roomsList","filter","e","id","toString","length","preference","defaultGuestPreference","updateRoomList","handleSelctedUnits","units","selectedUnits","index","filterdRoomList","includes","updateData","dataUpdateEvent","emit","key","guestRefKey","data","handleDataChange","value","find","room","name","handleGuestNameChange","event","guestName","target","handleButtonClicked","detail","isButtonPressed","render","h","Host","class","bookingType","roomCategoryName","ratePlanName","replace","message","cancelation","guarantee","adult_child_offering","v4","type","placeholder","locales","entries","Lcz_GuestFirstnameAndLastname","onInput","required","calendar_data","is_frontdesk_enabled","onChange","selected","Lcz_Assignunits","map","Lcz_BedConfiguration","bedPreferenceType","CODE_NAME","CODE_VALUE_EN","getCurrencySymbol","currency","code","Number","toFixed","Lcz_Stay","iglBlockDatesViewCss","IglBlockDatesView","blockDatesData","RELEASE_AFTER_HOURS","OPTIONAL_REASON","OUT_OF_SERVICE","releaseList","bookingService","BookingService","getBlockedInfo","defaultData","parseInt","emitData","error","handleOptionalReason","handleReleaseAfterChange","evt","entryDate","undefined","renderPage","getReleaseHoursString","dt","Date","entryHour","entryMinute","setHours","getHours","getMinutes","toLocaleString","month","getDate","formatNumber","handleOutOfService","checked","renderAgain","Lcz_From","formatDate","fromDate","Lcz_To","toDate","isEventHover","Lcz_Reason","Lcz_OutOfservice","Lcz_Or","Lcz_OptionalReason","Lcz_AutomaticReleaseIn","releaseItem","Lcz_On","IglBookPropertyService","setBookingInfoFromAutoComplete","context","res","bookedByInfoData","guest","email","firstName","first_name","lastName","last_name","countryId","country_id","isdCode","contactNumber","mobile","selectedArrivalTime","arrival","emailGuest","subscribe_to_news_letter","remark","cardNumber","cardHolderName","expiryMonth","expiryYear","bookingNumber","booking_nbr","rooms","from_date","to_date","resetRoomsInfoAndMessage","roomsInfo","onDataRoomUpdate","isEdit","isEditBooking","changedKey","roomCategoryKey","roomCategoryId","ratePlanKey","ratePlanId","shouldClearData","Map","initializeRoomCategoryIfNeeded","has","get","applyBookingEditToSelectedRoom","setSelectedRoomData","cleanupEmptyData","set","selectedRatePlans","totalRooms","inventory","delete","Array","fill","size","clear","prepareBookUserServiceParams","check_in","sourceOption","arrivalTime","isEventType","getArrivalTimeForBooking","bookingData","ARRIVAL","pr_id","PR_ID","BOOKING_NUMBER","ROOMS","identifier","IDENTIFIER","dateRangeData","propertyid","GUEST","getBookingPreferenceRoomId","hasOwnProperty","getRoomCategoryByRoomId","_a","roomCategory","RATE_TYPE","setEditingRoomInfo","category","room_id","RATE_PLAN_ID","adultCount","ADULTS_COUNT","RATE","RATE_PLAN","NAME","iglBookPropertyCss","IglBookProperty","initialRoomIds","showSplitBookingOption","sourceOptions","ratePricingMode","bookPropertyService","eventsService","EventsService","adult","child","handleKeyDown","closeWindow","componentDidLoad","document","addEventListener","disconnectedCallback","removeEventListener","clearBooking","stopImmediatePropagation","stopPropagation","handleSpiltBookingSelected","getExposedBooking","language","source","defaultDateRange","FROM_DATE","TO_DATE","bind","setupEntries","fetchSetupEntries","setSourceOptions","allowedBookingSources","setOtherProperties","adultChildCount","CHILDREN_COUNT","roomName","roomTypeId","event_type","page","isGuestDataIncomplete","isButtonDisabled","isValidProperty","property","comparedBy","bookingSource","description","tag","SOURCE","handleAdultChildChange","initializeBookingAvailability","room_type_ids","getBookingAvailability","tax_statement","roomtypes","physicalrooms","getSplitBookings","splitBookingEvents","closeBookingWindow","onDateRangeSelect","opt","dateToFormattedString","handleBlockDateUpdate","handleGuestInfoUpdate","handleBookedByInfoUpdate","handleSourceDropDown","selectedSource","gotoSplitPageTwo","gotoPage","showSplitBooking","getPageBlockDatesView","Fragment","fromDateStr","toDateStr","ENTRY_DATE","onDataUpdateEvent","onClick","Lcz_Cancel","handleBlockDate","Lcz_Blockdates","bookUser","buttonName","handlePageTwoDataUpdateEvent","releaseData","result","blockUnit","NOTES","STAY_STATUS_CODE","DESCRIPTION","blockedUnit","transformNewBLockedRooms","blockedCreated","setLoadingState","isLoading","STATUS_CODE","deleteEvent","POOL","serviceParams","resetBookingData","resetLoadingState","assign_units","ARRIVAL_TIME","setTimeout","onRoomDataUpdate","getCurrentPage","BLOCK_DATES_TITLE","TITLE","onIconClickHandler","slot","xmlns","viewBox","height","width","d","defaultDaterange","eventType","selectedRooms","adultChildConstraints","onRoomsDataUpdate","propertyId","showPaymentDetails","selectedGuestData","countryNodeList","defaultGuestData","isEditOrAddRoomEvent","iglBookPropertyContainerCss","IglBookPropertyContainer","roomService","RoomService","setRoomsData","roomServiceResp","roomsData","_b","My_Result","forEach","expanded","calendarData","initializeApp","roomResponse","languageTexts","countriesList","Promise","all","fetchData","fetchLanguage","getCountries","direction","allowed_payment_methods","paymentMethods","allowed_booking_sources","adult_child_constraints","calendar_legends","legendData","paymentCodesToShow","some","method","baseurl","axios","defaults","baseURL","ticket","ticketChanged","sessionStorage","setItem","JSON","stringify","handleCloseBookingWindow","bookingItem","handleTriggerClicked","tomorrow","setDate","EMAIL","ID","PHONE","REFERENCE_TYPE","Lcz_NewBooking","onCloseBookingWindow","iglBookPropertyFooterCss","IglBookPropertyFooter","editNext","label","renderButton","disabled","shouldRenderTwoButtons","buttonClicked","Lcz_Next","initialState","status","state","interceptor_requests","onCalendarDatesChange","createStore","iglBookPropertyHeaderCss","IglBookPropertyHeader","getSplitBookingList","Lcz_Tobooking","keys","moment","bookingDataDefaultDateRange","format","Lcz_BookingNumber","onComboboxValue","spiltBookingSelected","isSplitBooking","getSourceNode","Lcz_Source","sourceDropDownChange","option","obj","adultChild","getAdultChildConstraints","Lcz_NumberOfGuests","Lcz_AdultsCaption","from","adult_max_nbr","_","i","child_max_nbr","renderChildCaption","icon","text","Lcz_Check","onClickHanlder","maxAge","child_max_age","years","Lcz_Years","Lcz_Year","Lcz_ChildCaption","toast","title","Lcz_ChooseBookingNumber","position","initialToDate","initialFromDate","selectedFromDate","selectedToDate","isBefore","isAfter","Lcz_CheckInDateShouldBeMAx","Lcz_PlzSelectNumberOfGuests","minDate","getTime","showSourceNode","maxDate","add","max_nights","dateLabel","Lcz_Dates","iglBookingOverviewPageCss","IglBookingOverviewPage","splitBookingId","splitBookings","roomInfo","isBookDisabled","roomTypeData","roomInfoId","roomsDataUpdate","iglBookingRoomRatePlanCss","IglBookingRoomRatePlan","initialRateValue","getAvailableRooms","assignable_units","unit","Is_Fully_Available","push","updateSelectedRatePlan","ratePlanData","disableForm","shouldBeDisabled","selectedData","is_closed","totalAvailableRooms","physicalRooms","setAvailableRooms","availableRooms","selectedRoom","sort","a","b","getSelectedOffering","variations","variation","amount","adult_nbr","childrenCount","child_nbr","defaultSelectedRate","ratePlanDataChanged","newData","handleRateDaysUpdate","selectedOffering","handleInput","inputElement","inputValue","validDecimalNumber","test","substring","updateOffering","updateRate","updateGenericData","offering","numericValue","bookProperty","gotoSplitPageTwoEvent","renderRate","split","Lcz_Rate","Lcz_Current","Lcz_Select","Lcz_Book","iglBookingRoomsCss","IglBookingRooms","validBookingTypes","initializeRoomData","rateplans","roomsDistributions","calculateInitialDistributions","handleRoomTypeData","distributions","selectedIndexes","sum","updatedData","handleTotalRoomsUpdate","newValue","updateRatePlanTotalRooms","ratePlanIndex","calculateTotalSelectedRoomsExcludingIndex","excludedIndex","reduce","acc","idx","newRoomsDistributions","totalSelectedRoomsExcludingCurrent","isValidBookingType","ratePlan","defaultRoomId","iglDateRangeCss","IglDateRange","totalNights","getStringDateFormat","getFullYear","getMonth","getFormattedDateString","calculateTotalNights","handleDateSelectEvent","Math","floor","toLowerCase","dateSelectEvent","handleDateChange","start","end","autoApply","onDateChanged","Lcz_Nights","Lcz_Night","iglPagetwoCss","IglPagetwo","initializeGuestData","selectedBookedByData","total","newSelectedUnits","getRate","rate_plan","TOTAL_PRICE","handleOnApplicationInfoDataUpdateEvent","categoryIdKey","updatedUnits","handleEventData","Lcz_TotalPrice","bed_preference","Lcz_Back","btn_color","btn_styles","Lcz_Save","iglPropertyBookedByCss","IglPropertyBookedBy","arrivalTimeList","expiryMonths","expiryYears","currentMonth","assignCountryCode","initializeExpiryYears","initializeDateData","populateBookedByData","currentYear","country","getUserDefaultCountry","bookedByData","foundTime","time","handleNumberInput","numericRegex","handleEmailInput","isValidEmail","checkUser","getUserInfo","emailId","emailPattern","handleComboboxChange","clearEvent","Lcz_BookedBy","danger_border","Lcz_EmailAddress","onInputCleared","Lcz_FirstName","Lcz_LastName","Lcz_Country","countryNode","Lcz_MobilePhone","Lcz_Isd","phone_prefix","Lcz_ContactNumber","Lcz_YourArrivalTime","Lcz_AnyMessageForUs","rows","Lcz_CardNumber","pattern","Lcz_CardHolderName","Lcz_ExpiryDate","year","htmlFor","Lcz_EmailTheGuest","irAutocompleteCss","IrAutocomplete","no_result_found","Lcz_NoResultsFound","dataSize","itemHeight","getHeightOfPElement","preventDefault","selectedIndex","adjustScrollPosition","selectItem","inputRef","blur","isComboBoxVisible","combobox","el","querySelector","pItem","offsetHeight","visibleHeight","margin","itemTotalHeight","selectedPosition","newScrollTop","max","min","scrollHeight","scrollTo","top","behavior","isItemSelected","comboboxValue","resetCombobox","debounceFetchData","clearTimeout","debounceTimer","duration","fetchExposedGuest","fetchExposedBookings","handleInputChange","handleDocumentClick","contains","handleBlur","isDropdownItem","activeElement","inputCleared","element","closest","_c","_d","handleFocus","handleItemKeyDown","renderDropdown","role","onKeyDown","tabIndex","clearInput","withblur","inputId","onBlur","onFocus","ref","irButtonCss","IrButton","connectedCallback","blockClass","btn_block","clickHanlder","textSize","btn_type","btn_disabled","onlineResources","isCSS","link","IrCommon","parseRefs","initializeStyles","hrefsChanged","extraResources","resources","parse","appendTag","tagName","attributes","createElement","selectorParts","attr","setAttribute","selector","join","existingTag","head","appendChild","href","rel","isJS","src","irDatePickerCss","IrDatePicker","days","dateRangeInput","$","daterangepicker","singleDatePicker","opens","startDate","endDate","maxSpan","locale","separator","applyLabel","cancelLabel","fromLabel","toLabel","customRangeLabel","weekLabel","daysOfWeek","monthNames","firstDay","dateChanged","irIconCss","IrIcon","iconClickHandler","irInterceptorCss","IrInterceptor","loadingMessage","errorMessage","setupAxiosInterceptors","interceptors","request","use","handleRequest","handleError","response","handleResponse","extractEndpoint","url","isHandledEndpoint","handledEndpoints","config","defaultMessage","isUnassignedUnit","showToast","ExceptionMsg","trim","Error","hideToastAfterDelay","reject","isShown","isSuccess","delay","renderMessage","irLoadingScreenCss","IrLoadingScreen","irToastCss","IrToast","onToast","toastrOptions","positionClass","closeButton","timeOut","toastr","success","irTooltipCss","IrTooltip","toggleOpen","shouldOpen","tooltipTimeout","open","onMouseEnter","onMouseLeave","innerHTML"],"sources":["src/components/igloo-calendar/igl-application-info/igl-application-info.css?tag=igl-application-info&encapsulation=scoped","src/components/igloo-calendar/igl-application-info/igl-application-info.tsx","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.css?tag=igl-block-dates-view&encapsulation=scoped","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property.service.ts","src/components/igloo-calendar/igl-book-property/igl-book-property.css?tag=igl-book-property&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property.tsx","src/components/igl-book-property-container/igl-book-property-container.css?tag=igl-book-property-container&encapsulation=scoped","src/components/igl-book-property-container/igl-book-property-container.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.css?tag=igl-book-property-footer&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.tsx","src/stores/ir-interceptor.store.ts","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.css?tag=igl-book-property-header&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.css?tag=igl-booking-overview-page&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.tsx","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.css?tag=igl-booking-room-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.tsx","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.css?tag=igl-booking-rooms&encapsulation=scoped","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.tsx","src/components/igloo-calendar/igl-date-range/igl-date-range.css?tag=igl-date-range&encapsulation=scoped","src/components/igloo-calendar/igl-date-range/igl-date-range.tsx","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.css?tag=igl-pagetwo&encapsulation=scoped","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.tsx","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.css?tag=igl-property-booked-by&encapsulation=scoped","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.tsx","src/components/ir-autocomplete/ir-autocomplete.css?tag=ir-autocomplete&encapsulation=scoped","src/components/ir-autocomplete/ir-autocomplete.tsx","src/components/ir-button/ir-button.css?tag=ir-button","src/components/ir-button/ir-button.tsx","src/common/ir.common.resources.ts","src/components/ir-common/ir-common.tsx","src/components/ir-date-picker/ir-date-picker.css?tag=ir-date-picker&encapsulation=scoped","src/components/ir-date-picker/ir-date-picker.tsx","src/components/ir-icon/ir-icon.css?tag=ir-icon&encapsulation=scoped","src/components/ir-icon/ir-icon.tsx","src/components/ir-interceptor/ir-interceptor.css?tag=ir-interceptor&encapsulation=scoped","src/components/ir-interceptor/ir-interceptor.tsx","src/components/ir-loading-screen/ir-loading-screen.css?tag=ir-loading-screen&encapsulation=scoped","src/components/ir-loading-screen/ir-loading-screen.tsx","src/components/ir-toast/ir-toast.css?tag=ir-toast&encapsulation=scoped","src/components/ir-toast/ir-toast.tsx","src/components/ir-tooltip/ir-tooltip.css?tag=ir-tooltip&encapsulation=scoped","src/components/ir-tooltip/ir-tooltip.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n@media only screen and (min-width: 908px) {\r\n  .aplicationInfoContainer {\r\n    max-width: 80%;\r\n  }\r\n  .guest-info-container {\r\n    max-width: 300px;\r\n  }\r\n\r\n  .preference-select-container {\r\n    max-width: 250px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, Watch, State, Listen } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { getCurrencySymbol } from '../../../utils/utils';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-application-info',\r\n  styleUrl: 'igl-application-info.css',\r\n  scoped: true,\r\n})\r\nexport class IglApplicationInfo {\r\n  @Prop() guestInfo: { [key: string]: any };\r\n  @Prop() currency;\r\n  @Prop({ reflect: true, mutable: true }) roomsList: { [key: string]: any }[] = [];\r\n  @Prop() guestRefKey: string;\r\n  @Prop() bedPreferenceType = [];\r\n  @Prop() selectedUnits: number[] = [];\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() defaultGuestPreference: number | null;\r\n  @Prop() index: number;\r\n  @Prop() defaultGuestRoomId: number;\r\n  @Prop() dateDifference: number;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() filterdRoomList = [];\r\n  @State() isButtonPressed = false;\r\n  @State() guestData: { [key: string]: any };\r\n  private userRate = 0;\r\n\r\n  componentWillLoad() {\r\n    console.log(this.guestInfo);\r\n    if (this.guestInfo.isRateModified && this.guestInfo.rateType === 2) {\r\n      this.userRate = this.guestInfo.rate * this.dateDifference;\r\n    } else {\r\n      this.userRate = this.guestInfo.rate;\r\n    }\r\n    this.guestData = this.guestInfo ? { ...this.guestInfo } : {};\r\n    this.guestData.roomId = '';\r\n    if (this.defaultGuestRoomId && this.roomsList.filter(e => e.id.toString() === this.defaultGuestRoomId.toString()).length > 0) {\r\n      this.guestData.roomId = this.defaultGuestRoomId;\r\n    }\r\n    this.guestData.preference = +this.defaultGuestPreference || '';\r\n    this.updateRoomList();\r\n  }\r\n\r\n  @Watch('selectedUnits')\r\n  async handleSelctedUnits() {\r\n    this.updateRoomList();\r\n  }\r\n  updateRoomList() {\r\n    const units = [...this.selectedUnits];\r\n    units[this.index] = -1;\r\n    this.filterdRoomList = this.roomsList.filter(e => !units.includes(e.id));\r\n  }\r\n  updateData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      guestRefKey: this.guestRefKey,\r\n      data: { ...this.guestData },\r\n    });\r\n  }\r\n\r\n  handleDataChange(key, value) {\r\n    this.guestData[key] = +value;\r\n    if (value === '') {\r\n      this.guestData['roomName'] = value;\r\n    }\r\n    if (key === 'roomId' && value !== '') {\r\n      this.guestData['roomName'] = this.filterdRoomList.find(room => room.id === +value).name || '';\r\n    }\r\n    console.log('guest data', this.guestData);\r\n    this.updateData();\r\n  }\r\n\r\n  handleGuestNameChange(event) {\r\n    // console.log(\"On Guest name Change::\", event.target.value);\r\n    this.guestData.guestName = event.target.value;\r\n    this.updateData();\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n      case 'save':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    //console.log(this.guestInfo, this.roomsList);\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-1 \">\r\n          <div class=\" mb-1 \">\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING' ? (\r\n              <span class=\"h5 mr-1\">{this.guestInfo.roomCategoryName}</span>\r\n            ) : null}\r\n            <span class=\" font-weight-bold\">\r\n              {this.guestInfo.ratePlanName.replace(this.guestInfo.roomCategoryName + '/', '')}\r\n              <ir-tooltip class=\" mr-1\" message={this.guestInfo.cancelation + this.guestInfo.guarantee}></ir-tooltip>\r\n            </span>\r\n            <span>{this.guestInfo.adult_child_offering}</span>\r\n          </div>\r\n\r\n          <div class=\"d-flex flex-column flex-md-row m-0 p-0 align-items-md-center aplicationInfoContainer \">\r\n            <div class=\"mr-1 flex-fill guest-info-container\">\r\n              <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class={`form-control ${this.isButtonPressed && this.guestData.guestName === '' && 'border-danger'}`}\r\n                placeholder={locales.entries.Lcz_GuestFirstnameAndLastname}\r\n                name=\"guestName\"\r\n                onInput={event => this.handleGuestNameChange(event)}\r\n                required\r\n                value={this.guestData.guestName}\r\n              />\r\n            </div>\r\n            <div class={'mt-1 mt-md-0 d-flex align-items-center flex-fill'}>\r\n              {calendar_data.is_frontdesk_enabled && (this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') ? (\r\n                <div class=\"mr-1 p-0 flex-fill  preference-select-container\">\r\n                  <select class={`form-control  input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('roomId', (event.target as HTMLInputElement).value)}>\r\n                    <option value=\"\" selected={this.guestData.roomId === ''}>\r\n                      {locales.entries.Lcz_Assignunits}\r\n                    </option>\r\n                    {this.filterdRoomList.map(room => (\r\n                      <option value={room.id} selected={+this.guestData.roomId === room.id}>\r\n                        {room.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              ) : null}\r\n\r\n              <div class=\"mr-1 flex-fill\">\r\n                <select\r\n                  class={`form-control input-sm ${this.isButtonPressed && (this.guestData.preference === '' || this.guestData.preference === 0) && 'border-danger'}`}\r\n                  id={v4()}\r\n                  onChange={event => this.handleDataChange('preference', (event.target as HTMLInputElement).value)}\r\n                >\r\n                  <option value=\"\" selected={this.guestData.preference === ''}>\r\n                    {locales.entries.Lcz_BedConfiguration}\r\n                  </option>\r\n                  {this.bedPreferenceType.map(data => (\r\n                    <option value={+data.CODE_NAME} selected={this.guestData.preference === +data.CODE_NAME}>\r\n                      {data.CODE_VALUE_EN}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div class=\"\">\r\n                {getCurrencySymbol(this.currency.code) + Number(this.userRate).toFixed(2)}/{locales.entries.Lcz_Stay}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n:host .controlContainer {\r\n  width: 24px;\r\n}\r\n\r\n:host .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n\r\n.releaseTime {\r\n  padding-left: 5px;\r\n}\r\n.out-of-service-label {\r\n  margin-left: 5px !important;\r\n}\r\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries } from '../../../models/IBooking';\r\nimport { formatDate } from '../../../utils/utils';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'igl-block-dates-view',\r\n  styleUrl: 'igl-block-dates-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglBlockDatesView {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() fromDate: string;\r\n  @Prop() toDate: string;\r\n  @Prop({ mutable: true }) entryDate: string;\r\n  @Prop() entryHour: number;\r\n  @Prop() isEventHover: boolean = false;\r\n  @Prop() entryMinute: number;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private blockDatesData: { [key: string]: any } = {\r\n    RELEASE_AFTER_HOURS: 0,\r\n    OPTIONAL_REASON: '',\r\n    OUT_OF_SERVICE: false,\r\n  }; // Change of property name might require updates in booking-event-hover\r\n  private releaseList: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n\r\n  async componentWillLoad() {\r\n    try {\r\n      this.releaseList = await this.bookingService.getBlockedInfo();\r\n      if (this.defaultData) {\r\n        this.blockDatesData = { ...this.defaultData };\r\n      } else {\r\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(this.releaseList[0].CODE_NAME);\r\n        this.emitData();\r\n      }\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleOptionalReason(event) {\r\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\r\n    this.emitData();\r\n  }\r\n\r\n  handleReleaseAfterChange(evt) {\r\n    if (this.entryDate) this.entryDate = undefined;\r\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  emitData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'blockDatesData',\r\n      data: { ...this.blockDatesData },\r\n    });\r\n  }\r\n\r\n  getReleaseHoursString() {\r\n    // console.log(\"entry date\", this.entryDate);\r\n    // console.log(\"blocked date data\", this.blockDatesData);\r\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\r\n    if (this.entryDate && this.entryHour && this.entryMinute) {\r\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\r\n    } else {\r\n      dt.setHours(dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS, dt.getMinutes(), 0, 0);\r\n    }\r\n\r\n    return dt.toLocaleString('default', { month: 'short' }) + ' ' + dt.getDate() + ', ' + this.formatNumber(dt.getHours()) + ':' + this.formatNumber(dt.getMinutes());\r\n  }\r\n  formatNumber(value: number) {\r\n    return value < 10 ? `0${value}` : value;\r\n  }\r\n  handleOutOfService(evt) {\r\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\r\n    if (this.blockDatesData.OUT_OF_SERVICE) {\r\n      this.blockDatesData.OPTIONAL_REASON = '';\r\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\r\n    }\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={`m-0 p-0 mb-1`}>\r\n          <div class=\"text-left p-0\">\r\n            <span class=\"pr-1\">\r\n              <span class=\"text-bold-700 font-medium-1\">{locales.entries.Lcz_From}: </span>\r\n              {formatDate(this.fromDate)}\r\n            </span>\r\n            <span class=\"text-bold-700 font-medium-1\">{locales.entries.Lcz_To}: </span>\r\n            {formatDate(this.toDate)}\r\n          </div>\r\n        </div>\r\n        <div class={` mb-1 text-left ${this.isEventHover && 'p-0'}`}>\r\n          <div class=\"mb-1 \">\r\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">{locales.entries.Lcz_Reason}:</label>\r\n            <div class=\"p-0 m-0 pr-1  controlContainer checkBoxContainer d-inline-block align-middle\">\r\n              <input class=\"form-control\" type=\"checkbox\" checked={this.blockDatesData.OUT_OF_SERVICE} id=\"userinput6\" onChange={event => this.handleOutOfService(event)} />\r\n            </div>\r\n            <span class=\"align-middle out-of-service-label\">{locales.entries.Lcz_OutOfservice}</span>\r\n          </div>\r\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\r\n            <div>\r\n              <div class=\"mb-1 d-flex  align-items-center\">\r\n                <span class=\"align-middle\">{locales.entries.Lcz_Or} </span>\r\n                <div class=\"d-inline-flex col pr-0 align-middle\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_OptionalReason}\r\n                    id=\"optReason\"\r\n                    value={this.blockDatesData.OPTIONAL_REASON}\r\n                    onInput={event => this.handleOptionalReason(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-1 w-100 pr-0 \">\r\n                <span class=\"text-bold-700 font-medium-1\">{locales.entries.Lcz_AutomaticReleaseIn}: </span>\r\n                <div class=\"d-inline-block\">\r\n                  <select class=\"form-control input-sm\" id=\"zSmallSelect\" onChange={evt => this.handleReleaseAfterChange(evt)}>\r\n                    {this.releaseList.map(releaseItem => (\r\n                      <option value={+releaseItem.CODE_NAME} selected={this.blockDatesData.RELEASE_AFTER_HOURS == +releaseItem.CODE_NAME}>\r\n                        {releaseItem.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\r\n                  <div class=\"d-inline-block releaseTime\">\r\n                    <em>\r\n                      {locales.entries.Lcz_On} {this.getReleaseHoursString()}\r\n                    </em>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { BookUserParams } from '../../../models/igl-book-property';\r\n//import { BookingService } from '../../../services/booking.service';\r\n\r\nexport class IglBookPropertyService {\r\n  public setBookingInfoFromAutoComplete(context, res) {\r\n    context.bookedByInfoData = {\r\n      id: res.guest.id,\r\n      email: res.guest.email,\r\n      firstName: res.guest.first_name,\r\n      lastName: res.guest.last_name,\r\n      countryId: res.guest.country_id,\r\n      isdCode: res.guest.country_id.toString(),\r\n      contactNumber: res.guest.mobile,\r\n      selectedArrivalTime: res.arrival,\r\n      emailGuest: res.guest.subscribe_to_news_letter,\r\n      message: res.remark,\r\n      cardNumber: '',\r\n      cardHolderName: '',\r\n      expiryMonth: '',\r\n      expiryYear: '',\r\n      bookingNumber: res.booking_nbr,\r\n      rooms: res.rooms,\r\n      from_date: res.from_date,\r\n      to_date: res.to_date,\r\n    };\r\n  }\r\n\r\n  public resetRoomsInfoAndMessage(context) {\r\n    context.defaultData.roomsInfo = [];\r\n    context.message = '';\r\n  }\r\n\r\n  public onDataRoomUpdate(event: CustomEvent, selectedUnits: Map<string, Map<string, any>>, isEdit: boolean, isEditBooking: boolean, name: string) {\r\n    let units = selectedUnits;\r\n    const { data, key, changedKey } = event.detail;\r\n    const roomCategoryKey = `c_${data.roomCategoryId}`;\r\n    const ratePlanKey = `p_${data.ratePlanId}`;\r\n\r\n    if (this.shouldClearData(key)) {\r\n      units = new Map();\r\n    }\r\n\r\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey, units);\r\n\r\n    if (isEditBooking) {\r\n      if (changedKey === 'rate') {\r\n        if (units.has(roomCategoryKey) && units.get(roomCategoryKey).has(ratePlanKey)) {\r\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n        }\r\n      } else {\r\n        if (changedKey !== 'rateType') {\r\n          if (changedKey === 'adult_child_offering') {\r\n            if (units.has(roomCategoryKey) && selectedUnits.get(roomCategoryKey).has(ratePlanKey)) {\r\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n            }\r\n          } else {\r\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data, units);\r\n    }\r\n    this.cleanupEmptyData(roomCategoryKey, units);\r\n    return units;\r\n  }\r\n\r\n  private shouldClearData(key: string | undefined): boolean {\r\n    return key === 'clearData' || key === 'EDIT_BOOKING';\r\n  }\r\n\r\n  private initializeRoomCategoryIfNeeded(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (!selectedUnits.has(roomCategoryKey)) {\r\n      selectedUnits.set(roomCategoryKey, new Map());\r\n    }\r\n  }\r\n  private setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any, selectedUnits: Map<string, Map<string, any>>) {\r\n    let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n    if (data.totalRooms === 0 || data.inventory === 0) {\r\n      selectedRatePlans.delete(ratePlanKey);\r\n    } else {\r\n      selectedUnits.set(roomCategoryKey, selectedRatePlans.set(ratePlanKey, { ...data, selectedUnits: Array(data.totalRooms).fill(-1) }));\r\n    }\r\n  }\r\n\r\n  private cleanupEmptyData(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (selectedUnits.has(roomCategoryKey)) {\r\n      let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n      if (selectedRatePlans.size === 0) {\r\n        selectedUnits.delete(roomCategoryKey);\r\n      }\r\n    }\r\n  }\r\n  private applyBookingEditToSelectedRoom(roomCategoryKey: string, ratePlanKey: string, data, selectedUnits: Map<string, Map<string, any>>, name: string, isEdit: boolean) {\r\n    selectedUnits.clear();\r\n    let res = {};\r\n    if (isEdit) {\r\n      res = { ...data, guestName: name || '', roomId: '' };\r\n    } else {\r\n      res = { ...data };\r\n    }\r\n    selectedUnits.set(roomCategoryKey, new Map().set(ratePlanKey, res));\r\n  }\r\n  async prepareBookUserServiceParams(context, check_in, sourceOption): Promise<BookUserParams> {\r\n    try {\r\n      const arrivalTime = context.isEventType('EDIT_BOOKING')\r\n        ? context.getArrivalTimeForBooking()\r\n        : context.isEventType('ADD_ROOM')\r\n        ? context.bookingData.ARRIVAL.code\r\n        : context.isEventType('SPLIT_BOOKING')\r\n        ? context.bookedByInfoData.selectedArrivalTime.code\r\n        : '';\r\n      const pr_id = context.isEventType('BAR_BOOKING') ? context.bookingData.PR_ID : undefined;\r\n      const bookingNumber =\r\n        context.isEventType('EDIT_BOOKING') || context.isEventType('ADD_ROOM')\r\n          ? context.bookingData.BOOKING_NUMBER\r\n          : context.isEventType('SPLIT_BOOKING')\r\n          ? context.bookedByInfoData.bookingNumber\r\n          : undefined;\r\n      let rooms = [];\r\n      if (context.isEventType('ADD_ROOM')) {\r\n        // const result = await (context.bookingService as BookingService).getExoposedBooking(bookingNumber, context.language);\r\n        //rooms = result.rooms;\r\n        rooms = context.bookingData.ROOMS;\r\n      } else if (context.isEventType('SPLIT_BOOKING')) {\r\n        rooms = context.bookedByInfoData.rooms;\r\n      } else if (context.isEventType('EDIT_BOOKING')) {\r\n        rooms = context.defaultData.ROOMS.filter(room => room.identifier !== context.bookingData.IDENTIFIER);\r\n      }\r\n      console.log('rooms', rooms);\r\n\r\n      return [\r\n        context.bookedByInfoData,\r\n        check_in,\r\n        new Date(context.dateRangeData.fromDate),\r\n        new Date(context.dateRangeData.toDate),\r\n        context.guestData,\r\n        context.dateRangeData.dateDifference,\r\n        sourceOption,\r\n        context.propertyid,\r\n        rooms,\r\n        context.currency,\r\n        bookingNumber,\r\n        context.bookingData.GUEST,\r\n        arrivalTime,\r\n        pr_id,\r\n        context.bookingData.IDENTIFIER,\r\n      ];\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  private getBookingPreferenceRoomId(bookingData) {\r\n    return (bookingData.hasOwnProperty('PR_ID') && bookingData.PR_ID) || null;\r\n  }\r\n  private getRoomCategoryByRoomId(bookingData) {\r\n    return bookingData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.id === bookingData.RATE_TYPE;\r\n    });\r\n  }\r\n  public setEditingRoomInfo(bookingData, selectedUnits) {\r\n    console.log(bookingData, bookingData.roomsInfo);\r\n    console.log(this.getBookingPreferenceRoomId(bookingData));\r\n    const category = this.getRoomCategoryByRoomId(bookingData);\r\n    const room_id = !category ? '' : `c_${category?.id}`;\r\n    const ratePlanId = `p_${bookingData.RATE_PLAN_ID}`;\r\n    const data = {\r\n      adultCount: bookingData.ADULTS_COUNT,\r\n      rate: bookingData.RATE,\r\n      rateType: bookingData.RATE_TYPE,\r\n      ratePlanId: bookingData.RATE_PLAN_ID,\r\n      roomCategoryId: category ? category.id : '',\r\n      roomCategoryName: category ? category.name : '',\r\n      totalRooms: 1,\r\n      ratePlanName: bookingData.RATE_PLAN,\r\n      roomId: bookingData.PR_ID,\r\n      guestName: bookingData.NAME,\r\n      cancelation: bookingData.cancelation,\r\n      guarantee: bookingData.guarantee,\r\n      adult_child_offering: bookingData.adult_child_offering,\r\n    };\r\n    selectedUnits.set(room_id, new Map().set(ratePlanId, data));\r\n  }\r\n}\r\n",":host {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 99;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n.block-date {\r\n  width: 100%;\r\n}\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n  width: 100vw;\r\n  overflow-y: auto;\r\n}\r\n.card {\r\n  top: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n@media only screen and (min-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 70%;\r\n  }\r\n}\r\n@media only screen and (min-width: 2000px) {\r\n  .sideWindow {\r\n    max-width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 768px) and (max-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 90%;\r\n  }\r\n}\r\n@media only screen and (min-width: 600px) and (max-width: 768px) {\r\n  .sideWindow {\r\n    max-width: 75%;\r\n  }\r\n}\r\n@media only screen and (min-width: 641px) {\r\n  .block-date {\r\n    max-width: 450px;\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h, Listen, Fragment } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { dateToFormattedString, getReleaseHoursString } from '../../../utils/utils';\r\nimport { IEntries, RoomBlockDetails, RoomBookingDetails } from '../../../models/IBooking';\r\nimport { IPageTwoDataUpdateProps } from '../../../models/models';\r\nimport { transformNewBLockedRooms } from '../../../utils/booking';\r\nimport { IglBookPropertyService } from './igl-book-property.service';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../models/igl-book-property';\r\nimport { EventsService } from '../../../services/events.service';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'igl-book-property',\r\n  styleUrls: ['igl-book-property.css'],\r\n  scoped: true,\r\n})\r\nexport class IglBookProperty {\r\n  @Prop() propertyid: number;\r\n  @Prop() allowedBookingSources: any;\r\n  @Prop() language: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() currency: { id: number; code: string };\r\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n\r\n  @State() adultChildCount: { adult: number; child: number } = {\r\n    adult: 0,\r\n    child: 0,\r\n  };\r\n  @State() renderAgain: boolean = false;\r\n  @State() dateRangeData: { [key: string]: any };\r\n  @State() defaultData: any;\r\n  @State() isLoading: string;\r\n  @State() buttonName = '';\r\n\r\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\r\n  @Event() bookingCreated: EventEmitter<{ pool?: string; data: RoomBookingDetails[] }>;\r\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\r\n  @Event() resetBookingData: EventEmitter<null>;\r\n\r\n  private initialRoomIds: { roomName: string; ratePlanId: number; roomId: string; roomTypeId: string } | null = null;\r\n  private message: string = '';\r\n  private sourceOption: TSourceOption;\r\n  private page: string;\r\n  private showSplitBookingOption: boolean = false;\r\n  private sourceOptions: TSourceOptions[] = [];\r\n  private guestData: { [key: string]: any }[] = [];\r\n  private bookedByInfoData: { [key: string]: any } = {};\r\n  private blockDatesData: { [key: string]: any } = {};\r\n  private ratePricingMode: IEntries[] = [];\r\n  private selectedUnits: Map<string, Map<string, any>> = new Map();\r\n  private bedPreferenceType: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private bookPropertyService = new IglBookPropertyService();\r\n  private eventsService = new EventsService();\r\n  private defaultDateRange: { from_date: string; to_date: string };\r\n\r\n  handleKeyDown(e: KeyboardEvent) {\r\n    if (e.key === 'Escape') {\r\n      this.closeWindow();\r\n    } else return;\r\n  }\r\n  componentDidLoad() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  @Listen('inputCleared')\r\n  clearBooking(e: CustomEvent) {\r\n    if (this.isEventType('SPLIT_BOOKING')) {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      this.bookedByInfoData = {};\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n      this.renderPage();\r\n    }\r\n  }\r\n\r\n  @Listen('spiltBookingSelected')\r\n  async handleSpiltBookingSelected(e: CustomEvent<{ key: string; data: unknown }>) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation;\r\n    const { key, data } = e.detail;\r\n    if (key === 'select') {\r\n      const res = await this.bookingService.getExposedBooking((data as any).booking_nbr, this.language);\r\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\r\n      this.sourceOption = res.source;\r\n      this.renderPage();\r\n    } else if (key === 'blur' && data !== '') {\r\n      const res = await this.bookingService.getExposedBooking(data as string, this.language);\r\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\r\n      this.sourceOption = res.source;\r\n      this.renderPage();\r\n    }\r\n  }\r\n  async componentWillLoad() {\r\n    this.defaultDateRange = { from_date: this.bookingData.FROM_DATE, to_date: this.bookingData.TO_DATE };\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    if (!this.bookingData.defaultDateRange) {\r\n      return;\r\n    }\r\n    this.defaultData = this.bookingData;\r\n    this.dateRangeData = { ...this.defaultData.defaultDateRange };\r\n    try {\r\n      const setupEntries = await this.fetchSetupEntries();\r\n      this.setSourceOptions(this.allowedBookingSources);\r\n      this.setOtherProperties(setupEntries);\r\n\r\n      if (this.isEventType('EDIT_BOOKING')) {\r\n        this.adultChildCount = {\r\n          adult: this.defaultData.ADULTS_COUNT,\r\n          child: this.defaultData.CHILDREN_COUNT,\r\n        };\r\n        this.initialRoomIds = {\r\n          roomName: this.defaultData.roomName,\r\n          ratePlanId: this.defaultData.RATE_PLAN_ID,\r\n          roomId: this.defaultData.PR_ID,\r\n          roomTypeId: this.defaultData.RATE_TYPE,\r\n        };\r\n        this.bookPropertyService.setEditingRoomInfo(this.defaultData, this.selectedUnits);\r\n      }\r\n      if (!this.isEventType('BAR_BOOKING')) {\r\n        this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n      }\r\n\r\n      if (this.defaultData.event_type === 'SPLIT_BOOKING') {\r\n        this.showSplitBookingOption = true;\r\n        this.page = 'page_one';\r\n      } else if (this.defaultData.event_type === 'BLOCK_DATES') {\r\n        this.page = 'page_block_date';\r\n      } else {\r\n        this.page = 'page_one';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching setup entries:', error);\r\n    }\r\n  }\r\n\r\n  async fetchSetupEntries() {\r\n    return await this.bookingService.fetchSetupEntries();\r\n  }\r\n  isGuestDataIncomplete() {\r\n    //|| data.roomId === '' || data.roomId === 0 if the roomId is required\r\n    if (this.guestData.length === 0) {\r\n      return true;\r\n    }\r\n    for (const data of this.guestData) {\r\n      if (data.guestName === '' || data.preference === '' || data.preference === 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled() {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.guestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      // const isCardDetails = ['cardNumber', 'cardHolderName', 'expiryMonth', 'expiryYear'].includes(key);\r\n      // if (!this.showPaymentDetails && isCardDetails) {\r\n      //   return false;\r\n      // }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      isValidProperty(this.guestData, 'guestName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'isdCode', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'contactNumber', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'firstName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'lastName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'countryId', -1) ||\r\n      isValidProperty(this.bookedByInfoData, 'selectedArrivalTime', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'email', '')\r\n    );\r\n  }\r\n\r\n  setSourceOptions(bookingSource: any[]) {\r\n    this.sourceOptions = bookingSource.map(source => ({\r\n      id: source.code,\r\n      value: source.description,\r\n      tag: source.tag,\r\n      type: source.type,\r\n    }));\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.sourceOption = { ...this.defaultData.SOURCE };\r\n    } else {\r\n      this.sourceOption = {\r\n        code: bookingSource[0].code,\r\n        description: bookingSource[0].description,\r\n        tag: bookingSource[0].tag,\r\n      };\r\n    }\r\n  }\r\n\r\n  setOtherProperties(res: any) {\r\n    this.ratePricingMode = res.ratePricingMode;\r\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\r\n    this.bedPreferenceType = res.bedPreferenceType;\r\n  }\r\n  @Listen('adultChild')\r\n  handleAdultChildChange(event: CustomEvent) {\r\n    if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n    }\r\n    this.adultChildCount = { ...event.detail };\r\n  }\r\n\r\n  async initializeBookingAvailability(from_date: string, to_date: string) {\r\n    try {\r\n      const room_type_ids = this.defaultData.roomsInfo.map(room => room.id);\r\n      const data = await this.bookingService.getBookingAvailability(from_date, to_date, this.propertyid, this.adultChildCount, this.language, room_type_ids, this.currency);\r\n      this.message = '';\r\n      this.message = data.tax_statement;\r\n      if (!this.isEventType('EDIT_BOOKING')) {\r\n        this.defaultData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\r\n        this.defaultData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\r\n      }\r\n      this.defaultData = { ...this.defaultData, roomsInfo: data.roomtypes };\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n  getRoomCategoryByRoomId(roomId) {\r\n    return this.defaultData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.physicalrooms.find(room => room.id === +roomId);\r\n    });\r\n  }\r\n\r\n  getSplitBookings() {\r\n    return (this.defaultData.hasOwnProperty('splitBookingEvents') && this.defaultData.splitBookingEvents) || [];\r\n  }\r\n  closeWindow() {\r\n    this.dateRangeData = {};\r\n    this.closeBookingWindow.emit();\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  isEventType(key: string) {\r\n    return this.defaultData.event_type === key;\r\n  }\r\n  @Listen('dateSelectEvent')\r\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    if (opt.key === 'selectedDateRange') {\r\n      this.dateRangeData = opt.data;\r\n      if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.defaultData.roomsInfo = [];\r\n        this.message = '';\r\n      } else if (this.adultChildCount.adult !== 0) {\r\n        this.initializeBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\r\n      }\r\n    }\r\n  }\r\n\r\n  handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.blockDatesData = opt.data;\r\n  }\r\n\r\n  handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt = event.detail;\r\n    if (opt.guestRefKey) {\r\n      if (this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.guestData[opt.guestRefKey] = {\r\n          ...opt.data,\r\n          roomId: this.defaultData.PR_ID,\r\n        };\r\n      } else this.guestData[opt.guestRefKey] = opt.data;\r\n    }\r\n  }\r\n\r\n  handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookedByInfoData = opt.value.data;\r\n  }\r\n  @Listen('sourceDropDownChange')\r\n  handleSourceDropDown(event: CustomEvent) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const value = event.detail;\r\n    const selectedSource = this.sourceOptions.find(opt => opt.id === value.toString());\r\n    this.sourceOption = {\r\n      code: value,\r\n      description: selectedSource.value || '',\r\n      tag: selectedSource.tag,\r\n    };\r\n  }\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\r\n  gotoSplitPageTwo() {\r\n    this.gotoPage('page_two');\r\n  }\r\n  gotoPage(gotoPage) {\r\n    this.page = gotoPage;\r\n    this.renderPage();\r\n  }\r\n\r\n  showSplitBooking() {\r\n    this.showSplitBookingOption = true;\r\n    this.gotoPage('page_one');\r\n  }\r\n\r\n  getPageBlockDatesView() {\r\n    return (\r\n      <Fragment>\r\n        <igl-block-dates-view\r\n          fromDate={this.dateRangeData.fromDateStr}\r\n          toDate={this.dateRangeData.toDateStr}\r\n          entryDate={this.defaultData.ENTRY_DATE}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"p-0 mb-1 mt-2 gap-30 d-flex align-items-center justify-content-between\">\r\n          <button class=\"btn btn-secondary flex-fill\" onClick={() => this.closeWindow()}>\r\n            {locales.entries.Lcz_Cancel}\r\n          </button>\r\n\r\n          <button class=\"btn btn-primary flex-fill\" onClick={() => this.handleBlockDate()}>\r\n            {locales.entries.Lcz_Blockdates}\r\n          </button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n  @Listen('buttonClicked')\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'save':\r\n        this.bookUser(false);\r\n        this.buttonName === 'save';\r\n        break;\r\n      case 'cancel':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.closeWindow();\r\n        break;\r\n      case 'back':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.gotoPage('page_one');\r\n        break;\r\n      case 'book':\r\n        this.bookUser(false);\r\n        this.buttonName = 'book';\r\n        break;\r\n      case 'bookAndCheckIn':\r\n        this.bookUser(true);\r\n        this.buttonName = 'bookAndCheckIn';\r\n        break;\r\n      case 'next':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.gotoPage('page_two');\r\n      case 'check':\r\n        this.initializeBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (event.detail.key === 'propertyBookedBy') {\r\n      this.handleBookedByInfoUpdate(event);\r\n    } else {\r\n      this.handleGuestInfoUpdate(event);\r\n    }\r\n  }\r\n  async handleBlockDate() {\r\n    const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\r\n    const result = await this.bookingService.blockUnit({\r\n      from_date: dateToFormattedString(this.defaultData.defaultDateRange.fromDate),\r\n      to_date: dateToFormattedString(this.defaultData.defaultDateRange.toDate),\r\n      NOTES: this.blockDatesData.OPTIONAL_REASON || '',\r\n      pr_id: this.defaultData.PR_ID.toString(),\r\n      STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n      DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\r\n      ...releaseData,\r\n    });\r\n    const blockedUnit = await transformNewBLockedRooms(result);\r\n    this.blockedCreated.emit(blockedUnit);\r\n    this.closeWindow();\r\n  }\r\n\r\n  async bookUser(check_in: boolean) {\r\n    this.setLoadingState(check_in);\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      if (this.isGuestDataIncomplete()) {\r\n        this.isLoading = '';\r\n        return;\r\n      }\r\n    } else {\r\n      if (this.isButtonDisabled()) {\r\n        this.isLoading = '';\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      if (['003', '002', '004'].includes(this.defaultData.STATUS_CODE)) {\r\n        this.eventsService.deleteEvent(this.defaultData.POOL);\r\n      }\r\n      if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n        this.bookedByInfoData.message = this.defaultData.NOTES;\r\n      }\r\n      const serviceParams = await this.bookPropertyService.prepareBookUserServiceParams(this, check_in, this.sourceOption);\r\n      await this.bookingService.bookUser(...serviceParams);\r\n      if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n        this.resetBookingData.emit(null);\r\n      }\r\n    } catch (error) {\r\n      // Handle error\r\n    } finally {\r\n      this.resetLoadingState();\r\n    }\r\n  }\r\n  setLoadingState(assign_units: boolean) {\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      this.isLoading = 'save';\r\n    } else {\r\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\r\n    }\r\n  }\r\n\r\n  getArrivalTimeForBooking(): string {\r\n    return this.bookedByInfoData.arrivalTime.find(e => e.CODE_VALUE_EN === this.defaultData.ARRIVAL_TIME).CODE_NAME;\r\n  }\r\n\r\n  resetLoadingState() {\r\n    this.isLoading = '';\r\n    setTimeout(() => {\r\n      this.closeWindow();\r\n    }, 100);\r\n  }\r\n  onRoomDataUpdate(event: CustomEvent) {\r\n    const units = this.bookPropertyService.onDataRoomUpdate(\r\n      event,\r\n      this.selectedUnits,\r\n      this.isEventType('EDIT_BOOKING'),\r\n      this.isEventType('EDIT_BOOKING') || this.isEventType('SPLIT_BOOKING') || this.isEventType('BAR_BOOKING'),\r\n      this.defaultData.NAME,\r\n    );\r\n    this.selectedUnits = new Map(units);\r\n    this.renderPage();\r\n  }\r\n  getCurrentPage(name: string) {\r\n    return this.page === name;\r\n  }\r\n  render() {\r\n    //console.log('render');\r\n    return (\r\n      <Host>\r\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\r\n        <div class={'sideWindow ' + (this.getCurrentPage('page_block_date') ? 'block-date' : '')}>\r\n          <div class=\"card position-sticky mb-0 shadow-none p-0 \">\r\n            <div class=\"d-flex mt-2 align-items-center justify-content-between  \">\r\n              <h3 class=\"card-title text-left pb-1 font-medium-2 px-2 px-md-3\">\r\n                {this.getCurrentPage('page_block_date') ? this.defaultData.BLOCK_DATES_TITLE : this.defaultData.TITLE}\r\n              </h3>\r\n              <ir-icon\r\n                class=\"close close-icon\"\r\n                onIconClickHandler={() => {\r\n                  this.closeWindow();\r\n                }}\r\n              >\r\n                <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\r\n                  <path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\" />\r\n                </svg>\r\n              </ir-icon>\r\n            </div>\r\n          </div>\r\n          <div class=\"px-2 px-md-3\">\r\n            {this.getCurrentPage('page_one') && (\r\n              <igl-booking-overview-page\r\n                initialRoomIds={this.initialRoomIds}\r\n                defaultDaterange={this.defaultDateRange}\r\n                class={'p-0 mb-1'}\r\n                eventType={this.defaultData.event_type}\r\n                selectedRooms={this.selectedUnits}\r\n                currency={this.currency}\r\n                message={this.message}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                ratePricingMode={this.ratePricingMode}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                adultChildCount={this.adultChildCount}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                // bookingDataDefaultDateRange={this.dateRangeData}\r\n                adultChildConstraints={this.adultChildConstraints}\r\n                onRoomsDataUpdate={evt => {\r\n                  this.onRoomDataUpdate(evt);\r\n                }}\r\n                sourceOptions={this.sourceOptions}\r\n                propertyId={this.propertyid}\r\n              ></igl-booking-overview-page>\r\n            )}\r\n\r\n            {this.getCurrentPage('page_two') && (\r\n              <igl-pagetwo\r\n                currency={this.currency}\r\n                propertyId={this.propertyid}\r\n                showPaymentDetails={this.showPaymentDetails}\r\n                selectedGuestData={this.guestData}\r\n                countryNodeList={this.countryNodeList}\r\n                isLoading={this.isLoading}\r\n                selectedRooms={this.selectedUnits}\r\n                bedPreferenceType={this.bedPreferenceType}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                language={this.language}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                defaultGuestData={this.defaultData}\r\n                isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\r\n                onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\r\n              ></igl-pagetwo>\r\n            )}\r\n            {this.getCurrentPage('page_block_date') ? this.getPageBlockDatesView() : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.book-container {\r\n  width: min-content;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n","import { IglBookPropertyPayloadPlusBooking } from '@/models/igl-book-property';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { RoomService } from '@/services/room.service';\r\nimport locales from '@/stores/locales.store';\r\nimport { Component, Host, State, h, Prop, Watch } from '@stencil/core';\r\nimport axios from 'axios';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-container',\r\n  styleUrl: 'igl-book-property-container.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyContainer {\r\n  @Prop() language: string = '';\r\n  @Prop() ticket: string = '';\r\n  @Prop() baseurl: string = '';\r\n  @Prop() propertyid: number;\r\n  @Prop() from_date: string;\r\n  @Prop() to_date: string;\r\n\r\n  @State() bookingItem: IglBookPropertyPayloadPlusBooking | null;\r\n  @State() showPaymentDetails: any;\r\n  @State() countryNodeList: any;\r\n  @State() calendarData: any = {};\r\n\r\n  private bookingService = new BookingService();\r\n  private roomService = new RoomService();\r\n\r\n  setRoomsData(roomServiceResp) {\r\n    let roomsData: { [key: string]: any }[] = new Array();\r\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\r\n      roomsData = roomServiceResp.My_Result.roomtypes;\r\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\r\n        roomCategory.expanded = true;\r\n      });\r\n    }\r\n    this.calendarData.roomsInfo = roomsData;\r\n  }\r\n  async initializeApp() {\r\n    try {\r\n      const [roomResponse, languageTexts, countriesList] = await Promise.all([\r\n        this.roomService.fetchData(this.propertyid, this.language),\r\n        this.roomService.fetchLanguage(this.language),\r\n        this.bookingService.getCountries(this.language),\r\n      ]);\r\n      console.log(languageTexts);\r\n      if (!locales.entries) {\r\n        locales.entries = languageTexts.entries;\r\n        locales.direction = languageTexts.direction;\r\n      }\r\n      this.countryNodeList = countriesList;\r\n\r\n      const { allowed_payment_methods: paymentMethods, currency, allowed_booking_sources, adult_child_constraints, calendar_legends } = roomResponse['My_Result'];\r\n      this.calendarData = { currency, allowed_booking_sources, adult_child_constraints, legendData: calendar_legends };\r\n      this.setRoomsData(roomResponse);\r\n      const paymentCodesToShow = ['001', '004'];\r\n      this.showPaymentDetails = paymentMethods.some(method => paymentCodesToShow.includes(method.code));\r\n    } catch (error) {\r\n      console.error('Error initializing app:', error);\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    if (this.baseurl) {\r\n      axios.defaults.baseURL = this.baseurl;\r\n    }\r\n    if (this.ticket !== '') {\r\n      this.initializeApp();\r\n    }\r\n  }\r\n  @Watch('ticket')\r\n  async ticketChanged() {\r\n    sessionStorage.setItem('token', JSON.stringify(this.ticket));\r\n    this.initializeApp();\r\n  }\r\n  handleCloseBookingWindow() {\r\n    this.bookingItem = null;\r\n  }\r\n  handleTriggerClicked() {\r\n    const tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    (this.bookingItem as IglBookPropertyPayloadPlusBooking) = {\r\n      FROM_DATE: this.from_date,\r\n      defaultDateRange: {\r\n        fromDate: new Date(),\r\n        fromDateStr: '',\r\n        toDate: tomorrow,\r\n        toDateStr: '',\r\n        dateDifference: 0,\r\n        message: '',\r\n      },\r\n      TO_DATE: this.to_date,\r\n      EMAIL: '',\r\n      event_type: 'PLUS_BOOKING',\r\n      ID: '',\r\n      NAME: '',\r\n      PHONE: '',\r\n      REFERENCE_TYPE: '',\r\n      TITLE: locales.entries.Lcz_NewBooking,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <ir-toast></ir-toast>\r\n        <ir-interceptor></ir-interceptor>\r\n        <div class=\"book-container\" onClick={this.handleTriggerClicked.bind(this)}>\r\n          <slot name=\"trigger\"></slot>\r\n        </div>\r\n        {this.bookingItem && (\r\n          <igl-book-property\r\n            allowedBookingSources={this.calendarData.allowed_booking_sources}\r\n            adultChildConstraints={this.calendarData.adult_child_constraints}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            countryNodeList={this.countryNodeList}\r\n            currency={this.calendarData.currency}\r\n            language={this.language}\r\n            propertyid={this.propertyid}\r\n            bookingData={this.bookingItem}\r\n            onCloseBookingWindow={() => this.handleCloseBookingWindow()}\r\n          ></igl-book-property>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n:host > * {\r\n  margin: auto;\r\n  padding: auto;\r\n}\r\n\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { FooterButtonType, TPropertyButtonsTypes } from '../../../../models/igl-book-property';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-footer',\r\n  styleUrl: 'igl-book-property-footer.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyFooter {\r\n  @Prop() eventType: string;\r\n  @Prop() disabled: boolean = true;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  private isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  editNext(label) {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      if (label === 'Cancel') {\r\n        return 'flex-fill';\r\n      } else {\r\n        return 'd-none d-md-block  flex-fill';\r\n      }\r\n    }\r\n    return 'flex-fill';\r\n  }\r\n\r\n  private renderButton(type: FooterButtonType, label: string, disabled = false) {\r\n    return (\r\n      <div class={this.shouldRenderTwoButtons() ? ` ${this.editNext(label)}` : 'flex-fill'}>\r\n        <button class={`btn btn-${type === 'cancel' ? 'secondary' : 'primary'} full-width`} onClick={() => this.buttonClicked.emit({ key: type })} disabled={disabled}>\r\n          {label}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private shouldRenderTwoButtons() {\r\n    return this.isEventType('PLUS_BOOKING') || this.isEventType('ADD_ROOM') || this.isEventType('EDIT_BOOKING');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex justify-content-between gap-30 align-items-center\">\r\n          {this.isEventType('EDIT_BOOKING') ? (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next} >>`)}\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next} >>`, this.disabled)}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { createStore } from '@stencil/store';\r\nexport type TIrInterceptor = 'pending' | 'done' | null;\r\nconst initialState: { status: TIrInterceptor } = { status: null };\r\n\r\nexport const { state: interceptor_requests, onChange: onCalendarDatesChange } = createStore<{ status: TIrInterceptor }>(initialState);\r\n\r\nexport default interceptor_requests;\r\n",":host {\r\n  display: block;\r\n}\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n.sourceContainer {\r\n  max-width: 350px;\r\n}\r\n.message-label {\r\n  font-size: 80%;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../../models/igl-book-property';\r\nimport { IToast } from '../../../ir-toast/toast';\r\nimport moment from 'moment';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport interceptor_requests from '@/stores/ir-interceptor.store';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-header',\r\n  styleUrl: 'igl-book-property-header.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyHeader {\r\n  @Prop() splitBookingId: any = '';\r\n  @Prop() bookingData: any = '';\r\n  @Prop() minDate: string;\r\n  @Prop() sourceOptions: TSourceOptions[] = [];\r\n  @Prop() message: string;\r\n  @Prop() bookingDataDefaultDateRange: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean = false;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() splitBookings: any[];\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() dateRangeData: any;\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() propertyId: number;\r\n  @Event() splitBookingDropDownChange: EventEmitter<any>;\r\n  @Event() sourceDropDownChange: EventEmitter<string>;\r\n  @Event() adultChild: EventEmitter<any>;\r\n  @Event() checkClicked: EventEmitter<any>;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  @Event() toast: EventEmitter<IToast>;\r\n  @Event() spiltBookingSelected: EventEmitter<{ key: string; data: unknown }>;\r\n  private sourceOption: TSourceOption = {\r\n    code: '',\r\n    description: '',\r\n    tag: '',\r\n  };\r\n\r\n  getSplitBookingList() {\r\n    return (\r\n      <fieldset class=\"form-group  text-left\">\r\n        <label class=\"h5\">{locales.entries.Lcz_Tobooking}# </label>\r\n        <div class=\"btn-group ml-1\">\r\n          <ir-autocomplete\r\n            value={\r\n              Object.keys(this.bookedByInfoData).length > 1 ? `${this.bookedByInfoData.bookingNumber} ${this.bookedByInfoData.firstName} ${this.bookedByInfoData.lastName}` : ''\r\n            }\r\n            from_date={moment(this.bookingDataDefaultDateRange.fromDate).format('YYYY-MM-DD')}\r\n            to_date={moment(this.bookingDataDefaultDateRange.toDate).format('YYYY-MM-DD')}\r\n            propertyId={this.propertyId}\r\n            placeholder={locales.entries.Lcz_BookingNumber}\r\n            onComboboxValue={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation;\r\n              this.spiltBookingSelected.emit(e.detail);\r\n            }}\r\n            isSplitBooking\r\n          ></ir-autocomplete>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  getSourceNode() {\r\n    return (\r\n      <fieldset class=\"d-flex flex-column text-left flex-lg-row align-items-lg-center\">\r\n        <label class=\"mr-lg-1\">{locales.entries.Lcz_Source} </label>\r\n        <div class=\"btn-group mt-1 mt-lg-0 sourceContainer\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.sourceDropDownChange.emit((evt.target as HTMLSelectElement).value)}>\r\n            {this.sourceOptions.map(option => {\r\n              if (option.type === 'LABEL') {\r\n                return <optgroup label={option.value}></optgroup>;\r\n              }\r\n              return (\r\n                <option value={option.id} selected={this.sourceOption.code === option.id}>\r\n                  {option.value}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  handleAdultChildChange(key: string, event: Event) {\r\n    const value = (event.target as HTMLSelectElement).value;\r\n    let obj = {};\r\n    if (value === '') {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: 0,\r\n      };\r\n    } else {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: value,\r\n      };\r\n    }\r\n    this.adultChild.emit(obj);\r\n  }\r\n\r\n  getAdultChildConstraints() {\r\n    return (\r\n      <div class={'mt-1 mt-lg-0 d-flex flex-column text-left'}>\r\n        <label class=\"mb-1 d-lg-none\">{locales.entries.Lcz_NumberOfGuests} </label>\r\n        <div class=\"form-group my-lg-0 text-left d-flex align-items-center justify-content-between justify-content-sm-start\">\r\n          <fieldset>\r\n            <div class=\"btn-group \">\r\n              <select class=\"form-control input-sm\" id=\"xAdultSmallSelect\" onChange={evt => this.handleAdultChildChange('adult', evt)}>\r\n                <option value=\"\">{locales.entries.Lcz_AdultsCaption}</option>\r\n                {Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => (\r\n                  <option value={option}>{option}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </fieldset>\r\n          {this.adultChildConstraints.child_max_nbr > 0 && (\r\n            <fieldset>\r\n              <div class=\"btn-group ml-1\">\r\n                <select class=\"form-control input-sm\" id=\"xChildrenSmallSelect\" onChange={evt => this.handleAdultChildChange('child', evt)}>\r\n                  <option value={''}>{this.renderChildCaption()}</option>\r\n                  {Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => (\r\n                    <option value={option}>{option}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </fieldset>\r\n          )}\r\n          <ir-button\r\n            isLoading={interceptor_requests.status === 'pending'}\r\n            icon=\"\"\r\n            size=\"sm\"\r\n            class=\"ml-2\"\r\n            text={locales.entries.Lcz_Check}\r\n            onClickHanlder={() => this.handleButtonClicked()}\r\n          ></ir-button>\r\n          {/* <button class={'btn btn-primary btn-sm  ml-2'} onClick={() => this.handleButtonClicked()}>\r\n            {locales.entries.Lcz_Check}\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderChildCaption() {\r\n    const maxAge = this.adultChildConstraints.child_max_age;\r\n    let years = locales.entries.Lcz_Years;\r\n\r\n    if (maxAge === 1) {\r\n      years = locales.entries.Lcz_Year;\r\n    }\r\n    return `${locales.entries.Lcz_ChildCaption} < ${this.adultChildConstraints.child_max_age} ${years}`;\r\n  }\r\n  handleButtonClicked() {\r\n    if (this.isEventType('SPLIT_BOOKING') && Object.keys(this.bookedByInfoData).length <= 1) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: locales.entries.Lcz_ChooseBookingNumber,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      const initialToDate = moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date));\r\n      const initialFromDate = moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date));\r\n      const selectedFromDate = moment(new Date(this.dateRangeData.fromDate));\r\n      const selectedToDate = moment(new Date(this.dateRangeData.toDate));\r\n      if (selectedToDate.isBefore(initialFromDate) || selectedFromDate.isAfter(initialToDate)) {\r\n        this.toast.emit({\r\n          type: 'error',\r\n          title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n            '%1',\r\n            moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n          ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n          description: '',\r\n          position: 'top-right',\r\n        });\r\n        return;\r\n      } else if (this.adultChildCount.adult === 0) {\r\n        this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n      } else {\r\n        this.buttonClicked.emit({ key: 'check' });\r\n      }\r\n    } else if (this.minDate && new Date(this.dateRangeData.fromDate).getTime() > new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date).getTime()) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n          '%1',\r\n          moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n        ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.adultChildCount.adult === 0) {\r\n      this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n    } else {\r\n      this.buttonClicked.emit({ key: 'check' });\r\n    }\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n\r\n  render() {\r\n    const showSourceNode = this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? false : true;\r\n    return (\r\n      <Host>\r\n        {showSourceNode && this.getSourceNode()}\r\n        <div class={`d-flex flex-column flex-lg-row align-items-lg-center ${showSourceNode ? 'mt-1' : ''}`}>\r\n          <fieldset class=\"mt-lg-0  \">\r\n            <igl-date-range\r\n              maxDate={moment().add(calendar_data.max_nights, 'days').format('YYYY-MM-DD')}\r\n              dateLabel={locales.entries.Lcz_Dates}\r\n              minDate={this.minDate}\r\n              disabled={this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')}\r\n              defaultData={this.bookingDataDefaultDateRange}\r\n            ></igl-date-range>\r\n          </fieldset>\r\n          {!this.isEventType('EDIT_BOOKING') && this.getAdultChildConstraints()}\r\n        </div>\r\n        <p class=\"text-right mt-1 message-label\">{this.message}</p>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n:host > * {\r\n  margin: 0;\r\n  padding: auto;\r\n}\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\r\nimport { TAdultChildConstraints, TSourceOptions } from '../../../../models/igl-book-property';\r\n@Component({\r\n  tag: 'igl-booking-overview-page',\r\n  styleUrl: 'igl-booking-overview-page.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingOverviewPage {\r\n  @Prop() bookingData: any;\r\n  @Prop() propertyId: number;\r\n  @Prop() message: string;\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() eventType: string;\r\n  @Prop() currency: any;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() ratePricingMode: any;\r\n  @Prop() dateRangeData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() sourceOptions: TSourceOptions[];\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() initialRoomIds: any;\r\n\r\n  @Event() roomsDataUpdate: EventEmitter;\r\n\r\n  getSplitBookings() {\r\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\r\n  }\r\n  isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  render() {\r\n    //console.log(this.bookingData);\r\n    return (\r\n      <Host>\r\n        <igl-book-property-header\r\n          bookedByInfoData={this.bookedByInfoData}\r\n          defaultDaterange={this.defaultDaterange}\r\n          dateRangeData={this.dateRangeData}\r\n          // minDate={this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING') ? this.bookedByInfoData.from_date || this.bookingData.FROM_DATE : undefined}\r\n          adultChildCount={this.adultChildCount}\r\n          splitBookingId={this.showSplitBookingOption}\r\n          bookingData={this.bookingData}\r\n          sourceOptions={this.sourceOptions}\r\n          message={this.message}\r\n          bookingDataDefaultDateRange={this.bookingData.defaultDateRange}\r\n          showSplitBookingOption={this.showSplitBookingOption}\r\n          adultChildConstraints={this.adultChildConstraints}\r\n          splitBookings={this.getSplitBookings()}\r\n          propertyId={this.propertyId}\r\n        ></igl-book-property-header>\r\n        {/* {this.adultChildCount.adult === 0 && <p class={'col text-left'}>Please select the number of guests</p>} */}\r\n        <div class=\" text-left\">\r\n          {this.bookingData?.roomsInfo?.map(roomInfo => {\r\n            console.log(this.selectedRooms);\r\n            return (\r\n              <igl-booking-rooms\r\n                initialRoomIds={this.initialRoomIds}\r\n                isBookDisabled={Object.keys(this.bookedByInfoData).length <= 1}\r\n                key={`room-info-${roomInfo.id}`}\r\n                currency={this.currency}\r\n                ratePricingMode={this.ratePricingMode}\r\n                dateDifference={this.dateRangeData.dateDifference}\r\n                bookingType={this.bookingData.event_type}\r\n                roomTypeData={roomInfo}\r\n                class=\"mt-2 mb-1 p-0\"\r\n                roomInfoId={this.selectedRooms.has(`c_${roomInfo.id}`) ? roomInfo.id : null}\r\n                defaultData={this.selectedRooms.get(`c_${roomInfo.id}`)}\r\n                onDataUpdateEvent={evt => this.roomsDataUpdate.emit(evt.detail)}\r\n              ></igl-booking-rooms>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <igl-book-property-footer class={'p-0 mb-1 mt-3'} eventType={this.bookingData.event_type} disabled={this.selectedRooms.size === 0}></igl-book-property-footer>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.currency {\r\n  display: block;\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: auto;\r\n  left: 10px;\r\n}\r\n.rate-input {\r\n  font-size: 14px;\r\n  line-height: 0;\r\n  padding: 0;\r\n  height: 0;\r\n}\r\n.rate-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-sizing: border-box;\r\n  flex: 1;\r\n}\r\n\r\n@media only screen and (min-width: 1200px) {\r\n  .rateplan-name-container {\r\n    width: 40%;\r\n  }\r\n  .rateplan-container {\r\n    width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) {\r\n  .max-w-300 {\r\n    max-width: 200px;\r\n  }\r\n  .rate-input-container {\r\n    max-width: 100px;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) and (max-width: 1300px) {\r\n  .rateplan-name-container {\r\n    width: 35%;\r\n  }\r\n}\r\n@media only screen and (max-width: 768px) {\r\n  .booking-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.total-nights-container {\r\n  width: max-content;\r\n}\r\n.rateInputBorder {\r\n  border-top-left-radius: 3px !important;\r\n  border-bottom-left-radius: 3px !important;\r\n}\r\n.nightBorder {\r\n  border-left-width: 0;\r\n  border-top-right-radius: 3px !important;\r\n  border-bottom-right-radius: 3px !important;\r\n}\r\n","import { Component, Host, Prop, h, State, Event, EventEmitter, Watch, Fragment } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { getCurrencySymbol } from '../../../utils/utils';\r\nimport locales from '@/stores/locales.store';\r\n@Component({\r\n  tag: 'igl-booking-room-rate-plan',\r\n  styleUrl: 'igl-booking-room-rate-plan.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRoomRatePlan {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() ratePlanData: { [key: string]: any };\r\n  @Prop() totalAvailableRooms: number;\r\n  @Prop() index: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() currency: any;\r\n  @Prop() physicalrooms;\r\n  @Prop() shouldBeDisabled: boolean;\r\n  @Prop() dateDifference: number;\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() fullyBlocked: boolean;\r\n  @Prop() isBookDisabled: boolean = false;\r\n  @Prop() defaultRoomId;\r\n  @Prop() selectedRoom;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() gotoSplitPageTwoEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() selectedData: { [key: string]: any };\r\n  @State() ratePlanChangedState: boolean = false;\r\n  private initialRateValue: number = 0;\r\n  getAvailableRooms(assignable_units: any[]) {\r\n    let result = [];\r\n    assignable_units.forEach(unit => {\r\n      if (unit.Is_Fully_Available) {\r\n        result.push({ name: unit.name, id: unit.pr_id });\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  componentWillLoad() {\r\n    console.log('default data', this.defaultData);\r\n    this.updateSelectedRatePlan(this.ratePlanData);\r\n  }\r\n  disableForm() {\r\n    if (this.bookingType === 'EDIT_BOOKING' && this.shouldBeDisabled) {\r\n      return false;\r\n    } else {\r\n      return this.selectedData.is_closed || this.totalAvailableRooms === 0 || this.selectedData.physicalRooms.length === 0;\r\n    }\r\n  }\r\n\r\n  setAvailableRooms(data) {\r\n    let availableRooms = this.getAvailableRooms(data);\r\n    if (this.bookingType === 'EDIT_BOOKING' && this.shouldBeDisabled) {\r\n      if (this.selectedRoom) {\r\n        availableRooms.push({\r\n          id: this.selectedRoom.roomId,\r\n          name: this.selectedRoom.roomName,\r\n        });\r\n        availableRooms.sort((a, b) => {\r\n          if (a.name < b.name) {\r\n            return -1;\r\n          }\r\n          if (a.name > b.name) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    return availableRooms;\r\n  }\r\n  getSelectedOffering(value: any) {\r\n    return this.ratePlanData.variations.find(variation => variation.adult_child_offering === value);\r\n  }\r\n\r\n  updateSelectedRatePlan(data) {\r\n    this.selectedData = {\r\n      ratePlanId: data.id,\r\n      adult_child_offering: data.variations[data.variations.length - 1].adult_child_offering,\r\n      rateType: 1,\r\n      totalRooms: 0,\r\n      rate: data.variations[data.variations.length - 1].amount ?? 0,\r\n      ratePlanName: data.name,\r\n      adultCount: data.variations[data.variations.length - 1].adult_nbr,\r\n      childrenCount: data.variations[data.variations.length - 1].child_nbr,\r\n      cancelation: data.cancelation,\r\n      guarantee: data.guarantee,\r\n      isRateModified: false,\r\n      defaultSelectedRate: 0,\r\n      index: this.index,\r\n      is_closed: data.is_closed,\r\n      physicalRooms: this.setAvailableRooms(this.ratePlanData.assignable_units),\r\n      dateDifference: this.dateDifference,\r\n    };\r\n\r\n    if (this.defaultData) {\r\n      for (const [key, value] of Object.entries(this.defaultData)) {\r\n        this.selectedData[key] = value;\r\n      }\r\n      this.dataUpdateEvent.emit({\r\n        key: 'roomRatePlanUpdate',\r\n        changedKey: 'physicalRooms',\r\n        data: this.selectedData,\r\n      });\r\n    }\r\n    if (this.defaultData && this.defaultData.isRateModified) {\r\n      console.log('object');\r\n      if (this.selectedData.rateType === 1) {\r\n        console.log('object1');\r\n        this.initialRateValue = this.selectedData.rate;\r\n      } else {\r\n        console.log('object2');\r\n        this.initialRateValue = this.selectedData.rate * this.dateDifference;\r\n      }\r\n    } else {\r\n      this.initialRateValue = this.selectedData.rate / this.dateDifference;\r\n    }\r\n  }\r\n  @Watch('ratePlanData')\r\n  async ratePlanDataChanged(newData) {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      adult_child_offering: newData.variations[newData.variations.length - 1].adult_child_offering,\r\n      adultCount: newData.variations[newData.variations.length - 1].adult_nbr,\r\n      childrenCount: newData.variations[newData.variations.length - 1].child_nbr,\r\n      rate: this.handleRateDaysUpdate(),\r\n      physicalRooms: this.setAvailableRooms(newData.assignable_units),\r\n    };\r\n    this.initialRateValue = this.selectedData.rateType === 2 ? this.selectedData.rate / this.dateDifference : this.selectedData.rate;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: 'rate',\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  handleRateDaysUpdate() {\r\n    if (this.selectedData.isRateModified) {\r\n      return this.selectedData.defaultSelectedRate;\r\n    }\r\n    const selectedOffering = this.getSelectedOffering(this.selectedData.adult_child_offering);\r\n    return selectedOffering ? selectedOffering.amount : 0;\r\n  }\r\n\r\n  handleInput(event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let inputValue = inputElement.value.replace(/[^0-9.]/g, '');\r\n\r\n    const validDecimalNumber = /^\\d*\\.?\\d*$/;\r\n    if (!validDecimalNumber.test(inputValue)) {\r\n      inputValue = inputValue.substring(0, inputValue.length - 1);\r\n    }\r\n\r\n    inputElement.value = inputValue;\r\n    if (inputValue) {\r\n      this.selectedData.isRateModified = true;\r\n      this.handleDataChange('rate', event);\r\n    } else {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        rate: -1,\r\n        totalRooms: 0,\r\n      };\r\n      this.dataUpdateEvent.emit({\r\n        key: 'roomRatePlanUpdate',\r\n        changedKey: 'rate',\r\n        data: this.selectedData,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, evt) {\r\n    const value = evt.target.value;\r\n    switch (key) {\r\n      case 'adult_child_offering':\r\n        this.updateOffering(value);\r\n        break;\r\n      case 'rate':\r\n        this.updateRate(value);\r\n        break;\r\n      default:\r\n        this.updateGenericData(key, value);\r\n        break;\r\n    }\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: key,\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  updateOffering(value) {\r\n    const offering = this.getSelectedOffering(value);\r\n    if (offering) {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        adult_child_offering: value,\r\n        adultCount: offering.adult_nbr,\r\n        childrenCount: offering.child_nbr,\r\n        rate: offering.amount,\r\n        isRateModified: false,\r\n      };\r\n    }\r\n  }\r\n\r\n  updateRate(value) {\r\n    const numericValue = value === '' ? 0 : Number(value);\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      rate: numericValue,\r\n      totalRooms: value === '' ? 0 : this.selectedData.totalRooms,\r\n      defaultSelectedRate: this.selectedData.rateType === 2 ? numericValue / this.dateDifference : numericValue,\r\n    };\r\n  }\r\n\r\n  updateGenericData(key, value) {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      [key]: value === '' ? 0 : parseInt(value),\r\n    };\r\n  }\r\n  bookProperty() {\r\n    this.dataUpdateEvent.emit({ key: 'clearData', data: this.selectedData });\r\n    this.handleDataChange('totalRooms', { target: { value: '1' } });\r\n    this.gotoSplitPageTwoEvent.emit({ key: 'gotoSplitPage', data: '' });\r\n  }\r\n\r\n  renderRate(): string | number | string[] {\r\n    if (this.selectedData.isRateModified) {\r\n      console.log('selectedData.rate', this.selectedData.rate);\r\n      return this.selectedData.rate === -1 ? '' : this.selectedData.rate;\r\n    }\r\n    return this.selectedData.rateType === 1 ? Number(this.selectedData.rate).toFixed(2) : Number(this.initialRateValue).toFixed(2);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-column m-0 p-0 flex-lg-row align-items-lg-center justify-content-lg-between \">\r\n          <div class=\"rateplan-name-container\">\r\n            {this.bookingType === 'BAR_BOOKING' ? (\r\n              <Fragment>\r\n                <span class=\"font-weight-bold\t\">{this.ratePlanData.name.split('/')[0]}</span>\r\n                <span>/{this.ratePlanData.name.split('/')[1]}</span>\r\n              </Fragment>\r\n            ) : (\r\n              <span>{this.ratePlanData.name}</span>\r\n            )}\r\n            <ir-tooltip message={this.ratePlanData.cancelation + this.ratePlanData.guarantee}></ir-tooltip>\r\n          </div>\r\n\r\n          <div class={'d-md-flex justify-content-md-end  align-items-md-center  flex-fill rateplan-container'}>\r\n            <div class=\"mt-1 mt-lg-0 flex-fill max-w-300\">\r\n              <fieldset class=\"position-relative\">\r\n                <select disabled={this.disableForm()} class=\"form-control  input-sm\" id={v4()} onChange={evt => this.handleDataChange('adult_child_offering', evt)}>\r\n                  {this.ratePlanData.variations.map(variation => (\r\n                    <option value={variation.adult_child_offering} selected={this.selectedData.adult_child_offering === variation.adult_child_offering}>\r\n                      {variation.adult_child_offering}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </fieldset>\r\n            </div>\r\n            <div class={'m-0 p-0 d-md-flex justify-content-between ml-md-1 '}>\r\n              <div class=\" d-flex mt-1  mt-lg-0 m-0 p-0 rate-total-night-view   \">\r\n                <fieldset class=\"position-relative has-icon-left m-0 p-0 rate-input-container  \">\r\n                  <input\r\n                    disabled={this.disableForm()}\r\n                    type=\"text\"\r\n                    class=\"form-control input-sm rate-input py-0 m-0 rounded-0 rateInputBorder\"\r\n                    value={this.renderRate()}\r\n                    id={v4()}\r\n                    placeholder={locales.entries.Lcz_Rate || 'Rate'}\r\n                    onInput={(event: InputEvent) => this.handleInput(event)}\r\n                  />\r\n                  <span class=\"currency\">{getCurrencySymbol(this.currency.code)}</span>\r\n                </fieldset>\r\n                <fieldset class=\"position-relative m-0 total-nights-container p-0 \">\r\n                  <select\r\n                    disabled={this.disableForm()}\r\n                    class=\"form-control input-sm m-0 nightBorder rounded-0  py-0\"\r\n                    id={v4()}\r\n                    onChange={evt => this.handleDataChange('rateType', evt)}\r\n                  >\r\n                    {this.ratePricingMode.map(data => (\r\n                      <option value={data.CODE_NAME} selected={this.selectedData.rateType === +data.CODE_NAME}>\r\n                        {data.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </fieldset>\r\n              </div>\r\n\r\n              {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' ? (\r\n                <div class=\"flex-lg-fill  mt-lg-0 ml-md-2 m-0 mt-1 p-0\">\r\n                  <fieldset class=\"position-relative\">\r\n                    <select\r\n                      disabled={this.selectedData.rate === 0 || this.disableForm()}\r\n                      class=\"form-control input-sm\"\r\n                      id={v4()}\r\n                      onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                    >\r\n                      {Array.from({ length: this.totalAvailableRooms + 1 }, (_, i) => i).map(i => (\r\n                        <option value={i} selected={this.selectedData.totalRooms === i}>\r\n                          {i}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </fieldset>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            {this.bookingType === 'EDIT_BOOKING' ? (\r\n              <Fragment>\r\n                <div class=\" m-0 p-0  mt-lg-0  ml-md-1 mt-md-1 d-none d-md-block\">\r\n                  <fieldset class=\"position-relative\">\r\n                    <input\r\n                      disabled={this.disableForm()}\r\n                      type=\"radio\"\r\n                      name=\"ratePlanGroup\"\r\n                      value=\"1\"\r\n                      onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                      checked={this.selectedData.totalRooms === 1}\r\n                    />\r\n                  </fieldset>\r\n                </div>\r\n                <button\r\n                  disabled={this.selectedData.rate === -1 || this.disableForm()}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1  mt-1 d-md-none \"\r\n                  onClick={() => this.bookProperty()}\r\n                >\r\n                  {this.selectedData.totalRooms === 1 ? locales.entries.Lcz_Current : locales.entries.Lcz_Select}\r\n                </button>\r\n              </Fragment>\r\n            ) : null}\r\n\r\n            {this.bookingType === 'BAR_BOOKING' || this.bookingType === 'SPLIT_BOOKING' ? (\r\n              <button\r\n                disabled={this.selectedData.rate === -1 || this.disableForm() || (this.bookingType === 'SPLIT_BOOKING' && this.isBookDisabled)}\r\n                type=\"button\"\r\n                class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1  mt-1 \"\r\n                onClick={() => this.bookProperty()}\r\n              >\r\n                {locales.entries.Lcz_Book}\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-booking-rooms',\r\n  styleUrl: 'igl-booking-rooms.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRooms {\r\n  @Prop() roomTypeData: { [key: string]: any };\r\n  @Prop() defaultData: Map<string, any>;\r\n  @Prop() bookingType = 'PLUS_BOOKING';\r\n  @Prop() dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() roomInfoId: number | null = null;\r\n  @Prop() currency;\r\n  @State() selectedRooms: number[] = [];\r\n  @State() totalRooms: number;\r\n  @Prop() isBookDisabled: boolean;\r\n  @Prop() initialRoomIds: any;\r\n  @State() roomsDistributions: number[] = [];\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  private validBookingTypes = ['PLUS_BOOKING', 'ADD_ROOM', 'EDIT_BOOKING', 'SPLIT_BOOKING'];\r\n\r\n  componentWillLoad() {\r\n    this.initializeRoomData();\r\n  }\r\n\r\n  private initializeRoomData() {\r\n    const { inventory, rateplans } = this.roomTypeData;\r\n    this.totalRooms = inventory || 0;\r\n    this.selectedRooms = new Array(rateplans.length).fill(0);\r\n    this.roomsDistributions = this.calculateInitialDistributions(rateplans, inventory);\r\n  }\r\n  @Watch('roomTypeData')\r\n  handleRoomTypeData() {\r\n    this.initializeRoomData();\r\n  }\r\n\r\n  private calculateInitialDistributions(rateplans, inventory) {\r\n    let distributions = new Array(rateplans.length).fill(inventory);\r\n    if (this.defaultData && this.bookingType !== 'EDIT_BOOKING' && inventory > 0) {\r\n      let selectedIndexes = [];\r\n      let sum = 0;\r\n      this.defaultData.forEach(category => {\r\n        this.selectedRooms[category.index] = category.totalRooms;\r\n        distributions[category.index] = category.totalRooms;\r\n        sum += category.totalRooms;\r\n        selectedIndexes.push(category.index);\r\n      });\r\n      if (selectedIndexes.length < distributions.length) {\r\n        distributions.forEach((_, index) => {\r\n          if (!selectedIndexes.includes(index)) {\r\n            if (sum === this.totalRooms) {\r\n              distributions[index] = 0;\r\n            } else {\r\n              distributions[index] = distributions[index] - sum;\r\n            }\r\n          } else {\r\n            if (sum < this.totalRooms) {\r\n              distributions[index] = this.totalRooms - sum + distributions[index];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      distributions.fill(inventory);\r\n    }\r\n    return distributions;\r\n  }\r\n\r\n  onRoomDataUpdate(event: CustomEvent<{ [key: string]: any }>, index: number) {\r\n    event.stopImmediatePropagation();\r\n    const {\r\n      detail: { data, changedKey },\r\n    } = event;\r\n    let updatedData = { ...data };\r\n\r\n    if (changedKey === 'totalRooms') {\r\n      this.handleTotalRoomsUpdate(index, updatedData.totalRooms);\r\n    }\r\n\r\n    updatedData = {\r\n      ...updatedData,\r\n      roomCategoryId: this.roomTypeData.id,\r\n      roomCategoryName: this.roomTypeData.name,\r\n      inventory: this.roomTypeData.inventory,\r\n    };\r\n\r\n    this.dataUpdateEvent.emit({ key: data.key, data: updatedData, changedKey });\r\n  }\r\n\r\n  private handleTotalRoomsUpdate(index: number, newValue: number) {\r\n    if (this.selectedRooms[index] !== newValue) {\r\n      this.selectedRooms[index] = newValue;\r\n      this.updateRatePlanTotalRooms(index);\r\n    }\r\n  }\r\n\r\n  updateRatePlanTotalRooms(ratePlanIndex: number) {\r\n    const calculateTotalSelectedRoomsExcludingIndex = excludedIndex => {\r\n      return this.selectedRooms.reduce((acc, rooms, idx) => (idx !== excludedIndex ? acc + rooms : acc), 0);\r\n    };\r\n    const newRoomsDistributions = this.selectedRooms.map((_, index) => {\r\n      if (index === ratePlanIndex) {\r\n        return this.roomsDistributions[index];\r\n      }\r\n      const totalSelectedRoomsExcludingCurrent = calculateTotalSelectedRoomsExcludingIndex(index);\r\n      const availableRooms = this.totalRooms - totalSelectedRoomsExcludingCurrent;\r\n\r\n      return availableRooms > 0 ? availableRooms : 0;\r\n    });\r\n\r\n    if (JSON.stringify(this.roomsDistributions) !== JSON.stringify(newRoomsDistributions)) {\r\n      this.roomsDistributions = [...newRoomsDistributions];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const isValidBookingType = this.validBookingTypes.includes(this.bookingType);\r\n    return (\r\n      <Host>\r\n        {isValidBookingType && <div class=\"font-weight-bold font-medium-1 mb-1\">{this.roomTypeData.name}</div>}\r\n        {this.roomTypeData.rateplans.map((ratePlan, index) => {\r\n          if (ratePlan.variations !== null) {\r\n            let shouldBeDisabled = this.roomInfoId && this.roomInfoId === this.roomTypeData.id;\r\n            let roomId = -1;\r\n            if (shouldBeDisabled && this.initialRoomIds) {\r\n              roomId = this.initialRoomIds.roomId;\r\n            }\r\n            return (\r\n              <igl-booking-room-rate-plan\r\n                index={index}\r\n                isBookDisabled={this.isBookDisabled}\r\n                key={`rate-plan-${ratePlan.id}`}\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={isValidBookingType ? '' : ''}\r\n                currency={this.currency}\r\n                dateDifference={this.dateDifference}\r\n                ratePlanData={ratePlan}\r\n                totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                defaultData={(this.defaultData && this.defaultData.get(`p_${ratePlan.id}`)) || null}\r\n                shouldBeDisabled={shouldBeDisabled}\r\n                onDataUpdateEvent={evt => this.onRoomDataUpdate(evt, index)}\r\n                physicalrooms={this.roomTypeData.physicalrooms}\r\n                defaultRoomId={roomId}\r\n                selectedRoom={this.initialRoomIds}\r\n              ></igl-booking-room-rate-plan>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: flex;\r\n  text-align: left;\r\n  align-items: center;\r\n}\r\n\r\n.date-range-input {\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex: 1;\r\n}\r\n.iglRangeNights {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.iglRangePicker[data-state='disabled'] {\r\n  border: 0;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n  width: 180px;\r\n  margin-right: 0;\r\n}\r\n.iglRangePicker {\r\n  margin: 0;\r\n  border: 1px solid #379ff2;\r\n  box-sizing: border-box;\r\n  width: 220px;\r\n  /* margin-right: 5px; */\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.calendarPickerContainer {\r\n  display: flex;\r\n}\r\n","import { Component, Host, h, State, Event, EventEmitter, Prop } from '@stencil/core';\r\nimport { IToast } from '../../ir-toast/toast';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'igl-date-range',\r\n  styleUrl: 'igl-date-range.css',\r\n  scoped: true,\r\n})\r\nexport class IglDateRange {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n  @Prop() minDate: string;\r\n  @Prop() dateLabel;\r\n  @Prop() maxDate: string;\r\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() toast: EventEmitter<IToast>;\r\n\r\n  private totalNights: number = 0;\r\n  private fromDate: Date;\r\n  private toDate: Date;\r\n  private fromDateStr: string = 'from';\r\n  private toDateStr: string = 'to';\r\n  dateRangeInput: HTMLElement;\r\n\r\n  getStringDateFormat(dt) {\r\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\r\n  }\r\n\r\n  componentWillLoad() {\r\n    let dt = new Date();\r\n    dt.setHours(0, 0, 0, 0);\r\n    dt.setDate(dt.getDate() + 1);\r\n    if (this.defaultData) {\r\n      if (this.defaultData.fromDate) {\r\n        this.fromDate = new Date(this.defaultData.fromDate);\r\n        this.fromDate.setHours(0, 0, 0, 0);\r\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\r\n      }\r\n      if (this.defaultData.toDate) {\r\n        this.toDate = new Date(this.defaultData.toDate);\r\n        this.toDate.setHours(0, 0, 0, 0);\r\n        this.toDateStr = this.getFormattedDateString(this.toDate);\r\n      }\r\n    }\r\n    if (this.fromDate && this.toDate) {\r\n      this.calculateTotalNights();\r\n      this.handleDateSelectEvent('selectedDateRange', {\r\n        fromDate: this.fromDate.getTime(),\r\n        toDate: this.toDate.getTime(),\r\n        fromDateStr: this.fromDateStr,\r\n        toDateStr: this.toDateStr,\r\n        dateDifference: this.totalNights,\r\n      });\r\n    }\r\n  }\r\n\r\n  calculateTotalNights() {\r\n    this.totalNights = Math.floor((this.toDate.getTime() - this.fromDate.getTime()) / 86400000);\r\n  }\r\n  getFormattedDateString(dt) {\r\n    return dt.getDate() + ' ' + dt.toLocaleString('default', { month: 'short' }).toLowerCase() + ' ' + dt.getFullYear();\r\n  }\r\n\r\n  handleDateSelectEvent(key, data: any = '') {\r\n    this.dateSelectEvent.emit({ key, data });\r\n  }\r\n  handleDateChange(evt) {\r\n    const { start, end } = evt.detail;\r\n    this.fromDate = start.toDate();\r\n    this.toDate = end.toDate();\r\n    this.calculateTotalNights();\r\n\r\n    this.handleDateSelectEvent('selectedDateRange', {\r\n      fromDate: this.fromDate.getTime(),\r\n      toDate: this.toDate.getTime(),\r\n      fromDateStr: start.format('DD MMM YYYY'),\r\n      toDateStr: end.format('DD MMM YYYY'),\r\n      dateDifference: this.totalNights,\r\n    });\r\n\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"calendarPickerContainer ml-0 d-flex flex-column flex-lg-row align-items-lg-center \">\r\n          <span class=\"mt-0 mb-1 mb-lg-0 mr-lg-1 text-left\">{this.dateLabel}:</span>\r\n          <div class={'d-flex align-items-center mr-lg-1'}>\r\n            <div class=\"iglRangePicker form-control input-sm \" data-state={this.disabled ? 'disabled' : 'active'}>\r\n              <ir-date-picker\r\n                maxDate={this.maxDate}\r\n                class={'date-range-input'}\r\n                disabled={this.disabled}\r\n                fromDate={this.fromDate}\r\n                toDate={this.toDate}\r\n                minDate={this.minDate}\r\n                autoApply\r\n                onDateChanged={evt => {\r\n                  this.handleDateChange(evt);\r\n                }}\r\n              ></ir-date-picker>\r\n            </div>\r\n            {this.totalNights ? (\r\n              <span class=\"iglRangeNights ml-1\">({this.totalNights + (this.totalNights > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`)})</span>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, Host, State } from '@stencil/core';\r\nimport { IPageTwoDataUpdateProps } from '../../../models/models';\r\nimport { IglBookPropertyPayloadEditBooking, TPropertyButtonsTypes } from '../../../models/igl-book-property';\r\nimport { formatDate, getCurrencySymbol } from '../../../utils/utils';\r\nimport locales from '@/stores/locales.store';\r\n@Component({\r\n  tag: 'igl-pagetwo',\r\n  styleUrl: 'igl-pagetwo.css',\r\n  scoped: true,\r\n})\r\nexport class IglPagetwo {\r\n  @Prop() showPaymentDetails: boolean;\r\n  @Prop() currency;\r\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\r\n  @Prop() dateRangeData: { [key: string]: any };\r\n  @Prop() bookingData: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() language: string;\r\n  @Prop() bookedByInfoData: { [key: string]: any };\r\n  @Prop() propertyId: number;\r\n  @Prop() bedPreferenceType: any;\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop({ reflect: true }) isLoading: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() selectedGuestData;\r\n  @Prop() defaultGuestData: IglBookPropertyPayloadEditBooking;\r\n  @Event() dataUpdateEvent: EventEmitter<IPageTwoDataUpdateProps>;\r\n  @Event() buttonClicked: EventEmitter<{\r\n    key: TPropertyButtonsTypes;\r\n    data?: CustomEvent;\r\n  }>;\r\n  @State() selectedBookedByData;\r\n  @State() guestData: any;\r\n\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n\r\n  componentWillLoad() {\r\n    this.initializeGuestData();\r\n    this.selectedBookedByData = this.bookedByInfoData;\r\n  }\r\n\r\n  initializeGuestData() {\r\n    let total = 0;\r\n    const newSelectedUnits = { ...this.selectedUnits };\r\n    const getRate = (rate: number, totalNights: number, isRateModified: boolean, preference: number) => {\r\n      if (isRateModified && preference === 2) {\r\n        return rate * totalNights;\r\n      }\r\n      return rate;\r\n    };\r\n    this.selectedUnits = newSelectedUnits;\r\n    this.guestData = [];\r\n    this.selectedRooms.forEach((room, key) => {\r\n      room.forEach(rate_plan => {\r\n        newSelectedUnits[key] = rate_plan.selectedUnits;\r\n        total += rate_plan.totalRooms * getRate(rate_plan.rate, this.dateRangeData.dateDifference, rate_plan.isRateModified, rate_plan.rateType);\r\n        for (let i = 1; i <= rate_plan.totalRooms; i++) {\r\n          this.guestData.push({\r\n            guestName: '',\r\n            roomId: '',\r\n            preference: '',\r\n            ...rate_plan,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.bookingData.TOTAL_PRICE = total;\r\n  }\r\n  handleOnApplicationInfoDataUpdateEvent(event: CustomEvent, index: number) {\r\n    const opt = event.detail;\r\n    const categoryIdKey = `c_${opt.data.roomCategoryId}`;\r\n    const updatedUnits = [...(this.selectedUnits[categoryIdKey] || [])];\r\n    updatedUnits[index] = opt.data.roomId;\r\n    this.selectedUnits = {\r\n      ...this.selectedUnits,\r\n      [categoryIdKey]: updatedUnits,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'applicationInfoUpdateEvent',\r\n      value: event.detail,\r\n    });\r\n  }\r\n\r\n  handleEventData(event: any, key: string, index: number) {\r\n    if (key === 'application-info') {\r\n      this.handleOnApplicationInfoDataUpdateEvent(event, index);\r\n    } else {\r\n      this.selectedBookedByData = event.detail.data;\r\n      this.dataUpdateEvent.emit({\r\n        key: 'propertyBookedBy',\r\n        value: event.detail,\r\n      });\r\n    }\r\n  }\r\n  isGuestDataIncomplete() {\r\n    if (this.selectedGuestData.length !== this.guestData.length) {\r\n      return true;\r\n    }\r\n    for (const data of this.selectedGuestData) {\r\n      if (data.guestName === '' || data.preference === '' || data.roomId === '') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled(key: string) {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.selectedGuestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      // const isCardDetails = ['cardNumber', 'cardHolderName', 'expiryMonth', 'expiryYear'].includes(key);\r\n      // if (!this.showPaymentDetails && isCardDetails) {\r\n      //   return false;\r\n      // }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      this.isLoading === key ||\r\n      isValidProperty(this.selectedGuestData, 'guestName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'isdCode', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'contactNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'firstName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'lastName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'countryId', -1) ||\r\n      isValidProperty(this.selectedBookedByData, 'selectedArrivalTime', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'email', '')\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-wrap\">\r\n          <div class=\"flex-fill text-left p-0\">\r\n            <span class=\"mr-1 font-weight-bold font-medium-1\">\r\n              {formatDate(this.dateRangeData.fromDateStr)} - {formatDate(this.dateRangeData.toDateStr)}\r\n            </span>\r\n            {this.dateRangeData.dateDifference} {+this.dateRangeData.dateDifference > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`}\r\n          </div>\r\n          {this.guestData.length > 1 && (\r\n            <div class=\"mt-1 mt-md-0 text-right\">\r\n              {locales.entries.Lcz_TotalPrice} <span class=\"font-weight-bold font-medium-1\">{getCurrencySymbol(this.currency.code) + this.bookingData.TOTAL_PRICE || '$0.00'}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {this.guestData.map((roomInfo, index) => {\r\n          return (\r\n            <igl-application-info\r\n              dateDifference={this.dateRangeData.dateDifference}\r\n              defaultGuestPreference={this.defaultGuestData.bed_preference}\r\n              defaultGuestRoomId={this.defaultGuestData.PR_ID}\r\n              currency={this.currency}\r\n              bedPreferenceType={this.bedPreferenceType}\r\n              index={index}\r\n              selectedUnits={this.selectedUnits[`c_${roomInfo.roomCategoryId}`]}\r\n              guestInfo={roomInfo}\r\n              guestRefKey={index}\r\n              bookingType={this.bookingData.event_type}\r\n              roomsList={roomInfo.physicalRooms}\r\n              onDataUpdateEvent={event => this.handleEventData(event, 'application-info', index)}\r\n            ></igl-application-info>\r\n          );\r\n        })}\r\n\r\n        {this.isEditOrAddRoomEvent || this.showSplitBookingOption ? null : (\r\n          <igl-property-booked-by\r\n            propertyId={this.propertyId}\r\n            countryNodeList={this.countryNodeList}\r\n            language={this.language}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            defaultData={this.bookedByInfoData}\r\n            onDataUpdateEvent={event =>\r\n              // this.dataUpdateEvent.emit({\r\n              //   key: \"propertyBookedBy\",\r\n              //   value: event.detail,\r\n              // })\r\n              this.handleEventData(event, 'propertyBookedBy', 0)\r\n            }\r\n          ></igl-property-booked-by>\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent ? (\r\n          <div class=\"d-flex p-0 mb-1 mt-2\">\r\n            <div class=\"flex-fill mr-2\">\r\n              {/* <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'cancel' })}>\r\n                {locales.entries.Lcz_Cancel}\r\n              </button> */}\r\n              <ir-button\r\n                icon=\"\"\r\n                text={locales.entries.Lcz_Back}\r\n                class=\"full-width\"\r\n                btn_color=\"secondary\"\r\n                btn_styles=\"justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'back' })}\r\n              ></ir-button>\r\n            </div>\r\n            <div class=\"flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'save'}\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'save' })}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                text={locales.entries.Lcz_Save}\r\n              ></ir-button>\r\n              {/* <button\r\n                disabled={this.isLoading === 'save'}\r\n                type=\"button\"\r\n                class=\"btn btn-primary full-width\"\r\n                onClick={() => {\r\n                  console.log('save button clicked');\r\n                  this.buttonClicked.emit({ key: 'save' });\r\n                }}\r\n              >\r\n                {this.isLoading === 'save' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                {locales.entries.Lcz_Save}\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"d-flex flex-column flex-md-row p-0 mb-1 mt-2 justify-content-md-between align-items-md-center\">\r\n            <div class=\"flex-fill mr-md-1\">\r\n              <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'back' })}>\r\n                <span class={'d-none d-md-inline-flex'}> &lt;&lt;</span> {locales.entries.Lcz_Back}\r\n              </button>\r\n            </div>\r\n            <div class=\"mt-1 mt-md-0 flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'book'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'book' })}\r\n                text={locales.entries.Lcz_Book}\r\n              ></ir-button>\r\n              {/* <button disabled={this.isLoading === 'book'} type=\"button\" class=\"btn btn-primary full-width\" onClick={() => this.buttonClicked.emit({ key: 'book' })}>\r\n                {this.isLoading === 'book' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                {locales.entries.Lcz_Book}\r\n              </button> */}\r\n            </div>\r\n            {/* <div class=\"mt-1 mt-md-0 flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'bookAndChekcIn'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n                text={locales.entries.Lcz_BookAndChekcIn}\r\n              ></ir-button>\r\n              // <button\r\n              //   //disabled={this.isButtonDisabled('bookAndCheckIn')}\r\n              //   type=\"button\"\r\n              //   class=\"btn btn-primary full-width\"\r\n              //   onClick={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n              // >\r\n              //   {this.isLoading === 'bookAndCheckIn' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n              //   {locales.entries.Lcz_BookAndChekcIn}\r\n              // </button>\r\n            </div> */}\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n\r\n.bookedByEmailContainer {\r\n  flex: auto;\r\n  max-width: 350px;\r\n}\r\n\r\n.bookedDetailsForm label {\r\n  min-width: 125px;\r\n  max-width: 125px;\r\n}\r\n\r\n.bookedDetailsForm .controlContainer {\r\n  /* width: calc(100% - 127px); */\r\n}\r\n\r\n.bookedDetailsForm .form-group {\r\n  margin-bottom: 10px !important;\r\n}\r\n\r\n.bookedDetailsForm .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n/* .controlContainer1 .textarea-container {\r\n  border: 1px solid #ced4da; \r\n  border-radius: 0.25rem; \r\n  height: 60px; \r\n  width: 100%;\r\n} */\r\n.controlContainer textarea {\r\n  height: 60px !important;\r\n}\r\n.margin3 {\r\n  margin-bottom: 5px !important;\r\n}\r\n@media (min-width: 768px) {\r\n  .bookedByEmailContainer {\r\n    margin-left: 37px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Fragment, Listen } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries, ICountry } from '../../../models/IBooking';\r\nimport { v4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\n\r\n@Component({\r\n  tag: 'igl-property-booked-by',\r\n  styleUrl: 'igl-property-booked-by.css',\r\n  scoped: true,\r\n})\r\nexport class IglPropertyBookedBy {\r\n  @Prop() language: string;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() countryNodeList: ICountry[] = [];\r\n  @Prop() propertyId: number;\r\n  @State() isButtonPressed: boolean = false;\r\n  private bookingService: BookingService = new BookingService();\r\n  private arrivalTimeList: IEntries[] = [];\r\n  private expiryMonths: string[] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\n  private expiryYears: string[] = [];\r\n  private currentMonth: string = '01';\r\n  private country;\r\n  @State() bookedByData: { [key: string]: any } = {\r\n    id: undefined,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    countryId: '',\r\n    isdCode: '',\r\n    contactNumber: '',\r\n    selectedArrivalTime: {\r\n      code: '',\r\n      description: '',\r\n    },\r\n    emailGuest: true,\r\n    message: '',\r\n    cardNumber: '',\r\n    cardHolderName: '',\r\n    expiryMonth: '',\r\n    expiryYear: '',\r\n  };\r\n\r\n  async componentWillLoad() {\r\n    this.assignCountryCode();\r\n    this.initializeExpiryYears();\r\n    this.initializeDateData();\r\n    this.populateBookedByData();\r\n  }\r\n\r\n  private initializeExpiryYears() {\r\n    const currentYear = new Date().getFullYear();\r\n    this.expiryYears = Array.from({ length: 4 }, (_, index) => (currentYear + index).toString());\r\n  }\r\n  private async assignCountryCode() {\r\n    const country = await this.bookingService.getUserDefaultCountry();\r\n\r\n    const countryId = country['COUNTRY_ID'];\r\n    this.country = countryId;\r\n    this.bookedByData = { ...this.bookedByData, isdCode: countryId.toString(), countryId };\r\n  }\r\n  private initializeDateData() {\r\n    const dt = new Date();\r\n    const month = dt.getMonth() + 1;\r\n    this.currentMonth = month < 10 ? `0${month}` : month.toString();\r\n  }\r\n\r\n  private populateBookedByData() {\r\n    this.bookedByData = this.defaultData ? { ...this.bookedByData, ...this.defaultData } : {};\r\n    this.arrivalTimeList = this.defaultData?.arrivalTime || [];\r\n    this.bookedByData = { ...this.bookedByData, selectedArrivalTime: { code: this.arrivalTimeList[0].CODE_NAME, description: this.arrivalTimeList[0].CODE_VALUE_EN } };\r\n    if (!this.bookedByData.expiryMonth) {\r\n      this.bookedByData.expiryMonth = this.currentMonth;\r\n    }\r\n    if (!this.bookedByData.expiryYear) {\r\n      this.bookedByData.expiryYear = new Date().getFullYear();\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, event) {\r\n    const foundTime = this.arrivalTimeList.find(time => time.CODE_NAME === event.target.value);\r\n\r\n    this.bookedByData[key] =\r\n      key === 'emailGuest'\r\n        ? event.target.checked\r\n        : key === 'arrivalTime'\r\n        ? {\r\n            code: event.target.value,\r\n            description: (foundTime && foundTime.CODE_VALUE_EN) || '',\r\n          }\r\n        : event.target.value;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    if (key === 'countryId') {\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        isdCode: event.target.value,\r\n      };\r\n    }\r\n  }\r\n\r\n  handleNumberInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n\r\n    // Regular expression to match only numeric characters (0-9)\r\n    const numericRegex = /^[0-9]+$/;\r\n\r\n    if (!numericRegex.test(inputValue)) {\r\n      // If the input is not numeric, prevent it from being entered\r\n      inputElement.value = inputValue.replace(/[^0-9]/g, '');\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n\r\n  async handleEmailInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n    if (this.isValidEmail(inputValue)) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n  async checkUser() {\r\n    try {\r\n      const email = this.bookedByData.email;\r\n      if (this.isValidEmail(email)) {\r\n        const res = await this.bookingService.getUserInfo(email);\r\n        if (res !== null) {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: res.id,\r\n            firstName: res.first_name,\r\n            lastName: res.last_name,\r\n            contactNumber: res.mobile,\r\n            countryId: res.country_id,\r\n            isdCode: res.country_id.toString(),\r\n          };\r\n        } else {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: undefined,\r\n            firstName: '',\r\n            lastName: '',\r\n            contactNumber: '',\r\n            countryId: '',\r\n            isdCode: '',\r\n          };\r\n        }\r\n        this.dataUpdateEvent.emit({\r\n          key: 'bookedByInfoUpdated',\r\n          data: { ...this.bookedByData },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n  isValidEmail(emailId) {\r\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    return emailPattern.test(emailId);\r\n  }\r\n  handleComboboxChange(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    switch (key) {\r\n      case 'blur':\r\n        if (data !== '') {\r\n          this.bookedByData.email = data;\r\n          this.checkUser();\r\n        }\r\n        break;\r\n      case 'select':\r\n        this.bookedByData.email = data.email;\r\n        this.bookedByData = {\r\n          ...this.bookedByData,\r\n          id: data.id,\r\n          firstName: data.first_name,\r\n          lastName: data.last_name,\r\n          contactNumber: data.mobile,\r\n          countryId: data.country_id,\r\n          isdCode: data.country_id.toString(),\r\n        };\r\n        this.dataUpdateEvent.emit({\r\n          key: 'bookedByInfoUpdated',\r\n          data: this.bookedByData,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  clearEvent() {\r\n    this.bookedByData.email = '';\r\n    this.bookedByData = {\r\n      ...this.bookedByData,\r\n      id: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      contactNumber: '',\r\n      isdCode: this.country.toString(),\r\n      countryId: this.country,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-3\">\r\n          <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center text-left \">\r\n            <label class=\"p-0 m-0 label-control mr-1 font-weight-bold\">{locales.entries.Lcz_BookedBy}</label>\r\n            <div class=\"bookedByEmailContainer mt-1 mt-md-0\">\r\n              {/* <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Email address\"\r\n                name=\"bookeyByEmail\"\r\n                value={this.bookedByData.email}\r\n                onInput={event => this.handleEmailInput('email', event)}\r\n                required\r\n                onBlur={() => this.checkUser()}\r\n              /> */}\r\n              <ir-autocomplete\r\n                danger_border={this.isButtonPressed && this.bookedByData.email === ''}\r\n                onComboboxValue={this.handleComboboxChange.bind(this)}\r\n                propertyId={this.propertyId}\r\n                type=\"email\"\r\n                value={this.bookedByData.email}\r\n                required\r\n                placeholder={locales.entries.Lcz_EmailAddress}\r\n                onInputCleared={() => this.clearEvent()}\r\n              ></ir-autocomplete>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bookedDetailsForm text-left mt-2 font-small-3 \">\r\n          <div class=\"d-flex flex-column flex-md-row  justify-content-md-between \">\r\n            <div class=\"p-0 flex-fill \">\r\n              <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center p-0 flex-fill \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_FirstName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill  \">\r\n                  <input\r\n                    class={`form-control flex-fill ${this.isButtonPressed && this.bookedByData.firstName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_FirstName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.firstName}\r\n                    onInput={event => this.handleDataChange('firstName', event)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_LastName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <input\r\n                    class={`form-control ${this.isButtonPressed && this.bookedByData.lastName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_LastName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.lastName}\r\n                    onInput={event => this.handleDataChange('lastName', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_Country}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select\r\n                    class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.countryId === '' && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('countryId', event)}\r\n                  >\r\n                    <option value=\"\" selected={this.bookedByData.countryId === ''}>\r\n                      {locales.entries.Lcz_Select}\r\n                    </option>\r\n                    {this.countryNodeList.map(countryNode => (\r\n                      <option value={countryNode.id} selected={this.bookedByData.countryId === countryNode.id}>\r\n                        {countryNode.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\r\n                <div class=\"p-0 m-0  d-flex  controlContainer flex-fill\">\r\n                  <div class=\" p-0 m-0\">\r\n                    <select\r\n                      class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.isdCode === '' && 'border-danger'}`}\r\n                      id={v4()}\r\n                      onChange={event => this.handleDataChange('isdCode', event)}\r\n                    >\r\n                      <option value=\"\" selected={this.bookedByData.isdCode === ''}>\r\n                        {locales.entries.Lcz_Isd}\r\n                      </option>\r\n                      {this.countryNodeList.map(country => (\r\n                        <option value={country.id} selected={this.bookedByData.isdCode === country.id.toString()}>\r\n                          {country.phone_prefix}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"flex-fill p-0 m-0\">\r\n                    <input\r\n                      class={`form-control ${this.isButtonPressed && this.bookedByData.contactNumber === '' && 'border-danger'}`}\r\n                      type=\"tel\"\r\n                      placeholder={locales.entries.Lcz_ContactNumber}\r\n                      id={v4()}\r\n                      value={this.bookedByData.contactNumber}\r\n                      onInput={event => this.handleNumberInput('contactNumber', event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_YourArrivalTime}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select\r\n                    class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.selectedArrivalTime.code === '' && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('selectedArrivalTime', event)}\r\n                  >\r\n                    {/* <option value=\"\" selected={this.bookedByData.selectedArrivalTime.code === ''}>\r\n                      -\r\n                    </option> */}\r\n                    {this.arrivalTimeList.map(time => (\r\n                      <option value={time.CODE_NAME} selected={this.bookedByData.selectedArrivalTime.code === time.CODE_NAME}>\r\n                        {time.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-0 flex-fill  ml-md-3\">\r\n              <div class=\"  p-0 d-flex flex-column flex-md-row align-items-md-center \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_AnyMessageForUs}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill \">\r\n                  <textarea\r\n                    id={v4()}\r\n                    rows={4}\r\n                    class=\"form-control \"\r\n                    name=\"message\"\r\n                    value={this.bookedByData.message}\r\n                    onInput={event => this.handleDataChange('message', event)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              {this.showPaymentDetails && (\r\n                <Fragment>\r\n                  <div class=\"form-group mt-md-1  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardNumber}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardNumber}\r\n                        onInput={event => this.handleNumberInput('cardNumber', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardHolderName}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardHolderName}\r\n                        onInput={event => this.handleDataChange('cardHolderName', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_ExpiryDate}</label>\r\n                    <div class=\"p-0 m-0 row  controlContainer flex-fill\">\r\n                      <div class=\"p-0 m-0\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryMonth', event)}>\r\n                          {this.expiryMonths.map(month => (\r\n                            <option value={month} selected={month === this.bookedByData.expiryMonth}>\r\n                              {month}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"p-0 m-0 ml-1\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryYear', event)}>\r\n                          {this.expiryYears.map((year, index) => (\r\n                            <option value={year} selected={index === this.bookedByData.expiryYear}>\r\n                              {year}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n              <div class=\"form-group mt-1 p-0 d-flex flex-row align-items-center\">\r\n                <label class=\"p-0 m-0\" htmlFor={'emailTheGuestId'}>\r\n                  {locales.entries.Lcz_EmailTheGuest}\r\n                </label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill checkBoxContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"checkbox\"\r\n                    checked={this.bookedByData.emailGuest}\r\n                    id={'emailTheGuestId'}\r\n                    onChange={event => this.handleDataChange('emailGuest', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  position: relative;\r\n}\r\n.selected {\r\n  color: #fff;\r\n  text-decoration: none;\r\n  background-color: #666ee8;\r\n}\r\ninput {\r\n  width: 100%;\r\n  position: relative;\r\n}\r\n\r\n.combobox {\r\n  margin: 0;\r\n  top: 30px;\r\n  min-width: 100%;\r\n  width: max-content;\r\n  display: block;\r\n  z-index: 10000;\r\n  padding: 1px;\r\n  background: white;\r\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n  padding: 5px 0;\r\n  max-height: 250px;\r\n  overflow-y: auto;\r\n}\r\n.dropdown-item {\r\n  cursor: pointer;\r\n}\r\nbutton {\r\n  all: unset;\r\n  right: 4px;\r\n}\r\n.combobox p,\r\nspan,\r\nloader-container {\r\n  padding: 5px 16px;\r\n  margin: 0px;\r\n  margin-top: 2px;\r\n  width: 100%;\r\n}\r\n.combobox p {\r\n  cursor: pointer;\r\n}\r\n.combobox p:hover {\r\n  background: #f4f5fa;\r\n}\r\n\r\n.combobox p[data-selected],\r\n.combobox p[data-selected]:hover {\r\n  color: #fff;\r\n  text-decoration: none;\r\n  background-color: #666ee8;\r\n}\r\n.loader {\r\n  width: 14px;\r\n  height: 14px;\r\n  border: 2px solid #0f0f0f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","import { Component, Host, Prop, State, h, Event, EventEmitter, Listen, Element, Fragment } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { BookingService } from '../../services/booking.service';\r\nimport { IToast } from '../ir-toast/toast';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'ir-autocomplete',\r\n  styleUrl: 'ir-autocomplete.css',\r\n  scoped: true,\r\n})\r\nexport class IrAutocomplete {\r\n  @Prop() duration: number = 300;\r\n  @Prop() placeholder: string = '';\r\n  @Prop() propertyId: number;\r\n  @Prop() isSplitBooking: boolean = false;\r\n  @Prop() type: 'email' | 'text' | 'password' | 'number' | 'search' = 'text';\r\n  @Prop() name: string = '';\r\n  @Prop() inputId: string = v4();\r\n  @Prop() required: boolean = false;\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() value: string;\r\n  @Prop() from_date: string = '';\r\n  @Prop() to_date: string = '';\r\n  @Prop() danger_border: boolean;\r\n  @State() inputValue: string = '';\r\n  @State() data: any[] = [];\r\n  @State() selectedIndex: number = -1;\r\n  @State() isComboBoxVisible: boolean = false;\r\n  @State() isLoading: boolean = true;\r\n  @State() isItemSelected: boolean;\r\n\r\n  @Event({ bubbles: true, composed: true }) comboboxValue: EventEmitter<{ key: string; data: unknown }>;\r\n  @Event() inputCleared: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n\r\n  @Element() el: HTMLElement;\r\n  private inputRef: HTMLInputElement;\r\n  private debounceTimer: any;\r\n  private bookingService = new BookingService();\r\n  private no_result_found = '';\r\n  componentWillLoad() {\r\n    this.no_result_found = locales.entries.Lcz_NoResultsFound;\r\n  }\r\n\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    const dataSize = this.data.length;\r\n    const itemHeight = this.getHeightOfPElement();\r\n    if (dataSize > 0) {\r\n      switch (event.key) {\r\n        case 'ArrowUp':\r\n          event.preventDefault();\r\n          this.selectedIndex = (this.selectedIndex - 1 + dataSize) % dataSize;\r\n          this.adjustScrollPosition(itemHeight);\r\n          break;\r\n        case 'ArrowDown':\r\n          event.preventDefault();\r\n          this.selectedIndex = (this.selectedIndex + 1) % dataSize;\r\n          this.adjustScrollPosition(itemHeight);\r\n          break;\r\n        case 'Enter':\r\n        case ' ':\r\n        case 'ArrowRight':\r\n          event.preventDefault();\r\n          this.selectItem(this.selectedIndex);\r\n          break;\r\n        case 'Escape':\r\n          this.inputRef?.blur();\r\n          this.isComboBoxVisible = false;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  getHeightOfPElement() {\r\n    const combobox = this.el.querySelector('.combobox');\r\n    if (combobox) {\r\n      const pItem = combobox.querySelector('p');\r\n      return pItem ? pItem.offsetHeight : 0;\r\n    }\r\n    return 0;\r\n  }\r\n  adjustScrollPosition(itemHeight, visibleHeight = 250) {\r\n    const combobox = this.el.querySelector('.combobox');\r\n    if (combobox) {\r\n      const margin = 2;\r\n      const itemTotalHeight = itemHeight + margin;\r\n      const selectedPosition = itemTotalHeight * this.selectedIndex;\r\n      let newScrollTop = selectedPosition - visibleHeight / 2 + itemHeight / 2;\r\n      newScrollTop = Math.max(0, Math.min(newScrollTop, combobox.scrollHeight - visibleHeight));\r\n      combobox.scrollTo({\r\n        top: newScrollTop,\r\n        behavior: 'auto',\r\n      });\r\n    }\r\n  }\r\n\r\n  selectItem(index) {\r\n    if (this.data[index]) {\r\n      this.isItemSelected = true;\r\n      this.comboboxValue.emit({ key: 'select', data: this.data[index] });\r\n      this.inputValue = '';\r\n      this.resetCombobox();\r\n    }\r\n  }\r\n\r\n  debounceFetchData() {\r\n    clearTimeout(this.debounceTimer);\r\n    this.debounceTimer = setTimeout(() => {\r\n      this.fetchData();\r\n    }, this.duration);\r\n  }\r\n\r\n  async fetchData() {\r\n    try {\r\n      this.isLoading = true;\r\n      let data = [];\r\n      if (!this.isSplitBooking) {\r\n        data = await this.bookingService.fetchExposedGuest(this.inputValue, this.propertyId);\r\n      } else {\r\n        if (this.inputValue.split(' ').length === 1) {\r\n          data = await this.bookingService.fetchExposedBookings(this.inputValue, this.propertyId, this.from_date, this.to_date);\r\n        }\r\n      }\r\n      this.data = data;\r\n      if (!this.isComboBoxVisible) {\r\n        this.isComboBoxVisible = true;\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  handleInputChange(event: Event) {\r\n    this.inputValue = (event.target as HTMLInputElement).value;\r\n    if (this.inputValue) {\r\n      this.debounceFetchData();\r\n    } else {\r\n      clearTimeout(this.debounceTimer);\r\n      this.resetCombobox(false);\r\n    }\r\n  }\r\n\r\n  @Listen('click', { target: 'document' })\r\n  handleDocumentClick(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (!this.el.contains(target)) {\r\n      this.isComboBoxVisible = false;\r\n    }\r\n  }\r\n  handleBlur() {\r\n    setTimeout(() => {\r\n      if (this.isDropdownItem(document.activeElement)) {\r\n        return;\r\n      }\r\n      if (this.isSplitBooking) {\r\n        if (!this.isItemSelected) {\r\n          if (this.data.length > 0) {\r\n            this.comboboxValue.emit({ key: 'blur', data: this.inputValue });\r\n          } else {\r\n            if (this.inputValue !== '') {\r\n              this.toast.emit({\r\n                type: 'error',\r\n                description: '',\r\n                title: `The Booking #${this.inputValue} is not Available`,\r\n                position: 'top-right',\r\n              });\r\n              this.inputCleared.emit();\r\n            }\r\n          }\r\n          this.inputValue = '';\r\n          this.resetCombobox();\r\n        } else {\r\n          this.isItemSelected = false;\r\n        }\r\n      } else {\r\n        if (!this.isItemSelected) {\r\n          this.comboboxValue.emit({ key: 'blur', data: this.inputValue });\r\n          this.inputValue = '';\r\n          this.resetCombobox();\r\n        } else {\r\n          this.isItemSelected = false;\r\n        }\r\n      }\r\n    }, 200);\r\n  }\r\n  isDropdownItem(element) {\r\n    return element && element.closest('.combobox');\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    clearTimeout(this.debounceTimer);\r\n    this.inputRef?.removeEventListener('blur', this.handleBlur);\r\n    this.inputRef?.removeEventListener('click', this.selectItem);\r\n    this.inputRef?.removeEventListener('keydown', this.handleKeyDown);\r\n    this.inputRef?.removeEventListener('focus', this.handleFocus);\r\n  }\r\n  handleItemKeyDown(event: KeyboardEvent, index: number) {\r\n    if (event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowRight') {\r\n      this.selectItem(index);\r\n      event.preventDefault();\r\n    } else if (event.key === 'Escape') {\r\n      this.isComboBoxVisible = false;\r\n      this.inputRef?.blur();\r\n      event.preventDefault();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  renderDropdown() {\r\n    if (this.inputValue !== '') {\r\n      return (\r\n        <div class={`position-absolute border rounded combobox`}>\r\n          {this.data?.map((d, index) => (\r\n            <p role=\"button\" onKeyDown={e => this.handleItemKeyDown(e, index)} data-selected={this.selectedIndex === index} tabIndex={0} onClick={() => this.selectItem(index)}>\r\n              {this.isSplitBooking ? (\r\n                <Fragment>{`${d.booking_nbr} ${d.guest.first_name} ${d.guest.last_name}`}</Fragment>\r\n              ) : (\r\n                <div class={'d-flex align-items-center flex-fill'}>\r\n                  <p class={'p-0 m-0'}>\r\n                    {`${d.email}`} <span class={'p-0 m-0'}>{` - ${d.first_name} ${d.last_name}`}</span>\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </p>\r\n          ))}\r\n          {this.isLoading && (\r\n            <div class=\"loader-container d-flex align-items-center justify-content-center\">\r\n              <div class=\"loader\"></div>\r\n            </div>\r\n          )}\r\n          {this.data.length === 0 && !this.isLoading && <span class={'text-center'}>{this.no_result_found}</span>}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  handleFocus() {\r\n    this.isComboBoxVisible = true;\r\n  }\r\n  clearInput() {\r\n    this.inputValue = '';\r\n    this.resetCombobox();\r\n    this.inputCleared.emit(null);\r\n  }\r\n  resetCombobox(withblur: boolean = true) {\r\n    if (withblur) {\r\n      this.inputRef?.blur();\r\n    }\r\n    this.data = [];\r\n    this.selectedIndex = -1;\r\n    this.isComboBoxVisible = false;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={'d-flex align-items-center '}>\r\n          <input\r\n            required={this.required}\r\n            disabled={this.disabled}\r\n            id={this.inputId}\r\n            onKeyDown={this.handleKeyDown.bind(this)}\r\n            class={`form-control input-sm flex-full ${this.danger_border && 'border-danger'}`}\r\n            type={this.type}\r\n            name={this.name}\r\n            value={this.value || this.inputValue}\r\n            placeholder={this.placeholder}\r\n            onBlur={this.handleBlur.bind(this)}\r\n            onInput={this.handleInputChange.bind(this)}\r\n            onFocus={this.handleFocus.bind(this)}\r\n            ref={el => (this.inputRef = el)}\r\n          />\r\n          {this.inputValue && (\r\n            <button type=\"button\" class={'position-absolute d-flex align-items-center justify-content-center '} onClick={this.clearInput.bind(this)}>\r\n              <p class={'sr-only'}>clear input</p>\r\n              <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z\"\r\n                  fill=\"currentColor\"\r\n                  fill-rule=\"evenodd\"\r\n                  clip-rule=\"evenodd\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n          )}\r\n        </div>\r\n        {this.isComboBoxVisible && this.renderDropdown()}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",".loader {\r\n  width: 11px;\r\n  height: 11px;\r\n  border: 2px solid #fff;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: inline-flex;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n.button-icon {\r\n  padding: 0;\r\n  margin-top: 0;\r\n}\r\n.button-icon[data-state='loading'] {\r\n  display: none;\r\n}\r\n.button-text {\r\n  padding: 0 5px;\r\n}\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","import { Component, Prop, Event, EventEmitter, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-button',\r\n  styleUrl: 'ir-button.css',\r\n})\r\nexport class IrButton {\r\n  @Prop() name: string;\r\n  @Prop() text;\r\n  @Prop() icon = 'ft-save';\r\n  @Prop() btn_color: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\r\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() btn_block = true;\r\n  @Prop() btn_disabled = false;\r\n  @Prop() btn_type = 'button';\r\n  @Prop() isLoading: boolean = false;\r\n  @Prop() btn_styles: string;\r\n\r\n  connectedCallback() {}\r\n  disconnectedCallback() {}\r\n  @Event({ bubbles: true, composed: true }) clickHanlder: EventEmitter<any>;\r\n\r\n  render() {\r\n    let blockClass = this.btn_block ? 'btn-block' : '';\r\n    return (\r\n      <button\r\n        onClick={() => this.clickHanlder.emit()}\r\n        class={`btn btn-${this.btn_color} ${this.btn_styles} d-flex align-items-center btn-${this.size} text-${this.textSize} ${blockClass}`}\r\n        type={this.btn_type}\r\n        disabled={this.btn_disabled}\r\n      >\r\n        <span class=\"button-icon\" data-state={this.isLoading ? 'loading' : ''}>\r\n          <slot name=\"icon\"></slot>\r\n        </span>\r\n        {this.isLoading && <span class=\"loader m-0 p-0\"></span>}\r\n        {this.text && <span class=\"button-text m-0\">{this.text}</span>}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import { IrOnlineResource } from './models';\r\nexport const onlineResources: IrOnlineResource[] = [\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/jquery.min.js\",\r\n  // },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i%7CQuicksand:300,400,500,700',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/bootstrap.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/bootstrap-extended.css',\r\n  },\r\n  { isCSS: true, link: 'https://x.igloorooms.com/app-assets/css/colors.css' },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/core/menu/menu-types/horizontal-menu.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/core/colors/palette-gradient.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/components.css',\r\n  },\r\n  { isCSS: true, link: 'https://x.igloorooms.com/assets/css/style.css' },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/vendors/css/forms/icheck/icheck.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/vendors/css/forms/icheck/custom.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/pages/login-register.css',\r\n  },\r\n  // {\r\n  //   isCSS: true,\r\n  //   link: 'https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/daterangepicker.css',\r\n  // },\r\n\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/moment.min.js\",\r\n  // },\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/daterangepicker.js\",\r\n  // },\r\n];\r\n","import { Component, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport { IrOnlineResource } from '../../common/models';\r\nimport { onlineResources } from '../../common/ir.common.resources';\r\n\r\n@Component({\r\n  tag: 'ir-common',\r\n})\r\nexport class IrCommon {\r\n  @Prop({ reflect: true }) extraResources: string = '';\r\n  @State() resources: IrOnlineResource[] = onlineResources;\r\n  componentWillLoad() {\r\n    this.parseRefs();\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.initializeStyles();\r\n  }\r\n\r\n  @Watch('extraResources')\r\n  hrefsChanged() {\r\n    this.parseRefs();\r\n    this.initializeStyles();\r\n  }\r\n\r\n  private parseRefs() {\r\n    if (this.extraResources !== '') this.resources.push(JSON.parse(this.extraResources));\r\n  }\r\n\r\n  private appendTag(tagName: string, attributes: any) {\r\n    const tag = document.createElement(tagName);\r\n    const selectorParts = [];\r\n\r\n    Object.keys(attributes).forEach(attr => {\r\n      tag.setAttribute(attr, attributes[attr]);\r\n      selectorParts.push(`[${attr}=\"${attributes[attr]}\"]`);\r\n    });\r\n\r\n    const selector = `${tagName}${selectorParts.join('')}`;\r\n    const existingTag = document.querySelector(selector);\r\n\r\n    if (!existingTag) {\r\n      document.head.appendChild(tag);\r\n    }\r\n  }\r\n\r\n  private initializeStyles() {\r\n    this.resources.forEach(res => {\r\n      if (res.isCSS) {\r\n        this.appendTag('link', {\r\n          href: res.link,\r\n          rel: 'stylesheet',\r\n          type: 'text/css',\r\n        });\r\n      }\r\n      if (res.isJS) {\r\n        this.appendTag('script', {\r\n          src: res.link,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <slot></slot>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","input {\r\n  all: unset;\r\n  box-sizing: border-box;\r\n  padding: 0;\r\n  margin: 0;\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\ninput:disabled {\r\n  text-align: start;\r\n  font-size: 14px;\r\n}\r\n","import { Component, h, Element, Prop, Event, EventEmitter } from '@stencil/core';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'ir-date-picker',\r\n  styleUrl: 'ir-date-picker.css',\r\n  scoped: true,\r\n})\r\nexport class IrDatePicker {\r\n  @Element() private element: HTMLElement;\r\n  @Prop() fromDate: Date;\r\n  @Prop() toDate: Date;\r\n\r\n  @Prop() opens: 'left' | 'right' | 'center';\r\n  @Prop() autoApply: boolean;\r\n  @Prop() firstDay: number = 1;\r\n  @Prop() monthNames: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  @Prop() daysOfWeek: string[] = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\r\n  @Prop() format: string = 'MMM DD, YYYY';\r\n  @Prop() separator: string = ' - ';\r\n  @Prop() applyLabel: string = 'Apply';\r\n  @Prop() cancelLabel: string = 'Cancel';\r\n  @Prop() fromLabel: string = 'Form';\r\n  @Prop() toLabel: string = 'To';\r\n  @Prop() customRangeLabel: string = 'Custom';\r\n  @Prop() weekLabel: string = 'W';\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() singleDatePicker = false;\r\n  @Prop() minDate: string;\r\n  @Prop() maxDate: string;\r\n  @Prop() maxSpan: moment.DurationInputArg1 = {\r\n    days: 240,\r\n  };\r\n  @Event() dateChanged: EventEmitter<{\r\n    start: moment.Moment;\r\n    end: moment.Moment;\r\n  }>;\r\n  dateRangeInput: HTMLElement;\r\n  componentDidLoad() {\r\n    this.dateRangeInput = this.element.querySelector('.date-range-input');\r\n    $(this.dateRangeInput).daterangepicker(\r\n      {\r\n        singleDatePicker: this.singleDatePicker,\r\n        opens: this.opens,\r\n        startDate: moment(this.fromDate),\r\n        endDate: moment(this.toDate),\r\n        minDate: moment(this.minDate || moment(new Date()).format('YYYY-MM-DD')),\r\n        maxDate: this.maxDate ? moment(this.maxDate) : undefined,\r\n        maxSpan: this.maxSpan,\r\n        autoApply: this.autoApply,\r\n        locale: {\r\n          format: this.format,\r\n          separator: this.separator,\r\n          applyLabel: this.applyLabel,\r\n          cancelLabel: this.cancelLabel,\r\n          fromLabel: this.fromLabel,\r\n          toLabel: this.toLabel,\r\n          customRangeLabel: this.customRangeLabel,\r\n          weekLabel: this.weekLabel,\r\n          daysOfWeek: this.daysOfWeek,\r\n          monthNames: this.monthNames,\r\n          firstDay: this.firstDay,\r\n        },\r\n      },\r\n      (start, end) => {\r\n        this.dateChanged.emit({ start, end });\r\n      },\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <input class=\"date-range-input\" type=\"text\" disabled={this.disabled} />;\r\n  }\r\n}\r\n",":host {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.icon-button {\r\n  all: unset;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.icon-button:hover {\r\n  cursor: pointer;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-icon',\r\n  styleUrl: 'ir-icon.css',\r\n  scoped: true,\r\n})\r\nexport class IrIcon {\r\n  @Prop() icon = 'ft-check';\r\n\r\n  @Event({ bubbles: true, composed: true }) iconClickHandler: EventEmitter;\r\n\r\n  render() {\r\n    return (\r\n      <button class=\"icon-button\" onClick={() => this.iconClickHandler.emit()}>\r\n        <slot name=\"icon\"></slot>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  --viewport-padding: 25px;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: var(--viewport-padding);\r\n  gap: 10px;\r\n  max-width: 60vw;\r\n  margin: 0;\r\n  list-style: none;\r\n  z-index: 2147483647;\r\n  outline: none;\r\n  pointer-events: none;\r\n}\r\n\r\n.toast-container {\r\n  background-color: white;\r\n  border-radius: 6px;\r\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\r\n  padding: 15px 30px;\r\n  display: grid;\r\n  grid-template-areas: 'title action';\r\n  grid-template-columns: auto max-content;\r\n  column-gap: 15px;\r\n  align-items: center;\r\n  overflow: hidden;\r\n}\r\n.toast-container[data-state='open'] {\r\n  animation: slideIn 150ms cubic-bezier(0.16, 1, 0.3, 1) forwards;\r\n}\r\n.toast-container[data-state='closed'] {\r\n  pointer-events: none;\r\n  animation: fadeOut 150ms ease-in forwards;\r\n}\r\np {\r\n  margin: 0;\r\n  padding: 0;\r\n  grid-area: title;\r\n  font-weight: 500;\r\n  color: #1c2024;\r\n  font-size: 15px;\r\n}\r\n\r\n.x-mark-container,\r\n.check-mark-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 1.5rem;\r\n  width: 1.5rem;\r\n  border-radius: 50%;\r\n}\r\n.x-mark-container {\r\n  background: red;\r\n}\r\n.check-mark-container {\r\n  background: rgb(9, 153, 9);\r\n}\r\n\r\n.loadingScreenContainer {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 100000;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  pointer-events: all;\r\n}\r\n\r\n@keyframes fadeOut {\r\n  0% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n}\r\n@keyframes slideIn {\r\n  0% {\r\n    transform: translateX(calc(100% + var(--viewport-padding)));\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h } from '@stencil/core';\r\nimport axios from 'axios';\r\nimport { IToast } from '../ir-toast/toast';\r\nimport interceptor_requests from '@/stores/ir-interceptor.store';\r\n\r\n@Component({\r\n  tag: 'ir-interceptor',\r\n  styleUrl: 'ir-interceptor.css',\r\n  scoped: true,\r\n})\r\nexport class IrInterceptor {\r\n  @State() isShown = false;\r\n  @State() isLoading = false;\r\n  @State() isUnassignedUnit = false;\r\n\r\n  @Prop({ reflect: true, mutable: true }) defaultMessage = {\r\n    loadingMessage: 'Fetching Data',\r\n    errorMessage: 'Something Went Wrong',\r\n  };\r\n\r\n  @Prop({ reflect: true }) handledEndpoints = ['/ReAllocate_Exposed_Room'];\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n  componentWillLoad() {\r\n    this.setupAxiosInterceptors();\r\n  }\r\n\r\n  setupAxiosInterceptors() {\r\n    axios.interceptors.request.use(this.handleRequest.bind(this), this.handleError.bind(this));\r\n    axios.interceptors.response.use(this.handleResponse.bind(this), this.handleError.bind(this));\r\n  }\r\n\r\n  extractEndpoint(url: string): string {\r\n    return url.split('?')[0];\r\n  }\r\n\r\n  isHandledEndpoint(url: string): boolean {\r\n    return this.handledEndpoints.includes(this.extractEndpoint(url));\r\n  }\r\n\r\n  handleRequest(config) {\r\n    interceptor_requests.status = 'pending';\r\n    if (this.isHandledEndpoint(config.url)) {\r\n      this.isLoading = true;\r\n      if (this.extractEndpoint(config.url) === '/ReAllocate_Exposed_Room') {\r\n        this.defaultMessage.loadingMessage = 'Updating Event';\r\n      } else if (this.extractEndpoint(config.url) === '/Get_Aggregated_UnAssigned_Rooms') {\r\n        this.isUnassignedUnit = true;\r\n      } else {\r\n        this.defaultMessage.loadingMessage = 'Fetching Data';\r\n      }\r\n      this.showToast();\r\n    }\r\n    return config;\r\n  }\r\n\r\n  handleResponse(response) {\r\n    this.isLoading = false;\r\n    interceptor_requests.status = 'done';\r\n    if (response.data.ExceptionMsg?.trim()) {\r\n      this.handleError(response.data.ExceptionMsg);\r\n      throw new Error(response.data.ExceptionMsg);\r\n    } else {\r\n      this.hideToastAfterDelay(true);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  handleError(error) {\r\n    if (this.isUnassignedUnit) {\r\n      this.isUnassignedUnit = false;\r\n    }\r\n\r\n    this.hideToastAfterDelay(true);\r\n    this.toast.emit({\r\n      type: 'error',\r\n      title: error,\r\n      description: '',\r\n      position: 'top-right',\r\n    });\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  showToast() {\r\n    this.isShown = true;\r\n  }\r\n\r\n  hideToastAfterDelay(isSuccess: boolean) {\r\n    if (this.isUnassignedUnit) {\r\n      this.isShown = false;\r\n      this.isUnassignedUnit = false;\r\n    } else {\r\n      const delay = isSuccess ? 0 : 5000;\r\n      setTimeout(() => {\r\n        this.isShown = false;\r\n      }, delay);\r\n    }\r\n  }\r\n\r\n  renderMessage(): string {\r\n    return this.defaultMessage.errorMessage;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.isLoading && this.isShown && (\r\n          <div class=\"loadingScreenContainer\">\r\n            <div class=\"loadingContainer\">\r\n              <ir-loading-screen></ir-loading-screen>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: fix;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 1000;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\n.loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n.backdrop {\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n.loaderContainer {\r\n  position: absolute;\r\n  z-index: 100001;\r\n  padding: 20px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  border-radius: 5px;\r\n  /* box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px; */\r\n}\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","import { Component, Host, Prop, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-loading-screen',\r\n  styleUrl: 'ir-loading-screen.css',\r\n  scoped: true,\r\n})\r\nexport class IrLoadingScreen {\r\n  @Prop() message: string = '';\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"loaderContainer\">\r\n          <span class=\"loader\"></span>\r\n          {/* {this.message && <p class={'m-0'}>{this.message}</p>} */}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","button,\r\np,\r\nh3,\r\ndiv {\r\n  all: unset;\r\n}\r\n:host {\r\n  --rd-viewport-padding: 25px;\r\n  --rd-success: #2b9a66;\r\n  position: fixed;\r\n  bottom: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: var(--rd-viewport-padding);\r\n  gap: 10px;\r\n  max-width: 100vw;\r\n  margin: 0;\r\n  list-style: none;\r\n  z-index: 2147483647;\r\n  outline: none;\r\n  pointer-events: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n}\r\n@media (prefers-color-scheme: dark) {\r\n  :host {\r\n    --rd-success: #33b074;\r\n  }\r\n}\r\np {\r\n  color: hsla(222.2, 84%, 4.9%, 0.8);\r\n  font-size: 13px;\r\n  line-height: 1.3;\r\n}\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  font-weight: 500;\r\n  color: hsl(222.2, 84%, 4.9%);\r\n  font-size: 15px;\r\n}\r\n:host([position='top-left']) {\r\n  top: 0;\r\n  left: 0;\r\n}\r\n:host([position='top-right']) {\r\n  top: 0;\r\n  right: 0;\r\n}\r\n:host([position='bottom-left']) {\r\n  bottom: 0;\r\n  left: 0;\r\n}\r\n:host([position='bottom-right']) {\r\n  bottom: 0;\r\n  right: 0;\r\n}\r\n.icon-container {\r\n  height: 25px;\r\n  width: 25px;\r\n  border-radius: 25px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0;\r\n  margin: 0;\r\n  /* position: absolute;\r\n  top: 50%;\r\n  right: calc(var(--rd-viewport-padding) / 2); \r\n  transform: translateY(-50%);*/\r\n}\r\n.icon-container > svg {\r\n  margin: 0;\r\n  color: white;\r\n  stroke-width: 5px;\r\n}\r\n.success {\r\n  background-color: var(--rd-success);\r\n}\r\n.error {\r\n  background-color: red;\r\n}\r\n.ToastRoot {\r\n  background-color: hsl(0, 0%, 100%);\r\n  border-radius: 0.5rem;\r\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\r\n  padding: 15px;\r\n  display: grid;\r\n  grid-template-areas: 'title action' 'description action';\r\n  grid-template-columns: auto max-content;\r\n  column-gap: 15px;\r\n  align-items: center;\r\n  pointer-events: none;\r\n  opacity: 0;\r\n  border: 1px solid hsl(214.3, 31.8%, 91.4%);\r\n  position: relative;\r\n}\r\n.ToastRoot[data-state='open'] {\r\n  pointer-events: all;\r\n  animation: slideIn 150ms cubic-bezier(0.16, 1, 0.3, 1);\r\n}\r\n.ToastRoot[data-state='closed'] {\r\n  pointer-events: none;\r\n  animation: hide 100ms ease-in;\r\n}\r\n\r\n@-webkit-keyframes slideIn {\r\n  from {\r\n    transform: translateX(var(--rd-offset-width));\r\n  }\r\n  to {\r\n    transform: translateX(0);\r\n  }\r\n}\r\n@keyframes slideIn {\r\n  from {\r\n    transform: translateX(var(--rd-offset-width));\r\n  }\r\n  to {\r\n    transform: translateX(0);\r\n  }\r\n}\r\n.ToastTitle {\r\n  grid-area: title;\r\n  font-weight: 500;\r\n  color: hsl(222.2, 84%, 4.9%);\r\n  font-size: 15px;\r\n}\r\n\r\n.ToastDescription {\r\n  grid-area: description;\r\n  margin: 0;\r\n  margin-top: 5px;\r\n  color: hsla(222.2, 84%, 4.9%, 0.8);\r\n  font-size: 13px;\r\n  line-height: 1.3;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.ToastAction {\r\n  grid-area: action;\r\n}\r\n","import { Component, Host, Element, Listen, Prop, h, State } from '@stencil/core';\r\nimport { TPositions, IToast } from './toast';\r\n\r\n@Component({\r\n  tag: 'ir-toast',\r\n  styleUrl: 'ir-toast.css',\r\n  scoped: true,\r\n})\r\nexport class IrToast {\r\n  @Prop({ reflect: true, mutable: true }) position: TPositions = 'bottom-left';\r\n  @Element() element: HTMLElement;\r\n  @State() toasts: IToast[] = [];\r\n  @Listen('toast', { target: 'body' })\r\n  onToast(event: CustomEvent<IToast>) {\r\n    const toast: IToast = event.detail;\r\n    this.showToast(toast);\r\n  }\r\n  showToast(toast: IToast) {\r\n    const toastrOptions = {\r\n      positionClass: 'toast-top-right',\r\n      closeButton: true,\r\n      timeOut: toast.duration || 5000,\r\n    };\r\n\r\n    switch (toast.type) {\r\n      case 'success':\r\n        toastr.success(toast.title, '', toastrOptions);\r\n        break;\r\n      case 'error':\r\n        toastr.error(toast.title, '', toastrOptions);\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return <Host></Host>;\r\n  }\r\n}\r\n",":host {\r\n  position: relative;\r\n}\r\n.tooltip-icon {\r\n  margin: 0 5px;\r\n  padding: 0;\r\n}\r\n/* p {\r\n  position: absolute;\r\n  top: 10px;\r\n  background-color: antiquewhite;\r\n  border-radius: 7px;\r\n  padding: 10px 15px;\r\n  z-index: 1000000;\r\n} */\r\n","import { Component, Host, Prop, State, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-tooltip',\r\n  styleUrl: 'ir-tooltip.css',\r\n  scoped: true,\r\n})\r\nexport class IrTooltip {\r\n  @Prop({ reflect: true }) message: string;\r\n  @State() open: boolean;\r\n  tooltipTimeout: any;\r\n  toggleOpen(shouldOpen: boolean) {\r\n    if (this.tooltipTimeout) {\r\n      clearTimeout(this.tooltipTimeout);\r\n    }\r\n\r\n    if (shouldOpen) {\r\n      this.tooltipTimeout = setTimeout(() => {\r\n        this.open = true;\r\n      }, 300);\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host class=\"m-0 p-0\">\r\n        <span onMouseEnter={() => this.toggleOpen(true)} onMouseLeave={() => this.toggleOpen(false)}>\r\n          {/* <i\r\n            class=\"ml-1 ft-info\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            data-original-title=\"Info popup\"\r\n          ></i> */}\r\n          <svg\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            data-original-title=\"Info popup\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            height=\"16\"\r\n            width=\"16\"\r\n            class=\"tooltip-icon\"\r\n            viewBox=\"0 0 512 512\"\r\n          >\r\n            <path\r\n              fill=\"#6b6f82\"\r\n              d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336h24V272H216c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"\r\n            />\r\n          </svg>\r\n        </span>\r\n        {this.open && (\r\n          <div class=\"tooltip bottom show position-absolute\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner fit\">\r\n              <span innerHTML={this.message}></span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}
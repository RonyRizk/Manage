import{T as e,a as n}from"./p-d0086f2b.js";import{c as t}from"./p-a7b295ee.js";import{c as o}from"./p-0ee2eadf.js";class a extends e{async getExposedChannels(){try{const e=this.getToken();if(e!==null){const{data:t}=await n.post(`/Get_Exposed_Channels?Ticket=${e}`,{});if(t.ExceptionMsg!==""){throw new Error(t.ExceptionMsg)}const a=t.My_Result;o.channels=[...a];return t}}catch(e){console.log(e);throw new Error(e)}}async getExposedConnectedChannels(e){try{const t=this.getToken();if(t!==null){const{data:a}=await n.post(`/Get_Exposed_Connected_Channels?Ticket=${t}`,{property_id:e});if(a.ExceptionMsg!==""){throw new Error(a.ExceptionMsg)}o.connected_channels=[...a.My_Result]}}catch(e){console.log(e);throw new Error(e)}}async saveConnectedChannel(e=null,a){try{let r={};if(a){r={id:e,is_remove:a}}else{r={id:o.channel_id,title:o.channel_settings.hotel_title,is_active:o.is_active,channel:{id:o.selectedChannel.id,name:o.selectedChannel.name},property:{id:t.id,name:t.name},map:o.mappedChannels,is_remove:a}}const s=this.getToken();if(!s){throw new Error("Invalid Token")}const{data:c}=await n.post(`/Handle_Connected_Channel?Ticket=${s}`,r);return c}catch(e){console.error(e)}}}export{a as C};
//# sourceMappingURL=p-2fb590b7.js.map
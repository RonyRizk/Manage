{"version":3,"names":["bookingStatus","formatName","firstName","lastName","transformNewBooking","data","bookings","renderStatus","room","now","moment","toDate","to_date","fromDate","from_date","isSame","hour","isAfter","isBefore","status","code","rooms","forEach","push","ID","TO_DATE","FROM_DATE","NO_OF_DAYS","days","length","ARRIVAL","arrival","IS_EDITABLE","BALANCE","_a","financial","due_amount","STATUS","NAME","guest","first_name","last_name","PHONE","_b","mobile","ENTRY_DATE","RATE","total","RATE_PLAN","rateplan","name","SPLIT_BOOKING","RATE_PLAN_ID","id","IDENTIFIER","identifier","RATE_TYPE","roomtype","ADULTS_COUNT","occupancy","adult_nbr","CHILDREN_COUNT","children_nbr","PR_ID","unit","POOL","GUEST","ROOMS","BOOKING_NUMBER","booking_nbr","cancelation","guarantee","TOTAL_PRICE","COUNTRY","country_id","FROM_DATE_STR","format","TO_DATE_STR","adult_child_offering","selected_variation","ARRIVAL_TIME","description","origin","channel_booking_nbr","is_direct","NOTES","remark","SOURCE","source","tag","isBlockUnit","status_code","includes","EventsService","constructor","this","bookingService","BookingService","reallocateEvent","pool","destination_pr_id","token","JSON","parse","sessionStorage","getItem","console","log","axios","post","ExceptionMsg","Error","error","deleteEvent","My_Result","updateBlockedEvent","bookingEvent","releaseData","getReleaseHoursString","RELEASE_AFTER_HOURS","result","blockUnit","Object","assign","formatDate","pr_id","STAY_STATUS_CODE","OUT_OF_SERVICE","DESCRIPTION","OPTIONAL_REASON","date","split","join","iglBookingEventCss","IglBookingEvent","dayWidth","eventSpace","vertSpace","showInfoPopup","bubbleInfoTopSide","isStreatch","eventsService","resizeSide","isDragging","animationFrameId","handleMouseMoveBind","handleMouseMove","bind","handleMouseUpBind","handleMouseUp","handleClickOutsideBind","handleClickOutside","componentWillLoad","window","addEventListener","fetchAndAssignBookingData","getExposedBooking","dataForTransformation","filter","d","some","r","others","__rest","showEventInfo","componentDidLoad","isNewEvent","hideBubble","setTimeout","async","STATUS_CODE","renderAgain","disconnectedCallback","removeEventListener","cancelAnimationFrame","event","clickedElement","target","element","contains","hideBubbleInfoPopup","detail","currentInfoBubbleId","getBookingId","key","moveBookingToHandler","bookingId","moveToDay","toRoomId","fromRoomId","isTouchStart","moveDiffereneX","moveDiffereneY","requestAnimationFrame","resetBookingToInitialPosition","catch","isShrinking","setModalDescription","hideConfirmButton","showDialog","emit","title","checkIfSlotOccupied","showRoomNightsDialog","bookingNumber","toast","position","message","type","findRoomType","roomId","roomType","roomsInfo","physicalrooms","locales","entries","Lcz_YouWillLoseFutureUpdates","initialRT","targetRT","Lcz_AreYouSureWantToMoveAnotherUnit","Label","Lcz_SameRatesWillBeKept","Lcz_CannotChangeCHBookings","Lcz_BalanceWillBeCalculated","style","left","initialLeft","width","initialWidth","finalWidth","top","dragInitPos","handleRevertBooking","fromTime","toTime","isOccupied","allBookingEvents","eventFromTime","add","eventToTime","isSameOrAfter","renderElement","getUniqueId","Date","getTime","isSplitBooking","isHighlightEventType","getEventType","getBookingStatus","getBookedBy","getBookedRoomId","getEventStartingDate","getEventEndingDate","event_type","getEventLegend","legendData","statusId","orderRide","color","getLegendOfStatus","aStatusId","getNoteNode","INTERNAL_NOTE","getBalanceNode","setStayDays","aStayDays","getStayDays","getPosition","startingDate","startingCellClass","getDate","getMonth","getFullYear","bodyContainer","document","querySelector","startingCell","pos","height","getBoundingClientRect","bodyContainerRect","boundingRect","getNumber","aData","parseFloat","startDragging","side","preventDefault","stopPropagation","stopImmediatePropagation","initialX","clientX","touches","initialY","clientY","elementRect","offsetX","offsetY","x","y","dragEndPos","dragOverEventData","offsetWidth","offsetLeft","currentX","distanceX","currentY","distanceY","newWidth","Math","min","max","newLeft","abs","nbOfDays","numberOfDays","round","initialStayDays","isNaN","replace","updateData","updateEventData","showInfo","midPoint","hideBubbleInfo","render","legend","noteNode","balanceNode","h","Host","class","clsName","backgroundColor","onTouchStart","onMouseDown","Fragment","is_vacation_rental","countryNodeList","currency","bubbleInfoTop","iglBookingEventHoverCss","IglBookingEventHover","todayTimeStamp","setHours","eventService","hideButtons","selectedRt","find","shouldHideUnassignUnit","handleKeyDown","getTotalOccupants","getPhoneNumber","getCountry","findCountry","getPhoneCode","phone_prefix","renderPhone","getGuestNote","getInternalNote","getTotalPrice","getCheckInDate","getCheckOutDate","getArrivalTime","getRatePlan","getEntryDate","getReleaseAfterHours","isNewBooking","isCheckedIn","isCheckedOut","isBlockedDateEvent","getRoomId","getCategoryByRoomId","roomCategory","hasSplitBooking","hasOwnProperty","splitBookingEvents","canCheckIn","fromTimeStamp","dt","toTimeStamp","canCheckOut","handleBlockDateUpdate","opt","handleEditBooking","TITLE","Lcz_EditBookingFor","handleBookingOption","getStringDateFormat","handleAddRoom","from_date_str","to_date_str","eventData","ADD_ROOM_TO_BOOKING","defaultDateRange","fromDateStr","toDateStr","dateDifference","editabled","handleCustomerCheckIn","handleCustomerCheckOut","handleDeleteEvent","deleteButton","handleUpdateBlockedDates","isLoading","handleConvertBlockedDateToBooking","getRoomInfo","roomIdToFind","selectedRoom","physicalRoom","CATEGORY","ROOM_NAME","ROOMS_INFO","renderTitle","eventType","roomInfo","Lcz_AddingUnitToBooking","Lcz_Adding","Lcz_NewBookingFor","roomData","showBookingPopup","getInfoElement","src","Icon","alt","getCurrencySymbol","Lcz_In","Lcz_Out","Lcz_ArrivalTime","Lcz_Occupancy","Lcz_Phone","Lcz_RatePlan","Lcz_Note","Lcz_InternalRemark","role","onClick","_","disabled","xmlns","fill","stroke","viewBox","Lcz_Edit","Lcz_AddRoom","Lcz_Unassign","getNewBookingOptions","shouldDisplayButtons","rateplans","rate","is_active","Lcz_CreateNewBooking","Lcz_AssignUnitToExistingBooking","Lcz_NoRatePlanDefined","Lcz_Blockdates","getBlockedView","isEventHover","entryHour","ENTRY_HOUR","entryMinute","ENTRY_MINUTE","defaultData","entryDate","onDataUpdateEvent","Lcz_Update","Lcz_ConvertToBooking","Lcz_Delete"],"sources":["src/utils/booking.ts","src/utils/utils.ts","src/services/events.service.ts","src/components/igloo-calendar/igl-booking-event/igl-booking-event.css?tag=igl-booking-event&encapsulation=scoped","src/components/igloo-calendar/igl-booking-event/igl-booking-event.tsx","src/components/igloo-calendar/igl-booking-event-hover/igl-booking-event-hover.css?tag=igl-booking-event-hover&encapsulation=scoped","src/components/igloo-calendar/igl-booking-event-hover/igl-booking-event-hover.tsx"],"sourcesContent":["import moment from 'moment';\r\nimport { PhysicalRoomType, MonthType, CellType, STATUS, RoomBookingDetails, RoomBlockDetails } from '../models/IBooking';\r\nimport { dateDifference, isBlockUnit } from './utils';\r\nimport axios from 'axios';\r\nimport locales from '@/stores/locales.store';\r\n\r\nexport async function getMyBookings(months: MonthType[]): Promise<any[]> {\r\n  const myBookings: any[] = [];\r\n  const stayStatus = await getStayStatus();\r\n  for (const month of months) {\r\n    for (const day of month.days) {\r\n      for (const room of day.room_types) {\r\n        assignBooking(room.physicalrooms, myBookings, stayStatus);\r\n      }\r\n    }\r\n  }\r\n\r\n  return myBookings;\r\n}\r\n\r\nfunction assignBooking(physicalRoom: PhysicalRoomType[], myBookings: any[], stayStatus: { code: string; value: string }[]): void {\r\n  for (const room of physicalRoom) {\r\n    for (const key in room.calendar_cell) {\r\n      if (room.calendar_cell[key].Is_Available === false) {\r\n        addOrUpdateBooking(room.calendar_cell[key], myBookings, stayStatus);\r\n      }\r\n    }\r\n  }\r\n}\r\nconst status: Record<string, STATUS> = {\r\n  '004': 'BLOCKED',\r\n  '003': 'BLOCKED-WITH-DATES',\r\n  '002': 'BLOCKED',\r\n};\r\nexport const bookingStatus: Record<string, STATUS> = {\r\n  '000': 'IN-HOUSE',\r\n  '001': 'PENDING-CONFIRMATION',\r\n  '002': 'CONFIRMED',\r\n  '003': 'CHECKED-OUT',\r\n};\r\n\r\nexport function formatName(firstName: string | null, lastName: string | null) {\r\n  if (firstName === null && lastName === null) return '';\r\n  if (lastName !== null) {\r\n    return `${firstName ?? ''} , ${lastName ?? ''}`;\r\n  }\r\n  return firstName;\r\n}\r\nasync function getStayStatus() {\r\n  try {\r\n    const token = JSON.parse(sessionStorage.getItem('token'));\r\n    if (token) {\r\n      const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_Multi?Ticket=${token}`, {\r\n        TBL_NAMES: ['_STAY_STATUS'],\r\n      });\r\n      return data.My_Result.map(d => ({\r\n        code: d.CODE_NAME,\r\n        value: d.CODE_VALUE_EN,\r\n      }));\r\n    } else {\r\n      throw new Error('Invalid Token');\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\nfunction renderBlock003Date(date, hour, minute) {\r\n  const dt = new Date(date);\r\n  dt.setHours(hour);\r\n  dt.setMinutes(minute);\r\n  return `${locales.entries.Lcz_BlockedTill} ${moment(dt).format('MMM DD, HH:mm')}`;\r\n}\r\nfunction getDefaultData(cell: CellType, stayStatus: { code: string; value: string }[]): any {\r\n  if (isBlockUnit(cell.STAY_STATUS_CODE)) {\r\n    return {\r\n      ID: cell.POOL,\r\n      NOTES: '',\r\n      BALANCE: '',\r\n      NAME:\r\n        cell.My_Block_Info.NOTES !== ''\r\n          ? cell.My_Block_Info.NOTES\r\n          : cell.STAY_STATUS_CODE === '003'\r\n          ? renderBlock003Date(cell.My_Block_Info.BLOCKED_TILL_DATE, cell.My_Block_Info.BLOCKED_TILL_HOUR, cell.My_Block_Info.BLOCKED_TILL_MINUTE)\r\n          : stayStatus.find(st => st.code === cell.STAY_STATUS_CODE).value || '',\r\n      RELEASE_AFTER_HOURS: cell.My_Block_Info.DESCRIPTION,\r\n      PR_ID: cell.My_Block_Info.pr_id,\r\n      ENTRY_DATE: cell.My_Block_Info.BLOCKED_TILL_DATE,\r\n      ENTRY_HOUR: cell.My_Block_Info.BLOCKED_TILL_HOUR,\r\n      ENTRY_MINUTE: cell.My_Block_Info.BLOCKED_TILL_MINUTE,\r\n      OPTIONAL_REASON: cell.My_Block_Info.NOTES,\r\n      FROM_DATE: cell.DATE,\r\n      TO_DATE: cell.DATE,\r\n      NO_OF_DAYS: 1,\r\n      STATUS: status[cell.STAY_STATUS_CODE],\r\n      POOL: cell.POOL,\r\n      STATUS_CODE: cell.STAY_STATUS_CODE,\r\n      OUT_OF_SERVICE: cell.STAY_STATUS_CODE === '004',\r\n      FROM_DATE_STR: cell.My_Block_Info.format.from_date,\r\n      TO_DATE_STR: cell.My_Block_Info.format.to_date,\r\n    };\r\n  }\r\n  //console.log('booking', cell);\r\n  return {\r\n    ID: cell.POOL,\r\n    TO_DATE: cell.DATE,\r\n    FROM_DATE: cell.DATE,\r\n    NO_OF_DAYS: 1,\r\n    STATUS: bookingStatus[cell.booking?.status.code],\r\n    NAME: formatName(cell.room.guest.first_name, cell.room.guest.last_name),\r\n    IDENTIFIER: cell.room.identifier,\r\n    PR_ID: cell.pr_id,\r\n    POOL: cell.POOL,\r\n    BOOKING_NUMBER: cell.booking.booking_nbr,\r\n    NOTES: cell.booking.remark,\r\n    is_direct: cell.booking.is_direct,\r\n    BALANCE: cell.booking.financial?.due_amount,\r\n    ///from here\r\n    //ENTRY_DATE: cell.booking.booked_on.date,\r\n    // IS_EDITABLE: cell.booking.is_editable,\r\n    // ARRIVAL: cell.booking.arrival,\r\n    // PHONE: cell.booking.guest.mobile ?? '',\r\n    // RATE: cell.room.total,\r\n    // RATE_PLAN: cell.room.rateplan.name,\r\n    // SPLIT_BOOKING: false,\r\n    // RATE_PLAN_ID: cell.room.rateplan.id,\r\n    // RATE_TYPE: 1,\r\n    // ADULTS_COUNT: cell.room.occupancy.adult_nbr,\r\n    // CHILDREN_COUNT: cell.room.occupancy.children_nbr,\r\n    // channel_booking_nbr: cell.booking.channel_booking_nbr,\r\n    // origin: cell.booking.origin,\r\n    // GUEST: cell.booking.guest,\r\n    // ROOMS: cell.booking.rooms,\r\n    // cancelation: cell.room.rateplan.cancelation,\r\n    // guarantee: cell.room.rateplan.guarantee,\r\n    // TOTAL_PRICE: cell.room.total,\r\n    // COUNTRY: cell.booking.guest.country_id,\r\n    // FROM_DATE_STR: cell.booking.format.from_date,\r\n    // TO_DATE_STR: cell.booking.format.to_date,\r\n    // adult_child_offering: cell.room.rateplan.selected_variation.adult_child_offering,\r\n    // SOURCE: { code: cell.booking.source.code, description: cell.booking.source.description, tag: cell.booking.source.tag },\r\n  };\r\n}\r\n\r\nfunction updateBookingWithStayData(data: any, cell: CellType): any {\r\n  data.NO_OF_DAYS = dateDifference(data.FROM_DATE, cell.DATE);\r\n  data.TO_DATE = cell.DATE;\r\n  if (cell.booking) {\r\n    const { arrival } = cell.booking;\r\n    Object.assign(data, {\r\n      ARRIVAL_TIME: arrival.description,\r\n    });\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction addOrUpdateBooking(cell: CellType, myBookings: any[], stayStatus: { code: string; value: string }[]): void {\r\n  const index = myBookings.findIndex(booking => booking.POOL === cell.POOL);\r\n\r\n  if (index === -1) {\r\n    const newData = getDefaultData(cell, stayStatus);\r\n    myBookings.push(newData);\r\n  } else {\r\n    const updatedData = updateBookingWithStayData(myBookings[index], cell);\r\n    myBookings[index] = updatedData;\r\n  }\r\n}\r\nexport function transformNewBooking(data: any): RoomBookingDetails[] {\r\n  let bookings: RoomBookingDetails[] = [];\r\n  //console.log(data);\r\n  const renderStatus = room => {\r\n    const now = moment();\r\n    const toDate = moment(room.to_date, 'YYYY-MM-DD');\r\n    const fromDate = moment(room.from_date, 'YYYY-MM-DD');\r\n\r\n    if (fromDate.isSame(now, 'day') && now.hour() >= 12) {\r\n      return bookingStatus['000'];\r\n    } else if (now.isAfter(fromDate, 'day') && now.isBefore(toDate, 'day')) {\r\n      return bookingStatus['000'];\r\n    } else if (toDate.isSame(now, 'day') && now.hour() < 12) {\r\n      return bookingStatus['000'];\r\n    } else if ((toDate.isSame(now, 'day') && now.hour() >= 12) || toDate.isBefore(now, 'day')) {\r\n      return bookingStatus['003'];\r\n    } else {\r\n      return bookingStatus[data?.status.code || '001'];\r\n    }\r\n    // if (toDate.isBefore(now, 'day') || (toDate.isSame(now, 'day') && now.hour() >= 12)) {\r\n    //   return bookingStatus['003'];\r\n    // } else {\r\n    //   return bookingStatus[fromDate.isSameOrBefore(now, 'day') ? '000' : data?.status.code || '001'];\r\n    // }\r\n  };\r\n\r\n  data.rooms.forEach(room => {\r\n    bookings.push({\r\n      ID: room['assigned_units_pool'],\r\n      TO_DATE: room.to_date,\r\n      FROM_DATE: room.from_date,\r\n      NO_OF_DAYS: room.days.length,\r\n      ARRIVAL: data.arrival,\r\n      IS_EDITABLE: true,\r\n      BALANCE: data.financial?.due_amount,\r\n      STATUS: renderStatus(room),\r\n      NAME: formatName(room.guest.first_name, room.guest.last_name),\r\n      PHONE: data.guest.mobile ?? '',\r\n      ENTRY_DATE: '12-12-2023',\r\n      RATE: room.total,\r\n      RATE_PLAN: room.rateplan.name,\r\n      SPLIT_BOOKING: false,\r\n      RATE_PLAN_ID: room.rateplan.id,\r\n      IDENTIFIER: room.identifier,\r\n      RATE_TYPE: room.roomtype.id,\r\n      ADULTS_COUNT: room.occupancy.adult_nbr,\r\n      CHILDREN_COUNT: room.occupancy.children_nbr,\r\n      PR_ID: +room.unit.id,\r\n      POOL: room['assigned_units_pool'],\r\n      GUEST: data.guest,\r\n      ROOMS: data.rooms,\r\n      BOOKING_NUMBER: data.booking_nbr,\r\n      cancelation: room.rateplan.cancelation,\r\n      guarantee: room.rateplan.guarantee,\r\n      TOTAL_PRICE: room.total,\r\n      COUNTRY: data.guest.country_id,\r\n      FROM_DATE_STR: data.format.from_date,\r\n      TO_DATE_STR: data.format.to_date,\r\n      adult_child_offering: room.rateplan.selected_variation.adult_child_offering,\r\n      ARRIVAL_TIME: data.arrival.description,\r\n      origin: data.origin,\r\n      channel_booking_nbr: data.channel_booking_nbr,\r\n      is_direct: data.is_direct,\r\n      NOTES: data.remark,\r\n      SOURCE: { code: data.source.code, description: data.source.description, tag: data.source.tag },\r\n    });\r\n  });\r\n\r\n  return bookings;\r\n}\r\nexport async function transformNewBLockedRooms(data: any): Promise<RoomBlockDetails> {\r\n  const stayStatus = await getStayStatus();\r\n  return {\r\n    ID: data.POOL,\r\n    NOTES: '',\r\n    BALANCE: '',\r\n    NAME:\r\n      data.NOTES !== ''\r\n        ? data.NOTES\r\n        : data.STAY_STATUS_CODE === '003'\r\n        ? renderBlock003Date(data.BLOCKED_TILL_DATE, data.BLOCKED_TILL_HOUR, data.BLOCKED_TILL_MINUTE)\r\n        : stayStatus.find(st => st.code === data.STAY_STATUS_CODE).value || '',\r\n    RELEASE_AFTER_HOURS: data.DESCRIPTION,\r\n    PR_ID: data.pr_id,\r\n    ENTRY_DATE: data.BLOCKED_TILL_DATE,\r\n    ENTRY_HOUR: data.BLOCKED_TILL_HOUR,\r\n    ENTRY_MINUTE: data.BLOCKED_TILL_MINUTE,\r\n    OPTIONAL_REASON: data.NOTES,\r\n    FROM_DATE: data.from_date,\r\n    TO_DATE: data.to_date,\r\n    NO_OF_DAYS: calculateDaysBetweenDates(data.from_date, data.to_date),\r\n    STATUS: status[data.STAY_STATUS_CODE],\r\n    POOL: data.POOL,\r\n    STATUS_CODE: data.STAY_STATUS_CODE,\r\n    OUT_OF_SERVICE: data.STAY_STATUS_CODE === '004',\r\n    FROM_DATE_STR: data.format.from_date,\r\n    TO_DATE_STR: data.format.to_date,\r\n  };\r\n}\r\nexport function calculateDaysBetweenDates(from_date: string, to_date: string) {\r\n  const startDate = moment(from_date, 'YYYY-MM-DD');\r\n  const endDate = moment(to_date, 'YYYY-MM-DD');\r\n  const daysDiff = endDate.diff(startDate, 'days');\r\n  return daysDiff;\r\n}\r\n","import moment from 'moment';\r\nimport IBooking, { ICountry, PhysicalRoomType } from '../models/IBooking';\r\n\r\nexport function convertDateToCustomFormat(dayWithWeekday: string, monthWithYear: string): string {\r\n  const dateStr = `${dayWithWeekday.split(' ')[1]} ${monthWithYear}`;\r\n  const date = moment(dateStr, 'DD MMM YYYY');\r\n  if (!date.isValid()) {\r\n    throw new Error('Invalid Date');\r\n  }\r\n  return date.format('D_M_YYYY');\r\n}\r\n\r\nexport function convertDateToTime(dayWithWeekday: string, monthWithYear: string): number {\r\n  const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\r\n\r\n  const [_, day] = dayWithWeekday.split(' ');\r\n  const [month, year] = monthWithYear.split(' ');\r\n\r\n  const monthIndex = months.indexOf(month);\r\n  if (monthIndex !== -1) {\r\n    let date = new Date(`${year}-${monthIndex + 1}-${day}`);\r\n    date.setHours(0, 0, 0, 0);\r\n    return date.getTime();\r\n  } else {\r\n    throw new Error('Invalid Month');\r\n  }\r\n}\r\nexport function dateDifference(FROM_DATE: string, TO_DATE: string): number {\r\n  const startDate = new Date(FROM_DATE);\r\n  const endDate = new Date(TO_DATE);\r\n  return Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));\r\n}\r\nexport const getBrowserLanguage = (): string => {\r\n  const defaultLang = 'en';\r\n  const lang = navigator.language || defaultLang;\r\n  return lang.toUpperCase().split('-')[0];\r\n};\r\n\r\nexport const transformBooking = (physicalRoom: PhysicalRoomType[]): IBooking[] => {\r\n  const myBookings: IBooking[] = [];\r\n  physicalRoom.forEach(room => {\r\n    Object.keys(room.calendar_cell).forEach(key => {\r\n      if (room.calendar_cell[key].Is_Available === false) {\r\n        if (myBookings.find(b => b.ID === room.id.toString())) {\r\n        } else {\r\n          //myBookings.push({})\r\n        }\r\n      }\r\n    });\r\n  });\r\n  return myBookings;\r\n};\r\n\r\nexport function dateToFormattedString(date: Date): string {\r\n  const year = date.getFullYear();\r\n  const month = (date.getMonth() + 1).toString().padStart(2, '0'); // +1 because months are 0-based in JS\r\n  const day = date.getDate().toString().padStart(2, '0');\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nexport function formatLegendColors(legendData) {\r\n  let formattedLegendData: any = {};\r\n\r\n  const statusId = {\r\n    'IN-HOUSE': { id: 1, clsName: 'IN_HOUSE' },\r\n    'CONFIRMED': { id: 2, clsName: 'CONFIRMED' },\r\n    'PENDING-CONFIRMATION': { id: 3, clsName: 'PENDING_CONFIRMATION' },\r\n    'SPLIT-UNIT': { id: 4, clsName: 'SPLIT_UNIT' },\r\n    'CHECKED-IN': { id: 5, clsName: 'CHECKED_IN' },\r\n    'CHECKED-OUT': { id: 5, clsName: 'CHECKED_OUT' },\r\n    'BLOCKED': { id: 6, clsName: 'BLOCKED' },\r\n    'BLOCKED-WITH-DATES': { id: 7, clsName: 'BLOCKED_WITH_DATES' },\r\n    'NOTES': { id: 8, clsName: 'NOTES' },\r\n    'OUTSTANDING-BALANCE': { id: 9, clsName: 'OUTSTANDING_BALANCE' },\r\n    'TEMP-EVENT': { id: 10, clsName: 'PENDING_CONFIRMATION' },\r\n  };\r\n  legendData.forEach(legend => {\r\n    formattedLegendData[legend.id] = legend;\r\n    formattedLegendData.statusId = statusId; // NOTE: This will overwrite the 'statusId' property with every iteration.\r\n  });\r\n\r\n  return formattedLegendData;\r\n}\r\nexport function isBlockUnit(status_code: any) {\r\n  return ['003', '002', '004'].includes(status_code);\r\n}\r\nexport function getCurrencySymbol(currencyCode) {\r\n  const formatter = new Intl.NumberFormat(undefined, {\r\n    style: 'currency',\r\n    currency: currencyCode,\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  });\r\n  return formatter.format(0).replace(/[0-9]/g, '').trim();\r\n}\r\nexport const findCountry = (id: number, countries: ICountry[]): ICountry => countries.find(country => country.id === id);\r\n\r\nexport function getReleaseHoursString(releaseDate: number) {\r\n  const dt = new Date();\r\n  const releaseAfterHours = releaseDate;\r\n\r\n  dt.setHours(dt.getHours() + releaseAfterHours, dt.getMinutes(), 0, 0);\r\n\r\n  return {\r\n    BLOCKED_TILL_DATE: dateToFormattedString(dt),\r\n    BLOCKED_TILL_HOUR: dt.getHours().toString(),\r\n    BLOCKED_TILL_MINUTE: dt.getMinutes().toString(),\r\n  };\r\n}\r\n\r\nexport function computeEndDate(startDate: string, numberOfDays: number): string {\r\n  const dateObj = moment(startDate, 'D_M_YYYY');\r\n  dateObj.add(numberOfDays, 'days');\r\n  return dateObj.format('YYYY-MM-DD');\r\n}\r\n\r\nexport function convertDMYToISO(date: string) {\r\n  const dateObj = moment(date, 'D_M_YYYY');\r\n  return dateObj.format('YYYY-MM-DD');\r\n}\r\nexport function addTwoMonthToDate(date: Date) {\r\n  return moment(date).add(2, 'months').format('YYYY-MM-DD');\r\n}\r\nexport function formatDate(dateString, option = 'DD MMM YYYY') {\r\n  const formattedDate = moment(dateString, option).format('ddd, DD MMM YYYY');\r\n  return formattedDate;\r\n}\r\nexport function getNextDay(date: Date) {\r\n  return moment(date).add(1, 'days').format('YYYY-MM-DD');\r\n}\r\n\r\nexport function convertDatePrice(date: string) {\r\n  return moment(date, 'YYYY-MM-DD').format('DD/MM ddd');\r\n}\r\nexport function getDaysArray(date1: string, date2: string) {\r\n  let dates = [];\r\n  let start = moment.min(moment(date1).add(1, 'days'), moment(date2));\r\n  let end = moment.max(moment(date1), moment(date2));\r\n  while (start < end) {\r\n    dates.push(start.format('YYYY-MM-DD'));\r\n    start = start.clone().add(1, 'days');\r\n  }\r\n\r\n  return dates;\r\n}\r\n","import axios from 'axios';\r\nimport { BookingService } from './booking.service';\r\nimport { getReleaseHoursString } from '../utils/utils';\r\n\r\nexport class EventsService {\r\n  private readonly bookingService: BookingService = new BookingService();\r\n\r\n  async reallocateEvent(pool: string, destination_pr_id: number, from_date: string, to_date: string) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        console.log(pool, destination_pr_id, from_date, to_date);\r\n        const { data } = await axios.post(`/ReAllocate_Exposed_Room?Ticket=${token}`, { pool, destination_pr_id, from_date, to_date });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        console.log(data);\r\n        return data;\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async deleteEvent(POOL: string) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/UnBlock_Exposed_Unit?Ticket=${token}`, {\r\n          POOL,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async updateBlockedEvent(bookingEvent: any) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const releaseData = getReleaseHoursString(+bookingEvent.RELEASE_AFTER_HOURS);\r\n        await this.deleteEvent(bookingEvent.POOL);\r\n        const result = await this.bookingService.blockUnit({\r\n          from_date: this.formatDate(bookingEvent.FROM_DATE),\r\n          to_date: this.formatDate(bookingEvent.TO_DATE),\r\n          pr_id: bookingEvent.PR_ID,\r\n          STAY_STATUS_CODE: bookingEvent.OUT_OF_SERVICE ? '004' : bookingEvent.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n          DESCRIPTION: bookingEvent.RELEASE_AFTER_HOURS || '',\r\n          NOTES: bookingEvent.OPTIONAL_REASON || '',\r\n          ...releaseData,\r\n        });\r\n        return result;\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  private formatDate(date: string) {\r\n    return date.split('/').join('-');\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  position: absolute;\r\n}\r\n\r\n.bookingEventBase {\r\n  position: absolute;\r\n  background-color: rgb(49, 190, 241);\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: skewX(-22deg);\r\n}\r\n\r\n.bookingEventHiddenBase {\r\n  position: absolute;\r\n  top: 0;\r\n  left: -4px;\r\n  width: calc(100% + 8);\r\n}\r\n\r\n.bookingEventDragHandle {\r\n  position: absolute;\r\n  top: 0;\r\n  width: 15px;\r\n  height: 100%;\r\n  opacity: 0.1;\r\n  background-color: rgba(0, 0, 0, 0.15);\r\n  transform: skewX(-22deg);\r\n  /* display: none; */\r\n  cursor: pointer;\r\n}\r\n\r\n.splitBooking {\r\n  border-right: 2px solid #000000;\r\n}\r\n\r\n:host:hover .bookingEventDragHandle {\r\n  display: block;\r\n  opacity: 1;\r\n}\r\n\r\n:host.newEvent:hover .bookingEventDragHandle {\r\n  display: none;\r\n  opacity: 1;\r\n}\r\n\r\n.leftSide {\r\n  left: 0;\r\n}\r\n\r\n.rightSide {\r\n  right: 0;\r\n}\r\n\r\n.bookingEventTitle {\r\n  color: #fff;\r\n  font-size: 0.8em;\r\n  position: relative;\r\n  max-width: calc(100% - 10px);\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  top: 2px;\r\n  left: 5px;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n  -webkit-user-drag: none;\r\n}\r\n\r\n.legend_circle {\r\n  border-radius: 100%;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin: 3px 3px 3px 2px;\r\n  border: 1px solid #fff;\r\n}\r\n\r\n.noteIcon {\r\n  position: absolute;\r\n  bottom: -8px;\r\n  left: 2px;\r\n}\r\n\r\n.balanceIcon {\r\n  position: absolute;\r\n  top: -8px;\r\n  right: 2px;\r\n}\r\n","import { Component, Element, Event, EventEmitter, Fragment, Host, Listen, Prop, State, h } from '@stencil/core';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { transformNewBooking } from '@/utils/booking';\r\nimport { isBlockUnit } from '@/utils/utils';\r\nimport { IReallocationPayload, IRoomNightsData } from '@/models/property-types';\r\nimport moment from 'moment';\r\nimport { IToast } from '@components/ir-toast/toast';\r\nimport { EventsService } from '@/services/events.service';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'igl-booking-event',\r\n  styleUrl: 'igl-booking-event.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingEvent {\r\n  @Element() private element: HTMLElement;\r\n\r\n  @Prop() currency;\r\n  @Prop() is_vacation_rental: boolean = false;\r\n  @Prop() language: string;\r\n  @Prop({ mutable: true }) bookingEvent: { [key: string]: any };\r\n  @Prop() allBookingEvents: { [key: string]: any } = [];\r\n  @Prop() countryNodeList;\r\n\r\n  @Event({ bubbles: true, composed: true }) hideBubbleInfo: EventEmitter;\r\n  @Event() updateEventData: EventEmitter;\r\n  @Event() dragOverEventData: EventEmitter;\r\n  @Event() showRoomNightsDialog: EventEmitter<IRoomNightsData>;\r\n  @Event() showDialog: EventEmitter<IReallocationPayload>;\r\n  @Event() resetStreachedBooking: EventEmitter<string>;\r\n  @Event() toast: EventEmitter<IToast>;\r\n\r\n  @State() renderElement: boolean = false;\r\n  @State() position: { [key: string]: any };\r\n  @State() isShrinking: boolean | null = null;\r\n\r\n  dayWidth: number = 0;\r\n  eventSpace: number = 8;\r\n\r\n  vertSpace: number = 10;\r\n\r\n  /* show bubble */\r\n  private showInfoPopup: boolean = false;\r\n  private bubbleInfoTopSide: boolean = false;\r\n  private isStreatch = false;\r\n  /*Services */\r\n  private eventsService = new EventsService();\r\n  private bookingService = new BookingService();\r\n  /* Resize props */\r\n  resizeSide: string = '';\r\n  isDragging: boolean = false;\r\n  initialX: number;\r\n  initialY: number;\r\n  currentX: number;\r\n  currentY: number;\r\n  initialWidth: number;\r\n  initialLeft: number;\r\n  finalWidth: number;\r\n  dragInitPos: { [key: string]: any };\r\n  dragEndPos: { [key: string]: any };\r\n  elementRect: { [key: string]: any };\r\n  isTouchStart: boolean;\r\n  moveDiffereneX: number;\r\n  moveDiffereneY: number;\r\n  private animationFrameId: number | null = null;\r\n\r\n  handleMouseMoveBind = this.handleMouseMove.bind(this);\r\n  handleMouseUpBind = this.handleMouseUp.bind(this);\r\n  handleClickOutsideBind = this.handleClickOutside.bind(this);\r\n\r\n  componentWillLoad() {\r\n    window.addEventListener('click', this.handleClickOutsideBind);\r\n  }\r\n\r\n  async fetchAndAssignBookingData() {\r\n    try {\r\n      console.log('clicked on book#', this.bookingEvent.BOOKING_NUMBER);\r\n      if (['IN-HOUSE', 'CONFIRMED', 'PENDING-CONFIRMATION', 'CHECKED-OUT'].includes(this.bookingEvent.STATUS)) {\r\n        const data = await this.bookingService.getExposedBooking(this.bookingEvent.BOOKING_NUMBER, 'en');\r\n        let dataForTransformation = data.rooms.filter(d => d['assigned_units_pool'] === this.bookingEvent.ID);\r\n        data.rooms = dataForTransformation;\r\n        if (data.rooms.length === 0) {\r\n          throw new Error(`\"booking#${this.bookingEvent.BOOKING_NUMBER} have empty array\"`);\r\n        } else {\r\n          if (data.rooms.some(r => r['assigned_units_pool'] === null)) {\r\n            throw new Error(`\"booking#${this.bookingEvent.BOOKING_NUMBER} have empty pool\"`);\r\n          }\r\n        }\r\n        const { ID, TO_DATE, FROM_DATE, NO_OF_DAYS, STATUS, NAME, IDENTIFIER, PR_ID, POOL, BOOKING_NUMBER, NOTES, is_direct, BALANCE, ...others } = transformNewBooking(data)[0];\r\n\r\n        this.bookingEvent = { ...this.bookingEvent, ...others };\r\n        this.showEventInfo(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    if (this.isNewEvent()) {\r\n      if (!this.bookingEvent.hideBubble) {\r\n        /* auto matically open the popup, calling the method shows bubble either top or bottom based on available space. */\r\n        setTimeout(async () => {\r\n          if (['003', '002', '004'].includes(this.bookingEvent.STATUS_CODE)) {\r\n            this.showEventInfo(true);\r\n          } else if (['IN-HOUSE', 'CONFIRMED', 'PENDING-CONFIRMATION', 'CHECKED-OUT'].includes(this.bookingEvent.STATUS)) {\r\n            await this.fetchAndAssignBookingData();\r\n          } else {\r\n            this.showEventInfo(true);\r\n          }\r\n          this.renderAgain();\r\n        }, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.removeEventListener('click', this.handleClickOutsideBind);\r\n    if (this.animationFrameId) {\r\n      cancelAnimationFrame(this.animationFrameId);\r\n    }\r\n  }\r\n\r\n  @Listen('click', { target: 'window' })\r\n  handleClickOutside(event: Event) {\r\n    const clickedElement = event.target as HTMLElement;\r\n    // Check if the clicked element is not within the target div\r\n    if (!this.element.contains(clickedElement)) {\r\n      // The click occurred outside the target div\r\n      this.showEventInfo(false);\r\n    }\r\n  }\r\n\r\n  @Listen('hideBubbleInfo', { target: 'window' })\r\n  hideBubbleInfoPopup(event: CustomEvent) {\r\n    if (event.detail.currentInfoBubbleId != this.getBookingId() || (event.detail.key === 'hidebubble' && event.detail.currentInfoBubbleId === this.getBookingId())) {\r\n      this.showInfoPopup = false;\r\n      this.renderAgain();\r\n    }\r\n  }\r\n\r\n  @Listen('moveBookingTo', { target: 'window' })\r\n  async moveBookingToHandler(event: CustomEvent) {\r\n    try {\r\n      if (event.detail.bookingId !== this.getBookingId()) {\r\n        this.showEventInfo(false);\r\n        return;\r\n      }\r\n\r\n      if (event.detail.moveToDay === 'revert' || event.detail.toRoomId === 'revert') {\r\n        event.detail.moveToDay = this.bookingEvent.FROM_DATE;\r\n        event.detail.toRoomId = event.detail.fromRoomId;\r\n        if (this.isTouchStart && this.moveDiffereneX <= 5 && this.moveDiffereneY <= 5 && !this.isStreatch) {\r\n          if (isBlockUnit(this.bookingEvent.STATUS_CODE)) {\r\n            this.showEventInfo(true);\r\n          } else if (['IN-HOUSE', 'CONFIRMED', 'PENDING-CONFIRMATION', 'CHECKED-OUT'].includes(this.bookingEvent.STATUS)) {\r\n            await this.fetchAndAssignBookingData();\r\n          }\r\n        } else {\r\n          this.animationFrameId = requestAnimationFrame(() => {\r\n            this.resetBookingToInitialPosition();\r\n          });\r\n        }\r\n      } else {\r\n        if (this.isTouchStart && this.moveDiffereneX <= 5 && this.moveDiffereneY <= 5 && !this.isStreatch) {\r\n          if (isBlockUnit(this.bookingEvent.STATUS_CODE)) {\r\n            this.showEventInfo(true);\r\n          } else if (['IN-HOUSE', 'CONFIRMED', 'PENDING-CONFIRMATION', 'CHECKED-OUT'].includes(this.bookingEvent.STATUS)) {\r\n            await this.fetchAndAssignBookingData();\r\n          }\r\n        } else {\r\n          const { pool, to_date, from_date, toRoomId } = event.detail as any;\r\n          if (pool) {\r\n            if (isBlockUnit(this.bookingEvent.STATUS_CODE)) {\r\n              await this.eventsService.reallocateEvent(pool, toRoomId, from_date, to_date).catch(() => {\r\n                this.resetBookingToInitialPosition();\r\n              });\r\n            } else {\r\n              if (this.isShrinking || !this.isStreatch) {\r\n                const { description, status } = this.setModalDescription(toRoomId, from_date, to_date);\r\n                let hideConfirmButton = false;\r\n                if (status === '400') {\r\n                  hideConfirmButton = true;\r\n                }\r\n                this.showDialog.emit({ ...event.detail, description, title: '', hideConfirmButton });\r\n              } else {\r\n                if (this.checkIfSlotOccupied(toRoomId, from_date, to_date)) {\r\n                  this.animationFrameId = requestAnimationFrame(() => {\r\n                    this.resetBookingToInitialPosition();\r\n                  });\r\n                  throw new Error('Overlapping Dates');\r\n                } else {\r\n                  this.showRoomNightsDialog.emit({ bookingNumber: this.bookingEvent.BOOKING_NUMBER, identifier: this.bookingEvent.IDENTIFIER, to_date, pool, from_date });\r\n                }\r\n              }\r\n            }\r\n            this.isShrinking = null;\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.toast.emit({\r\n        position: 'top-right',\r\n        title: error.message,\r\n        description: '',\r\n        type: 'error',\r\n      });\r\n      console.log('something went wrong');\r\n    }\r\n  }\r\n  private setModalDescription(toRoomId: number, from_date, to_date): { status: '200' | '400'; description: string } {\r\n    const findRoomType = (roomId: number) => {\r\n      let roomType = this.bookingEvent.roomsInfo.filter(room => room.physicalrooms.some(r => r.id === +roomId));\r\n      if (roomType.length) {\r\n        return roomType[0].id;\r\n      }\r\n      return null;\r\n    };\r\n    if (!this.bookingEvent.is_direct) {\r\n      if (this.isShrinking) {\r\n        return {\r\n          description: `${locales.entries.Lcz_YouWillLoseFutureUpdates}.`,\r\n          status: '200',\r\n        };\r\n      } else {\r\n        if (\r\n          moment(from_date, 'YYYY-MM-DD').isSame(moment(this.bookingEvent.FROM_DATE, 'YYYY-MM-DD')) &&\r\n          moment(to_date, 'YYYY-MM-DD').isSame(moment(this.bookingEvent.TO_DATE, 'YYYY-MM-DD'))\r\n        ) {\r\n          const initialRT = findRoomType(this.bookingEvent.PR_ID);\r\n          const targetRT = findRoomType(toRoomId);\r\n          if (initialRT === targetRT) {\r\n            return { description: `${locales.entries.Lcz_AreYouSureWantToMoveAnotherUnit}?`, status: '200' };\r\n          } else {\r\n            return {\r\n              description: `${locales.entries.Lcz_YouWillLoseFutureUpdates} ${this.bookingEvent.origin ? this.bookingEvent.origin.Label : ''}. ${\r\n                locales.entries.Lcz_SameRatesWillBeKept\r\n              }`,\r\n              status: '200',\r\n            };\r\n          }\r\n        }\r\n        return { description: locales.entries.Lcz_CannotChangeCHBookings, status: '400' };\r\n      }\r\n    } else {\r\n      if (!this.isShrinking) {\r\n        const initialRT = findRoomType(this.bookingEvent.PR_ID);\r\n        const targetRT = findRoomType(toRoomId);\r\n        if (initialRT === targetRT) {\r\n          console.log('same rt');\r\n          return { description: `${locales.entries.Lcz_AreYouSureWantToMoveAnotherUnit}?`, status: '200' };\r\n        } else {\r\n          return {\r\n            description: locales.entries.Lcz_SameRatesWillBeKept,\r\n            status: '200',\r\n          };\r\n        }\r\n      }\r\n      return { description: locales.entries.Lcz_BalanceWillBeCalculated, status: '200' };\r\n    }\r\n  }\r\n  private resetBookingToInitialPosition() {\r\n    if (this.isStreatch) {\r\n      this.element.style.left = `${this.initialLeft}px`;\r\n      this.element.style.width = `${this.initialWidth}px`;\r\n      this.isStreatch = false;\r\n      this.finalWidth = this.initialWidth;\r\n      this.isShrinking = null;\r\n    } else {\r\n      this.element.style.top = `${this.dragInitPos.top}px`;\r\n      this.element.style.left = `${this.dragInitPos.left}px`;\r\n    }\r\n  }\r\n  @Listen('revertBooking', { target: 'window' })\r\n  handleRevertBooking(event: CustomEvent<string>) {\r\n    if (this.bookingEvent.POOL === event.detail) {\r\n      this.resetBookingToInitialPosition();\r\n    }\r\n  }\r\n  checkIfSlotOccupied(toRoomId, from_date, to_date) {\r\n    const fromTime = moment(from_date, 'YYYY-MM-DD');\r\n    const toTime = moment(to_date, 'YYYY-MM-DD');\r\n    const isOccupied = this.allBookingEvents.some(event => {\r\n      if (event.POOL === this.bookingEvent.POOL) {\r\n        return false;\r\n      }\r\n      const eventFromTime = moment(event.FROM_DATE, 'YYYY-MM-DD').add(1, 'days');\r\n      const eventToTime = moment(event.TO_DATE, 'YYYY-MM-DD');\r\n      return event.PR_ID === +toRoomId && toTime.isSameOrAfter(eventFromTime) && fromTime.isBefore(eventToTime);\r\n    });\r\n    return isOccupied;\r\n  }\r\n\r\n  renderAgain() {\r\n    this.renderElement = !this.renderElement;\r\n  }\r\n\r\n  getUniqueId() {\r\n    return new Date().getTime();\r\n  }\r\n\r\n  isSplitBooking() {\r\n    return !!this.bookingEvent.SPLIT_BOOKING;\r\n  }\r\n\r\n  isNewEvent() {\r\n    return this.getBookingId() === 'NEW_TEMP_EVENT';\r\n  }\r\n\r\n  isHighlightEventType() {\r\n    return this.getEventType() === 'HIGH_LIGHT';\r\n  }\r\n\r\n  getBookingId() {\r\n    return this.bookingEvent.ID;\r\n  }\r\n\r\n  getBookingStatus() {\r\n    return this.bookingEvent.STATUS;\r\n  }\r\n\r\n  getBookedBy() {\r\n    return this.bookingEvent.NAME;\r\n  }\r\n\r\n  getBookedRoomId() {\r\n    return this.bookingEvent.PR_ID;\r\n  }\r\n\r\n  getEventStartingDate() {\r\n    return new Date(this.bookingEvent.FROM_DATE);\r\n  }\r\n\r\n  getEventEndingDate() {\r\n    return new Date(this.bookingEvent.TO_DATE);\r\n  }\r\n\r\n  getEventType() {\r\n    return this.bookingEvent.event_type;\r\n  }\r\n\r\n  getEventLegend() {\r\n    // console.log(this.getBookingStatus());\r\n    let status = this.bookingEvent?.legendData.statusId[this.getBookingStatus()];\r\n    let orderRide = this.isNewEvent() ? { color: '#f9f9c9' } : {};\r\n    return {\r\n      ...this.bookingEvent?.legendData[status.id],\r\n      ...status,\r\n      ...orderRide,\r\n    };\r\n  }\r\n\r\n  getLegendOfStatus(aStatusId) {\r\n    // console.log(aStatusId);\r\n    let status = this.bookingEvent?.legendData.statusId[aStatusId];\r\n    return { ...this.bookingEvent.legendData[status.id], ...status };\r\n  }\r\n\r\n  getNoteNode() {\r\n    if (this.bookingEvent.NOTES || this.bookingEvent.INTERNAL_NOTE) {\r\n      return this.getLegendOfStatus('NOTES');\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getBalanceNode() {\r\n    if (this.bookingEvent.BALANCE !== null && this.bookingEvent.BALANCE > 0) {\r\n      return this.getLegendOfStatus('OUTSTANDING-BALANCE');\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setStayDays(aStayDays: number) {\r\n    this.bookingEvent.NO_OF_DAYS = aStayDays;\r\n    this.renderAgain();\r\n    // this.updateData({id: this.getBookedRoomId(), data: { NO_OF_DAYS: aStayDays }});\r\n  }\r\n\r\n  getStayDays() {\r\n    return this.bookingEvent.NO_OF_DAYS;\r\n  }\r\n\r\n  getPosition() {\r\n    let startingDate = this.getEventStartingDate();\r\n    let startingCellClass = '.room_' + this.getBookedRoomId() + '_' + startingDate.getDate() + '_' + (startingDate.getMonth() + 1) + '_' + startingDate.getFullYear();\r\n    let bodyContainer = document.querySelector('.bodyContainer');\r\n    let startingCell = document.querySelector(startingCellClass);\r\n    let pos = { top: '0', left: '0', width: '0', height: '20px' };\r\n    if (startingCell && bodyContainer && startingCell.getBoundingClientRect() && bodyContainer.getBoundingClientRect()) {\r\n      let bodyContainerRect = bodyContainer.getBoundingClientRect();\r\n      let boundingRect = startingCell.getBoundingClientRect();\r\n      this.dayWidth = this.dayWidth || boundingRect.width;\r\n      pos.top = boundingRect.top + boundingRect.height / 2 - this.vertSpace - bodyContainerRect.top + 'px';\r\n      pos.left = boundingRect.left + this.dayWidth / 2 + this.eventSpace / 2 - bodyContainerRect.left + 'px';\r\n      pos.width = this.getStayDays() * this.dayWidth - this.eventSpace + 'px';\r\n    } else {\r\n      console.log('Locating event cell failed ', startingCellClass);\r\n    }\r\n    //console.log(pos);\r\n    return pos;\r\n  }\r\n\r\n  getNumber(aData) {\r\n    return aData ? parseFloat(aData) : 0;\r\n  }\r\n\r\n  startDragging(event: any, side: string) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n\r\n    if (this.isNewEvent() || this.isHighlightEventType()) {\r\n      return null;\r\n    }\r\n\r\n    this.resizeSide = side;\r\n    this.isDragging = true;\r\n\r\n    this.showEventInfo(false); // Hide bubble;\r\n    this.isStreatch = side !== 'move';\r\n    if (side === 'move') {\r\n      this.initialX = event.clientX || event.touches[0].clientX;\r\n      this.initialY = event.clientY || event.touches[0].clientY;\r\n      this.elementRect = this.element.getBoundingClientRect();\r\n      const offsetX = 0; //this.initialX - this.elementRect.left - 18;\r\n      const offsetY = 0; // this.initialY - this.elementRect.top - (this.elementRect.height/2);\r\n      this.dragInitPos = {\r\n        id: this.getBookingId(),\r\n        fromRoomId: this.getBookedRoomId(),\r\n        top: this.getNumber(this.element.style.top) + offsetY,\r\n        left: this.getNumber(this.element.style.left) + offsetX,\r\n      };\r\n      this.dragInitPos.x = this.dragInitPos.left; // + 18;\r\n      this.dragInitPos.y = this.dragInitPos.top; // + (this.elementRect.height/2);\r\n      this.dragEndPos = { ...this.dragInitPos };\r\n      this.element.style.top = `${this.dragInitPos.top}px`;\r\n      this.element.style.left = `${this.dragInitPos.left}px`;\r\n      this.isTouchStart = true; // !!(event.touches && event.touches.length);\r\n      this.dragOverEventData.emit({\r\n        id: 'CALCULATE_DRAG_OVER_BOUNDS',\r\n        data: this.dragInitPos,\r\n      });\r\n    } else {\r\n      this.initialWidth = this.element.offsetWidth;\r\n      this.initialLeft = this.element.offsetLeft;\r\n      this.initialX = event.clientX || event.touches[0].clientX;\r\n      this.dragOverEventData.emit({\r\n        id: 'CALCULATE_DRAG_OVER_BOUNDS',\r\n        data: {\r\n          id: this.getBookingId(),\r\n          fromRoomId: this.getBookedRoomId(),\r\n          top: this.getNumber(this.element.style.top),\r\n          left: this.initialLeft,\r\n          x: this.initialX,\r\n          y: event.clientY || event.touches[0].clientY,\r\n        },\r\n      });\r\n    }\r\n\r\n    document.addEventListener('mousemove', this.handleMouseMoveBind);\r\n    document.addEventListener('touchmove', this.handleMouseMoveBind);\r\n    document.addEventListener('pointermove', this.handleMouseMoveBind);\r\n\r\n    document.addEventListener('mouseup', this.handleMouseUpBind);\r\n    document.addEventListener('touchup', this.handleMouseUpBind);\r\n    document.addEventListener('pointerup', this.handleMouseUpBind);\r\n  }\r\n\r\n  handleMouseMove(event: any) {\r\n    if (this.isDragging) {\r\n      this.currentX = event.clientX || event.touches[0].clientX;\r\n      let distanceX = this.currentX - this.initialX;\r\n      if (this.resizeSide === 'move') {\r\n        this.currentY = event.clientY || event.touches[0].clientY;\r\n        let distanceY = this.currentY - this.initialY;\r\n        this.element.style.top = `${this.dragInitPos.top + distanceY}px`;\r\n        this.element.style.left = `${this.dragInitPos.left + distanceX}px`;\r\n        this.dragEndPos = {\r\n          id: this.getBookingId(),\r\n          fromRoomId: this.getBookedRoomId(),\r\n          top: this.dragInitPos.top + distanceY,\r\n          left: this.dragInitPos.left + distanceX,\r\n        };\r\n        this.dragEndPos.x = this.dragEndPos.left; // + 18;\r\n        this.dragEndPos.y = this.dragEndPos.top; // + (this.elementRect.height/2);\r\n        this.dragOverEventData.emit({ id: 'DRAG_OVER', data: this.dragEndPos });\r\n      } else {\r\n        if (!this.bookingEvent.is_direct && !isBlockUnit(this.bookingEvent.STATUS_CODE)) {\r\n          return;\r\n        }\r\n        let newWidth = this.initialWidth;\r\n        if (this.resizeSide == 'rightSide') {\r\n          newWidth = this.initialWidth + distanceX;\r\n          newWidth = Math.min(newWidth, this.initialX + this.element.offsetWidth);\r\n          newWidth = Math.max(this.dayWidth - this.eventSpace, newWidth);\r\n          this.element.style.width = `${newWidth}px`;\r\n          this.isShrinking = distanceX < 0;\r\n        } else if (this.resizeSide == 'leftSide') {\r\n          this.isShrinking = distanceX > 0;\r\n          newWidth = Math.max(this.dayWidth - this.eventSpace, this.initialWidth - distanceX);\r\n          let newLeft = this.initialLeft + (this.initialWidth - newWidth);\r\n          this.element.style.left = `${newLeft}px`;\r\n          this.element.style.width = `${newWidth}px`;\r\n        }\r\n        this.finalWidth = newWidth;\r\n      }\r\n    } else {\r\n      console.log('still mouse move listening...');\r\n    }\r\n  }\r\n\r\n  handleMouseUp() {\r\n    if (this.isDragging) {\r\n      if (this.resizeSide === 'move') {\r\n        // console.log(\"Initial X::\"+this.dragInitPos.x);\r\n        // console.log(\"Initial Y::\"+this.dragInitPos.y);\r\n        // console.log(\"End X::\"+this.dragEndPos.x);\r\n        // console.log(\"End Y::\"+this.dragEndPos.y);\r\n        if (this.isTouchStart) {\r\n          this.moveDiffereneX = Math.abs(this.dragEndPos.x - this.dragInitPos.x);\r\n          this.moveDiffereneY = Math.abs(this.dragEndPos.y - this.dragInitPos.y);\r\n        }\r\n        this.dragOverEventData.emit({\r\n          id: 'DRAG_OVER_END',\r\n          data: {\r\n            ...this.dragEndPos,\r\n            pool: this.bookingEvent.POOL,\r\n            nbOfDays: this.bookingEvent.NO_OF_DAYS,\r\n          },\r\n        });\r\n      } else {\r\n        let numberOfDays = Math.round(this.finalWidth / this.dayWidth);\r\n        let initialStayDays = this.getStayDays();\r\n        if (initialStayDays != numberOfDays && !isNaN(numberOfDays)) {\r\n          //this.setStayDays(numberOfDays);\r\n          if (this.resizeSide == 'leftSide') {\r\n            this.element.style.left = `${this.initialLeft + (initialStayDays - numberOfDays) * this.dayWidth}px`;\r\n            // set FROM_DATE = TO_DATE - numberOfDays\r\n          } else {\r\n            if (numberOfDays < initialStayDays) {\r\n              this.isShrinking = true;\r\n            }\r\n            // set TO_DATE = FROM_DATE + numberOfDays\r\n          }\r\n          this.dragOverEventData.emit({\r\n            id: 'STRETCH_OVER_END',\r\n            data: {\r\n              id: this.getBookingId(),\r\n              fromRoomId: +this.getBookedRoomId(),\r\n              x: +this.element.style.left.replace('px', ''),\r\n              y: +this.element.style.top.replace('px', ''),\r\n              pool: this.bookingEvent.POOL,\r\n              nbOfDays: numberOfDays,\r\n            },\r\n          });\r\n\r\n          this.element.style.width = `${numberOfDays * this.dayWidth - this.eventSpace}px`;\r\n        } else {\r\n          this.element.style.left = `${this.initialLeft}px`;\r\n          this.element.style.width = `${numberOfDays * this.dayWidth - this.eventSpace}px`;\r\n        }\r\n      }\r\n    } else {\r\n      console.log('still mouse up listening...');\r\n    }\r\n    this.isDragging = false;\r\n\r\n    document.removeEventListener('mousemove', this.handleMouseMoveBind);\r\n    document.removeEventListener('touchmove', this.handleMouseMoveBind);\r\n    document.removeEventListener('pointermove', this.handleMouseMoveBind);\r\n\r\n    document.removeEventListener('mouseup', this.handleMouseUpBind);\r\n    document.removeEventListener('touchup', this.handleMouseUpBind);\r\n    document.removeEventListener('pointerup', this.handleMouseUpBind);\r\n  }\r\n\r\n  updateData(data: any) {\r\n    this.updateEventData.emit(data);\r\n  }\r\n\r\n  showEventInfo(showInfo) {\r\n    if (this.isHighlightEventType() || this.bookingEvent.hideBubble) {\r\n      return null;\r\n    }\r\n\r\n    if (showInfo) {\r\n      // Calculate which side we need to show the bubble, top side or bottom.\r\n      let bodyContainer = document.querySelector('.calendarScrollContainer');\r\n      let bodyContainerRect: { [key: string]: any } = bodyContainer.getBoundingClientRect();\r\n      let elementRect: { [key: string]: any } = this.element.getBoundingClientRect();\r\n      let midPoint = bodyContainerRect.height / 2 + bodyContainerRect.top + 50;\r\n      // let topDifference = elementRect.top - bodyContainerRect.top;\r\n      // let bottomDifference = bodyContainerRect.bottom - elementRect.bottom;\r\n\r\n      if (elementRect.top < midPoint) {\r\n        this.bubbleInfoTopSide = false;\r\n      } else {\r\n        this.bubbleInfoTopSide = true;\r\n      }\r\n    }\r\n\r\n    // showInfo = true;\r\n    if (showInfo) {\r\n      this.hideBubbleInfo.emit({\r\n        key: 'hidePopup',\r\n        currentInfoBubbleId: this.getBookingId(),\r\n      });\r\n    }\r\n    this.showInfoPopup = showInfo;\r\n    this.renderAgain();\r\n  }\r\n\r\n  render() {\r\n    // onMouseLeave={()=>this.showEventInfo(false)}\r\n    let legend = this.getEventLegend();\r\n    let noteNode = this.getNoteNode();\r\n    let balanceNode = this.getBalanceNode();\r\n\r\n    return (\r\n      <Host\r\n        class={`bookingEvent ${this.isNewEvent() || this.isHighlightEventType() ? 'newEvent' : ''} ${legend.clsName} `}\r\n        style={this.getPosition()}\r\n        id={'event_' + this.getBookingId()}\r\n      >\r\n        {/* onMouseOver={() =>this.showEventInfo(true)}  */}\r\n        <div\r\n          class={`bookingEventBase ${\r\n            !this.bookingEvent.is_direct &&\r\n            !isBlockUnit(this.bookingEvent.STATUS_CODE) &&\r\n            this.bookingEvent.STATUS !== 'TEMP-EVENT' &&\r\n            this.bookingEvent.ID !== 'NEW_TEMP_EVENT' &&\r\n            'border border-dark'\r\n          }  ${this.isSplitBooking() ? 'splitBooking' : ''}`}\r\n          style={{ backgroundColor: legend.color }}\r\n          onTouchStart={event => this.startDragging(event, 'move')}\r\n          onMouseDown={event => this.startDragging(event, 'move')}\r\n        ></div>\r\n        {noteNode ? <div class=\"legend_circle noteIcon\" style={{ backgroundColor: noteNode.color }}></div> : null}\r\n        {balanceNode ? <div class=\"legend_circle balanceIcon\" style={{ backgroundColor: balanceNode.color }}></div> : null}\r\n        {/* onMouseOver={() => this.showEventInfo(true)}  */}\r\n        <div class=\"bookingEventTitle\" onTouchStart={event => this.startDragging(event, 'move')} onMouseDown={event => this.startDragging(event, 'move')}>\r\n          {this.getBookedBy()}\r\n        </div>\r\n\r\n        <Fragment>\r\n          <div\r\n            class=\"bookingEventDragHandle leftSide\"\r\n            onTouchStart={event => this.startDragging(event, 'leftSide')}\r\n            onMouseDown={event => this.startDragging(event, 'leftSide')}\r\n          ></div>\r\n          <div\r\n            class=\"bookingEventDragHandle rightSide\"\r\n            onTouchStart={event => this.startDragging(event, 'rightSide')}\r\n            onMouseDown={event => this.startDragging(event, 'rightSide')}\r\n          ></div>\r\n        </Fragment>\r\n\r\n        {this.showInfoPopup ? (\r\n          <igl-booking-event-hover\r\n            is_vacation_rental={this.is_vacation_rental}\r\n            countryNodeList={this.countryNodeList}\r\n            currency={this.currency}\r\n            class=\"top\"\r\n            bookingEvent={this.bookingEvent}\r\n            bubbleInfoTop={this.bubbleInfoTopSide}\r\n          ></igl-booking-event-hover>\r\n        ) : null}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  position: relative;\r\n  z-index: 100;\r\n}\r\n\r\n.btn {\r\n  padding-left: 4px !important;\r\n  padding-right: 4px !important;\r\n}\r\n.user-notes {\r\n  margin-left: 4px;\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 5;\r\n  overflow: hidden;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n.pointerContainer {\r\n  position: absolute;\r\n  left: 50%;\r\n  height: 10px;\r\n  width: 350px;\r\n  transform: translate(-50%, 0);\r\n}\r\n\r\n.pointerContainerTop {\r\n  top: -26px;\r\n}\r\n\r\n.iglPopOver {\r\n  /* max-width: 350px; */\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  border: 1px solid #656ee7;\r\n  border-radius: 6px;\r\n  position: absolute;\r\n  transform: translate(-50%, 10px);\r\n  left: 50%;\r\n  box-shadow: 1px 0px 20px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.iglPopOver.infoBubble {\r\n  width: 350px;\r\n}\r\n\r\n.iglPopOver.blockedView {\r\n  max-width: 400px;\r\n  width: 400px;\r\n}\r\n\r\n.iglPopOver.newBookingOptions {\r\n  overflow-wrap: break-word !important;\r\n  min-width: 230px;\r\n  width: fit-content;\r\n}\r\n\r\n.bubblePointer {\r\n  position: absolute;\r\n  width: 0;\r\n  height: 0;\r\n  left: 50%;\r\n  border-left: 10px solid transparent;\r\n  border-right: 10px solid transparent;\r\n  transform: translate(-50%, 0px);\r\n}\r\n\r\n.bubblePointTop {\r\n  border-top: 10px solid #656ee7;\r\n}\r\n\r\n.bubblePointBottom {\r\n  border-bottom: 10px solid #656ee7;\r\n}\r\n\r\n.bubbleInfoAbove {\r\n  bottom: 35px;\r\n}\r\n\r\n.updateBtnIcon {\r\n  margin-right: 4px;\r\n}\r\n.icon-image {\r\n  margin-right: 5px;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Element, Fragment } from '@stencil/core';\r\nimport { findCountry, formatDate, getCurrencySymbol } from '../../../utils/utils';\r\nimport { ICountry } from '../../../models/IBooking';\r\nimport { EventsService } from '../../../services/events.service';\r\nimport moment from 'moment';\r\nimport locales from '@/stores/locales.store';\r\n//import { transformNewBLockedRooms } from '../../../utils/booking';\r\n\r\n@Component({\r\n  tag: 'igl-booking-event-hover',\r\n  styleUrl: 'igl-booking-event-hover.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingEventHover {\r\n  @Prop({ mutable: true }) bookingEvent: { [key: string]: any };\r\n  @Prop() bubbleInfoTop: boolean = false;\r\n  @Prop() currency;\r\n  @Prop() countryNodeList: ICountry[];\r\n  @Prop() is_vacation_rental: boolean = false;\r\n  @State() isLoading: string;\r\n\r\n  @Event() showBookingPopup: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) hideBubbleInfo: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) deleteButton: EventEmitter<string>;\r\n  @Event() bookingCreated: EventEmitter<{ pool?: string; data: any[] }>;\r\n  @Element() element;\r\n  private fromTimeStamp: number;\r\n  private toTimeStamp: number;\r\n  private todayTimeStamp: number = new Date().setHours(0, 0, 0, 0);\r\n  private eventService = new EventsService();\r\n  private hideButtons = false;\r\n  @State() shouldHideUnassignUnit = false;\r\n  componentWillLoad() {\r\n    console.log('this.bookingEvent', this.bookingEvent);\r\n    let selectedRt = this.bookingEvent.roomsInfo.find(r => r.id === this.bookingEvent.RATE_TYPE);\r\n    if (selectedRt) {\r\n      console.log(selectedRt.physicalrooms.length === 1);\r\n      this.shouldHideUnassignUnit = selectedRt.physicalrooms.length === 1;\r\n    }\r\n    if (moment(this.bookingEvent.TO_DATE, 'YYYY-MM-DD').isBefore(moment())) {\r\n      this.hideButtons = true;\r\n    }\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n  }\r\n\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    if (event.key === 'Escape') {\r\n      this.hideBubble();\r\n    } else return;\r\n  }\r\n\r\n  hideBubble() {\r\n    this.hideBubbleInfo.emit({\r\n      key: 'hidebubble',\r\n      currentInfoBubbleId: this.getBookingId(),\r\n    });\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentDidLoad() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  getBookingId() {\r\n    return this.bookingEvent.ID;\r\n  }\r\n\r\n  getTotalOccupants() {\r\n    return this.bookingEvent.ADULTS_COUNT;\r\n  }\r\n\r\n  getPhoneNumber() {\r\n    return this.bookingEvent.PHONE;\r\n  }\r\n\r\n  getCountry() {\r\n    return findCountry(this.bookingEvent.COUNTRY, this.countryNodeList).name;\r\n  }\r\n  getPhoneCode() {\r\n    return findCountry(this.bookingEvent.COUNTRY, this.countryNodeList).phone_prefix;\r\n  }\r\n  renderPhone() {\r\n    return this.bookingEvent.COUNTRY ? `${this.bookingEvent.is_direct ? this.getPhoneCode() + '-' : ''}${this.getPhoneNumber()} - ${this.getCountry()}` : this.getPhoneNumber();\r\n  }\r\n\r\n  getGuestNote() {\r\n    return this.bookingEvent.NOTES && <p class={'user-notes p-0 my-0'}>{this.bookingEvent.NOTES}</p>;\r\n  }\r\n\r\n  getInternalNote() {\r\n    return this.bookingEvent.INTERNAL_NOTE;\r\n  }\r\n\r\n  getTotalPrice() {\r\n    return this.bookingEvent.TOTAL_PRICE;\r\n  }\r\n\r\n  getCheckInDate() {\r\n    return this.bookingEvent.FROM_DATE_STR;\r\n  }\r\n\r\n  getCheckOutDate() {\r\n    return this.bookingEvent.TO_DATE_STR;\r\n  }\r\n\r\n  getArrivalTime() {\r\n    return this.bookingEvent.ARRIVAL_TIME;\r\n  }\r\n\r\n  getRatePlan() {\r\n    return this.bookingEvent.RATE_PLAN;\r\n  }\r\n\r\n  getEntryDate() {\r\n    return this.bookingEvent.ENTRY_DATE;\r\n  }\r\n\r\n  getReleaseAfterHours() {\r\n    return this.bookingEvent.RELEASE_AFTER_HOURS;\r\n  }\r\n\r\n  isNewBooking() {\r\n    return this.getBookingId() === 'NEW_TEMP_EVENT';\r\n  }\r\n\r\n  isCheckedIn() {\r\n    return this.bookingEvent.STATUS === 'CHECKED-IN';\r\n  }\r\n\r\n  isCheckedOut() {\r\n    return this.bookingEvent.STATUS === 'CHECKED-OUT';\r\n  }\r\n\r\n  isBlockedDateEvent() {\r\n    return this.bookingEvent.STATUS === 'BLOCKED' || this.bookingEvent.STATUS === 'BLOCKED-WITH-DATES';\r\n  }\r\n\r\n  getRoomId() {\r\n    return this.bookingEvent.PR_ID;\r\n  }\r\n\r\n  getCategoryByRoomId(roomId) {\r\n    // console.log(\"room id \",roomId)\r\n    // console.log(\"booking event\",this.bookingEvent)\r\n    return this.bookingEvent.roomsInfo.find(roomCategory => roomCategory.physicalrooms.find(room => room.id === roomId));\r\n  }\r\n\r\n  hasSplitBooking() {\r\n    return this.bookingEvent.hasOwnProperty('splitBookingEvents') && this.bookingEvent.splitBookingEvents;\r\n  }\r\n\r\n  canCheckIn() {\r\n    if (!this.fromTimeStamp) {\r\n      let dt = new Date(this.getCheckInDate());\r\n      dt.setHours(0, 0, 0, 0);\r\n      this.fromTimeStamp = dt.getTime();\r\n    }\r\n    if (!this.toTimeStamp) {\r\n      let dt = new Date(this.getCheckOutDate());\r\n      dt.setHours(0, 0, 0, 0);\r\n      this.toTimeStamp = dt.getTime();\r\n    }\r\n    if (this.isCheckedIn() || this.isCheckedOut()) {\r\n      return false;\r\n    }\r\n    if (this.fromTimeStamp <= this.todayTimeStamp && this.todayTimeStamp <= this.toTimeStamp) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  canCheckOut() {\r\n    if (this.isCheckedIn() && this.todayTimeStamp <= this.toTimeStamp) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookingEvent = { ...this.bookingEvent, ...opt.data };\r\n    //console.log(\"blocked date booking event\", this.bookingEvent);\r\n  }\r\n\r\n  handleEditBooking() {\r\n    // console.log(\"Edit booking\");\r\n    this.bookingEvent.TITLE = locales.entries.Lcz_EditBookingFor;\r\n    this.handleBookingOption('EDIT_BOOKING');\r\n  }\r\n\r\n  getStringDateFormat(dt) {\r\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\r\n  }\r\n\r\n  handleAddRoom() {\r\n    let fromDate = new Date(this.bookingEvent.FROM_DATE);\r\n    fromDate.setHours(0, 0, 0, 0);\r\n    let from_date_str = this.getStringDateFormat(fromDate);\r\n\r\n    let toDate = new Date(this.bookingEvent.TO_DATE);\r\n    //toDate.setDate(toDate.getDate() + 1);\r\n    toDate.setHours(0, 0, 0, 0);\r\n    let to_date_str = this.getStringDateFormat(toDate);\r\n    //console.log(this.bookingEvent);\r\n    let eventData = {\r\n      ID: '',\r\n      NAME: '',\r\n      BOOKING_NUMBER: this.bookingEvent.BOOKING_NUMBER,\r\n      FROM_DATE: from_date_str, // \"2023-07-09\",\r\n      TO_DATE: to_date_str, // \"2023-07-11\",\r\n      roomsInfo: this.bookingEvent.roomsInfo,\r\n      ARRIVAL: this.bookingEvent.ARRIVAL,\r\n      ADD_ROOM_TO_BOOKING: this.bookingEvent.ID,\r\n      TITLE: 'Add Room to #' + this.bookingEvent.BOOKING_NUMBER,\r\n      event_type: 'ADD_ROOM',\r\n      ROOMS: this.bookingEvent.ROOMS,\r\n      GUEST: this.bookingEvent.GUEST,\r\n      message: this.bookingEvent.NOTES,\r\n      SOURCE: this.bookingEvent.SOURCE,\r\n      defaultDateRange: {\r\n        fromDate: fromDate, //new Date(\"2023-09-10\"),\r\n        fromDateStr: '', //\"10 Sep 2023\",\r\n        toDate: toDate, //new Date(\"2023-09-15\"),\r\n        toDateStr: '', // \"15 Sep 2023\",\r\n        dateDifference: 0,\r\n        editabled: true,\r\n        message: 'Including 5.00% City Tax - Excluding 11.00% VAT',\r\n      },\r\n    };\r\n\r\n    this.handleBookingOption('ADD_ROOM', eventData);\r\n  }\r\n\r\n  handleCustomerCheckIn() {\r\n    console.log('Handle Customer Check In');\r\n  }\r\n\r\n  handleCustomerCheckOut() {\r\n    console.log('Handle Customer Check Out');\r\n  }\r\n  handleDeleteEvent() {\r\n    this.hideBubble();\r\n    this.deleteButton.emit(this.bookingEvent.POOL);\r\n    console.log('Delete Event');\r\n  }\r\n\r\n  async handleUpdateBlockedDates() {\r\n    try {\r\n      this.isLoading = 'update';\r\n      setTimeout(() => {\r\n        this.hideBubble();\r\n      }, 50);\r\n      await this.eventService.updateBlockedEvent(this.bookingEvent);\r\n      this.isLoading = '';\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleConvertBlockedDateToBooking() {\r\n    this.handleBookingOption('BAR_BOOKING');\r\n  }\r\n\r\n  getRoomInfo() {\r\n    const roomIdToFind = +this.bookingEvent.PR_ID;\r\n    let selectedRoom: any = {};\r\n\r\n    for (const room of this.bookingEvent.roomsInfo) {\r\n      for (const physicalRoom of room.physicalrooms) {\r\n        if (roomIdToFind === physicalRoom.id) {\r\n          selectedRoom.CATEGORY = room.name;\r\n          selectedRoom.ROOM_NAME = physicalRoom.name;\r\n          selectedRoom.ROOMS_INFO = room;\r\n          return selectedRoom;\r\n        }\r\n      }\r\n    }\r\n\r\n    return selectedRoom;\r\n  }\r\n  renderTitle(eventType, roomInfo) {\r\n    switch (eventType) {\r\n      case 'EDIT_BOOKING':\r\n        return `${locales.entries.Lcz_EditBookingFor} ${roomInfo.CATEGORY} ${roomInfo.ROOM_NAME}`;\r\n      case 'ADD_ROOM':\r\n        return `${locales.entries.Lcz_AddingUnitToBooking}# ${this.bookingEvent.BOOKING_NUMBER}`;\r\n      case 'SPLIT_BOOKING':\r\n        return locales.entries.Lcz_Adding + ` ${roomInfo.CATEGORY} ${roomInfo.ROOM_NAME}`;\r\n      default:\r\n        return `${locales.entries.Lcz_NewBookingFor} ${roomInfo.CATEGORY} ${roomInfo.ROOM_NAME}`;\r\n    }\r\n  }\r\n  handleBookingOption(eventType, roomData = null) {\r\n    const roomInfo = this.getRoomInfo();\r\n    let data = roomData ? roomData : this.bookingEvent;\r\n    data.event_type = eventType;\r\n    data.TITLE = this.renderTitle(eventType, roomInfo);\r\n\r\n    if (['003', '002', '004'].includes(this.bookingEvent.STATUS_CODE)) {\r\n      data.roomsInfo = [roomInfo.ROOMS_INFO];\r\n    }\r\n    this.showBookingPopup.emit({\r\n      key: 'add',\r\n      data: {\r\n        ...data,\r\n        //roomsInfo: [roomInfo.ROOMS_INFO],\r\n      },\r\n    });\r\n    this.hideBubbleInfo.emit({\r\n      key: 'hidebubble',\r\n      currentInfoBubbleId: this.getBookingId(),\r\n    });\r\n  }\r\n\r\n  getInfoElement() {\r\n    return (\r\n      <div class={`iglPopOver infoBubble ${this.bubbleInfoTop ? 'bubbleInfoAbove' : ''} text-left`}>\r\n        <div class=\"row p-0 m-0 pb-1\">\r\n          <div class=\"pl-0 col-8 font-weight-bold font-medium-1 d-flex align-items-center\">\r\n            <img src={this.bookingEvent?.origin?.Icon} alt=\"icon\" class={'icon-image'} />\r\n            <p class={'p-0 m-0'}>{!this.bookingEvent.is_direct ? this.bookingEvent.channel_booking_nbr : this.bookingEvent.BOOKING_NUMBER}</p>\r\n          </div>\r\n          <div class=\"pr-0 col-4 text-right\">\r\n            {getCurrencySymbol(this.currency.code)}\r\n            {this.getTotalPrice()}\r\n          </div>\r\n        </div>\r\n        <div class=\"row p-0 m-0\">\r\n          <div class=\"pl-0 pr-0 col-12\">\r\n            <span class=\"font-weight-bold\">{locales.entries.Lcz_In}: </span>\r\n            {formatDate(this.bookingEvent.FROM_DATE, 'YYYY-MM-DD')} - <span class=\"font-weight-bold\">{locales.entries.Lcz_Out}: </span>\r\n            {formatDate(this.bookingEvent.TO_DATE, 'YYYY-MM-DD')}\r\n          </div>\r\n        </div>\r\n        {this.getArrivalTime() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12\">\r\n              <span class=\"font-weight-bold\">{locales.entries.Lcz_ArrivalTime}: </span>\r\n              {this.getArrivalTime()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getTotalOccupants() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12\">\r\n              <span class=\"font-weight-bold\">{locales.entries.Lcz_Occupancy}: </span>\r\n              {this.getTotalOccupants()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getPhoneNumber() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12 text-wrap\">\r\n              <span class=\"font-weight-bold\">{locales.entries.Lcz_Phone}: </span>\r\n              {this.renderPhone()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getRatePlan() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12\">\r\n              <span class=\"font-weight-bold\">{locales.entries.Lcz_RatePlan}: </span>\r\n              {this.getRatePlan()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getGuestNote() ? (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"col-12 pl-0 pr-0 text-wrap d-flex\">\r\n              <sapn class=\"font-weight-bold\">{locales.entries.Lcz_Note}: </sapn>\r\n              {this.getGuestNote()}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.getInternalNote() ? (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"col-12 pl-0 pr-0 text-wrap\">\r\n              <span class=\"font-weight-bold\">{locales.entries.Lcz_InternalRemark}: </span>\r\n              {this.getInternalNote()}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div class=\"row p-0 m-0 mt-2\">\r\n          <div class=\"full-width btn-group  btn-group-sm font-small-3\" role=\"group\">\r\n            <button\r\n              type=\"button\"\r\n              class={`btn btn-primary d-flex align-items-center justify-content-center ${this.hideButtons ? 'mr-0' : 'mr-1'} ${this.shouldHideUnassignUnit ? 'w-50' : ''}`}\r\n              onClick={_ => {\r\n                this.handleEditBooking();\r\n              }}\r\n              disabled={!this.bookingEvent.IS_EDITABLE}\r\n            >\r\n              {/* <i class=\"ft ft-edit font-small-3\"></i> */}\r\n              <svg class=\"p-0 m-0\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" height=\"12\" width=\"12\" viewBox=\"0 0 512 512\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z\"\r\n                />\r\n              </svg>\r\n              <span>\r\n                &nbsp;\r\n                {locales.entries.Lcz_Edit}\r\n              </span>\r\n            </button>\r\n            {this.bookingEvent.IS_EDITABLE && !this.hideButtons && (\r\n              <button\r\n                type=\"button\"\r\n                class={`btn btn-primary d-flex align-items-center justify-content-center ${!this.shouldHideUnassignUnit ? 'mr-1' : 'w-50'}`}\r\n                onClick={_ => {\r\n                  this.handleAddRoom();\r\n                }}\r\n              >\r\n                {/* <i class=\"ft ft-plus-circle font-small-3\"></i> */}\r\n                <svg class=\"p-0 m-0\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" height={12} width={12}>\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v6m3-3H9m12 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\" />\r\n                </svg>\r\n                <span>&nbsp;{locales.entries.Lcz_AddRoom}</span>\r\n              </button>\r\n            )}\r\n            {/* {this.canCheckIn() ? (\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary p-0 mr-1\"\r\n                onClick={_ => {\r\n                  this.handleCustomerCheckIn();\r\n                }}\r\n                disabled={!this.bookingEvent.IS_EDITABLE}\r\n              >\r\n                <i class=\"ft ft-edit font-small-3\"></i> {locales.entries.Lcz_CheckIn}\r\n              </button>\r\n            ) : null}\r\n            {this.canCheckOut() ? (\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary p-0 mr-1\"\r\n                onClick={_ => {\r\n                  this.handleCustomerCheckOut();\r\n                }}\r\n                disabled={!this.bookingEvent.IS_EDITABLE}\r\n              >\r\n                <i class=\"ft ft-log-out font-small-3\"></i> {locales.entries.Lcz_CheckOut}\r\n              </button>\r\n            ) : null} */}\r\n\r\n            {this.hideButtons\r\n              ? null\r\n              : !this.shouldHideUnassignUnit && (\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary p-0 d-flex align-items-center justify-content-center\"\r\n                    onClick={_ => {\r\n                      this.handleDeleteEvent();\r\n                    }}\r\n                    disabled={!this.bookingEvent.IS_EDITABLE || this.is_vacation_rental}\r\n                  >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"8.75\" class=\"p-0 m-0\" viewBox=\"0 0 384 512\">\r\n                      <path\r\n                        fill=\"currentColor\"\r\n                        d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\r\n                      />\r\n                    </svg>\r\n                    <span class=\"m-0 p-0\">&nbsp;{locales.entries.Lcz_Unassign}</span>\r\n                  </button>\r\n                )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getNewBookingOptions() {\r\n    const shouldDisplayButtons = this.bookingEvent.roomsInfo[0].rateplans.some(rate => rate.is_active);\r\n    return (\r\n      <div class={`iglPopOver newBookingOptions ${this.bubbleInfoTop ? 'bubbleInfoAbove' : ''} text-left`}>\r\n        {shouldDisplayButtons ? (\r\n          <Fragment>\r\n            <button\r\n              type=\"button\"\r\n              class=\"d-block full-width btn btn-sm btn-primary mb-1 font-small-3 square\"\r\n              onClick={_ => {\r\n                this.handleBookingOption('BAR_BOOKING');\r\n              }}\r\n            >\r\n              {locales.entries.Lcz_CreateNewBooking}\r\n            </button>\r\n            {this.hasSplitBooking() ? (\r\n              <button\r\n                type=\"button\"\r\n                class=\"d-block full-width btn btn-sm btn-primary mb-1 font-small-3 square\"\r\n                onClick={_ => {\r\n                  this.handleBookingOption('SPLIT_BOOKING');\r\n                }}\r\n              >\r\n                {locales.entries.Lcz_AssignUnitToExistingBooking}\r\n              </button>\r\n            ) : null}\r\n          </Fragment>\r\n        ) : (\r\n          <p class={'text-danger'}>{locales.entries.Lcz_NoRatePlanDefined}</p>\r\n        )}\r\n        <button\r\n          type=\"button\"\r\n          class=\"d-block full-width btn btn-sm btn-primary font-small-3 square\"\r\n          onClick={_ => {\r\n            this.handleBookingOption('BLOCK_DATES');\r\n          }}\r\n        >\r\n          {locales.entries.Lcz_Blockdates}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBlockedView() {\r\n    // let defaultData = {RELEASE_AFTER_HOURS: 0, OPTIONAL_REASON: \"\", OUT_OF_SERVICE: false};\r\n    return (\r\n      <div class={`iglPopOver blockedView ${this.bubbleInfoTop ? 'bubbleInfoAbove' : ''} text-left`}>\r\n        <igl-block-dates-view\r\n          isEventHover={true}\r\n          entryHour={this.bookingEvent.ENTRY_HOUR}\r\n          entryMinute={this.bookingEvent.ENTRY_MINUTE}\r\n          defaultData={this.bookingEvent}\r\n          fromDate={moment(this.bookingEvent.FROM_DATE, 'YYYY-MM-DD').format('DD MM YYYY')}\r\n          toDate={moment(this.bookingEvent.TO_DATE, 'YYYY-MM-DD').format('DD MM YYYY')}\r\n          entryDate={this.getEntryDate()}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"row p-0 m-0 mt-2\">\r\n          <div class=\"full-width btn-group btn-group-sm font-small-3\" role=\"group\">\r\n            <button\r\n              disabled={this.isLoading === 'update'}\r\n              type=\"button\"\r\n              class=\"btn btn-primary mr-1 d-flex align-items-center justify-content-center\"\r\n              onClick={_ => {\r\n                this.handleUpdateBlockedDates();\r\n              }}\r\n            >\r\n              {this.isLoading === 'update' ? (\r\n                <i class=\"la la-circle-o-notch spinner mx-1\"></i>\r\n              ) : (\r\n                <svg class=\"p-0 m-0\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" height=\"12\" width=\"12\" viewBox=\"0 0 512 512\">\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z\"\r\n                  />\r\n                </svg>\r\n              )}\r\n              <span>\r\n                &nbsp;\r\n                {locales.entries.Lcz_Update}\r\n              </span>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary\"\r\n              onClick={_ => {\r\n                this.handleConvertBlockedDateToBooking();\r\n              }}\r\n            >\r\n              {locales.entries.Lcz_ConvertToBooking}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-danger ml-1 d-flex align-items-center justify-content-center\"\r\n              onClick={_ => {\r\n                this.handleDeleteEvent();\r\n              }}\r\n            >\r\n              {/* <i class=\"ft ft-trash-2 font-small-3\"></i> */}\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"10.5\" viewBox=\"0 0 448 512\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M135.2 17.7C140.6 6.8 151.7 0 163.8 0H284.2c12.1 0 23.2 6.8 28.6 17.7L320 32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 96 0 81.7 0 64S14.3 32 32 32h96l7.2-14.3zM32 128H416V448c0 35.3-28.7 64-64 64H96c-35.3 0-64-28.7-64-64V128zm96 64c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16z\"\r\n                />\r\n              </svg>\r\n              <span>\r\n                &nbsp;\r\n                {locales.entries.Lcz_Delete}\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={`pointerContainer ${this.bubbleInfoTop ? 'pointerContainerTop' : ''}`}>\r\n          <div class={`bubblePointer ${this.bubbleInfoTop ? 'bubblePointTop' : 'bubblePointBottom'}`}></div>\r\n        </div>\r\n        {this.isBlockedDateEvent() ? this.getBlockedView() : null}\r\n        {this.isNewBooking() ? this.getNewBookingOptions() : null}\r\n        {!this.isBlockedDateEvent() && !this.isNewBooking() ? this.getInfoElement() : null}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}
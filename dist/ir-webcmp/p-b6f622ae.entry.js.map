{"version":3,"names":["irSidebarCss","IrSidebar","componentDidLoad","document","addEventListener","e","key","this","toggleSidebar","disconnectedCallback","removeEventListener","irSidebarToggle","emit","open","render","className","h","class","onClick","side","icon"],"sources":["src/components/ir-sidebar/ir-sidebar.css?tag=ir-sidebar","src/components/ir-sidebar/ir-sidebar.tsx"],"sourcesContent":[".backdrop {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  cursor: pointer;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  z-index: 99;\r\n  transition: all 0.5s;\r\n  opacity: 0;\r\n  pointer-events: none;\r\n  transition: all 0.5s;\r\n}\r\n.backdrop.active {\r\n  opacity: 1;\r\n  pointer-events: all;\r\n}\r\n\r\n.sidebar-right {\r\n  position: fixed;\r\n  top: 0;\r\n  right: -100%;\r\n  bottom: 0;\r\n  width: var(--sidebar-width, 30rem);\r\n  max-width: 100%;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.5s;\r\n  z-index: 200;\r\n  overflow-y: hidden;\r\n  color: var(--sidebar-color, #000);\r\n  background-color: var(--sidebar-backgound, #fff);\r\n  padding: 0.5rem;\r\n}\r\n.sidebar-right.active {\r\n  right: 0;\r\n  overflow-y: auto;\r\n}\r\n\r\n.sidebar-left {\r\n  position: fixed;\r\n  top: 0;\r\n  left: -100%;\r\n  bottom: 0;\r\n  width: var(--sidebar-width, 30rem);\r\n  max-width: 100%;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.5s;\r\n  z-index: 200;\r\n  overflow-y: hidden;\r\n  color: var(--sidebar-color, #000);\r\n  background: var(--sidebar-backgound, #fff);\r\n  padding: 0.5rem;\r\n}\r\n\r\n.sidebar-left.active {\r\n  left: 0;\r\n  overflow-y: scroll;\r\n}\r\n.close {\r\n  position: absolute;\r\n  top: 0.5rem;\r\n  right: 1rem;\r\n  width: 1rem;\r\n  height: 1rem;\r\n  cursor: pointer;\r\n}\r\n","import { Component, Prop, h, Method, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-sidebar',\r\n  styleUrl: 'ir-sidebar.css',\r\n})\r\nexport class IrSidebar {\r\n  @Prop() name: string;\r\n  @Prop() side: 'right' | 'left' = 'right';\r\n\r\n  @Prop({ mutable: true, reflect: true }) open: boolean = false;\r\n\r\n  @Event({ bubbles: true, composed: true }) irSidebarToggle: EventEmitter;\r\n\r\n  componentDidLoad() {\r\n    // If esc key is pressed, close the modal\r\n    document.addEventListener('keydown', e => {\r\n      if (e.key === 'Escape') {\r\n        this.toggleSidebar();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Unsubscribe to the event when the component is removed from the DOM\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', () => {});\r\n  }\r\n\r\n  @Method()\r\n  async toggleSidebar() {\r\n    this.irSidebarToggle.emit(this.open);\r\n  }\r\n\r\n  render() {\r\n    let className = '';\r\n    if (this.open) {\r\n      className = 'active';\r\n    } else {\r\n      className = '';\r\n    }\r\n\r\n    return [\r\n      <div\r\n        class={`backdrop ${className}`}\r\n        onClick={() => {\r\n          this.toggleSidebar();\r\n        }}\r\n      ></div>,\r\n      <div class={`sidebar-${this.side} ${className}`}>\r\n        <a\r\n          class=\"close\"\r\n          onClick={() => {\r\n            this.toggleSidebar();\r\n          }}\r\n        >\r\n          <ir-icon icon=\"ft-x\"></ir-icon>\r\n        </a>\r\n        <slot />\r\n      </div>,\r\n    ];\r\n  }\r\n}\r\n"],"mappings":"kDAAA,MAAMA,EAAe,49B,MCMRC,EAAS,M,wGAEa,Q,UAEuB,K,CAIxD,gBAAAC,GAEEC,SAASC,iBAAiB,WAAWC,IACnC,GAAIA,EAAEC,MAAQ,SAAU,CACtBC,KAAKC,e,KAMX,oBAAAC,GACEN,SAASO,oBAAoB,WAAW,Q,CAI1C,mBAAMF,GACJD,KAAKI,gBAAgBC,KAAKL,KAAKM,K,CAGjC,MAAAC,GACE,IAAIC,EAAY,GAChB,GAAIR,KAAKM,KAAM,CACbE,EAAY,Q,KACP,CACLA,EAAY,E,CAGd,MAAO,CACLC,EAAA,OACEC,MAAO,YAAYF,IACnBG,QAAS,KACPX,KAAKC,eAAe,IAGxBQ,EAAA,OAAKC,MAAO,WAAWV,KAAKY,QAAQJ,KAClCC,EAAA,KACEC,MAAM,QACNC,QAAS,KACPX,KAAKC,eAAe,GAGtBQ,EAAA,WAASI,KAAK,UAEhBJ,EAAA,c"}
{"version":3,"names":["HouseKeepingService","Token","getExposedHKSetup","property_id","token","this","getToken","Error","data","axios","post","setExposedInspectionMode","mode","initialValue","state","housekeeping_store","createStore","irHousekeepingCss","IrHousekeeping","roomService","RoomService","houseKeepingService","componentWillLoad","baseurl","defaults","baseURL","ticket","setToken","initializeApp","ticketChanged","newValue","oldValue","isLoading","housekeeping","Promise","all","propertyid","exposedHouseKeepingStatuses","statuses","error","console","render","h","Host","class","_a","map","status","key","code","style","shape","color","description","action","inspection_mode","is_active","LabelAvailable","firstOption","Array","from","window","_","i","text","toString","value"],"sources":["src/services/housekeeping.service.ts","src/stores/housekeeping.store.ts","src/components/ir-housekeeping/ir-housekeeping.css?tag=ir-housekeeping&encapsulation=scoped","src/components/ir-housekeeping/ir-housekeeping.tsx"],"sourcesContent":["import { Token } from '@/models/Token';\r\nimport { IExposedHouseKeepingSetup, IInspectionMode } from '@/models/housekeeping';\r\nimport axios from 'axios';\r\n\r\nexport class HouseKeepingService extends Token {\r\n  public async getExposedHKSetup(property_id: number): Promise<IExposedHouseKeepingSetup> {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new Error('Missing token');\r\n    }\r\n    const { data } = await axios.post(`/Get_Exposed_HK_Setup?Ticket=${token}`, {\r\n      property_id,\r\n    });\r\n    return data['My_Result'];\r\n  }\r\n\r\n  public async setExposedInspectionMode(property_id: number, mode: IInspectionMode) {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new Error('Missing token');\r\n    }\r\n    const { data } = await axios.post(`/Set_Exposed_Inspection_Mode?Ticket=${token}`, {\r\n      property_id,\r\n      mode,\r\n    });\r\n    return data['My_Result'];\r\n  }\r\n}\r\n","import { createStore } from '@stencil/store';\r\n\r\nexport interface IHouseKeepingStore {\r\n  token: string;\r\n}\r\n\r\nconst initialValue: IHouseKeepingStore = {\r\n  token: '',\r\n};\r\n\r\nexport const { state: housekeeping_store } = createStore<IHouseKeepingStore>(initialValue);\r\nexport default housekeeping_store;\r\n",":host {\r\n  display: block;\r\n}\r\n.circle {\r\n  display: inline-flex;\r\n  border-radius: 50%;\r\n}\r\n.green {\r\n  background: #629a4c;\r\n}\r\n.red {\r\n  background: #ff4961;\r\n}\r\n.orange {\r\n  background: #ff9149;\r\n}\r\n/* td,\r\nth {\r\n  font-size: 12px !important;\r\n} */\r\n.black {\r\n  background: #000;\r\n}\r\n.smallcircle {\r\n  height: 7px;\r\n  width: 7px;\r\n}\r\n.bigcircle {\r\n  height: 7px;\r\n  width: 7px;\r\n}\r\n\r\n.status-container,\r\n.action-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n.status-container p {\r\n  margin: 0;\r\n}\r\n","import { IHKStatuses } from '@/models/housekeeping';\r\nimport { HouseKeepingService } from '@/services/housekeeping.service';\r\nimport { RoomService } from '@/services/room.service';\r\nimport housekeeping_store from '@/stores/housekeeping.store';\r\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport axios from 'axios';\r\n\r\n@Component({\r\n  tag: 'ir-housekeeping',\r\n  styleUrl: 'ir-housekeeping.css',\r\n  scoped: true,\r\n})\r\nexport class IrHousekeeping {\r\n  @Prop() language: string = '';\r\n  @Prop() ticket: string = '';\r\n  @Prop() baseurl: string = '';\r\n  @Prop() propertyid: number;\r\n\r\n  @State() isLoading = false;\r\n  @State() exposedHouseKeepingStatuses: IHKStatuses[];\r\n\r\n  private roomService = new RoomService();\r\n  private houseKeepingService = new HouseKeepingService();\r\n\r\n  componentWillLoad() {\r\n    if (this.baseurl) {\r\n      axios.defaults.baseURL = this.baseurl;\r\n    }\r\n    if (this.ticket !== '') {\r\n      this.roomService.setToken(this.ticket);\r\n      this.houseKeepingService.setToken(this.ticket);\r\n      housekeeping_store.token = this.ticket;\r\n      this.initializeApp();\r\n    }\r\n  }\r\n  @Watch('ticket')\r\n  async ticketChanged(newValue: string, oldValue: string) {\r\n    if (newValue !== oldValue) {\r\n      this.roomService.setToken(this.ticket);\r\n      this.houseKeepingService.setToken(this.ticket);\r\n      housekeeping_store.token = this.ticket;\r\n      this.initializeApp();\r\n    }\r\n  }\r\n\r\n  async initializeApp() {\r\n    try {\r\n      this.isLoading = true;\r\n      const [housekeeping] = await Promise.all([this.houseKeepingService.getExposedHKSetup(this.propertyid)]);\r\n      this.exposedHouseKeepingStatuses = housekeeping.statuses;\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n  render() {\r\n    if (this.isLoading) {\r\n      return <ir-loading-screen></ir-loading-screen>;\r\n    }\r\n    return (\r\n      <Host>\r\n        <ir-interceptor></ir-interceptor>\r\n        <ir-toast></ir-toast>\r\n        <section class=\"p-1\">\r\n          <div class=\"card p-1\">\r\n            <h4>Room or Unit Status</h4>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Status</th>\r\n                  <th>Code</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.exposedHouseKeepingStatuses?.map(status => (\r\n                  <tr key={status.code}>\r\n                    <td>\r\n                      <div class=\"status-container\">\r\n                        <span class={`circle ${status.style.shape} ${status.style.color}`}></span>\r\n                        <p>{status.description}</p>\r\n                      </div>\r\n                    </td>\r\n                    <td>{status.code}</td>\r\n                    <td>\r\n                      <div class=\"action-container\">\r\n                        <p class={'m-0'}>{status.action}</p>\r\n                        {status.inspection_mode?.is_active && (\r\n                          <div>\r\n                            <ir-select\r\n                              LabelAvailable={false}\r\n                              firstOption=\"No\"\r\n                              data={Array.from(Array(status.inspection_mode.window + 1), (_, i) => i).map(i => {\r\n                                const text = i === 0 ? 'Yes on the same day.' : i.toString() + ' day prior.';\r\n                                return {\r\n                                  text,\r\n                                  value: i.toString(),\r\n                                };\r\n                              })}\r\n                            ></ir-select>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </section>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"mMAIaA,UAA4BC,EAChC,uBAAMC,CAAkBC,GAC7B,MAAMC,EAAQC,KAAKC,WACnB,IAAKF,EAAO,CACV,MAAM,IAAIG,MAAM,gB,CAElB,MAAMC,KAAEA,SAAeC,EAAMC,KAAK,gCAAgCN,IAAS,CACzED,gBAEF,OAAOK,EAAK,Y,CAGP,8BAAMG,CAAyBR,EAAqBS,GACzD,MAAMR,EAAQC,KAAKC,WACnB,IAAKF,EAAO,CACV,MAAM,IAAIG,MAAM,gB,CAElB,MAAMC,KAAEA,SAAeC,EAAMC,KAAK,uCAAuCN,IAAS,CAChFD,cACAS,SAEF,OAAOJ,EAAK,Y,ECnBhB,MAAMK,EAAmC,CACvCT,MAAO,IAGF,MAAQU,MAAOC,GAAuBC,EAAgCH,GCV7E,MAAMI,EAAoB,qjB,MCYbC,EAAc,M,yBASjBb,KAAAc,YAAc,IAAIC,EAClBf,KAAAgB,oBAAsB,IAAIrB,E,cATP,G,YACF,G,aACC,G,yCAGL,M,2CAMrB,iBAAAsB,GACE,GAAIjB,KAAKkB,QAAS,CAChBd,EAAMe,SAASC,QAAUpB,KAAKkB,O,CAEhC,GAAIlB,KAAKqB,SAAW,GAAI,CACtBrB,KAAKc,YAAYQ,SAAStB,KAAKqB,QAC/BrB,KAAKgB,oBAAoBM,SAAStB,KAAKqB,QACvCX,EAAmBX,MAAQC,KAAKqB,OAChCrB,KAAKuB,e,EAIT,mBAAMC,CAAcC,EAAkBC,GACpC,GAAID,IAAaC,EAAU,CACzB1B,KAAKc,YAAYQ,SAAStB,KAAKqB,QAC/BrB,KAAKgB,oBAAoBM,SAAStB,KAAKqB,QACvCX,EAAmBX,MAAQC,KAAKqB,OAChCrB,KAAKuB,e,EAIT,mBAAMA,GACJ,IACEvB,KAAK2B,UAAY,KACjB,MAAOC,SAAsBC,QAAQC,IAAI,CAAC9B,KAAKgB,oBAAoBnB,kBAAkBG,KAAK+B,cAC1F/B,KAAKgC,4BAA8BJ,EAAaK,Q,CAChD,MAAOC,GACPC,QAAQD,MAAMA,E,SAEdlC,KAAK2B,UAAY,K,EAGrB,MAAAS,G,MACE,GAAIpC,KAAK2B,UAAW,CAClB,OAAOU,EAAA,yB,CAET,OACEA,EAACC,EAAI,KACHD,EAAA,uBACAA,EAAA,iBACAA,EAAA,WAASE,MAAM,OACbF,EAAA,OAAKE,MAAM,YACTF,EAAA,iCACAA,EAAA,aACEA,EAAA,aACEA,EAAA,UACEA,EAAA,oBACAA,EAAA,kBACAA,EAAA,sBAGJA,EAAA,cACGG,EAAAxC,KAAKgC,+BAA2B,MAAAQ,SAAA,SAAAA,EAAEC,KAAIC,I,MAAU,OAC/CL,EAAA,MAAIM,IAAKD,EAAOE,MACdP,EAAA,UACEA,EAAA,OAAKE,MAAM,oBACTF,EAAA,QAAME,MAAO,UAAUG,EAAOG,MAAMC,SAASJ,EAAOG,MAAME,UAC1DV,EAAA,SAAIK,EAAOM,eAGfX,EAAA,UAAKK,EAAOE,MACZP,EAAA,UACEA,EAAA,OAAKE,MAAM,oBACTF,EAAA,KAAGE,MAAO,OAAQG,EAAOO,UACxBT,EAAAE,EAAOQ,mBAAe,MAAAV,SAAA,SAAAA,EAAEW,YACvBd,EAAA,WACEA,EAAA,aACEe,eAAgB,MAChBC,YAAY,KACZlD,KAAMmD,MAAMC,KAAKD,MAAMZ,EAAOQ,gBAAgBM,OAAS,IAAI,CAACC,EAAGC,IAAMA,IAAGjB,KAAIiB,IAC1E,MAAMC,EAAOD,IAAM,EAAI,uBAAyBA,EAAEE,WAAa,cAC/D,MAAO,CACLD,OACAE,MAAOH,EAAEE,WACV,SAOV,Q"}
{"version":3,"names":["iglBlockDatesViewCss","IglBlockDatesView","this","blockDatesData","RELEASE_AFTER_HOURS","OPTIONAL_REASON","OUT_OF_SERVICE","releaseList","bookingService","BookingService","componentWillLoad","setToken","calendar_data","token","getBlockedInfo","defaultData","Object","assign","parseInt","CODE_NAME","emitData","error","handleOptionalReason","event","target","value","handleReleaseAfterChange","evt","entryDate","undefined","renderPage","dataUpdateEvent","emit","key","data","getReleaseHoursString","dt","Date","entryHour","entryMinute","setHours","getHours","getMinutes","toLocaleString","month","getDate","formatNumber","handleOutOfService","checked","renderAgain","render","console","log","fromDate","h","Host","class","from_date","dateOption","showDateDifference","to_date","toDate","isEventHover","locales","entries","Lcz_Reason","type","id","onChange","Lcz_OutOfservice","Lcz_Or","placeholder","Lcz_OptionalReason","onInput","Lcz_AutomaticReleaseIn","map","releaseItem","selected","CODE_VALUE_EN","Lcz_On","otaLabelCss","OtaLabel","toggleShowAll","showAll","remarks","displayedRemarks","slice","maxVisibleItems","label","remark","index","v4","statement","length","onClick","Lcz_ShowLess","Lcz_ShowMore"],"sources":["src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.css?tag=igl-block-dates-view&encapsulation=scoped","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx","src/components/ota-label/ota-label.css?tag=ota-label&encapsulation=scoped","src/components/ota-label/ota-label.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n\r\n:host .controlContainer {\r\n  width: 24px;\r\n}\r\n\r\n:host .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n\r\n.releaseTime {\r\n  padding-left: 5px;\r\n}\r\n.out-of-service-label {\r\n  margin-left: 5px !important;\r\n}\r\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries } from '../../../models/IBooking';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-block-dates-view',\r\n  styleUrl: 'igl-block-dates-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglBlockDatesView {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() fromDate: string;\r\n  @Prop() toDate: string;\r\n  @Prop({ mutable: true }) entryDate: string;\r\n  @Prop() entryHour: number;\r\n  @Prop() isEventHover: boolean = false;\r\n  @Prop() entryMinute: number;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private blockDatesData: { [key: string]: any } = {\r\n    RELEASE_AFTER_HOURS: 0,\r\n    OPTIONAL_REASON: '',\r\n    OUT_OF_SERVICE: false,\r\n  }; // Change of property name might require updates in booking-event-hover\r\n  private releaseList: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n\r\n  async componentWillLoad() {\r\n    try {\r\n      this.bookingService.setToken(calendar_data.token);\r\n      this.releaseList = await this.bookingService.getBlockedInfo();\r\n      if (this.defaultData) {\r\n        this.blockDatesData = { ...this.defaultData };\r\n      } else {\r\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(this.releaseList[0].CODE_NAME);\r\n        this.emitData();\r\n      }\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleOptionalReason(event) {\r\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\r\n    this.emitData();\r\n  }\r\n\r\n  handleReleaseAfterChange(evt) {\r\n    if (this.entryDate) this.entryDate = undefined;\r\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  emitData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'blockDatesData',\r\n      data: { ...this.blockDatesData },\r\n    });\r\n  }\r\n\r\n  getReleaseHoursString() {\r\n    // console.log(\"entry date\", this.entryDate);\r\n    // console.log(\"blocked date data\", this.blockDatesData);\r\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\r\n    if (this.entryDate && this.entryHour && this.entryMinute) {\r\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\r\n    } else {\r\n      dt.setHours(dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS, dt.getMinutes(), 0, 0);\r\n    }\r\n\r\n    return dt.toLocaleString('default', { month: 'short' }) + ' ' + dt.getDate() + ', ' + this.formatNumber(dt.getHours()) + ':' + this.formatNumber(dt.getMinutes());\r\n  }\r\n  formatNumber(value: number) {\r\n    return value < 10 ? `0${value}` : value;\r\n  }\r\n  handleOutOfService(evt) {\r\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\r\n    if (this.blockDatesData.OUT_OF_SERVICE) {\r\n      this.blockDatesData.OPTIONAL_REASON = '';\r\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\r\n    }\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    console.log(this.fromDate);\r\n    return (\r\n      <Host>\r\n        <div class={`m-0 p-0 mb-1`}>\r\n          <div class=\"text-left p-0\">\r\n            <ir-date-view from_date={this.fromDate} dateOption=\"DD MMM YYYY\" showDateDifference={false} to_date={this.toDate}></ir-date-view>\r\n          </div>\r\n        </div>\r\n        <div class={` mb-1 text-left ${this.isEventHover && 'p-0'}`}>\r\n          <div class=\"mb-1 \">\r\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">{locales.entries.Lcz_Reason}:</label>\r\n            <div class=\"p-0 m-0 pr-1  controlContainer checkBoxContainer d-inline-block align-middle\">\r\n              <input class=\"form-control\" type=\"checkbox\" checked={this.blockDatesData.OUT_OF_SERVICE} id=\"userinput6\" onChange={event => this.handleOutOfService(event)} />\r\n            </div>\r\n            <span class=\"align-middle out-of-service-label\">{locales.entries.Lcz_OutOfservice}</span>\r\n          </div>\r\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\r\n            <div>\r\n              <div class=\"mb-1 d-flex  align-items-center\">\r\n                <span class=\"align-middle\">{locales.entries.Lcz_Or} </span>\r\n                <div class=\"d-inline-flex col pr-0 align-middle\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_OptionalReason}\r\n                    id=\"optReason\"\r\n                    value={this.blockDatesData.OPTIONAL_REASON}\r\n                    onInput={event => this.handleOptionalReason(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-1 w-100 pr-0 \">\r\n                <span class=\"text-bold-700 font-medium-1\">{locales.entries.Lcz_AutomaticReleaseIn}: </span>\r\n                <div class=\"d-inline-block\">\r\n                  <select class=\"form-control input-sm\" id=\"zSmallSelect\" onChange={evt => this.handleReleaseAfterChange(evt)}>\r\n                    {this.releaseList.map(releaseItem => (\r\n                      <option value={+releaseItem.CODE_NAME} selected={this.blockDatesData.RELEASE_AFTER_HOURS == +releaseItem.CODE_NAME}>\r\n                        {releaseItem.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\r\n                  <div class=\"d-inline-block releaseTime\">\r\n                    <em>\r\n                      {locales.entries.Lcz_On} {this.getReleaseHoursString()}\r\n                    </em>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n:host {\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n  gap: 5px;\r\n  width: 100%;\r\n}\r\nstrong {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nul {\r\n  margin: 0 3px;\r\n  padding: 0;\r\n  list-style: none;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  word-wrap: break-word !important;\r\n  overflow-wrap: break-word !important;\r\n}\r\nli {\r\n  width: 100%;\r\n  line-height: 1.5;\r\n  margin: 0;\r\n  padding: 0;\r\n  word-wrap: break-word !important;\r\n  overflow-wrap: break-word !important;\r\n}\r\n\r\nbutton {\r\n  background: white;\r\n  color: var(--blue);\r\n  padding: 0;\r\n  margin: 0;\r\n  margin-left: 3px;\r\n  font-size: 12px;\r\n  border: 0;\r\n}\r\nbutton:hover {\r\n  color: #355270;\r\n}\r\n","import { Component, Host, Prop, State, h } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { IOtaNotes } from '@/models/booking.dto';\r\nimport locales from '@/stores/locales.store';\r\n@Component({\r\n  tag: 'ota-label',\r\n  styleUrl: 'ota-label.css',\r\n  scoped: true,\r\n})\r\nexport class OtaLabel {\r\n  @Prop() label: string;\r\n  @Prop() remarks: IOtaNotes[];\r\n  @Prop() maxVisibleItems: number = 3;\r\n\r\n  @State() showAll: boolean = false;\r\n\r\n  toggleShowAll = () => {\r\n    this.showAll = !this.showAll;\r\n  };\r\n\r\n  render() {\r\n    if (!this.remarks) {\r\n      return null;\r\n    }\r\n\r\n    const displayedRemarks = this.showAll ? this.remarks : this.remarks.slice(0, this.maxVisibleItems);\r\n\r\n    return (\r\n      <Host>\r\n        <strong>{this.label}</strong>\r\n        <ul>\r\n          {displayedRemarks.map((remark, index) => (\r\n            <li key={v4()}>\r\n              - {remark.statement}{' '}\r\n              {this.remarks.length > this.maxVisibleItems && index === displayedRemarks.length - 1 && (\r\n                <button onClick={this.toggleShowAll}>{this.showAll ? locales.entries.Lcz_ShowLess : locales.entries.Lcz_ShowMore}</button>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {/* Show toggle button if there are more remarks than `maxVisibleItems` */}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}
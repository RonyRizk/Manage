{"version":3,"names":["ChannelService","Token","getExposedChannels","token","this","getToken","data","axios","post","ExceptionMsg","Error","results","My_Result","channels_data","channels","error","console","log","getExposedConnectedChannels","property_id","connected_channels","saveConnectedChannel","is_remove","body","id","channel_id","title","channel_settings","hotel_title","is_active","channel","selectedChannel","name","property","calendar_data","map","mappedChannels"],"sources":["src/services/channel.service.ts"],"sourcesContent":["import { Token } from '@/models/Token';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport channels_data from '@/stores/channel.store';\r\nimport axios from 'axios';\r\n\r\nexport class ChannelService extends Token {\r\n  public async getExposedChannels() {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Get_Exposed_Channels?Ticket=${token}`, {});\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        const results = data.My_Result;\r\n        channels_data.channels = [...results];\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getExposedConnectedChannels(property_id: number) {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Get_Exposed_Connected_Channels?Ticket=${token}`, { property_id });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        channels_data.connected_channels = [...data.My_Result];\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async saveConnectedChannel(is_remove: boolean) {\r\n    try {\r\n      const body = {\r\n        id: channels_data.channel_id,\r\n        title: channels_data.channel_settings.hotel_title,\r\n        is_active: channels_data.is_active,\r\n        channel: { id: channels_data.selectedChannel.id, name: channels_data.selectedChannel.name },\r\n        property: { id: calendar_data.id, name: calendar_data.name },\r\n        map: channels_data.mappedChannels,\r\n        is_remove,\r\n      };\r\n      const token = this.getToken();\r\n      if (!token) {\r\n        throw new Error('Invalid Token');\r\n      }\r\n      const { data } = await axios.post(`/Handle_Connected_Channel?Ticket=${token}`, body);\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n"],"mappings":"yHAKaA,UAAuBC,EAC3B,wBAAMC,GACX,IACE,MAAMC,EAAQC,KAAKC,WACnB,GAAIF,IAAU,KAAM,CAClB,MAAMG,KAAEA,SAAeC,EAAMC,KAAK,gCAAgCL,IAAS,IAC3E,GAAIG,EAAKG,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMJ,EAAKG,a,CAEvB,MAAME,EAAUL,EAAKM,UACrBC,EAAcC,SAAW,IAAIH,GAC7B,OAAOL,C,EAET,MAAOS,GACPC,QAAQC,IAAIF,GACZ,MAAM,IAAIL,MAAMK,E,EAGb,iCAAMG,CAA4BC,GACvC,IACE,MAAMhB,EAAQC,KAAKC,WACnB,GAAIF,IAAU,KAAM,CAClB,MAAMG,KAAEA,SAAeC,EAAMC,KAAK,0CAA0CL,IAAS,CAAEgB,gBACvF,GAAIb,EAAKG,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMJ,EAAKG,a,CAEvBI,EAAcO,mBAAqB,IAAId,EAAKM,U,EAE9C,MAAOG,GACPC,QAAQC,IAAIF,GACZ,MAAM,IAAIL,MAAMK,E,EAGb,0BAAMM,CAAqBC,GAChC,IACE,MAAMC,EAAO,CACXC,GAAIX,EAAcY,WAClBC,MAAOb,EAAcc,iBAAiBC,YACtCC,UAAWhB,EAAcgB,UACzBC,QAAS,CAAEN,GAAIX,EAAckB,gBAAgBP,GAAIQ,KAAMnB,EAAckB,gBAAgBC,MACrFC,SAAU,CAAET,GAAIU,EAAcV,GAAIQ,KAAME,EAAcF,MACtDG,IAAKtB,EAAcuB,eACnBd,aAEF,MAAMnB,EAAQC,KAAKC,WACnB,IAAKF,EAAO,CACV,MAAM,IAAIO,MAAM,gB,CAElB,MAAMJ,KAAEA,SAAeC,EAAMC,KAAK,oCAAoCL,IAASoB,GAE/E,OAAOjB,C,CACP,MAAOS,GACPC,QAAQD,MAAMA,E"}
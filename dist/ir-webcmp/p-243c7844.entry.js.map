{"version":3,"names":["irComboboxCss","IrCombobox","componentWillLoad","this","filteredData","data","componentDidLoad","autoFocus","focusInput","watchHandler","newValue","oldValue","handleKeyDown","event","dataSize","length","itemHeight","getHeightOfPElement","key","preventDefault","selectedIndex","adjustScrollPosition","selectItem","_a","inputRef","blur","isComboBoxVisible","combobox","el","querySelector","pItem","offsetHeight","requestAnimationFrame","focus","visibleHeight","margin","itemTotalHeight","selectedPosition","newScrollTop","Math","max","min","scrollHeight","scrollTo","top","behavior","index","isItemSelected","comboboxValueChange","emit","id","inputValue","resetCombobox","debounceFetchData","clearTimeout","debounceTimer","setTimeout","fetchData","duration","handleFocus","clearInput","inputCleared","withblur","isLoading","filter","d","name","toLowerCase","startsWith","error","console","log","handleInputChange","target","value","handleDocumentClick","contains","handleBlur","blurTimout","isDropdownItem","element","closest","disconnectedCallback","removeEventListener","_b","_c","_d","handleItemKeyDown","renderDropdown","h","map","role","onKeyDown","e","tabIndex","onClick","class","locales","entries","Lcz_NoResultsFound","render","ref","type","placeholder","bind","onBlur","onInput","onFocus"],"sources":["src/components/ir-combobox/ir-combobox.css?tag=ir-combobox&encapsulation=scoped","src/components/ir-combobox/ir-combobox.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n  position: relative;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\nul {\r\n  position: absolute;\r\n  margin: 0;\r\n  margin-top: 2px;\r\n  width: 100%;\r\n  max-height: 80px;\r\n  border-radius: 0.21rem;\r\n  z-index: 10000;\r\n  padding: 1px;\r\n  background: white;\r\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n  padding: 5px 0;\r\n  max-height: 250px;\r\n  overflow-y: auto;\r\n}\r\n.dropdown-item {\r\n  cursor: pointer;\r\n}\r\nul li,\r\nspan,\r\nloader-container {\r\n  padding: 0px 16px;\r\n  margin: 0px;\r\n  margin-top: 2px;\r\n  width: 100%;\r\n  border-radius: 2px;\r\n}\r\nul li {\r\n  cursor: pointer;\r\n}\r\nul li:hover {\r\n  background: #f4f5fa;\r\n}\r\n\r\nul li[data-selected],\r\nul li[data-selected]:hover {\r\n  color: #fff;\r\n  text-decoration: none;\r\n  background-color: #666ee8;\r\n}\r\n","import { IToast } from '@/components';\r\nimport locales from '@/stores/locales.store';\r\nimport { Component, Prop, State, h, Element, Event, EventEmitter, Listen, Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-combobox',\r\n  styleUrl: 'ir-combobox.css',\r\n  scoped: true,\r\n})\r\nexport class IrCombobox {\r\n  @Prop({ mutable: true }) data: { id: string; name: string }[] = [];\r\n  @Prop() duration: number = 300;\r\n  @Prop() placeholder: string;\r\n  @Prop() value: string;\r\n  @Prop() autoFocus: boolean = false;\r\n\r\n  @State() selectedIndex: number = -1;\r\n  @State() isComboBoxVisible: boolean = false;\r\n  @State() isLoading: boolean = true;\r\n  @State() isItemSelected: boolean;\r\n  @State() inputValue: string = '';\r\n  @State() filteredData: { id: string; name: string }[] = [];\r\n\r\n  @Element() el: HTMLElement;\r\n  @Event({ bubbles: true, composed: true }) comboboxValueChange: EventEmitter<{ key: string; data: unknown }>;\r\n  @Event() inputCleared: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n  @State() componentShouldAutoFocus: boolean = false;\r\n  private inputRef: HTMLInputElement;\r\n  private debounceTimer: any;\r\n  private blurTimout: NodeJS.Timeout;\r\n  componentWillLoad() {\r\n    this.filteredData = this.data;\r\n  }\r\n  componentDidLoad() {\r\n    if (this.autoFocus) {\r\n      this.focusInput();\r\n    }\r\n  }\r\n\r\n  @Watch('isComboBoxVisible')\r\n  watchHandler(newValue: boolean, oldValue: boolean) {\r\n    if (newValue !== oldValue && newValue === true) {\r\n      this.focusInput();\r\n    }\r\n  }\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    const dataSize = this.data.length;\r\n    const itemHeight = this.getHeightOfPElement();\r\n    if (dataSize > 0) {\r\n      switch (event.key) {\r\n        case 'ArrowUp':\r\n          event.preventDefault();\r\n          this.selectedIndex = (this.selectedIndex - 1 + dataSize) % dataSize;\r\n          this.adjustScrollPosition(itemHeight);\r\n          break;\r\n        case 'ArrowDown':\r\n          event.preventDefault();\r\n          this.selectedIndex = (this.selectedIndex + 1) % dataSize;\r\n          this.adjustScrollPosition(itemHeight);\r\n          break;\r\n        case 'Enter':\r\n        case ' ':\r\n        case 'ArrowRight':\r\n          event.preventDefault();\r\n          this.selectItem(this.selectedIndex);\r\n          break;\r\n        case 'Escape':\r\n          this.inputRef?.blur();\r\n          this.isComboBoxVisible = false;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  getHeightOfPElement() {\r\n    const combobox = this.el.querySelector('.combobox');\r\n    if (combobox) {\r\n      const pItem = combobox.querySelector('p');\r\n      return pItem ? pItem.offsetHeight : 0;\r\n    }\r\n    return 0;\r\n  }\r\n  focusInput() {\r\n    requestAnimationFrame(() => {\r\n      this.inputRef?.focus();\r\n    });\r\n  }\r\n  adjustScrollPosition(itemHeight, visibleHeight = 250) {\r\n    const combobox = this.el.querySelector('.combobox');\r\n    if (combobox) {\r\n      const margin = 2;\r\n      const itemTotalHeight = itemHeight + margin;\r\n      const selectedPosition = itemTotalHeight * this.selectedIndex;\r\n      let newScrollTop = selectedPosition - visibleHeight / 2 + itemHeight / 2;\r\n      newScrollTop = Math.max(0, Math.min(newScrollTop, combobox.scrollHeight - visibleHeight));\r\n      combobox.scrollTo({\r\n        top: newScrollTop,\r\n        behavior: 'auto',\r\n      });\r\n    }\r\n  }\r\n\r\n  selectItem(index) {\r\n    if (this.filteredData[index]) {\r\n      this.isItemSelected = true;\r\n      this.comboboxValueChange.emit({ key: 'select', data: this.filteredData[index].id });\r\n      this.inputValue = '';\r\n      this.resetCombobox();\r\n      if (this.autoFocus) {\r\n        this.focusInput();\r\n      }\r\n    }\r\n  }\r\n\r\n  debounceFetchData() {\r\n    clearTimeout(this.debounceTimer);\r\n    this.debounceTimer = setTimeout(() => {\r\n      this.fetchData();\r\n    }, this.duration);\r\n  }\r\n  handleFocus() {\r\n    this.isComboBoxVisible = true;\r\n  }\r\n  clearInput() {\r\n    this.inputValue = '';\r\n    this.resetCombobox();\r\n    this.inputCleared.emit(null);\r\n  }\r\n  resetCombobox(withblur: boolean = true) {\r\n    if (withblur) {\r\n      this.inputRef?.blur();\r\n    }\r\n    this.selectedIndex = -1;\r\n    this.isComboBoxVisible = false;\r\n  }\r\n  async fetchData() {\r\n    try {\r\n      this.isLoading = true;\r\n      this.filteredData = this.data.filter(d => d.name.toLowerCase().startsWith(this.inputValue));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  handleInputChange(event: Event) {\r\n    this.inputValue = (event.target as HTMLInputElement).value;\r\n    if (this.inputValue) {\r\n      this.debounceFetchData();\r\n    } else {\r\n      this.filteredData = this.data;\r\n    }\r\n  }\r\n\r\n  @Listen('click', { target: 'document' })\r\n  handleDocumentClick(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (!this.el.contains(target)) {\r\n      this.isComboBoxVisible = false;\r\n    }\r\n  }\r\n\r\n  handleBlur() {\r\n    this.blurTimout = setTimeout(() => {\r\n      if (!this.isItemSelected) {\r\n        this.inputValue = '';\r\n        this.resetCombobox();\r\n      } else {\r\n        this.isItemSelected = false;\r\n      }\r\n    }, 300);\r\n  }\r\n  isDropdownItem(element) {\r\n    return element && element.closest('.combobox');\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    clearTimeout(this.debounceTimer);\r\n    clearTimeout(this.blurTimout);\r\n    this.inputRef?.removeEventListener('blur', this.handleBlur);\r\n    this.inputRef?.removeEventListener('click', this.selectItem);\r\n    this.inputRef?.removeEventListener('keydown', this.handleKeyDown);\r\n    this.inputRef?.removeEventListener('focus', this.handleFocus);\r\n  }\r\n  handleItemKeyDown(event: KeyboardEvent, index: number) {\r\n    if (event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowRight') {\r\n      this.selectItem(index);\r\n      event.preventDefault();\r\n    } else if (event.key === 'Escape') {\r\n      this.isComboBoxVisible = false;\r\n      this.inputRef?.blur();\r\n      event.preventDefault();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  renderDropdown() {\r\n    if (!this.isComboBoxVisible) {\r\n      return null;\r\n    }\r\n    return (\r\n      <ul>\r\n        {this.filteredData?.map((d, index) => (\r\n          <li\r\n            role=\"button\"\r\n            key={d.id}\r\n            onKeyDown={e => this.handleItemKeyDown(e, index)}\r\n            data-selected={this.selectedIndex === index}\r\n            tabIndex={0}\r\n            onClick={() => this.selectItem(index)}\r\n          >\r\n            {d.name}\r\n          </li>\r\n        ))}\r\n\r\n        {this.filteredData.length === 0 && !this.isLoading && <span class={'text-center'}>{locales.entries.Lcz_NoResultsFound}</span>}\r\n      </ul>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <fieldset class=\"m-0 p-0\">\r\n        <input\r\n          ref={el => (this.inputRef = el)}\r\n          type=\"text\"\r\n          value={this.value}\r\n          placeholder={this.placeholder}\r\n          class=\"form-control\"\r\n          onKeyDown={this.handleKeyDown.bind(this)}\r\n          onBlur={this.handleBlur.bind(this)}\r\n          onInput={this.handleInputChange.bind(this)}\r\n          onFocus={this.handleFocus.bind(this)}\r\n          autoFocus={this.autoFocus}\r\n        />\r\n        {this.renderDropdown()}\r\n      </fieldset>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}
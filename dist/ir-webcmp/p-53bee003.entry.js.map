{"version":3,"names":["iglApplicationInfoCss","IglApplicationInfo","componentWillLoad","this","guestData","guestInfo","Object","assign","updateRoomList","handleSelctedUnits","units","selectedUnits","index","filterdRoomList","roomsList","filter","e","includes","id","updateData","dataUpdateEvent","emit","key","guestRefKey","data","handleDataChange","value","find","room","name","handleGuestNameChange","event","guestName","target","render","h","Host","class","bookingType","roomCategoryName","ratePlanName","replace","message","cancelation","guarantee","adult_child_offering","v4","type","placeholder","onInput","required","onChange","selected","roomId","map","preference","bedPreferenceType","CODE_NAME","CODE_VALUE_EN","rate","iglBlockDatesViewCss","IglBlockDatesView","blockDatesData","RELEASE_AFTER_HOURS","OPTIONAL_REASON","OUT_OF_SERVICE","releaseList","bookingService","BookingService","getBlockedInfo","defaultData","parseInt","emitData","error","handleOptionalReason","handleReleaseAfterChange","evt","entryDate","undefined","renderPage","getReleaseHoursString","dt","Date","entryHour","entryMinute","setHours","getHours","getMinutes","toLocaleString","month","getDate","formatNumber","handleOutOfService","checked","renderAgain","fromDate","toDate","releaseItem","EventsService","constructor","reallocateEvent","pool","destination_pr_id","from_date","to_date","token","JSON","parse","sessionStorage","getItem","console","log","axios","post","ExceptionMsg","Error","deleteEvent","POOL","My_Result","updateBlockedEvent","bookingEvent","releaseData","blockUnit","formatDate","FROM_DATE","TO_DATE","pr_id","PR_ID","STAY_STATUS_CODE","DESCRIPTION","NOTES","date","split","join","iglBookPropertyCss","IglBookProperty","PAGE_ZERO","PAGE_ONE","PAGE_TWO","PAGE_BLOCK_DATES","showSplitBookingOption","sourceOptions","selectedRooms","bookedByInfoData","ratePricingMode","eventsService","code","description","componentDidLoad","document","addEventListener","closeWindow","disconnectedCallback","removeEventListener","bookingData","defaultDateRange","dateRangeData","setupEntries","fetchSetupEntries","setSourceOptions","bookingSource","setOtherProperties","isEventType","setEditingRoomInfo","page","getDefaultPage","source","sourceOption","res","arrivalTime","category","getRoomCategoryByRoomId","getBookingPreferenceRoomId","RATE_PLAN_ID","adultCount","ADULTS_COUNT","RATE","rateType","RATE_TYPE","ratePlanId","roomCategoryId","totalRooms","RATE_PLAN","NAME","initializeBookingAvailability","room_type_ids","roomsInfo","getBookingAvailability","propertyid","language","currency","roomtypes","tax_statement","_a","roomCategory","physicalrooms","event_type","hasOwnProperty","getSplitBookings","splitBookingEvents","isConvertedBooking","closeBookingWindow","isEditBooking","onRoomsDataUpdate","changedKey","detail","roomCategoryKey","getRoomCategoryKey","ratePlanKey","getRatePlanKey","shouldClearData","initializeRoomCategoryIfNeeded","applyBookingEditToSelectedRoom","setSelectedRoomData","cleanupEmptyData","isEditBookingEvent","hasSelectedRoomData","keys","length","onDateRangeSelect","opt","dateToFormattedString","handleBlockDateUpdate","stopImmediatePropagation","stopPropagation","handleSubmit","preventDefault","handleGuestInfoUpdate","handleBookedByInfoUpdate","isActiveSouceOption","srcIndex","handleSourceDropDown","selectedOption","toString","gotoSplitPageTwo","gotoPage","showSplitBooking","getSelectedSplitBookingName","bookingId","splitBooking","booking","ID","isActiveSplitBookingOption","spltIndex","splitBookingId","handleSplitBookingDropDown","isPageZero","isPageOne","isPageTwo","isPageBlockDates","getSplitBookingList","option","getSourceNode","getRoomsListFromCategoryId","categoryId","getPageZeroView","onClick","getPageOneView","onDateSelectEvent","roomInfo","dateDifference","roomTypeData","onDataUpdateEvent","disabled","getPageBlockDatesView","fromDateStr","toDateStr","ENTRY_DATE","handleBlockDate","handleButtonClicked","bookUser","handlePageTwoDataUpdateEvent","result","blockedUnit","transformNewBLockedRooms","blockedCreated","check_in","setLoadingState","STATUS_CODE","getArrivalTimeForBooking","booking_nbr","BOOKING_NUMBER","GUEST","newBookings","transformNewBooking","bookingCreated","resetLoadingState","assign_units","isLoading","ARRIVAL_TIME","setTimeout","BLOCK_DATES_TITLE","TITLE","showPaymentDetails","selectedGuestData","countryNodeList","isEditOrAddRoomEvent","onButtonClicked","iglBookingEventCss","IglBookingEvent","dayWidth","eventSpace","vertSpace","showInfoPopup","bubbleInfoTopSide","resizeSide","isDragging","handleMouseMoveBind","handleMouseMove","bind","handleMouseUpBind","handleMouseUp","handleClickOutsideBind","handleClickOutside","window","isNewEvent","hideBubble","showEventInfo","clickedElement","element","contains","hideBubbleInfoPopup","currentInfoBubbleId","getBookingId","moveBookingToHandler","moveToDay","toRoomId","fromRoomId","isTouchStart","moveDiffereneX","moveDiffereneY","getBookedRoomId","onMoveUpdateBooking","renderElement","getUniqueId","getTime","reverse","tempDate","setDate","getStayDays","getFullYear","getMonth","isSplitBooking","SPLIT_BOOKING","isHighlightEventType","getEventType","getBookingStatus","STATUS","getBookedBy","getEventStartingDate","getEventEndingDate","getEventLegend","status","legendData","statusId","orderRide","color","_b","getLegendOfStatus","aStatusId","getNoteNode","INTERNAL_NOTE","getBalanceNode","BALANCE","setStayDays","aStayDays","NO_OF_DAYS","getPosition","startingDate","startingCellClass","bodyContainer","querySelector","startingCell","pos","top","left","width","height","getBoundingClientRect","bodyContainerRect","boundingRect","getNumber","aData","parseFloat","startDragging","side","initialX","clientX","touches","initialY","clientY","elementRect","offsetX","offsetY","dragInitPos","style","x","y","dragEndPos","dragOverEventData","initialWidth","offsetWidth","initialLeft","offsetLeft","currentX","distanceX","currentY","distanceY","newWidth","Math","min","max","newLeft","finalWidth","abs","nbOfDays","numberOfDays","round","initialStayDays","updateEventData","showInfo","midPoint","hideBubbleInfo","legend","noteNode","balanceNode","clsName","backgroundColor","onTouchStart","onMouseDown","is_vacation_rental","bubbleInfoTop","iglBookingEventHoverCss","IglBookingEventHover","todayTimeStamp","eventService","getTotalOccupants","getPhoneNumber","PHONE","getCountry","findCountry","COUNTRY","getPhoneCode","phone_prefix","renderPhone","getGuestNote","getInternalNote","getTotalPrice","TOTAL_PRICE","getCheckInDate","FROM_DATE_STR","getCheckOutDate","TO_DATE_STR","getArrivalTime","getRatePlan","getEntryDate","getReleaseAfterHours","isNewBooking","isCheckedIn","isCheckedOut","isBlockedDateEvent","getRoomId","getCategoryByRoomId","hasSplitBooking","canCheckIn","fromTimeStamp","toTimeStamp","canCheckOut","handleEditBooking","handleBookingOption","getStringDateFormat","handleAddRoom","from_date_str","to_date_str","eventData","ADD_ROOM_TO_BOOKING","editabled","handleCustomerCheckIn","handleCustomerCheckOut","handleDeleteEvent","deleteButton","handleUpdateBlockedDates","handleConvertBlockedDateToBooking","getRoomInfo","roomIdToFind","selectedRoom","physicalRoom","CATEGORY","ROOM_NAME","ROOMS_INFO","eventType","roomData","showBookingPopup","getInfoElement","src","origin","Icon","alt","is_direct","channel_booking_nbr","getCurrencySymbol","role","_","IS_EDITABLE","getNewBookingOptions","getBlockedView","ENTRY_HOUR","ENTRY_MINUTE","iglBookingRoomRatePlanCss","IglBookingRoomRatePlan","selectedData","ratePlanData","variations","amount","adult_nbr","childrenCount","child_nbr","isRateModified","defaultSelectedRate","entries","getSelectedOffering","variation","ratePlanDataChanged","handleRateDaysUpdate","handleInput","inputElement","inputValue","numericRegex","test","offering","bookProperty","gotoSplitPageTwoEvent","Array","from","totalAvailableRooms","i","iglBookingRoomsCss","IglBookingRooms","validBookingTypes","fill","roomsDistributions","onRoomDataUpdate","newValue","updateRatePlanTotalRooms","inventory","ratePlanIndex","calculateTotalSelectedRoomsExcludingIndex","excludedIndex","reduce","acc","rooms","idx","ratePlan","totalSelectedRoomsExcludingCurrent","availableRooms","rateplans","iglCalBodyCss","IglCalBody","currentDate","dragOverHighlightElementHandler","dragOverElement","gotoRoom","expanded","toggleCategory","scrollToRoom","addToBeAssignedEvents","addBookingDatas","scrollPageToRoom","refClass","calendarData","getCategoryRooms","getCategoryName","getCategoryId","getTotalPhysicalRooms","getRoomName","getRoomById","physicalRooms","physical_room","getBookingData","bookingEvents","concat","getSelectedCellRefName","selectedDay","getSplitBookingEvents","newEvent","ind","findIndex","ev","splice","addNewEvent","startDate","endDate","EMAIL","convertBooking","REFERENCE_TYPE","getTwoDigitNumStr","editable","popupTitle","getDateStr","toISOString","formattedLegendData","push","num","locale","removeNewEvent","events","clickCell","isScrollViewDragging","refKey","showNewBookingPopup","getGeneralCategoryDayColumns","addClass","isCategory","days","dayInfo","day","today","getGeneralRoomDayColumns","getRoomCategoryRow","getRoomsByCategory","getRoomRows","allBookingEvents","iglCalFooterCss","IglCalFooter","handleOptionEvent","optionEvent","dayDisplayName","iglCalHeaderCss","IglCalHeader","searchValue","searchList","forEach","handleReduceAvailableUnitEvent","selectedDate","tobeAssignedCount","renderView","showToBeAssigned","gotoToBeAssignedDate","handleDateSelect","picker","blur","handleClearSearch","handleFilterRooms","trim","toLowerCase","toLocaleLowerCase","indexOf","handleScrollToRoom","gotoRoomEvent","getNewBookingModel","monthsInfo","monthInfo","daysCount","monthName","unassigned_units_nbr","occupancy","iglDateRangeCss","IglDateRange","totalNights","getFormattedDateString","calculateTotalNights","handleDateSelectEvent","floor","dateSelectEvent","handleDateChange","start","end","format","autoApply","onDateChanged","iglLegendsCss","IglLegends","legendInfo","design","iglPagetwoCss","IglPagetwo","initializeGuestData","total","newSelectedUnits","prop","handleOnApplicationInfoDataUpdateEvent","categoryIdKey","updatedUnits","handleEventData","selectedBookedByData","isGuestDataIncomplete","isButtonDisabled","isValidProperty","property","comparedBy","isCardDetails","buttonClicked","iglPropertyBookedByCss","IglPropertyBookedBy","arrivalTimeList","expiryMonths","expiryYears","currentMonth","email","firstName","lastName","countryId","isdCode","contactNumber","selectedArrivalTime","emailGuest","cardNumber","cardHolderName","expiryMonth","expiryYear","assignCountryCode","initializeExpiryYears","initializeDateData","populateBookedByData","currentYear","country","getUserDefaultCountry","bookedByData","foundTime","time","handleNumberInput","handleEmailInput","isValidEmail","checkUser","getUserInfo","first_name","last_name","mobile","country_id","emailId","emailPattern","onBlur","countryNode","rows","Fragment","pattern","year","ToBeAssignedService","getUnassignedDates","convertUnassignedDates","getUnassignedRooms","specific_date","transformToAssignable","assignUnit","identifier","cleanSpacesAndSpecialChars","str","regex","customer","unassigned_rooms","roomTypeName","room_type_name","guest_name","unassigned_date","book_nbr","fromDateTimeStamp","toDateTimeStamp","RT_ID","getRoomTypeId","updateAvailableRooms","addDefaultDateRange","roomName","assignable_units","unit","Is_Fully_Available","Is_Not_Available","dates","convertedDates","categories","dateStr","iglTbaBookingViewCss","IglTbaBookingView","highlightSection","allRoomsList","toBeAssignedService","onSelectRoom","componentShouldUpdate","oldValue","propName","categoryIndex","eventIndex","handleHighlightAvailability","handleAssignUnit","getExoposedBooking","assignEvent","addToBeAssignedEvent","assignRoomEvent","highlightToBeAssignedBookingEvent","filteredEvents","calendar_cell","handleCloseAssignment","highlightBookingEvent","iglTbaCategoryViewCss","IglTbaCategoryView","handleAssignRoomEvent","eventDatas","assignUnitEvent","getEventView","categoriesData","onAssignRoomEvent","iglToBeAssignedCss","IglToBeAssigned","reArrangeData","updateCategories","categorisedRooms","unassignedDates","roomIds","firstKey","orderedDatesList","sort","a","b","gotoDate","showForDate","showDatesList","dateStamp","showUnassignedDate","getDay","dayOfWeek","getLocalizedDayOfWeek","options","weekday","toLocaleDateString","getToBeAssignedEntities","getCategoryView","onAssignUnitEvent","reduceAvailableUnitEvent","loadingMessage","ordDate","RoomService","fetchData","iglooCalendarCss","IglooCalendar","visibleCalendarCells","roomService","scrollViewDragPos","onScrollContentMoveHandler","dx","dy","scrollContainer","scrollTop","scrollLeft","scrollViewDragging","onScrollContentMoveEndHandler","ticketChanged","setItem","stringify","ticket","initializeApp","baseurl","defaults","baseURL","then","roomResp","setRoomsData","getCalendarData","async","bookingResp","getCountries","getLegendData","My_Params_Get_Rooming_Data","FROM","endingDate","TO","formatLegendColors","myBookings","toBeAssignedEvents","paymentMethods","some","item","updateBookingEventsDateRange","transformDateForScroll","startingDay","getStartingDateOfCalendar","months","scrollToElement","handledeleteEvent","roomServiceResp","roomsData","calendar_legends","getEndingDateOfCalendar","getLocalizedMonth","goToDate","topLeftCell","gotoDay","scrollTo","gotoRect","containerRect","topLeftCellRect","onBookingCreation","onBlockCreation","moment","targetScrollClass","shouldRenderCalendarView","onOptionSelect","calendarElement","classList","remove","toggle","showLegend","bookingItem","closeSideMenu","dragScrollContent","isPreventPageScroll","hasAncestorWithClass","calendarScrolling","leftSideMenuSize","maxWidth","leftX","rightX","cells","querySelectorAll","monthContainer","monthRect","titleElement","marginLeft","monthWidth","className","currentElement","matches","parentElement","showBookingPopupEventDataHandler","updateEventDataHandler","bookedData","bookedEvent","dragOverEventDataHandler","containerDays","containerRooms","htmlElement","getAttribute","offsetTop","offsetHeight","highlightDragOver","hightLightElement","currentPosition","xElement","yElement","dragOverHighlightElement","moveBookingTo","convertDMYToISO","computeEndDate","onOptionEvent","onScroll","onCloseBookingWindow","onlineResources","isCSS","link","IrCommon","parseRefs","initializeStyles","hrefsChanged","extraResources","resources","appendTag","tagName","attributes","tag","createElement","selectorParts","attr","setAttribute","selector","existingTag","head","appendChild","href","rel","isJS","irDatePickerCss","IrDatePicker","dateRangeInput","$","daterangepicker","opens","maxSpan","separator","applyLabel","cancelLabel","fromLabel","toLabel","customRangeLabel","weekLabel","daysOfWeek","monthNames","firstDay","dateChanged","irInterceptorCss","IrInterceptor","successMessage","errorMessage","setupAxiosInterceptors","interceptors","request","use","handleRequest","handleError","response","handleResponse","extractEndpoint","url","isHandledEndpoint","handledEndpoints","config","defaultMessage","isUnassignedUnit","showToast","handleCompletion","isShown","Promise","reject","hideToastAfterDelay","isSuccess","delay","success","renderMessage","viewBox","xmlns","d","irLoadingScreenCss","IrLoadingScreen","irTooltipCss","IrTooltip","toggleOpen","shouldOpen","tooltipTimeout","clearTimeout","open","onMouseEnter","onMouseLeave","innerHTML"],"sources":["src/components/igloo-calendar/igl-application-info/igl-application-info.css?tag=igl-application-info&encapsulation=scoped","src/components/igloo-calendar/igl-application-info/igl-application-info.tsx","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.css?tag=igl-block-dates-view&encapsulation=scoped","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx","src/services/events.service.ts","src/components/igloo-calendar/igl-book-property/igl-book-property.css?tag=igl-book-property&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property.tsx","src/components/igloo-calendar/igl-booking-event/igl-booking-event.css?tag=igl-booking-event&encapsulation=scoped","src/components/igloo-calendar/igl-booking-event/igl-booking-event.tsx","src/components/igloo-calendar/igl-booking-event-hover/igl-booking-event-hover.css?tag=igl-booking-event-hover&encapsulation=scoped","src/components/igloo-calendar/igl-booking-event-hover/igl-booking-event-hover.tsx","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.css?tag=igl-booking-room-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.tsx","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.css?tag=igl-booking-rooms&encapsulation=scoped","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.tsx","src/components/igloo-calendar/igl-cal-body/igl-cal-body.css?tag=igl-cal-body&encapsulation=scoped","src/components/igloo-calendar/igl-cal-body/igl-cal-body.tsx","src/components/igloo-calendar/igl-cal-footer/igl-cal-footer.css?tag=igl-cal-footer&encapsulation=scoped","src/components/igloo-calendar/igl-cal-footer/igl-cal-footer.tsx","src/components/igloo-calendar/igl-cal-header/igl-cal-header.css?tag=igl-cal-header&encapsulation=scoped","src/components/igloo-calendar/igl-cal-header/igl-cal-header.tsx","src/components/igloo-calendar/igl-date-range/igl-date-range.css?tag=igl-date-range&encapsulation=scoped","src/components/igloo-calendar/igl-date-range/igl-date-range.tsx","src/components/igloo-calendar/igl-legends/igl-legends.css?tag=igl-legends&encapsulation=scoped","src/components/igloo-calendar/igl-legends/igl-legends.tsx","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.css?tag=igl-pagetwo&encapsulation=scoped","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.tsx","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.css?tag=igl-property-booked-by&encapsulation=scoped","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.tsx","src/services/toBeAssigned.service.ts","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-booking-view/igl-tba-booking-view.css?tag=igl-tba-booking-view&encapsulation=scoped","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-booking-view/igl-tba-booking-view.tsx","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-category-view/igl-tba-category-view.css?tag=igl-tba-category-view&encapsulation=scoped","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-category-view/igl-tba-category-view.tsx","src/components/igloo-calendar/igl-to-be-assigned/igl-to-be-assigned.css?tag=igl-to-be-assigned&encapsulation=scoped","src/components/igloo-calendar/igl-to-be-assigned/igl-to-be-assigned.tsx","src/services/room.service.ts","src/components/igloo-calendar/igloo-calendar.css?tag=igloo-calendar&encapsulation=scoped","src/components/igloo-calendar/igloo-calendar.tsx","src/common/ir.common.resources.ts","src/components/ir-common/ir-common.tsx","src/components/ir-date-picker/ir-date-picker.css?tag=ir-date-picker&encapsulation=scoped","src/components/ir-date-picker/ir-date-picker.tsx","src/components/ir-interceptor/ir-interceptor.css?tag=ir-interceptor&encapsulation=scoped","src/components/ir-interceptor/ir-interceptor.tsx","src/components/ir-loading-screen/ir-loading-screen.css?tag=ir-loading-screen&encapsulation=scoped","src/components/ir-loading-screen/ir-loading-screen.tsx","src/components/ir-tooltip/ir-tooltip.css?tag=ir-tooltip&encapsulation=scoped","src/components/ir-tooltip/ir-tooltip.tsx"],"sourcesContent":["@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, Watch, State } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\n\r\n@Component({\r\n  tag: 'igl-application-info',\r\n  styleUrl: 'igl-application-info.css',\r\n  scoped: true,\r\n})\r\nexport class IglApplicationInfo {\r\n  @Prop() guestInfo: { [key: string]: any };\r\n  @Prop({ reflect: true, mutable: true }) roomsList: { [key: string]: any }[] = [];\r\n  @Prop() guestRefKey: string;\r\n  @Prop() bedPreferenceType = [];\r\n  @Prop() selectedUnits: number[] = [];\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() index: number;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() filterdRoomList = [];\r\n  private guestData: { [key: string]: any };\r\n\r\n  componentWillLoad() {\r\n    this.guestData = this.guestInfo ? { ...this.guestInfo } : {};\r\n    this.updateRoomList();\r\n  }\r\n  @Watch('selectedUnits')\r\n  async handleSelctedUnits() {\r\n    this.updateRoomList();\r\n  }\r\n  updateRoomList() {\r\n    const units = [...this.selectedUnits];\r\n    units[this.index] = -1;\r\n    this.filterdRoomList = this.roomsList.filter(e => !units.includes(e.id));\r\n  }\r\n  updateData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      guestRefKey: this.guestRefKey,\r\n      data: { ...this.guestData },\r\n    });\r\n  }\r\n\r\n  handleDataChange(key, value) {\r\n    this.guestData[key] = +value;\r\n    if (value === '') {\r\n      this.guestData['roomName'] = value;\r\n    }\r\n    if (key === 'roomId' && value !== '') {\r\n      this.guestData['roomName'] = this.filterdRoomList.find(room => room.id === +value).name || '';\r\n    }\r\n    this.updateData();\r\n  }\r\n\r\n  handleGuestNameChange(event) {\r\n    // console.log(\"On Guest name Change::\", event.target.value);\r\n    this.guestData.guestName = event.target.value;\r\n    this.updateData();\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.guestInfo, this.roomsList);\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-1\">\r\n          <div class=\"ml-1 mb-1\">\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING' ? (\r\n              <span class=\"h5\">{this.guestInfo.roomCategoryName}</span>\r\n            ) : null}\r\n            <span class=\"ml-1 font-weight-bold\">\r\n              {this.guestInfo.ratePlanName.replace(this.guestInfo.roomCategoryName + '/', '')}\r\n              <ir-tooltip class=\"ml-1 mr-1\" message={this.guestInfo.cancelation + this.guestInfo.guarantee}></ir-tooltip>\r\n            </span>\r\n            <span>{this.guestInfo.adult_child_offering}</span>\r\n          </div>\r\n\r\n          <div class=\"row m-0 p-0 align-items-center\">\r\n            <div class=\"col-5\">\r\n              <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Guest first name & last name\"\r\n                name=\"guestName\"\r\n                onInput={event => this.handleGuestNameChange(event)}\r\n                required\r\n                value={this.guestData.guestName}\r\n              />\r\n            </div>\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING' ? (\r\n              <div class=\"col-2 p-0\">\r\n                <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('roomId', (event.target as HTMLInputElement).value)}>\r\n                  <option value=\"\" selected={this.guestData.roomId === ''}>\r\n                    Assign units\r\n                  </option>\r\n                  {this.filterdRoomList.map(room => (\r\n                    <option value={room.id} selected={+this.guestData.roomId === room.id}>\r\n                      {room.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            ) : null}\r\n\r\n            <div class=\"col-3\">\r\n              <select class=\"form-control input-sm\" id={v4()} onChange={event => this.handleDataChange('preference', (event.target as HTMLInputElement).value)}>\r\n                <option value=\"\" selected={this.guestData.preference === ''}>\r\n                  No preference\r\n                </option>\r\n                {this.bedPreferenceType.map(data => (\r\n                  <option value={data.CODE_NAME} selected={this.guestData.preference === data.CODE_NAME}>\r\n                    {data.CODE_VALUE_EN}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div class=\"col-2\">${this.guestInfo.rate}</div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n:host .controlContainer {\r\n  width: 24px;\r\n}\r\n\r\n:host .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n\r\n.releaseTime {\r\n  padding-left: 5px;\r\n}\r\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries } from '../../../models/IBooking';\r\n\r\n@Component({\r\n  tag: 'igl-block-dates-view',\r\n  styleUrl: 'igl-block-dates-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglBlockDatesView {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() fromDate: string;\r\n  @Prop() toDate: string;\r\n  @Prop({ mutable: true }) entryDate: string;\r\n  @Prop() entryHour: number;\r\n  @Prop() entryMinute: number;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private blockDatesData: { [key: string]: any } = {\r\n    RELEASE_AFTER_HOURS: 0,\r\n    OPTIONAL_REASON: '',\r\n    OUT_OF_SERVICE: false,\r\n  }; // Change of property name might require updates in booking-event-hover\r\n  private releaseList: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  async componentWillLoad() {\r\n    try {\r\n      this.releaseList = await this.bookingService.getBlockedInfo();\r\n      if (this.defaultData) {\r\n        this.blockDatesData = { ...this.defaultData };\r\n      } else {\r\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(this.releaseList[0].CODE_NAME);\r\n        this.emitData();\r\n      }\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleOptionalReason(event) {\r\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\r\n    this.emitData();\r\n  }\r\n\r\n  handleReleaseAfterChange(evt) {\r\n    if (this.entryDate) this.entryDate = undefined;\r\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  emitData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'blockDatesData',\r\n      data: { ...this.blockDatesData },\r\n    });\r\n  }\r\n\r\n  getReleaseHoursString() {\r\n    // console.log(\"entry date\", this.entryDate);\r\n    // console.log(\"blocked date data\", this.blockDatesData);\r\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\r\n    if (this.entryDate && this.entryHour && this.entryMinute) {\r\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\r\n    } else {\r\n      dt.setHours(dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS, dt.getMinutes(), 0, 0);\r\n    }\r\n\r\n    return dt.toLocaleString('default', { month: 'short' }) + ' ' + dt.getDate() + ', ' + this.formatNumber(dt.getHours()) + ':' + this.formatNumber(dt.getMinutes());\r\n  }\r\n  formatNumber(value: number) {\r\n    return value < 10 ? `0${value}` : value;\r\n  }\r\n  handleOutOfService(evt) {\r\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\r\n    if (this.blockDatesData.OUT_OF_SERVICE) {\r\n      this.blockDatesData.OPTIONAL_REASON = '';\r\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\r\n    }\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"row m-0 p-0 ml-1 mb-1\">\r\n          <div class=\"col-12 text-left p-0\">\r\n            <span class=\"pr-1\">\r\n              <span class=\"text-bold-700 font-medium-1\">From: </span>\r\n              {this.fromDate}\r\n            </span>{' '}\r\n            <span class=\"text-bold-700 font-medium-1\">To: </span>\r\n            {this.toDate}\r\n          </div>\r\n        </div>\r\n        <div class=\"col mb-1 text-left\">\r\n          <div class=\"mb-1\">\r\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">Reason:</label>\r\n            <div class=\"p-0 m-0 pr-1 controlContainer checkBoxContainer d-inline-block align-middle\">\r\n              <input class=\"form-control\" type=\"checkbox\" checked={this.blockDatesData.OUT_OF_SERVICE} id=\"userinput6\" onChange={event => this.handleOutOfService(event)} />\r\n            </div>{' '}\r\n            <span class=\"align-middle\">Out of service</span>\r\n          </div>\r\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\r\n            <div>\r\n              <div class=\"mb-1 d-flex w-100 align-items-center\">\r\n                <span class=\"align-middle\">or </span>\r\n                <div class=\"d-inline-flex col pr-0 align-middle\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Optional reason\"\r\n                    id=\"optReason\"\r\n                    value={this.blockDatesData.OPTIONAL_REASON}\r\n                    onInput={event => this.handleOptionalReason(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-1 w-100 pr-0 \">\r\n                <span class=\"text-bold-700 font-medium-1\">Automatic release in: </span>\r\n                <div class=\"d-inline-block\">\r\n                  <select class=\"form-control input-sm\" id=\"zSmallSelect\" onChange={evt => this.handleReleaseAfterChange(evt)}>\r\n                    {this.releaseList.map(releaseItem => (\r\n                      <option value={+releaseItem.CODE_NAME} selected={this.blockDatesData.RELEASE_AFTER_HOURS == +releaseItem.CODE_NAME}>\r\n                        {releaseItem.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\r\n                  <div class=\"d-inline-block releaseTime\">\r\n                    <em>on {this.getReleaseHoursString()}</em>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { BookingService } from \"./booking.service\";\r\nimport { getReleaseHoursString } from \"../utils/utils\";\r\n\r\nexport class EventsService {\r\n  private readonly bookingService: BookingService = new BookingService();\r\n\r\n  async reallocateEvent(\r\n    pool: string,\r\n    destination_pr_id: number,\r\n    from_date: string,\r\n    to_date: string\r\n  ) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem(\"token\"));\r\n      if (token) {\r\n        console.log(pool, destination_pr_id, from_date, to_date);\r\n        const { data } = await axios.post(\r\n          `/ReAllocate_Exposed_Room?Ticket=${token}`,\r\n          { pool, destination_pr_id, from_date, to_date }\r\n        );\r\n        if (data.ExceptionMsg !== \"\") {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        console.log(data);\r\n        return data;\r\n      } else {\r\n        throw new Error(\"Invalid Token\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async deleteEvent(POOL: string) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem(\"token\"));\r\n      if (token) {\r\n        const { data } = await axios.post(\r\n          `/UnBlock_Exposed_Unit?Ticket=${token}`,\r\n          {\r\n            POOL,\r\n          }\r\n        );\r\n        if (data.ExceptionMsg !== \"\") {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      } else {\r\n        throw new Error(\"Invalid Token\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async updateBlockedEvent(bookingEvent: any) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem(\"token\"));\r\n      if (token) {\r\n        const releaseData = getReleaseHoursString(\r\n          +bookingEvent.RELEASE_AFTER_HOURS\r\n        );\r\n        await this.deleteEvent(bookingEvent.POOL);\r\n        await this.bookingService.blockUnit({\r\n          from_date: this.formatDate(bookingEvent.FROM_DATE),\r\n          to_date: this.formatDate(bookingEvent.TO_DATE),\r\n          pr_id: bookingEvent.PR_ID,\r\n          STAY_STATUS_CODE: bookingEvent.OUT_OF_SERVICE\r\n            ? \"004\"\r\n            : bookingEvent.RELEASE_AFTER_HOURS === 0\r\n            ? \"002\"\r\n            : \"003\",\r\n          DESCRIPTION: bookingEvent.RELEASE_AFTER_HOURS || \"\",\r\n          NOTES: bookingEvent.OPTIONAL_REASON || \"\",\r\n          ...releaseData,\r\n        });\r\n      } else {\r\n        throw new Error(\"Invalid Token\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  private formatDate(date: string) {\r\n    return date.split(\"/\").join(\"-\");\r\n  }\r\n}\r\n","@import url('../../../assets/feather/style.min.css');\r\n@import url('../../../assets/fontawesome/css/all.css');\r\n@import url('../../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 99;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h, Listen } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { dateToFormattedString, getReleaseHoursString } from '../../../utils/utils';\r\nimport { IEntries, RoomBlockDetails, RoomBookingDetails } from '../../../models/IBooking';\r\nimport { IPageTwoDataUpdateProps, PageTwoButtonsTypes } from '../../../models/models';\r\nimport { EventsService } from '../../../services/events.service';\r\nimport { transformNewBLockedRooms, transformNewBooking } from '../../../utils/booking';\r\n\r\n@Component({\r\n  tag: 'igl-book-property',\r\n  styleUrls: ['igl-book-property.css'],\r\n  scoped: true,\r\n})\r\nexport class IglBookProperty {\r\n  @Prop() propertyid: number;\r\n  @Prop() language: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() currency: { id: number; code: string };\r\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\r\n  @State() sourceOption: { code: string; description: string } = {\r\n    code: '',\r\n    description: '',\r\n  };\r\n  @State() splitBookingId: any = '';\r\n  @State() renderAgain: boolean = false;\r\n  @State() message: string = '';\r\n  @State() isLoading: string;\r\n  @State() isConvertedBooking: boolean;\r\n  @State() dateRangeData: { [key: string]: any };\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\r\n  @Event() bookingCreated: EventEmitter<RoomBookingDetails[]>;\r\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\r\n  private PAGE_ZERO: string = 'page_zero';\r\n  private PAGE_ONE: string = 'page_one';\r\n  private PAGE_TWO: string = 'page_two';\r\n  private PAGE_BLOCK_DATES: string = 'page_block_date';\r\n  private page: string;\r\n  private showSplitBookingOption: boolean = false;\r\n  private sourceOptions: { id: string; value: string }[] = [];\r\n  private selectedRooms: { [key: string]: any } = {};\r\n  private guestData: { [key: string]: any }[] = [];\r\n  private bookedByInfoData: { [key: string]: any } = {};\r\n  private blockDatesData: { [key: string]: any } = {};\r\n  private ratePricingMode: IEntries[] = [];\r\n  private bedPreferenceType: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private eventsService = new EventsService();\r\n  componentDidLoad() {\r\n    document.addEventListener('keydown', e => {\r\n      if (e.key === 'Escape') {\r\n        this.closeWindow();\r\n      }\r\n    });\r\n  }\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', () => {});\r\n  }\r\n  async componentWillLoad() {\r\n    if (!this.bookingData.defaultDateRange) {\r\n      return;\r\n    }\r\n\r\n    this.dateRangeData = { ...this.bookingData.defaultDateRange };\r\n\r\n    try {\r\n      const setupEntries = await this.fetchSetupEntries();\r\n      this.setSourceOptions(setupEntries.bookingSource);\r\n      this.setOtherProperties(setupEntries);\r\n\r\n      if (this.isEventType('EDIT_BOOKING')) {\r\n        this.setEditingRoomInfo();\r\n      }\r\n      //this.bookingData.roomsInfo = [];\r\n      this.page = this.getDefaultPage();\r\n    } catch (error) {\r\n      console.error('Error fetching setup entries:', error);\r\n    }\r\n  }\r\n\r\n  async fetchSetupEntries() {\r\n    return await this.bookingService.fetchSetupEntries();\r\n  }\r\n\r\n  setSourceOptions(bookingSource: any[]) {\r\n    this.sourceOptions = bookingSource.map(source => ({\r\n      id: source.CODE_NAME,\r\n      value: source.CODE_VALUE_EN,\r\n    }));\r\n    this.sourceOption = {\r\n      code: bookingSource[0].CODE_NAME,\r\n      description: bookingSource[0].CODE_VALUE_EN,\r\n    };\r\n  }\r\n\r\n  setOtherProperties(res: any) {\r\n    this.ratePricingMode = res.ratePricingMode;\r\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\r\n    this.bedPreferenceType = res.bedPreferenceType;\r\n  }\r\n\r\n  setEditingRoomInfo() {\r\n    const category = this.getRoomCategoryByRoomId(this.getBookingPreferenceRoomId());\r\n    const key = `c_${category.id}`;\r\n    this.selectedRooms[key] = {\r\n      [`p_${this.bookingData.RATE_PLAN_ID}`]: {\r\n        adultCount: this.bookingData.ADULTS_COUNT,\r\n        rate: this.bookingData.RATE,\r\n        rateType: this.bookingData.RATE_TYPE,\r\n        ratePlanId: this.bookingData.RATE_PLAN_ID,\r\n        roomCategoryId: category.id,\r\n        roomCategoryName: category.name,\r\n        totalRooms: 1,\r\n        ratePlanName: this.bookingData.RATE_PLAN,\r\n        roomId: this.bookingData.PR_ID,\r\n        guestName: this.bookingData.NAME,\r\n        cancelation: this.bookingData.cancelation,\r\n        guarantee: this.bookingData.guarantee,\r\n        adult_child_offering: this.bookingData.adult_child_offering,\r\n      },\r\n    };\r\n  }\r\n\r\n  async initializeBookingAvailability(from_date: string, to_date: string) {\r\n    try {\r\n      const room_type_ids = this.bookingData.roomsInfo.map(room => room.id);\r\n      const data = await this.bookingService.getBookingAvailability(from_date, to_date, this.propertyid, this.language, room_type_ids, this.currency);\r\n      this.message = '';\r\n      this.bookingData = {\r\n        ...this.bookingData,\r\n        roomsInfo: data.roomtypes,\r\n      };\r\n      this.message = data.tax_statement;\r\n      console.log(data);\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n  getRoomCategoryByRoomId(roomId) {\r\n    return this.bookingData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.physicalrooms.find(room => room.id === +roomId);\r\n    });\r\n  }\r\n\r\n  getDefaultPage() {\r\n    if (this.bookingData.event_type === 'BLOCK_DATES') {\r\n      return this.PAGE_BLOCK_DATES;\r\n    } else if (this.bookingData.event_type === 'SPLIT_BOOKING') {\r\n      this.showSplitBookingOption = true;\r\n      return this.PAGE_ONE;\r\n    } else {\r\n      // if( || this.bookingData.event_type === \"NEW_BOOKING\")\r\n      return this.PAGE_ONE;\r\n    }\r\n  }\r\n\r\n  getBookingPreferenceRoomId() {\r\n    //console.log(this.bookingData);\r\n    return (this.bookingData.hasOwnProperty('PR_ID') && this.bookingData.PR_ID) || null;\r\n  }\r\n\r\n  getSplitBookings() {\r\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n\r\n  closeWindow() {\r\n    this.isConvertedBooking = false;\r\n    this.closeBookingWindow.emit();\r\n  }\r\n  isEditBooking() {\r\n    return this.bookingData.event_type === 'EDIT_BOOKING';\r\n  }\r\n  onRoomsDataUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    const { data, key, changedKey } = event.detail;\r\n    const roomCategoryKey = this.getRoomCategoryKey(data.roomCategoryId);\r\n    const ratePlanKey = this.getRatePlanKey(data.ratePlanId);\r\n\r\n    if (this.shouldClearData(key)) {\r\n      this.selectedRooms = {};\r\n    }\r\n\r\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey);\r\n\r\n    if (this.isEditBooking()) {\r\n      if (changedKey === 'rate') {\r\n        if (this.selectedRooms.hasOwnProperty(roomCategoryKey) && this.selectedRooms[roomCategoryKey].hasOwnProperty(ratePlanKey)) {\r\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data);\r\n        }\r\n      } else {\r\n        if (changedKey !== 'rateType') {\r\n          if (changedKey === 'adult_child_offering') {\r\n            if (this.selectedRooms.hasOwnProperty(roomCategoryKey) && this.selectedRooms[roomCategoryKey].hasOwnProperty(ratePlanKey)) {\r\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data);\r\n            }\r\n          } else {\r\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data);\r\n    }\r\n\r\n    this.cleanupEmptyData(roomCategoryKey, ratePlanKey);\r\n    this.renderPage();\r\n  }\r\n  getRoomCategoryKey(roomCategoryId: string): string {\r\n    return `c_${roomCategoryId}`;\r\n  }\r\n\r\n  getRatePlanKey(ratePlanId: string): string {\r\n    return `p_${ratePlanId}`;\r\n  }\r\n\r\n  shouldClearData(key: string | undefined): boolean {\r\n    return key === 'clearData' || this.isEditBookingEvent(key);\r\n  }\r\n\r\n  isEditBookingEvent(key: string | undefined): boolean {\r\n    return key === 'EDIT_BOOKING';\r\n  }\r\n\r\n  initializeRoomCategoryIfNeeded(roomCategoryKey: string) {\r\n    if (!this.selectedRooms[roomCategoryKey]) {\r\n      this.selectedRooms[roomCategoryKey] = {};\r\n    }\r\n  }\r\n\r\n  setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any) {\r\n    this.selectedRooms[roomCategoryKey][ratePlanKey] = data;\r\n  }\r\n\r\n  hasSelectedRoomData(roomCategoryKey: string, ratePlanKey: string): boolean {\r\n    return this.selectedRooms[roomCategoryKey] && this.selectedRooms[roomCategoryKey][ratePlanKey];\r\n  }\r\n\r\n  cleanupEmptyData(roomCategoryKey: string, ratePlanKey: string) {\r\n    if (this.selectedRooms[roomCategoryKey][ratePlanKey]?.totalRooms === 0) {\r\n      delete this.selectedRooms[roomCategoryKey][ratePlanKey];\r\n    }\r\n\r\n    if (!Object.keys(this.selectedRooms[roomCategoryKey]).length) {\r\n      delete this.selectedRooms[roomCategoryKey];\r\n    }\r\n  }\r\n\r\n  applyBookingEditToSelectedRoom(roomCategoryKey: string, ratePlanKey: string, data) {\r\n    this.selectedRooms = {\r\n      [roomCategoryKey]: {\r\n        [ratePlanKey]: {\r\n          ...data,\r\n          guestName: this.bookingData.NAME,\r\n          roomId: this.bookingData.PR_ID,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    const opt: { [key: string]: any } = event.detail;\r\n    if (opt.key === 'selectedDateRange') {\r\n      this.dateRangeData = opt.data;\r\n      this.bookingData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\r\n      this.bookingData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\r\n      this.initializeBookingAvailability(dateToFormattedString(this.bookingData.defaultDateRange.fromDate), dateToFormattedString(this.bookingData.defaultDateRange.toDate));\r\n    }\r\n  }\r\n\r\n  handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.blockDatesData = opt.data;\r\n    //console.log(\"blocked date data\", this.blockDatesData);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    //console.log(event);\r\n  }\r\n\r\n  handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n\r\n    const opt = event.detail;\r\n    if (opt.guestRefKey) {\r\n      if (this.isEventType('BAR_BOOKING')) {\r\n        this.guestData[opt.guestRefKey] = {\r\n          ...opt.data,\r\n          roomId: this.bookingData.PR_ID,\r\n        };\r\n      } else this.guestData[opt.guestRefKey] = opt.data;\r\n    }\r\n  }\r\n\r\n  handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookedByInfoData = opt.value.data;\r\n  }\r\n\r\n  isActiveSouceOption(srcIndex) {\r\n    return this.sourceOption === srcIndex ? 'active' : '';\r\n  }\r\n\r\n  handleSourceDropDown(selectedOption) {\r\n    this.sourceOption = {\r\n      code: selectedOption.target.value,\r\n      description: this.sourceOptions.find(opt => opt.id === selectedOption.target.value.toString()).value || '',\r\n    };\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\r\n  gotoSplitPageTwo() {\r\n    this.gotoPage(this.PAGE_TWO);\r\n  }\r\n\r\n  gotoPage(gotoPage) {\r\n    this.page = gotoPage;\r\n    this.renderPage();\r\n  }\r\n\r\n  showSplitBooking() {\r\n    this.showSplitBookingOption = true;\r\n    this.gotoPage(this.PAGE_ONE);\r\n  }\r\n\r\n  getSelectedSplitBookingName(bookingId) {\r\n    let splitBooking = this.getSplitBookings().find(booking => booking.ID === bookingId);\r\n    return splitBooking.ID + ' ' + splitBooking.NAME;\r\n  }\r\n\r\n  isActiveSplitBookingOption(spltIndex) {\r\n    return this.splitBookingId === spltIndex ? 'active' : '';\r\n  }\r\n\r\n  handleSplitBookingDropDown(evt) {\r\n    this.splitBookingId = evt.target.value;\r\n  }\r\n\r\n  isPageZero() {\r\n    return this.page === this.PAGE_ZERO;\r\n  }\r\n\r\n  isPageOne() {\r\n    return this.page === this.PAGE_ONE;\r\n  }\r\n\r\n  isPageTwo() {\r\n    return this.page === this.PAGE_TWO;\r\n  }\r\n\r\n  isPageBlockDates() {\r\n    return this.page === this.PAGE_BLOCK_DATES;\r\n  }\r\n\r\n  getSplitBookingList() {\r\n    return (\r\n      <fieldset class=\"form-group col-12 text-left\">\r\n        <label class=\"h5\">To booking# </label>\r\n        <div class=\"btn-group ml-1\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.handleSplitBookingDropDown(evt)}>\r\n            <option value=\"\" selected={this.splitBookingId != ''}>\r\n              Select\r\n            </option>\r\n            {this.getSplitBookings().map(option => (\r\n              <option value={option.ID} selected={this.splitBookingId === option.ID}>\r\n                {this.getSelectedSplitBookingName(option.ID)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          {/* <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" name=\"sourceType\" data-toggle=\"dropdown\">\r\n                    {this.splitBookingId!=null ? this.getSelectedSplitBookingName(this.splitBookingId) : \"Select\"}\r\n                </button>\r\n                <div class=\"dropdown-menu\">\r\n                  {this.getSplitBookings().map((option) => <button class={`dropdown-item ${this.isActiveSplitBookingOption(option.ID)}`}  type=\"button\" onClick={() => this.handleSplitBookingDropDown(option.ID)}>{this.getSelectedSplitBookingName(option.ID)}</button>)}\r\n                </div> */}\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n\r\n  getSourceNode() {\r\n    return (\r\n      <fieldset class=\"form-group col-12 text-left\">\r\n        <label class=\"h5\">Source </label>\r\n        <div class=\"btn-group ml-1\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.handleSourceDropDown(evt)}>\r\n            {this.sourceOptions.map(option => (\r\n              <option value={option.id} selected={this.sourceOption.code === option.id}>\r\n                {option.value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n\r\n  getRoomsListFromCategoryId(categoryId) {\r\n    let category = this.bookingData.roomsInfo?.find(category => category.id === categoryId);\r\n    return (category && category.physicalrooms) || [];\r\n  }\r\n\r\n  getPageZeroView() {\r\n    return (\r\n      <div class=\"scrollContent\">\r\n        <div class=\"row p-0 mb-1\">\r\n          <div class=\"col-md-3 col-sm-12 mb-1\">\r\n            <button class=\"btn btn-primary full-width\" onClick={() => this.gotoPage(this.PAGE_ONE)}>\r\n              Create New Booking\r\n            </button>\r\n          </div>\r\n          {this.getSplitBookings().length ? (\r\n            <div class=\"col-md-3 col-sm-12 mb-1\">\r\n              <button class=\"btn btn-primary full-width\" onClick={() => this.showSplitBooking()}>\r\n                Add Unit to Existing Booking\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n          <div class=\"col-md-3 col-sm-12 mb-1\">\r\n            <button class=\"btn btn-primary full-width\" onClick={() => this.gotoPage(this.PAGE_BLOCK_DATES)}>\r\n              Block Dates\r\n            </button>\r\n          </div>\r\n          <div class=\"col-md-3 col-sm-12 mb-1\">\r\n            <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPageOneView() {\r\n    return (\r\n      <div class=\"scrollContent\">\r\n        {this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? null : this.getSourceNode()}\r\n\r\n        <fieldset class=\"form-group col-12 row\">\r\n          <igl-date-range message={this.message} defaultData={this.bookingData.defaultDateRange} onDateSelectEvent={evt => this.onDateRangeSelect(evt)}></igl-date-range>\r\n        </fieldset>\r\n\r\n        <div class=\"col text-left\">\r\n          {this.bookingData.roomsInfo?.map(roomInfo => (\r\n            <igl-booking-rooms\r\n              currency={this.currency}\r\n              ratePricingMode={this.ratePricingMode}\r\n              dateDifference={this.dateRangeData.dateDifference}\r\n              bookingType={this.bookingData.event_type}\r\n              roomTypeData={roomInfo}\r\n              class=\"mt-2 mb-1\"\r\n              defaultData={this.selectedRooms['c_' + roomInfo.id]}\r\n              onDataUpdateEvent={evt => this.onRoomsDataUpdate(evt)}\r\n            ></igl-booking-rooms>\r\n          ))}\r\n        </div>\r\n\r\n        {this.isEventType('EDIT_BOOKING') ? (\r\n          <div class=\"row p-0 mb-1 mt-2\">\r\n            <div class=\"col-6\">\r\n              <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <div class=\"col-6\">\r\n              <button class=\"btn btn-primary full-width\" onClick={() => this.gotoPage(this.PAGE_TWO)}>\r\n                Next &gt;&gt;\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"row p-0 mb-1 mt-2\">\r\n            <div class={this.bookingData.event_type === 'PLUS_BOOKING' || this.isEventType('ADD_ROOM') ? 'col-6' : 'col-12'}>\r\n              <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            {this.bookingData.event_type === 'PLUS_BOOKING' || this.isEventType('ADD_ROOM') ? (\r\n              <div class=\"col-6\">\r\n                <button class=\"btn btn-primary full-width\" disabled={Object.keys(this.selectedRooms).length === 0} onClick={() => this.gotoPage(this.PAGE_TWO)}>\r\n                  Next &gt;&gt;\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPageBlockDatesView() {\r\n    return (\r\n      <div class=\"scrollContent blockDatesForm\">\r\n        <igl-block-dates-view\r\n          fromDate={this.dateRangeData.fromDateStr}\r\n          toDate={this.dateRangeData.toDateStr}\r\n          entryDate={this.bookingData.ENTRY_DATE}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"row p-0 mb-1 mt-2\">\r\n          <div class=\"col-6\">\r\n            <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <button class=\"btn btn-primary full-width\" onClick={() => this.handleBlockDate()}>\r\n              Block dates\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: PageTwoButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    switch (event.detail.key) {\r\n      case 'save':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'cancel':\r\n        this.closeWindow();\r\n        break;\r\n      case 'back':\r\n        this.gotoPage(this.PAGE_ONE);\r\n        break;\r\n      case 'book':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'bookAndCheckIn':\r\n        this.bookUser(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (event.detail.key === 'propertyBookedBy') {\r\n      this.handleBookedByInfoUpdate(event);\r\n    } else {\r\n      this.handleGuestInfoUpdate(event);\r\n    }\r\n  }\r\n  async handleBlockDate() {\r\n    const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\r\n    const result = await this.bookingService.blockUnit({\r\n      from_date: dateToFormattedString(this.bookingData.defaultDateRange.fromDate),\r\n      to_date: dateToFormattedString(this.bookingData.defaultDateRange.toDate),\r\n      NOTES: this.blockDatesData.OPTIONAL_REASON || '',\r\n      pr_id: this.bookingData.PR_ID.toString(),\r\n      STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n      DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\r\n      ...releaseData,\r\n    });\r\n    const blockedUnit = await transformNewBLockedRooms(result);\r\n    this.blockedCreated.emit(blockedUnit);\r\n    this.closeWindow();\r\n    //window.location.reload();\r\n  }\r\n\r\n  async bookUser(check_in: boolean) {\r\n    this.setLoadingState(check_in);\r\n\r\n    try {\r\n      if (['003', '002', '004'].includes(this.bookingData.STATUS_CODE)) {\r\n        this.eventsService.deleteEvent(this.bookingData.POOL);\r\n      }\r\n\r\n      const arrivalTime = this.isEventType('EDIT_BOOKING') ? this.getArrivalTimeForBooking() : '';\r\n      const pr_id = this.isEventType('BAR_BOOKING') ? this.bookingData.PR_ID : undefined;\r\n      const booking_nbr = this.isEventType('EDIT_BOOKING') ? this.bookingData.BOOKING_NUMBER : undefined;\r\n      const result = await this.bookingService.bookUser(\r\n        this.bookedByInfoData,\r\n        check_in,\r\n        this.bookingData.defaultDateRange.fromDate,\r\n        this.bookingData.defaultDateRange.toDate,\r\n        this.guestData,\r\n        this.dateRangeData.dateDifference,\r\n        this.sourceOption,\r\n        this.propertyid,\r\n        this.currency,\r\n        booking_nbr,\r\n        this.bookingData.GUEST,\r\n        arrivalTime,\r\n        pr_id,\r\n      );\r\n      if (check_in) {\r\n        const newBookings: RoomBookingDetails[] = transformNewBooking(result);\r\n        this.bookingCreated.emit(newBookings);\r\n      }\r\n      //window.location.reload();\r\n      //console.log(\"booking data \", this.bookingData);\r\n    } catch (error) {\r\n      //  toastr.error(error);\r\n    } finally {\r\n      this.resetLoadingState();\r\n    }\r\n  }\r\n\r\n  setLoadingState(assign_units: boolean) {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.isLoading = 'save';\r\n    } else {\r\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\r\n    }\r\n  }\r\n\r\n  getArrivalTimeForBooking(): string {\r\n    return this.bookedByInfoData.arrivalTime.find(e => e.CODE_VALUE_EN === this.bookingData.ARRIVAL_TIME).CODE_NAME;\r\n  }\r\n\r\n  resetLoadingState() {\r\n    this.isLoading = '';\r\n    setTimeout(() => {\r\n      this.closeWindow();\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\r\n        <div class={'sideWindow ' + (this.isPageBlockDates() ? 'col-sm-12 col-md-6 col-lg-5 col-xl-4' : 'col-sm-12 col-md-11 col-lg-9 col-xl-8')}>\r\n          <div class=\"card mb-0 shadow-none p-0\">\r\n            <div class=\"card-header\">\r\n              <h3 class=\"card-title text-left pb-1 font-medium-2\">{this.isPageBlockDates() ? this.bookingData.BLOCK_DATES_TITLE : this.bookingData.TITLE}</h3>\r\n              <button type=\"button\" class=\"close close-icon\" onClick={() => this.closeWindow()}>\r\n                <i class=\"ft-x\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {this.isPageZero() && this.getPageZeroView()}\r\n\r\n          {this.isPageOne() && this.getPageOneView()}\r\n\r\n          {this.isPageTwo() && (\r\n            <igl-pagetwo\r\n              showPaymentDetails={this.showPaymentDetails}\r\n              selectedGuestData={this.guestData}\r\n              countryNodeList={this.countryNodeList}\r\n              isLoading={this.isLoading}\r\n              selectedRooms={this.selectedRooms}\r\n              bedPreferenceType={this.bedPreferenceType}\r\n              dateRangeData={this.dateRangeData}\r\n              bookingData={this.bookingData}\r\n              showSplitBookingOption={this.showSplitBookingOption}\r\n              language={this.language}\r\n              bookedByInfoData={this.bookedByInfoData}\r\n              isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\r\n              onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\r\n              onButtonClicked={event => this.handleButtonClicked(event)}\r\n            ></igl-pagetwo>\r\n          )}\r\n\r\n          {this.isPageBlockDates() ? this.getPageBlockDatesView() : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n  position: absolute;\r\n}\r\n\r\n.bookingEventBase {\r\n  position: absolute;\r\n  background-color: rgb(49, 190, 241);\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: skewX(-22deg);\r\n}\r\n\r\n.bookingEventHiddenBase {\r\n  position: absolute;\r\n  top: 0;\r\n  left: -4px;\r\n  width: calc(100% + 8);\r\n}\r\n\r\n.bookingEventDragHandle {\r\n  position: absolute;\r\n  top: 0;\r\n  width: 15px;\r\n  height: 100%;\r\n  opacity: 0.1;\r\n  background-color: rgba(0, 0, 0, 0.15);\r\n  transform: skewX(-22deg);\r\n  /* display: none; */\r\n  cursor: pointer;\r\n}\r\n\r\n.splitBooking {\r\n  border-right: 2px solid #000000;\r\n}\r\n\r\n:host:hover .bookingEventDragHandle {\r\n  display: block;\r\n  opacity: 1;\r\n}\r\n\r\n:host.newEvent:hover .bookingEventDragHandle {\r\n  display: none;\r\n  opacity: 1;\r\n}\r\n\r\n.leftSide {\r\n  left: 0;\r\n}\r\n\r\n.rightSide {\r\n  right: 0;\r\n}\r\n\r\n.bookingEventTitle {\r\n  color: #fff;\r\n  font-size: 0.8em;\r\n  position: relative;\r\n  max-width: calc(100% - 10px);\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  top: 2px;\r\n  left: 5px;\r\n}\r\n\r\n.legend_circle {\r\n  border-radius: 100%;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin: 3px 3px 3px 2px;\r\n  border: 1px solid #fff;\r\n}\r\n\r\n.noteIcon {\r\n  position: absolute;\r\n  bottom: -8px;\r\n  left: 2px;\r\n}\r\n\r\n.balanceIcon {\r\n  position: absolute;\r\n  top: -8px;\r\n  right: 2px;\r\n}\r\n","import { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-booking-event',\r\n  styleUrl: 'igl-booking-event.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingEvent {\r\n  @Element() private element: HTMLElement;\r\n  @Prop() currency;\r\n  @Prop() is_vacation_rental: boolean = false;\r\n  @Event({ bubbles: true, composed: true }) hideBubbleInfo: EventEmitter;\r\n\r\n  @Event() updateEventData: EventEmitter;\r\n  @Event() dragOverEventData: EventEmitter;\r\n\r\n  @Prop() bookingEvent: { [key: string]: any };\r\n  @Prop() allBookingEvents: { [key: string]: any } = [];\r\n  @Prop() countryNodeList;\r\n\r\n  @State() renderElement: boolean = false;\r\n  @State() position: { [key: string]: any };\r\n\r\n  dayWidth: number = 0;\r\n  eventSpace: number = 8;\r\n  vertSpace: number = 10;\r\n\r\n  /* show bubble */\r\n  private showInfoPopup: boolean = false;\r\n  private bubbleInfoTopSide: boolean = false;\r\n  /* Resize props */\r\n  resizeSide: string = '';\r\n  isDragging: boolean = false;\r\n  initialX: number;\r\n  initialY: number;\r\n  currentX: number;\r\n  currentY: number;\r\n  initialWidth: number;\r\n  initialLeft: number;\r\n  finalWidth: number;\r\n  dragInitPos: { [key: string]: any };\r\n  dragEndPos: { [key: string]: any };\r\n  elementRect: { [key: string]: any };\r\n  isTouchStart: boolean;\r\n  moveDiffereneX: number;\r\n  moveDiffereneY: number;\r\n\r\n  handleMouseMoveBind = this.handleMouseMove.bind(this);\r\n  handleMouseUpBind = this.handleMouseUp.bind(this);\r\n  handleClickOutsideBind = this.handleClickOutside.bind(this);\r\n\r\n  componentWillLoad() {\r\n    window.addEventListener('click', this.handleClickOutsideBind);\r\n  }\r\n\r\n  componentDidLoad() {\r\n    if (this.isNewEvent()) {\r\n      if (!this.bookingEvent.hideBubble) {\r\n        /* auto matically open the popup, calling the method shows bubble either top or bottom based on available space. */\r\n        setTimeout(() => {\r\n          this.showEventInfo(true);\r\n          this.renderAgain();\r\n        }, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.removeEventListener('click', this.handleClickOutsideBind);\r\n  }\r\n\r\n  @Listen('click', { target: 'window' })\r\n  handleClickOutside(event: Event) {\r\n    const clickedElement = event.target as HTMLElement;\r\n    // Check if the clicked element is not within the target div\r\n    if (!this.element.contains(clickedElement)) {\r\n      // The click occurred outside the target div\r\n      this.showEventInfo(false);\r\n    }\r\n  }\r\n\r\n  @Listen('hideBubbleInfo', { target: 'window' })\r\n  hideBubbleInfoPopup(event: CustomEvent) {\r\n    if (event.detail.currentInfoBubbleId != this.getBookingId() || (event.detail.key === 'hidebubble' && event.detail.currentInfoBubbleId === this.getBookingId())) {\r\n      this.showInfoPopup = false;\r\n      this.renderAgain();\r\n    }\r\n  }\r\n\r\n  @Listen('moveBookingTo', { target: 'window' })\r\n  async moveBookingToHandler(event: CustomEvent) {\r\n    try {\r\n      if (event.detail.bookingId !== this.getBookingId()) {\r\n        this.showEventInfo(false);\r\n        return;\r\n      }\r\n      // event.detail.fromRoomId === this.getBookedRoomId() && ()\r\n      if (event.detail.moveToDay === 'revert' || event.detail.toRoomId === 'revert') {\r\n        event.detail.moveToDay = this.bookingEvent.FROM_DATE;\r\n        event.detail.toRoomId = event.detail.fromRoomId;\r\n        if (this.isTouchStart && this.moveDiffereneX <= 5 && this.moveDiffereneY <= 5) {\r\n          this.showEventInfo(true);\r\n        }\r\n      } else {\r\n        if (this.isTouchStart && this.moveDiffereneX <= 5 && this.moveDiffereneY <= 5) {\r\n          this.showEventInfo(true);\r\n        } else {\r\n          const { pool, from_date, to_date, toRoomId } = event.detail as any;\r\n          console.log(pool, from_date, to_date, toRoomId);\r\n          // const result = await this.eventsService.reallocateEvent(\r\n          //   pool,\r\n          //   toRoomId,\r\n          //   from_date,\r\n          //   to_date\r\n          // );\r\n          //this.bookingEvent.POOL = result.My_Result.POOL;\r\n          console.log(event.detail);\r\n          console.log('calll update here');\r\n        }\r\n      }\r\n\r\n      if (event.detail.fromRoomId === this.getBookedRoomId()) {\r\n        // Temporarily set to some other title and revert it.. as refresh issue is happening when there minimum change in top / left.\r\n        // this.onMoveUpdateBooking({ toRoomId: \"X\", moveToDay: \"01_01_2023\" });\r\n        // this.renderAgain();\r\n        // setTimeout(() => {\r\n        // }, 20);\r\n        this.onMoveUpdateBooking(event.detail);\r\n        this.renderAgain();\r\n      }\r\n    } catch (error) {\r\n      //  toastr.error(error);\r\n    }\r\n  }\r\n\r\n  renderAgain() {\r\n    this.renderElement = !this.renderElement;\r\n  }\r\n\r\n  getUniqueId() {\r\n    return new Date().getTime();\r\n  }\r\n\r\n  onMoveUpdateBooking(data) {\r\n    this.bookingEvent.PR_ID = data.toRoomId;\r\n    this.bookingEvent.FROM_DATE = data.moveToDay.split('_').reverse().join('/');\r\n    let tempDate = new Date(this.bookingEvent.FROM_DATE);\r\n    tempDate.setDate(tempDate.getDate() + this.getStayDays());\r\n    this.bookingEvent.TO_DATE = tempDate.getFullYear() + '/' + (tempDate.getMonth() + 1) + '/' + tempDate.getDate();\r\n  }\r\n  /* End of Resize props */\r\n\r\n  isSplitBooking() {\r\n    return !!this.bookingEvent.SPLIT_BOOKING;\r\n  }\r\n\r\n  isNewEvent() {\r\n    return this.getBookingId() === 'NEW_TEMP_EVENT';\r\n  }\r\n\r\n  isHighlightEventType() {\r\n    return this.getEventType() === 'HIGH_LIGHT';\r\n  }\r\n\r\n  getBookingId() {\r\n    return this.bookingEvent.ID;\r\n  }\r\n\r\n  getBookingStatus() {\r\n    return this.bookingEvent.STATUS;\r\n  }\r\n\r\n  getBookedBy() {\r\n    return this.bookingEvent.NAME;\r\n  }\r\n\r\n  getBookedRoomId() {\r\n    return this.bookingEvent.PR_ID;\r\n  }\r\n\r\n  getEventStartingDate() {\r\n    return new Date(this.bookingEvent.FROM_DATE);\r\n  }\r\n\r\n  getEventEndingDate() {\r\n    return new Date(this.bookingEvent.TO_DATE);\r\n  }\r\n\r\n  getEventType() {\r\n    return this.bookingEvent.event_type;\r\n  }\r\n\r\n  getEventLegend() {\r\n    // console.log(this.getBookingStatus());\r\n    let status = this.bookingEvent?.legendData.statusId[this.getBookingStatus()];\r\n    let orderRide = this.isNewEvent() ? { color: '#f9f9c9' } : {};\r\n    return {\r\n      ...this.bookingEvent?.legendData[status.id],\r\n      ...status,\r\n      ...orderRide,\r\n    };\r\n  }\r\n\r\n  getLegendOfStatus(aStatusId) {\r\n    // console.log(aStatusId);\r\n    let status = this.bookingEvent?.legendData.statusId[aStatusId];\r\n    return { ...this.bookingEvent.legendData[status.id], ...status };\r\n  }\r\n\r\n  getNoteNode() {\r\n    if (this.bookingEvent.NOTES || this.bookingEvent.INTERNAL_NOTE) {\r\n      return this.getLegendOfStatus('NOTES');\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getBalanceNode() {\r\n    if (this.bookingEvent.BALANCE) {\r\n      return this.getLegendOfStatus('OUTSTANDING-BALANCE');\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setStayDays(aStayDays: number) {\r\n    this.bookingEvent.NO_OF_DAYS = aStayDays;\r\n    this.renderAgain();\r\n    // this.updateData({id: this.getBookedRoomId(), data: { NO_OF_DAYS: aStayDays }});\r\n  }\r\n\r\n  getStayDays() {\r\n    return this.bookingEvent.NO_OF_DAYS;\r\n  }\r\n\r\n  getPosition() {\r\n    let startingDate = this.getEventStartingDate();\r\n    let startingCellClass = '.room_' + this.getBookedRoomId() + '_' + startingDate.getDate() + '_' + (startingDate.getMonth() + 1) + '_' + startingDate.getFullYear();\r\n    let bodyContainer = document.querySelector('.bodyContainer');\r\n    let startingCell = document.querySelector(startingCellClass);\r\n    let pos = { top: '0', left: '0', width: '0', height: '20px' };\r\n    if (startingCell && bodyContainer && startingCell.getBoundingClientRect() && bodyContainer.getBoundingClientRect()) {\r\n      let bodyContainerRect = bodyContainer.getBoundingClientRect();\r\n      let boundingRect = startingCell.getBoundingClientRect();\r\n      this.dayWidth = this.dayWidth || boundingRect.width;\r\n      pos.top = boundingRect.top + boundingRect.height / 2 - this.vertSpace - bodyContainerRect.top + 'px';\r\n      pos.left = boundingRect.left + this.dayWidth / 2 + this.eventSpace / 2 - bodyContainerRect.left + 'px';\r\n      pos.width = this.getStayDays() * this.dayWidth - this.eventSpace + 'px';\r\n    } else {\r\n      console.log('Locating event cell failed ', startingCellClass);\r\n    }\r\n    //console.log(pos);\r\n    return pos;\r\n  }\r\n\r\n  getNumber(aData) {\r\n    return aData ? parseFloat(aData) : 0;\r\n  }\r\n\r\n  startDragging(event: any, side: string) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n\r\n    if (this.isNewEvent() || this.isHighlightEventType()) {\r\n      return null;\r\n    }\r\n\r\n    this.resizeSide = side;\r\n    this.isDragging = true;\r\n\r\n    this.showEventInfo(false); // Hide bubble;\r\n\r\n    if (side === 'move') {\r\n      this.initialX = event.clientX || event.touches[0].clientX;\r\n      this.initialY = event.clientY || event.touches[0].clientY;\r\n      this.elementRect = this.element.getBoundingClientRect();\r\n      const offsetX = 0; //this.initialX - this.elementRect.left - 18;\r\n      const offsetY = 0; // this.initialY - this.elementRect.top - (this.elementRect.height/2);\r\n      this.dragInitPos = {\r\n        id: this.getBookingId(),\r\n        fromRoomId: this.getBookedRoomId(),\r\n        top: this.getNumber(this.element.style.top) + offsetY,\r\n        left: this.getNumber(this.element.style.left) + offsetX,\r\n      };\r\n      this.dragInitPos.x = this.dragInitPos.left; // + 18;\r\n      this.dragInitPos.y = this.dragInitPos.top; // + (this.elementRect.height/2);\r\n      this.dragEndPos = { ...this.dragInitPos };\r\n      this.element.style.top = `${this.dragInitPos.top}px`;\r\n      this.element.style.left = `${this.dragInitPos.left}px`;\r\n      this.isTouchStart = true; // !!(event.touches && event.touches.length);\r\n      this.dragOverEventData.emit({\r\n        id: 'CALCULATE_DRAG_OVER_BOUNDS',\r\n        data: this.dragInitPos,\r\n      });\r\n    } else {\r\n      this.initialWidth = this.element.offsetWidth;\r\n      this.initialLeft = this.element.offsetLeft;\r\n      this.initialX = event.clientX || event.touches[0].clientX;\r\n      this.dragOverEventData.emit({\r\n        id: 'CALCULATE_DRAG_OVER_BOUNDS',\r\n        data: {\r\n          id: this.getBookingId(),\r\n          fromRoomId: this.getBookedRoomId(),\r\n          top: this.getNumber(this.element.style.top),\r\n          left: this.initialLeft,\r\n          x: this.initialX,\r\n          y: event.clientY || event.touches[0].clientY,\r\n        },\r\n      });\r\n    }\r\n\r\n    document.addEventListener('mousemove', this.handleMouseMoveBind);\r\n    document.addEventListener('touchmove', this.handleMouseMoveBind);\r\n    document.addEventListener('pointermove', this.handleMouseMoveBind);\r\n\r\n    document.addEventListener('mouseup', this.handleMouseUpBind);\r\n    document.addEventListener('touchup', this.handleMouseUpBind);\r\n    document.addEventListener('pointerup', this.handleMouseUpBind);\r\n  }\r\n\r\n  handleMouseMove(event: any) {\r\n    if (this.isDragging) {\r\n      this.currentX = event.clientX || event.touches[0].clientX;\r\n      let distanceX = this.currentX - this.initialX;\r\n      if (this.resizeSide === 'move') {\r\n        this.currentY = event.clientY || event.touches[0].clientY;\r\n        let distanceY = this.currentY - this.initialY;\r\n        this.element.style.top = `${this.dragInitPos.top + distanceY}px`;\r\n        this.element.style.left = `${this.dragInitPos.left + distanceX}px`;\r\n        this.dragEndPos = {\r\n          id: this.getBookingId(),\r\n          fromRoomId: this.getBookedRoomId(),\r\n          top: this.dragInitPos.top + distanceY,\r\n          left: this.dragInitPos.left + distanceX,\r\n        };\r\n        this.dragEndPos.x = this.dragEndPos.left; // + 18;\r\n        this.dragEndPos.y = this.dragEndPos.top; // + (this.elementRect.height/2);\r\n        this.dragOverEventData.emit({ id: 'DRAG_OVER', data: this.dragEndPos });\r\n      } else {\r\n        let newWidth = this.initialWidth;\r\n        if (this.resizeSide == 'rightSide') {\r\n          newWidth = this.initialWidth + distanceX;\r\n          newWidth = Math.min(newWidth, this.initialX + this.element.offsetWidth);\r\n          newWidth = Math.max(this.dayWidth - this.eventSpace, newWidth);\r\n          this.element.style.width = `${newWidth}px`;\r\n        } else if (this.resizeSide == 'leftSide') {\r\n          newWidth = Math.max(this.dayWidth - this.eventSpace, this.initialWidth - distanceX);\r\n          let newLeft = this.initialLeft + (this.initialWidth - newWidth);\r\n          this.element.style.left = `${newLeft}px`;\r\n          this.element.style.width = `${newWidth}px`;\r\n        }\r\n        this.finalWidth = newWidth;\r\n      }\r\n    } else {\r\n      console.log('still mouse move listening...');\r\n    }\r\n  }\r\n\r\n  handleMouseUp() {\r\n    if (this.isDragging) {\r\n      if (this.resizeSide === 'move') {\r\n        // console.log(\"Initial X::\"+this.dragInitPos.x);\r\n        // console.log(\"Initial Y::\"+this.dragInitPos.y);\r\n        // console.log(\"End X::\"+this.dragEndPos.x);\r\n        // console.log(\"End Y::\"+this.dragEndPos.y);\r\n        if (this.isTouchStart) {\r\n          this.moveDiffereneX = Math.abs(this.dragEndPos.x - this.dragInitPos.x);\r\n          this.moveDiffereneY = Math.abs(this.dragEndPos.y - this.dragInitPos.y);\r\n        }\r\n        this.dragOverEventData.emit({\r\n          id: 'DRAG_OVER_END',\r\n          data: {\r\n            ...this.dragEndPos,\r\n            pool: this.bookingEvent.POOL,\r\n            nbOfDays: this.bookingEvent.NO_OF_DAYS,\r\n          },\r\n        });\r\n      } else {\r\n        let numberOfDays = Math.round(this.finalWidth / this.dayWidth);\r\n        let initialStayDays = this.getStayDays();\r\n        if (initialStayDays != numberOfDays) {\r\n          this.setStayDays(numberOfDays);\r\n          if (this.resizeSide == 'leftSide') {\r\n            this.element.style.left = `${this.initialLeft + (initialStayDays - numberOfDays) * this.dayWidth}px`;\r\n            // set FROM_DATE = TO_DATE - numberOfDays\r\n          } else {\r\n            // set TO_DATE = FROM_DATE + numberOfDays\r\n          }\r\n          this.dragOverEventData.emit({\r\n            id: 'STRETCH_OVER_END',\r\n            data: {\r\n              id: this.getBookingId(),\r\n              fromRoomId: +this.getBookedRoomId(),\r\n              x: +this.element.style.left.replace('px', ''),\r\n              y: +this.element.style.top.replace('px', ''),\r\n              pool: this.bookingEvent.POOL,\r\n              nbOfDays: this.bookingEvent.NO_OF_DAYS,\r\n            },\r\n          });\r\n          this.element.style.width = `${numberOfDays * this.dayWidth - this.eventSpace}px`;\r\n        } else {\r\n          this.element.style.left = `${this.initialLeft}px`;\r\n          this.element.style.width = `${numberOfDays * this.dayWidth - this.eventSpace}px`;\r\n        }\r\n      }\r\n    } else {\r\n      console.log('still mouse up listening...');\r\n    }\r\n    this.isDragging = false;\r\n    document.removeEventListener('mousemove', this.handleMouseMoveBind);\r\n    document.removeEventListener('touchmove', this.handleMouseMoveBind);\r\n    document.removeEventListener('pointermove', this.handleMouseMoveBind);\r\n\r\n    document.removeEventListener('mouseup', this.handleMouseUpBind);\r\n    document.removeEventListener('touchup', this.handleMouseUpBind);\r\n    document.removeEventListener('pointerup', this.handleMouseUpBind);\r\n  }\r\n\r\n  updateData(data: any) {\r\n    this.updateEventData.emit(data);\r\n  }\r\n\r\n  showEventInfo(showInfo) {\r\n    if (this.isHighlightEventType() || this.bookingEvent.hideBubble) {\r\n      return null;\r\n    }\r\n\r\n    if (showInfo) {\r\n      // Calculate which side we need to show the bubble, top side or bottom.\r\n      let bodyContainer = document.querySelector('.calendarScrollContainer');\r\n      let bodyContainerRect: { [key: string]: any } = bodyContainer.getBoundingClientRect();\r\n      let elementRect: { [key: string]: any } = this.element.getBoundingClientRect();\r\n      let midPoint = bodyContainerRect.height / 2 + bodyContainerRect.top;\r\n      // let topDifference = elementRect.top - bodyContainerRect.top;\r\n      // let bottomDifference = bodyContainerRect.bottom - elementRect.bottom;\r\n\r\n      if (elementRect.top < midPoint) {\r\n        this.bubbleInfoTopSide = false;\r\n      } else {\r\n        this.bubbleInfoTopSide = true;\r\n      }\r\n    }\r\n\r\n    // showInfo = true;\r\n    if (showInfo) {\r\n      this.hideBubbleInfo.emit({\r\n        key: 'hidePopup',\r\n        currentInfoBubbleId: this.getBookingId(),\r\n      });\r\n    }\r\n    this.showInfoPopup = showInfo;\r\n    this.renderAgain();\r\n  }\r\n\r\n  render() {\r\n    // onMouseLeave={()=>this.showEventInfo(false)}\r\n    let legend = this.getEventLegend();\r\n    let noteNode = this.getNoteNode();\r\n    let balanceNode = this.getBalanceNode();\r\n\r\n    return (\r\n      <Host\r\n        class={`bookingEvent ${this.isNewEvent() || this.isHighlightEventType() ? 'newEvent' : ''} ${legend.clsName}`}\r\n        style={this.getPosition()}\r\n        id={'event_' + this.getBookingId()}\r\n      >\r\n        {/* onMouseOver={() =>this.showEventInfo(true)}  */}\r\n        <div\r\n          class={`bookingEventBase  ${this.isSplitBooking() ? 'splitBooking' : ''}`}\r\n          style={{ backgroundColor: legend.color }}\r\n          onTouchStart={event => this.startDragging(event, 'move')}\r\n          onMouseDown={event => this.startDragging(event, 'move')}\r\n        ></div>\r\n        {noteNode ? <div class=\"legend_circle noteIcon\" style={{ backgroundColor: noteNode.color }}></div> : null}\r\n        {balanceNode ? <div class=\"legend_circle balanceIcon\" style={{ backgroundColor: balanceNode.color }}></div> : null}\r\n        {/* onMouseOver={() => this.showEventInfo(true)}  */}\r\n        <div class=\"bookingEventTitle\" onTouchStart={event => this.startDragging(event, 'move')} onMouseDown={event => this.startDragging(event, 'move')}>\r\n          {this.getBookedBy()}\r\n        </div>\r\n        <div\r\n          class=\"bookingEventDragHandle leftSide\"\r\n          onTouchStart={event => this.startDragging(event, 'leftSide')}\r\n          onMouseDown={event => this.startDragging(event, 'leftSide')}\r\n        ></div>\r\n        <div\r\n          class=\"bookingEventDragHandle rightSide\"\r\n          onTouchStart={event => this.startDragging(event, 'rightSide')}\r\n          onMouseDown={event => this.startDragging(event, 'rightSide')}\r\n        ></div>\r\n        {this.showInfoPopup ? (\r\n          <igl-booking-event-hover\r\n            is_vacation_rental={this.is_vacation_rental}\r\n            countryNodeList={this.countryNodeList}\r\n            currency={this.currency}\r\n            class=\"top\"\r\n            bookingEvent={this.bookingEvent}\r\n            bubbleInfoTop={this.bubbleInfoTopSide}\r\n          ></igl-booking-event-hover>\r\n        ) : null}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url('../../../assets/feather/style.min.css');\r\n@import url('../../../assets/fontawesome/css/all.css');\r\n@import url('../../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  display: block;\r\n  position: relative;\r\n  z-index: 100;\r\n}\r\n\r\n.btn {\r\n  padding-left: 4px !important;\r\n  padding-right: 4px !important;\r\n}\r\n\r\n.pointerContainer {\r\n  position: absolute;\r\n  left: 50%;\r\n  height: 10px;\r\n  width: 350px;\r\n  transform: translate(-50%, 0);\r\n}\r\n\r\n.pointerContainerTop {\r\n  top: -26px;\r\n}\r\n\r\n.iglPopOver {\r\n  max-width: 350px;\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  border: 1px solid #656ee7;\r\n  border-radius: 6px;\r\n  position: absolute;\r\n  transform: translate(-50%, 10px);\r\n  left: 50%;\r\n  box-shadow: 1px 0px 20px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.iglPopOver.infoBubble {\r\n  width: 350px;\r\n}\r\n\r\n.iglPopOver.blockedView {\r\n  max-width: 400px;\r\n  width: 400px;\r\n}\r\n\r\n.iglPopOver.newBookingOptions {\r\n  width: 230px;\r\n}\r\n\r\n.bubblePointer {\r\n  position: absolute;\r\n  width: 0;\r\n  height: 0;\r\n  left: 50%;\r\n  border-left: 10px solid transparent;\r\n  border-right: 10px solid transparent;\r\n  transform: translate(-50%, 0px);\r\n}\r\n\r\n.bubblePointTop {\r\n  border-top: 10px solid #656ee7;\r\n}\r\n\r\n.bubblePointBottom {\r\n  border-bottom: 10px solid #656ee7;\r\n}\r\n\r\n.bubbleInfoAbove {\r\n  bottom: 35px;\r\n}\r\n\r\n.updateBtnIcon {\r\n  margin-right: 4px;\r\n}\r\n.icon-image {\r\n  margin-right: 5px;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State } from '@stencil/core';\r\nimport { findCountry, getCurrencySymbol } from '../../../utils/utils';\r\nimport { ICountry } from '../../../models/IBooking';\r\nimport { EventsService } from '../../../services/events.service';\r\n\r\n@Component({\r\n  tag: 'igl-booking-event-hover',\r\n  styleUrl: 'igl-booking-event-hover.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingEventHover {\r\n  @Prop({ mutable: true }) bookingEvent: { [key: string]: any };\r\n  @Prop() bubbleInfoTop: boolean = false;\r\n  @Prop() currency;\r\n  @Prop() countryNodeList: ICountry[];\r\n  @Prop() is_vacation_rental: boolean = false;\r\n  @State() isLoading: string;\r\n  @Event() showBookingPopup: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) hideBubbleInfo: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) deleteButton: EventEmitter<string>;\r\n  private fromTimeStamp: number;\r\n  private toTimeStamp: number;\r\n  private todayTimeStamp: number = new Date().setHours(0, 0, 0, 0);\r\n  private eventService = new EventsService();\r\n  getBookingId() {\r\n    return this.bookingEvent.ID;\r\n  }\r\n\r\n  getTotalOccupants() {\r\n    return this.bookingEvent.ADULTS_COUNT;\r\n  }\r\n\r\n  getPhoneNumber() {\r\n    return this.bookingEvent.PHONE;\r\n  }\r\n\r\n  getCountry() {\r\n    return findCountry(this.bookingEvent.COUNTRY, this.countryNodeList).name;\r\n  }\r\n  getPhoneCode() {\r\n    return findCountry(this.bookingEvent.COUNTRY, this.countryNodeList).phone_prefix;\r\n  }\r\n  renderPhone() {\r\n    return this.bookingEvent.COUNTRY ? `${this.getPhoneCode()}-${this.getPhoneNumber()} - ${this.getCountry()}` : this.getPhoneNumber();\r\n  }\r\n\r\n  getGuestNote() {\r\n    return this.bookingEvent.NOTES;\r\n  }\r\n\r\n  getInternalNote() {\r\n    return this.bookingEvent.INTERNAL_NOTE;\r\n  }\r\n\r\n  getTotalPrice() {\r\n    return this.bookingEvent.TOTAL_PRICE;\r\n  }\r\n\r\n  getCheckInDate() {\r\n    return this.bookingEvent.FROM_DATE_STR;\r\n  }\r\n\r\n  getCheckOutDate() {\r\n    return this.bookingEvent.TO_DATE_STR;\r\n  }\r\n\r\n  getArrivalTime() {\r\n    return this.bookingEvent.ARRIVAL_TIME;\r\n  }\r\n\r\n  getRatePlan() {\r\n    return this.bookingEvent.RATE_PLAN;\r\n  }\r\n\r\n  getEntryDate() {\r\n    return this.bookingEvent.ENTRY_DATE;\r\n  }\r\n\r\n  getReleaseAfterHours() {\r\n    return this.bookingEvent.RELEASE_AFTER_HOURS;\r\n  }\r\n\r\n  isNewBooking() {\r\n    return this.getBookingId() === 'NEW_TEMP_EVENT';\r\n  }\r\n\r\n  isCheckedIn() {\r\n    return this.bookingEvent.STATUS === 'CHECKED-IN';\r\n  }\r\n\r\n  isCheckedOut() {\r\n    return this.bookingEvent.STATUS === 'CHECKED-OUT';\r\n  }\r\n\r\n  isBlockedDateEvent() {\r\n    return this.bookingEvent.STATUS === 'BLOCKED' || this.bookingEvent.STATUS === 'BLOCKED-WITH-DATES';\r\n  }\r\n\r\n  getRoomId() {\r\n    return this.bookingEvent.PR_ID;\r\n  }\r\n\r\n  getCategoryByRoomId(roomId) {\r\n    // console.log(\"room id \",roomId)\r\n    // console.log(\"booking event\",this.bookingEvent)\r\n    return this.bookingEvent.roomsInfo.find(roomCategory => roomCategory.physicalrooms.find(room => room.id === roomId));\r\n  }\r\n\r\n  hasSplitBooking() {\r\n    return this.bookingEvent.hasOwnProperty('splitBookingEvents') && this.bookingEvent.splitBookingEvents.length;\r\n  }\r\n\r\n  canCheckIn() {\r\n    if (!this.fromTimeStamp) {\r\n      let dt = new Date(this.getCheckInDate());\r\n      dt.setHours(0, 0, 0, 0);\r\n      this.fromTimeStamp = dt.getTime();\r\n    }\r\n    if (!this.toTimeStamp) {\r\n      let dt = new Date(this.getCheckOutDate());\r\n      dt.setHours(0, 0, 0, 0);\r\n      this.toTimeStamp = dt.getTime();\r\n    }\r\n    if (this.isCheckedIn() || this.isCheckedOut()) {\r\n      return false;\r\n    }\r\n    if (this.fromTimeStamp <= this.todayTimeStamp && this.todayTimeStamp <= this.toTimeStamp) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  canCheckOut() {\r\n    if (this.isCheckedIn() && this.todayTimeStamp <= this.toTimeStamp) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookingEvent = { ...this.bookingEvent, ...opt.data };\r\n    //console.log(\"blocked date booking event\", this.bookingEvent);\r\n  }\r\n\r\n  handleEditBooking() {\r\n    // console.log(\"Edit booking\");\r\n    this.bookingEvent.TITLE = 'Edit Room';\r\n    this.handleBookingOption('EDIT_BOOKING');\r\n  }\r\n\r\n  getStringDateFormat(dt) {\r\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\r\n  }\r\n\r\n  handleAddRoom() {\r\n    let fromDate = new Date();\r\n    fromDate.setHours(0, 0, 0, 0);\r\n    let from_date_str = this.getStringDateFormat(fromDate);\r\n\r\n    let toDate = new Date();\r\n    toDate.setDate(toDate.getDate() + 1);\r\n    toDate.setHours(0, 0, 0, 0);\r\n    let to_date_str = this.getStringDateFormat(toDate);\r\n\r\n    let eventData = {\r\n      ID: '',\r\n      NAME: '',\r\n      FROM_DATE: from_date_str, // \"2023-07-09\",\r\n      TO_DATE: to_date_str, // \"2023-07-11\",\r\n      roomsInfo: this.bookingEvent.roomsInfo,\r\n      ADD_ROOM_TO_BOOKING: this.bookingEvent.ID,\r\n      TITLE: 'Add Room to #' + this.bookingEvent.ID + ' - ' + this.bookingEvent.NAME,\r\n      event_type: 'ADD_ROOM',\r\n      defaultDateRange: {\r\n        fromDate: fromDate, //new Date(\"2023-09-10\"),\r\n        fromDateStr: '', //\"10 Sep 2023\",\r\n        toDate: toDate, //new Date(\"2023-09-15\"),\r\n        toDateStr: '', // \"15 Sep 2023\",\r\n        dateDifference: 0,\r\n        editabled: true,\r\n        message: 'Including 5.00% City Tax - Excluding 11.00% VAT',\r\n      },\r\n    };\r\n\r\n    this.handleBookingOption('ADD_ROOM', eventData);\r\n  }\r\n\r\n  handleCustomerCheckIn() {\r\n    console.log('Handle Customer Check In');\r\n  }\r\n\r\n  handleCustomerCheckOut() {\r\n    console.log('Handle Customer Check Out');\r\n  }\r\n  handleDeleteEvent() {\r\n    this.deleteButton.emit(this.bookingEvent.POOL);\r\n    console.log('Delete Event');\r\n  }\r\n\r\n  async handleUpdateBlockedDates() {\r\n    try {\r\n      this.isLoading = 'update';\r\n      await this.eventService.updateBlockedEvent(this.bookingEvent);\r\n      this.hideBubbleInfo.emit({\r\n        key: 'hidebubble',\r\n        currentInfoBubbleId: this.getBookingId(),\r\n      });\r\n      this.isLoading = '';\r\n      console.log('Updated blocked dates');\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleConvertBlockedDateToBooking() {\r\n    this.handleBookingOption('BAR_BOOKING');\r\n  }\r\n\r\n  getRoomInfo() {\r\n    const roomIdToFind = +this.bookingEvent.PR_ID;\r\n    let selectedRoom: any = {};\r\n\r\n    for (const room of this.bookingEvent.roomsInfo) {\r\n      for (const physicalRoom of room.physicalrooms) {\r\n        if (roomIdToFind === physicalRoom.id) {\r\n          selectedRoom.CATEGORY = room.name;\r\n          selectedRoom.ROOM_NAME = physicalRoom.name;\r\n          selectedRoom.ROOMS_INFO = room;\r\n          return selectedRoom;\r\n        }\r\n      }\r\n    }\r\n\r\n    return selectedRoom;\r\n  }\r\n  handleBookingOption(eventType, roomData = null) {\r\n    const roomInfo = this.getRoomInfo();\r\n    let data = roomData ? roomData : this.bookingEvent;\r\n    data.event_type = eventType;\r\n    if (['003', '002', '004'].includes(this.bookingEvent.STATUS_CODE)) {\r\n      data.roomsInfo = [roomInfo.ROOMS_INFO];\r\n    }\r\n    this.showBookingPopup.emit({\r\n      key: 'add',\r\n      data: {\r\n        ...data,\r\n        TITLE: `New Booking for ${roomInfo.CATEGORY} ${roomInfo.ROOM_NAME}`,\r\n        //roomsInfo: [roomInfo.ROOMS_INFO],\r\n      },\r\n    });\r\n    this.hideBubbleInfo.emit({\r\n      key: 'hidebubble',\r\n      currentInfoBubbleId: this.getBookingId(),\r\n    });\r\n  }\r\n\r\n  getInfoElement() {\r\n    return (\r\n      <div class={`iglPopOver infoBubble ${this.bubbleInfoTop ? 'bubbleInfoAbove' : ''} text-left`}>\r\n        <div class=\"row p-0 m-0 pb-1\">\r\n          <div class=\"pl-0 col-8 font-weight-bold font-medium-1 d-flex align-items-center\">\r\n            <img src={this.bookingEvent.origin.Icon} alt=\"icon\" class={'icon-image'} />\r\n            <p class={'p-0 m-0'}>{!this.bookingEvent.is_direct ? this.bookingEvent.channel_booking_nbr : this.bookingEvent.BOOKING_NUMBER}</p>\r\n          </div>\r\n          <div class=\"pr-0 col-4 text-right\">\r\n            {getCurrencySymbol(this.currency.code)}\r\n            {this.getTotalPrice()}\r\n          </div>\r\n        </div>\r\n        <div class=\"row p-0 m-0\">\r\n          <div class=\"pl-0 pr-0 col-12\">\r\n            <span class=\"font-weight-bold\">In: </span>\r\n            {this.getCheckInDate()} - <span class=\"font-weight-bold\">Out: </span>\r\n            {this.getCheckOutDate()}\r\n          </div>\r\n        </div>\r\n        {this.getArrivalTime() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12\">\r\n              <span class=\"font-weight-bold\">Arrival time: </span>\r\n              {this.getArrivalTime()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getTotalOccupants() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12\">\r\n              <span class=\"font-weight-bold\">Occupancy: </span>\r\n              {this.getTotalOccupants()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getPhoneNumber() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12 text-wrap\">\r\n              <span class=\"font-weight-bold\">Phone: </span>\r\n              {this.renderPhone()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getRatePlan() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12\">\r\n              <span class=\"font-weight-bold\">Rate plan: </span>\r\n              {this.getRatePlan()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getGuestNote() ? (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"col-12 pl-0 pr-0 text-wrap\">\r\n              <sapn class=\"font-weight-bold\">Note: </sapn>\r\n              {this.getGuestNote()}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.getInternalNote() ? (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"col-12 pl-0 pr-0 text-wrap\">\r\n              <span class=\"font-weight-bold\">Internal remark: </span>\r\n              {this.getInternalNote()}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div class=\"row p-0 m-0 mt-2\">\r\n          <div class=\"full-width btn-group btn-group-sm font-small-3\" role=\"group\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary mr-1\"\r\n              onClick={_ => {\r\n                this.handleEditBooking();\r\n              }}\r\n              disabled={!this.bookingEvent.IS_EDITABLE}\r\n            >\r\n              <i class=\"ft ft-edit font-small-3\"></i> Edit\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary mr-1\"\r\n              onClick={_ => {\r\n                this.handleAddRoom();\r\n              }}\r\n              disabled={!this.bookingEvent.IS_EDITABLE}\r\n            >\r\n              <i class=\"ft ft-plus-circle font-small-3\"></i> Add room\r\n            </button>\r\n            {this.canCheckIn() ? (\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary p-0 mr-1\"\r\n                onClick={_ => {\r\n                  this.handleCustomerCheckIn();\r\n                }}\r\n                disabled={!this.bookingEvent.IS_EDITABLE}\r\n              >\r\n                <i class=\"ft ft-edit font-small-3\"></i> Check-in\r\n              </button>\r\n            ) : null}\r\n            {this.canCheckOut() ? (\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary p-0 mr-1\"\r\n                onClick={_ => {\r\n                  this.handleCustomerCheckOut();\r\n                }}\r\n                disabled={!this.bookingEvent.IS_EDITABLE}\r\n              >\r\n                <i class=\"ft ft-log-out font-small-3\"></i> Check-out\r\n              </button>\r\n            ) : null}\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-danger p-0\"\r\n              onClick={_ => {\r\n                this.handleDeleteEvent();\r\n              }}\r\n              disabled={!this.bookingEvent.IS_EDITABLE || this.is_vacation_rental}\r\n            >\r\n              <i class=\"ft ft-trash-2 font-small-3\"></i> Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getNewBookingOptions() {\r\n    return (\r\n      <div class={`iglPopOver newBookingOptions ${this.bubbleInfoTop ? 'bubbleInfoAbove' : ''} text-left`}>\r\n        <button\r\n          type=\"button\"\r\n          class=\"d-block full-width btn btn-sm btn-primary mb-1 font-small-3 square\"\r\n          onClick={_ => {\r\n            this.handleBookingOption('BAR_BOOKING');\r\n          }}\r\n        >\r\n          Create new booking\r\n        </button>\r\n        {this.hasSplitBooking() ? (\r\n          <button\r\n            type=\"button\"\r\n            class=\"d-block full-width btn btn-sm btn-primary mb-1 font-small-3 square\"\r\n            onClick={_ => {\r\n              this.handleBookingOption('SPLIT_BOOKING');\r\n            }}\r\n          >\r\n            Assign unit to existing booking\r\n          </button>\r\n        ) : null}\r\n        <button\r\n          type=\"button\"\r\n          class=\"d-block full-width btn btn-sm btn-primary font-small-3 square\"\r\n          onClick={_ => {\r\n            this.handleBookingOption('BLOCK_DATES');\r\n          }}\r\n        >\r\n          Block dates\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBlockedView() {\r\n    // let defaultData = {RELEASE_AFTER_HOURS: 0, OPTIONAL_REASON: \"\", OUT_OF_SERVICE: false};\r\n    return (\r\n      <div class={`iglPopOver blockedView ${this.bubbleInfoTop ? 'bubbleInfoAbove' : ''} text-left`}>\r\n        <igl-block-dates-view\r\n          entryHour={this.bookingEvent.ENTRY_HOUR}\r\n          entryMinute={this.bookingEvent.ENTRY_MINUTE}\r\n          defaultData={this.bookingEvent}\r\n          fromDate={this.getCheckInDate()}\r\n          toDate={this.getCheckOutDate()}\r\n          entryDate={this.getEntryDate()}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"row p-0 m-0 mt-2\">\r\n          <div class=\"full-width btn-group btn-group-sm font-small-3\" role=\"group\">\r\n            <button\r\n              disabled={this.isLoading === 'update'}\r\n              type=\"button\"\r\n              class=\"btn btn-primary mr-1\"\r\n              onClick={_ => {\r\n                this.handleUpdateBlockedDates();\r\n              }}\r\n            >\r\n              {this.isLoading === 'update' ? <i class=\"la la-circle-o-notch spinner mx-1\"></i> : <i class=\"ft ft-edit font-small-3 updateBtnIcon\"></i>}\r\n              Update\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary\"\r\n              onClick={_ => {\r\n                this.handleConvertBlockedDateToBooking();\r\n              }}\r\n            >\r\n              Convert to booking\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-danger ml-1\"\r\n              onClick={_ => {\r\n                this.handleDeleteEvent();\r\n              }}\r\n            >\r\n              <i class=\"ft ft-trash-2 font-small-3\"></i> Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={`pointerContainer ${this.bubbleInfoTop ? 'pointerContainerTop' : ''}`}>\r\n          <div class={`bubblePointer ${this.bubbleInfoTop ? 'bubblePointTop' : 'bubblePointBottom'}`}></div>\r\n        </div>\r\n        {this.isBlockedDateEvent() ? this.getBlockedView() : null}\r\n        {this.isNewBooking() ? this.getNewBookingOptions() : null}\r\n        {!this.isBlockedDateEvent() && !this.isNewBooking() ? this.getInfoElement() : null}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n","import { Component, Host, Prop, h, State, Event, EventEmitter, Watch } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { getCurrencySymbol } from '../../../utils/utils';\r\n@Component({\r\n  tag: 'igl-booking-room-rate-plan',\r\n  styleUrl: 'igl-booking-room-rate-plan.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRoomRatePlan {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop({ mutable: true }) ratePlanData: { [key: string]: any };\r\n  @Prop() totalAvailableRooms: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() currency: any;\r\n  @Prop({ reflect: true }) dateDifference: number;\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @State() sourceOption: number;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() gotoSplitPageTwoEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() selectedData: { [key: string]: any };\r\n  @State() plan: { [key: string]: any };\r\n  componentWillLoad() {\r\n    this.selectedData = {\r\n      ratePlanId: this.ratePlanData.id,\r\n      adult_child_offering: this.ratePlanData.variations[0].adult_child_offering,\r\n      rateType: 1,\r\n      totalRooms: 0,\r\n      rate: this.ratePlanData.variations[0].amount,\r\n      ratePlanName: this.ratePlanData.name,\r\n      adultCount: this.ratePlanData.variations[0].adult_nbr,\r\n      childrenCount: this.ratePlanData.variations[0].child_nbr,\r\n      cancelation: this.ratePlanData.cancelation,\r\n      guarantee: this.ratePlanData.guarantee,\r\n      isRateModified: false,\r\n      defaultSelectedRate: 0,\r\n    };\r\n    if (this.defaultData) {\r\n      for (const [key, value] of Object.entries(this.defaultData)) {\r\n        this.selectedData[key] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  getSelectedOffering(value: any) {\r\n    return this.ratePlanData.variations.find(variation => variation.adult_child_offering === value);\r\n  }\r\n  @Watch('ratePlanData')\r\n  async ratePlanDataChanged() {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      rate: this.handleRateDaysUpdate(),\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: 'rate',\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  handleRateDaysUpdate() {\r\n    let rate = this.selectedData.defaultSelectedRate;\r\n    if (this.selectedData.isRateModified) {\r\n      return this.selectedData.rateType === 1 ? rate * this.dateDifference : rate;\r\n    }\r\n    return this.getSelectedOffering(this.selectedData.adult_child_offering).amount;\r\n  }\r\n\r\n  handleInput(event: InputEvent) {\r\n    this.selectedData.isRateModified = true;\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let inputValue = inputElement.value;\r\n    const numericRegex = /^[0-9]+$/;\r\n    if (!numericRegex.test(inputValue)) {\r\n      inputValue = inputValue.replace(/[^0-9]/g, '');\r\n      inputElement.value = inputValue;\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange('rate', event);\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, evt) {\r\n    if (key === 'adult_child_offering') {\r\n      const offering = this.getSelectedOffering(evt.target.value);\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        [key]: evt.target.value,\r\n        adultCount: offering.adult_nbr,\r\n        childrenCount: offering.child_nbr,\r\n        rate: offering.amount,\r\n      };\r\n    } else {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        [key]: evt.target.value === '' ? 0 : parseInt(evt.target.value),\r\n      };\r\n    }\r\n    if (key === 'rate' && evt.target.value === '') {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        totalRooms: 0,\r\n      };\r\n    }\r\n    if (key === 'rate') {\r\n      this.selectedData.defaultSelectedRate = this.selectedData.rateType === 1 ? parseInt(evt.target.value) / this.dateDifference : parseInt(evt.target.value);\r\n    }\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: key,\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  bookProperty() {\r\n    this.dataUpdateEvent.emit({ key: 'clearData', data: this.selectedData });\r\n    this.handleDataChange('totalRooms', { target: { value: '1' } });\r\n    this.gotoSplitPageTwoEvent.emit({ key: 'gotoSplitPage', data: '' });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"row m-0 p-0\">\r\n          <div class=\"col-md-6 col-sm-12 p-0 align-self-center\">\r\n            <span>{this.ratePlanData.name}</span>\r\n            <ir-tooltip message={this.ratePlanData.cancelation + this.ratePlanData.guarantee}></ir-tooltip>\r\n          </div>\r\n          <div class=\"col-md-6 col-sm-12 row pr-0\">\r\n            <div class=\"col-4\">\r\n              <fieldset class=\"position-relative\">\r\n                <select class=\"form-control input-sm\" id={v4()} onChange={evt => this.handleDataChange('adult_child_offering', evt)}>\r\n                  {this.ratePlanData.variations.map(variation => (\r\n                    <option value={variation.adult_child_offering} selected={this.selectedData.adult_child_offering === variation.adult_child_offering}>\r\n                      {variation.adult_child_offering}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </fieldset>\r\n            </div>\r\n            <div class=\"row col-6 m-0 p-0\">\r\n              <fieldset class=\"position-relative has-icon-left col-6 m-0 p-0\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control input-sm\"\r\n                  value={this.selectedData.rateType === 1 ? this.selectedData.rate : this.selectedData.rate / this.dateDifference}\r\n                  id={v4()}\r\n                  placeholder=\"Rate\"\r\n                  onInput={(event: InputEvent) => this.handleInput(event)}\r\n                />\r\n                <span class=\"form-control-position\">{getCurrencySymbol(this.currency.code)}</span>\r\n              </fieldset>\r\n              <fieldset class=\"position-relative m-0 p-0\">\r\n                <select class=\"form-control input-sm\" id={v4()} onChange={evt => this.handleDataChange('rateType', evt)}>\r\n                  {this.ratePricingMode.map(data => (\r\n                    <option value={data.CODE_NAME} selected={this.selectedData.rateType === +data.CODE_NAME}>\r\n                      {data.CODE_VALUE_EN}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </fieldset>\r\n            </div>\r\n\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' ? (\r\n              <div class=\"col-2 m-0 p-0\">\r\n                <fieldset class=\"position-relative\">\r\n                  <select disabled={this.selectedData.rate === 0} class=\"form-control input-sm\" id={v4()} onChange={evt => this.handleDataChange('totalRooms', evt)}>\r\n                    {Array.from({ length: this.totalAvailableRooms + 1 }, (_, i) => i).map(i => (\r\n                      <option value={i} selected={this.selectedData.totalRooms === i}>\r\n                        {i}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </fieldset>\r\n              </div>\r\n            ) : null}\r\n\r\n            {this.bookingType === 'EDIT_BOOKING' ? (\r\n              <div class=\"col-2 m-0 p-0 align-self-center\">\r\n                <fieldset class=\"position-relative\">\r\n                  <input type=\"radio\" name=\"ratePlanGroup\" value=\"1\" onChange={evt => this.handleDataChange('totalRooms', evt)} checked={this.selectedData.totalRooms === 1} />\r\n                </fieldset>\r\n              </div>\r\n            ) : null}\r\n\r\n            {this.bookingType === 'BAR_BOOKING' || this.bookingType === 'SPLIT_BOOKING' ? (\r\n              <button disabled={this.selectedData.rate === 0} type=\"button\" class=\"btn mb-1 btn-primary btn-sm\" onClick={() => this.bookProperty()}>\r\n                Book\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  h,\r\n  Prop,\r\n  Event,\r\n  EventEmitter,\r\n  State,\r\n} from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"igl-booking-rooms\",\r\n  styleUrl: \"igl-booking-rooms.css\",\r\n  scoped: true,\r\n})\r\nexport class IglBookingRooms {\r\n  @Prop({ reflect: true, mutable: true }) roomTypeData: { [key: string]: any };\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() bookingType: string = \"PLUS_BOOKING\";\r\n  @Prop({ reflect: true }) dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() currency;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() selectedRooms: number[] = [];\r\n  @State() roomsDistributions: number[] = [];\r\n  private validBookingTypes = [\"PLUS_BOOKING\", \"ADD_ROOM\", \"EDIT_BOOKING\"];\r\n  private totalRooms: number;\r\n  componentWillLoad() {\r\n    this.totalRooms = this.roomTypeData.physicalrooms.length;\r\n    this.selectedRooms = new Array(this.totalRooms).fill(0);\r\n    this.roomsDistributions = new Array(this.totalRooms).fill(this.totalRooms);\r\n  }\r\n\r\n  onRoomDataUpdate(event: CustomEvent<{ [key: string]: any }>, index: number) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    let data = { ...opt.data };\r\n    if (opt.changedKey === \"totalRooms\") {\r\n      let newValue = data.totalRooms;\r\n      this.selectedRooms[index] = newValue;\r\n      this.updateRatePlanTotalRooms(index);\r\n    }\r\n    data.roomCategoryId = this.roomTypeData.id;\r\n    data.roomCategoryName = this.roomTypeData.name;\r\n    data.inventory = this.roomTypeData.inventory;\r\n    this.dataUpdateEvent.emit({\r\n      key: opt.key,\r\n      data: data,\r\n      changedKey: opt.changedKey,\r\n    });\r\n  }\r\n  updateRatePlanTotalRooms(ratePlanIndex: number) {\r\n    const calculateTotalSelectedRoomsExcludingIndex = (excludedIndex) => {\r\n      return this.selectedRooms.reduce(\r\n        (acc, rooms, idx) => (idx !== excludedIndex ? acc + rooms : acc),\r\n        0\r\n      );\r\n    };\r\n    this.roomsDistributions = this.roomsDistributions.map((ratePlan, index) => {\r\n      if (index === ratePlanIndex) {\r\n        return ratePlan;\r\n      }\r\n      const totalSelectedRoomsExcludingCurrent =\r\n        calculateTotalSelectedRoomsExcludingIndex(index);\r\n      const availableRooms =\r\n        this.totalRooms - totalSelectedRoomsExcludingCurrent;\r\n\r\n      return availableRooms > 0 ? availableRooms : 0;\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.validBookingTypes.includes(this.bookingType) && (\r\n          <div class=\"font-weight-bold font-medium-1\">\r\n            {this.roomTypeData.name}\r\n          </div>\r\n        )}\r\n        {this.roomTypeData.rateplans.map((ratePlan, index) => {\r\n          if (ratePlan.variations !== null) {\r\n            return (\r\n              <igl-booking-room-rate-plan\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={\r\n                  this.validBookingTypes.includes(this.bookingType)\r\n                    ? \"ml-1\"\r\n                    : \"\"\r\n                }\r\n                currency={this.currency}\r\n                dateDifference={this.dateDifference}\r\n                ratePlanData={ratePlan}\r\n                totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                defaultData={\r\n                  (this.defaultData && this.defaultData[\"p_\" + ratePlan.id]) ||\r\n                  null\r\n                }\r\n                onDataUpdateEvent={(evt) => this.onRoomDataUpdate(evt, index)}\r\n              ></igl-booking-room-rate-plan>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url('../../../assets/feather/style.min.css');\r\n@import url('../../../assets/fontawesome/css/all.css');\r\n@import url('../../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.bodyContainer {\r\n  position: relative;\r\n}\r\n\r\n.roomRow {\r\n  width: max-content;\r\n}\r\n\r\n.roomRow:first-child {\r\n  margin-top: 80px;\r\n}\r\n\r\n.cellData {\r\n  width: 70px;\r\n  height: 30px;\r\n  display: inline-grid;\r\n  border-top: 1px solid #e0e0e0;\r\n  border-left: 1px solid #e0e0e0;\r\n  vertical-align: top;\r\n  padding-left: 15px;\r\n}\r\n\r\n.cellData:nth-child(2) {\r\n  border-left: 0px;\r\n}\r\n\r\n.cellData:last-child {\r\n  border-right: 1px solid #e0e0e0;\r\n}\r\n\r\n.roomHeaderCell {\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  left: 0;\r\n  background: #fff;\r\n  border-right: 1px solid #ccc;\r\n  width: 170px;\r\n  z-index: 1;\r\n}\r\n\r\n.currentDay {\r\n  background-color: #e3f3fa;\r\n}\r\n\r\n.dragOverHighlight {\r\n  background-color: #f5f5dc !important;\r\n}\r\n\r\n.selectedDay {\r\n  background-color: #f9f9c9 !important;\r\n}\r\n\r\n.categoryTitle {\r\n  grid-template-columns: 1fr 20px;\r\n  padding-left: 10px;\r\n  cursor: pointer;\r\n  height: 40px;\r\n  font-size: 0.9em;\r\n}\r\n.categoryTitle > :nth-child(1) {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.roomTitle {\r\n  padding-left: 20px;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.roomTitle > :nth-child(1) {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.roomTitle.pl10 {\r\n  padding-left: 10px;\r\n}\r\n\r\n.categoryPriceColumn {\r\n  font-size: 0.75em;\r\n  align-items: center;\r\n  height: 40px;\r\n}\r\n\r\n/* BOOKING EVENT */\r\n.bookingEventsContainer {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n","import { Component, Host, Listen, Prop, State, h, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-cal-body',\r\n  styleUrl: 'igl-cal-body.css',\r\n  scoped: true,\r\n})\r\nexport class IglCalBody {\r\n  @Event() showBookingPopup: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) scrollPageToRoom: EventEmitter;\r\n  @Prop() isScrollViewDragging: boolean;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() today: String;\r\n  @Prop() currency;\r\n  @Prop() countryNodeList;\r\n  @State() dragOverElement: string = '';\r\n  @State() renderAgain: boolean = false;\r\n\r\n  private selectedRooms: { [key: string]: any } = {};\r\n  private fromRoomId: number = -1;\r\n  private newEvent: { [key: string]: any };\r\n  private currentDate = new Date();\r\n\r\n  componentWillLoad() {\r\n    this.currentDate.setHours(0, 0, 0, 0);\r\n  }\r\n\r\n  @Listen('dragOverHighlightElement', { target: 'window' })\r\n  dragOverHighlightElementHandler(event: CustomEvent) {\r\n    this.dragOverElement = event.detail.dragOverElement;\r\n  }\r\n\r\n  @Listen('gotoRoomEvent', { target: 'window' })\r\n  gotoRoom(event: CustomEvent) {\r\n    let roomId = event.detail.roomId;\r\n    let category = this.getRoomCategoryByRoomId(roomId);\r\n    if (!category.expanded) {\r\n      this.toggleCategory(category);\r\n      setTimeout(() => {\r\n        this.scrollToRoom(roomId);\r\n      }, 10);\r\n    } else {\r\n      this.scrollToRoom(roomId);\r\n    }\r\n  }\r\n\r\n  @Listen('addToBeAssignedEvent', { target: 'window' })\r\n  addToBeAssignedEvents(event: CustomEvent) {\r\n    // let roomId = event.detail.roomId;\r\n    this.addBookingDatas(event.detail.data);\r\n    this.renderElement();\r\n  }\r\n\r\n  scrollToRoom(roomId) {\r\n    this.scrollPageToRoom.emit({\r\n      key: 'scrollPageToRoom',\r\n      id: roomId,\r\n      refClass: 'room_' + roomId,\r\n    });\r\n  }\r\n\r\n  getRoomCategoryByRoomId(roomId) {\r\n    return this.calendarData.roomsInfo.find(roomCategory => {\r\n      return this.getCategoryRooms(roomCategory).find(room => this.getRoomId(room) === roomId);\r\n    });\r\n  }\r\n\r\n  getCategoryName(roomCategory) {\r\n    return roomCategory.name;\r\n  }\r\n\r\n  getCategoryId(roomCategory) {\r\n    return roomCategory.id;\r\n  }\r\n\r\n  getTotalPhysicalRooms(roomCategory) {\r\n    return this.getCategoryRooms(roomCategory).length;\r\n  }\r\n\r\n  getCategoryRooms(roomCategory) {\r\n    return (roomCategory && roomCategory.physicalrooms) || [];\r\n  }\r\n\r\n  getRoomName(roomInfo) {\r\n    return roomInfo.name;\r\n  }\r\n\r\n  getRoomId(roomInfo) {\r\n    return roomInfo.id;\r\n  }\r\n\r\n  getRoomById(physicalRooms, roomId) {\r\n    return physicalRooms.find(physical_room => this.getRoomId(physical_room) === roomId);\r\n  }\r\n\r\n  getBookingData() {\r\n    return this.calendarData.bookingEvents;\r\n  }\r\n\r\n  addBookingDatas(aData) {\r\n    this.calendarData.bookingEvents = this.calendarData.bookingEvents.filter(bookingEvent => bookingEvent.ID !== 'NEW_TEMP_EVENT');\r\n    this.calendarData.bookingEvents = this.calendarData.bookingEvents.concat(aData);\r\n  }\r\n\r\n  getSelectedCellRefName(roomId, selectedDay) {\r\n    return 'room_' + roomId + '_' + selectedDay.currentDate;\r\n  }\r\n\r\n  getSplitBookingEvents(newEvent) {\r\n    return this.getBookingData().filter(bookingEvent => newEvent.FROM_DATE === bookingEvent.TO_DATE);\r\n  }\r\n\r\n  @Listen('closeBookingWindow', { target: 'window' })\r\n  closeWindow() {\r\n    let ind = this.getBookingData().findIndex(ev => ev.ID === 'NEW_TEMP_EVENT');\r\n    if (ind !== -1) {\r\n      this.getBookingData().splice(ind, 1);\r\n      console.log('removed item..');\r\n      this.renderElement();\r\n    }\r\n  }\r\n\r\n  addNewEvent(roomCategory) {\r\n    let keys = Object.keys(this.selectedRooms);\r\n    let startDate, endDate;\r\n\r\n    if (this.selectedRooms[keys[0]].currentDate < this.selectedRooms[keys[1]].currentDate) {\r\n      startDate = new Date(this.selectedRooms[keys[0]].currentDate);\r\n      endDate = new Date(this.selectedRooms[keys[1]].currentDate);\r\n    } else {\r\n      startDate = new Date(this.selectedRooms[keys[1]].currentDate);\r\n      endDate = new Date(this.selectedRooms[keys[0]].currentDate);\r\n    }\r\n\r\n    this.newEvent = {\r\n      ID: 'NEW_TEMP_EVENT',\r\n      NAME: <span>&nbsp;</span>,\r\n      EMAIL: '',\r\n      PHONE: '',\r\n      convertBooking: false,\r\n      REFERENCE_TYPE: 'PHONE',\r\n      FROM_DATE: startDate.getFullYear() + '-' + this.getTwoDigitNumStr(startDate.getMonth() + 1) + '-' + this.getTwoDigitNumStr(startDate.getDate()),\r\n      TO_DATE: endDate.getFullYear() + '-' + this.getTwoDigitNumStr(endDate.getMonth() + 1) + '-' + this.getTwoDigitNumStr(endDate.getDate()),\r\n      BALANCE: '',\r\n      NOTES: '',\r\n      RELEASE_AFTER_HOURS: 0,\r\n      PR_ID: this.selectedRooms[keys[0]].roomId,\r\n      ENTRY_DATE: '',\r\n      NO_OF_DAYS: (endDate - startDate) / 86400000,\r\n      ADULTS_COUNT: 1,\r\n      COUNTRY: '',\r\n      INTERNAL_NOTE: '',\r\n      RATE: '',\r\n      TOTAL_PRICE: '',\r\n      RATE_PLAN: '',\r\n      ARRIVAL_TIME: '',\r\n      TITLE: 'New Booking for ',\r\n      roomsInfo: [roomCategory],\r\n      CATEGORY: roomCategory.name,\r\n      event_type: 'BAR_BOOKING',\r\n      STATUS: 'PENDING-CONFIRMATION',\r\n      defaultDateRange: {\r\n        fromDate: null,\r\n        fromDateStr: '',\r\n        toDate: null,\r\n        toDateStr: '',\r\n        dateDifference: (endDate - startDate) / 86400000,\r\n        editable: false,\r\n        message: 'Including 5.00% City Tax - Excluding 11.00% VAT',\r\n      },\r\n    };\r\n\r\n    let popupTitle = roomCategory.name + ' ' + this.getRoomName(this.getRoomById(this.getCategoryRooms(roomCategory), this.selectedRooms[keys[0]].roomId));\r\n    this.newEvent.BLOCK_DATES_TITLE = 'Block Dates for ' + popupTitle;\r\n    this.newEvent.TITLE += popupTitle;\r\n    this.newEvent.defaultDateRange.toDate = new Date(this.newEvent.TO_DATE + 'T00:00:00');\r\n    this.newEvent.defaultDateRange.fromDate = new Date(this.newEvent.FROM_DATE + 'T00:00:00');\r\n    this.newEvent.defaultDateRange.fromDateStr = this.getDateStr(this.newEvent.defaultDateRange.fromDate);\r\n    this.newEvent.defaultDateRange.toDateStr = this.getDateStr(this.newEvent.defaultDateRange.toDate);\r\n    this.newEvent.ENTRY_DATE = new Date().toISOString();\r\n    this.newEvent.legendData = this.calendarData.formattedLegendData;\r\n\r\n    let splitBookingEvents = this.getSplitBookingEvents(this.newEvent);\r\n    if (splitBookingEvents.length) {\r\n      this.newEvent.splitBookingEvents = splitBookingEvents;\r\n    }\r\n\r\n    this.getBookingData().push(this.newEvent);\r\n    return this.newEvent;\r\n  }\r\n\r\n  getTwoDigitNumStr(num) {\r\n    return num <= 9 ? '0' + num : num;\r\n  }\r\n\r\n  getDateStr(date, locale = 'default') {\r\n    return date.getDate() + ' ' + date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\r\n  }\r\n\r\n  removeNewEvent() {\r\n    this.calendarData.bookingEvents = this.calendarData.bookingEvents.filter(events => events.ID !== 'NEW_TEMP_EVENT');\r\n    this.newEvent = null;\r\n  }\r\n\r\n  clickCell(roomId, selectedDay, roomCategory) {\r\n    if (!this.isScrollViewDragging && selectedDay.currentDate >= this.currentDate.getTime()) {\r\n      let refKey = this.getSelectedCellRefName(roomId, selectedDay);\r\n      if (this.selectedRooms.hasOwnProperty(refKey)) {\r\n        this.removeNewEvent();\r\n        delete this.selectedRooms[refKey];\r\n        this.renderElement();\r\n        return;\r\n      } else if (Object.keys(this.selectedRooms).length != 1 || this.fromRoomId != roomId) {\r\n        this.removeNewEvent();\r\n        this.selectedRooms = {};\r\n        this.selectedRooms[refKey] = { ...selectedDay, roomId };\r\n        this.fromRoomId = roomId;\r\n        this.renderElement();\r\n      } else {\r\n        // create bar;\r\n        this.selectedRooms[refKey] = { ...selectedDay, roomId };\r\n        this.addNewEvent(roomCategory);\r\n        this.selectedRooms = {};\r\n        this.renderElement();\r\n        this.showNewBookingPopup(this.newEvent);\r\n      }\r\n    }\r\n  }\r\n\r\n  showNewBookingPopup(data) {\r\n    console.log(data);\r\n    // this.showBookingPopup.emit({key: \"add\", data});\r\n  }\r\n\r\n  renderElement() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  getGeneralCategoryDayColumns(addClass: string, isCategory: boolean = false, index: number) {\r\n    return this.calendarData.days.map(dayInfo => (\r\n      <div class={`cellData pl-0 categoryPriceColumn ${addClass + '_' + dayInfo.day} ${dayInfo.day === this.today ? 'currentDay' : ''}`}>\r\n        {isCategory ? (\r\n          <span>\r\n            {dayInfo.rate[index].inventory}\r\n            <br />\r\n            <u>$ {dayInfo.rate[index].rate}</u>\r\n          </span>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  getGeneralRoomDayColumns(roomId: string, roomCategory) {\r\n    // onDragOver={event => this.handleDragOver(event)} onDrop={event => this.handleDrop(event, addClass+\"_\"+dayInfo.day)}\r\n    return this.calendarData.days.map(dayInfo => (\r\n      <div\r\n        class={`cellData pl-0 ${'room_' + roomId + '_' + dayInfo.day} ${dayInfo.day === this.today ? 'currentDay' : ''} ${\r\n          this.dragOverElement === roomId + '_' + dayInfo.day ? 'dragOverHighlight' : ''\r\n        } ${this.selectedRooms.hasOwnProperty(this.getSelectedCellRefName(roomId, dayInfo)) ? 'selectedDay' : ''}`}\r\n        onClick={() => this.clickCell(roomId, dayInfo, roomCategory)}\r\n      ></div>\r\n    ));\r\n  }\r\n\r\n  toggleCategory(roomCategory) {\r\n    roomCategory.expanded = !roomCategory.expanded;\r\n    this.renderElement();\r\n  }\r\n\r\n  getRoomCategoryRow(roomCategory, index) {\r\n    if (this.getTotalPhysicalRooms(roomCategory) <= 1) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div class=\"roomRow\">\r\n        <div\r\n          class={`cellData text-left align-items-center roomHeaderCell categoryTitle ${'category_' + this.getCategoryId(roomCategory)}`}\r\n          onClick={() => this.toggleCategory(roomCategory)}\r\n        >\r\n          <div>{this.getCategoryName(roomCategory)}</div> <i class={`la la-angle-${roomCategory.expanded ? 'down' : 'right'}`}></i>\r\n        </div>\r\n        {this.getGeneralCategoryDayColumns('category_' + this.getCategoryId(roomCategory), true, index)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getRoomsByCategory(roomCategory) {\r\n    // Check accordion is expanded.\r\n    if (!roomCategory.expanded) {\r\n      return [];\r\n    }\r\n\r\n    return this.getCategoryRooms(roomCategory)?.map(room => (\r\n      <div class=\"roomRow\">\r\n        <div\r\n          class={`cellData text-left align-items-center roomHeaderCell  roomTitle ${this.getTotalPhysicalRooms(roomCategory) <= 1 ? 'pl10' : ''} ${'room_' + this.getRoomId(room)}`}\r\n          data-room={this.getRoomId(room)}\r\n        >\r\n          <div>{this.getTotalPhysicalRooms(roomCategory) <= 1 ? this.getCategoryName(roomCategory) : this.getRoomName(room)}</div>\r\n        </div>\r\n        {this.getGeneralRoomDayColumns(this.getRoomId(room), roomCategory)}\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  getRoomRows() {\r\n    return this.calendarData.roomsInfo.map((roomCategory, index) => [this.getRoomCategoryRow(roomCategory, index), this.getRoomsByCategory(roomCategory)]);\r\n  }\r\n\r\n  render() {\r\n    // onDragStart={event => this.handleDragStart(event)} draggable={true}\r\n    return (\r\n      <Host>\r\n        <div class=\"bodyContainer\">\r\n          {this.getRoomRows()}\r\n          <div class=\"bookingEventsContainer preventPageScroll\">\r\n            {this.getBookingData()?.map(bookingEvent => (\r\n              <igl-booking-event\r\n                is_vacation_rental={this.calendarData.is_vacation_rental}\r\n                countryNodeList={this.countryNodeList}\r\n                currency={this.currency}\r\n                data-component-id={bookingEvent.ID}\r\n                bookingEvent={bookingEvent}\r\n                allBookingEvents={this.getBookingData()}\r\n              ></igl-booking-event>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n  position: sticky;\r\n  bottom: 0;\r\n  width: max-content;\r\n  z-index: 3;\r\n}\r\n\r\n.footerCell {\r\n  display: -moz-inline-grid;\r\n  display: -ms-inline-grid;\r\n  display: inline-grid;\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  bottom: 0;\r\n  width: 70px;\r\n  height: 40px;\r\n  /* color: #b8b6b7; */\r\n  background: #fff;\r\n  vertical-align: top;\r\n  border-top: 1px solid #e0e0e0;\r\n}\r\n\r\n.bottomLeftCell {\r\n  left: -1px;\r\n  z-index: 2;\r\n  width: 170px;\r\n  text-align: left;\r\n  padding-left: 15px;\r\n  color: #000000;\r\n}\r\n\r\n.footerCell i {\r\n  margin-right: 5px;\r\n}\r\n\r\n.legendBtn {\r\n  color: #41bff3;\r\n  cursor: pointer;\r\n}\r\n\r\n.isOnline i {\r\n  color: #2f9c3f;\r\n  font-weight: bold;\r\n}\r\n\r\n.isOffline i {\r\n  font-weight: bold;\r\n}\r\n\r\n.isOffline {\r\n  color: #a40000;\r\n}\r\n\r\n.dayTitle {\r\n  font-size: 0.8em;\r\n  font-weight: 600;\r\n  display: grid;\r\n\r\n  /* height: 100%;\r\n  \r\n  align-items: center;\r\n  text-align: center;\r\n  width: 100%; */\r\n}\r\n\r\n.currentDay .dayTitle {\r\n  font-weight: bold;\r\n  /* color: #262b31; */\r\n}\r\n\r\n.currentDay {\r\n  background-color: #e3f3fa;\r\n}\r\n\r\n.dayCapacityPercent {\r\n  font-size: 0.75em;\r\n}\r\n\r\n.badge-pill {\r\n  padding-left: 1em;\r\n  padding-right: 1em;\r\n  font-size: 0.7em;\r\n  margin-bottom: 2px;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, h } from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"igl-cal-footer\",\r\n  styleUrl: \"igl-cal-footer.css\",\r\n  scoped: true,\r\n})\r\nexport class IglCalFooter {\r\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() today: String;\r\n  // private isOnline:boolean = false;\r\n\r\n  handleOptionEvent(key, data = \"\") {\r\n    this.optionEvent.emit({ key, data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"footerContainer\">\r\n        <div class=\"footerCell bottomLeftCell align-items-center preventPageScroll\">\r\n          <div\r\n            class=\"legendBtn\"\r\n            onClick={() => this.handleOptionEvent(\"showLegend\")}\r\n          >\r\n            <i class=\"la la-square\"></i>\r\n            <u>Legend</u>\r\n          </div>\r\n          {/* <div class={`${this.isOnline ? 'isOnline' : 'isOffline'}`}>\r\n            <i class=\"la la-share-alt isOffline\"></i><span>{this.isOnline ? \"Connected\": \"Offline\"}</span>\r\n          </div> */}\r\n        </div>\r\n        {this.calendarData.days.map((dayInfo) => (\r\n          <div class=\"footerCell align-items-center\">\r\n            <div\r\n              class={`dayTitle full-height align-items-center ${\r\n                dayInfo.day === this.today ? \"currentDay\" : \"\"\r\n              }`}\r\n            >\r\n              {dayInfo.dayDisplayName}\r\n            </div>\r\n\r\n            {/* <div class=\"dayTitle\">{dayInfo.dayDisplayName}</div>\r\n              <div class=\"dayCapacityPercent\">28.57%</div>\r\n              <div class=\"preventPageScroll\">\r\n                <span class=\"badge badge-primary badge-pill\">\r\n                  {index}\r\n                </span>\r\n              </div> */}\r\n          </div>\r\n        ))}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url('../../../assets/feather/style.min.css');\r\n@import url('../../../assets/fontawesome/css/all.css');\r\n@import url('../../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  height: 100%;\r\n}\r\n\r\n.btn {\r\n  pointer-events: auto;\r\n}\r\n\r\n.stickyCell {\r\n  display: -ms-inline-grid;\r\n  display: -moz-inline-grid;\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 0px;\r\n  height: 82px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  z-index: 2;\r\n}\r\n\r\n.headersContainer {\r\n  background-color: #ffffff;\r\n}\r\n\r\n.headerCell {\r\n  display: inline-grid;\r\n  width: 70px;\r\n  height: 60px;\r\n  vertical-align: top;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.datePickerHidden {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  opacity: 0;\r\n}\r\n\r\n.monthsContainer {\r\n  height: 20px;\r\n  background-color: #ffffff;\r\n  margin-bottom: 0.2em;\r\n}\r\n\r\n.monthCell {\r\n  display: inline-grid;\r\n  height: 20px;\r\n  background-color: #ececec;\r\n  border-right: 1px solid #c7c7c7;\r\n  vertical-align: top;\r\n}\r\n\r\n.monthCell:nth-child(odd) {\r\n  background-color: #dddddd;\r\n}\r\n\r\n.monthTitle {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-size: 0.9em;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n}\r\n\r\n.topLeftCell {\r\n  left: 0px;\r\n  z-index: 3;\r\n  width: 170px;\r\n  background-color: #ffffff;\r\n  display: inline-grid;\r\n  display: -ms-inline-grid;\r\n  display: -moz-inline-grid;\r\n}\r\n\r\n.caledarBtns {\r\n  position: relative;\r\n  cursor: pointer;\r\n  font-size: 1.75em;\r\n  line-height: 1em;\r\n  padding: 0.4rem;\r\n}\r\n\r\n.caledarBtns .la {\r\n  font-size: 1.1em;\r\n}\r\n\r\n.caledarBtns:hover {\r\n  background-color: #f6f6f6;\r\n}\r\n\r\n.dayTitle {\r\n  font-size: 0.8em;\r\n  font-weight: 600;\r\n}\r\n\r\n.currentDay .dayTitle {\r\n  font-weight: bold;\r\n}\r\n\r\n.currentDay {\r\n  background-color: #e3f3fa;\r\n}\r\n\r\n.dayCapacityPercent {\r\n  font-size: 0.75em;\r\n}\r\n\r\n.badge-pill {\r\n  padding: 3px 1em;\r\n  font-size: 0.8em;\r\n}\r\n\r\n.pointer {\r\n  cursor: pointer;\r\n}\r\n\r\n.searchContiner {\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n}\r\n\r\n.searchListContainer {\r\n  background: #fff;\r\n  border: 1px solid #ccc;\r\n  border-bottom: none;\r\n}\r\n\r\n.searchListItem {\r\n  background: white;\r\n  border-bottom: 1px solid #ccc;\r\n  padding-left: 8px;\r\n}\r\n\r\n.badge-light {\r\n  background-color: #e0e0e0;\r\n}\r\n.min-width-full {\r\n  min-width: 100%;\r\n}\r\n","import { Component, Event, EventEmitter, Element, Host, Prop, h, State, Listen } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-cal-header',\r\n  styleUrl: 'igl-cal-header.css',\r\n  scoped: true,\r\n})\r\nexport class IglCalHeader {\r\n  @Element() private element: HTMLElement;\r\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event({ bubbles: true, composed: true }) gotoRoomEvent: EventEmitter<{\r\n    [key: string]: any;\r\n  }>;\r\n  @Event({ bubbles: true, composed: true }) gotoToBeAssignedDate: EventEmitter<{\r\n    [key: string]: any;\r\n  }>;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() today: String;\r\n  @State() renderAgain: boolean = false;\r\n\r\n  private searchValue: string = '';\r\n  private searchList: { [key: string]: any }[] = [];\r\n  private roomsList: { [key: string]: any }[] = [];\r\n  componentWillLoad() {\r\n    this.roomsList = [];\r\n    this.calendarData.roomsInfo.forEach(category => {\r\n      this.roomsList = this.roomsList.concat(...category.physicalrooms);\r\n    });\r\n  }\r\n\r\n  @Listen('reduceAvailableUnitEvent', { target: 'window' })\r\n  handleReduceAvailableUnitEvent(event: CustomEvent<{ [key: string]: any }>) {\r\n    const opt: { [key: string]: any } = event.detail;\r\n    const data = opt.data;\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n\r\n    // return {day, dayDisplayName, currentDate, tobeAssignedCount: dates[currentDate]};\r\n    if (opt.key === 'reduceAvailableDays') {\r\n      this.calendarData.days.find(day => {\r\n        if (day.currentDate === parseInt(data.selectedDate)) {\r\n          day.tobeAssignedCount--;\r\n          return true;\r\n        }\r\n      });\r\n      this.renderView();\r\n    }\r\n  }\r\n\r\n  showToBeAssigned(dayInfo) {\r\n    if (dayInfo.tobeAssignedCount || 0) {\r\n      this.handleOptionEvent('showAssigned');\r\n      setTimeout(() => {\r\n        this.gotoToBeAssignedDate.emit({\r\n          key: 'gotoToBeAssignedDate',\r\n          data: dayInfo.currentDate,\r\n        });\r\n      }, 100);\r\n    } else {\r\n      // do nothing as the value is 0;\r\n    }\r\n  }\r\n\r\n  handleOptionEvent(key, data: any = '') {\r\n    this.optionEvent.emit({ key, data });\r\n  }\r\n\r\n  handleDateSelect(event: Event) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let selectedDate = inputElement.value;\r\n\r\n    // // Manually close the date picker - for Safari\r\n    const picker = this.element.querySelector('.datePickerHidden') as HTMLInputElement;\r\n    picker.blur();\r\n    if (selectedDate) {\r\n      this.handleOptionEvent('calendar', selectedDate);\r\n    }\r\n  }\r\n\r\n  handleClearSearch() {\r\n    this.searchValue = '';\r\n    this.searchList = [];\r\n    this.renderView();\r\n  }\r\n\r\n  handleFilterRooms(event: Event) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let value = inputElement.value.trim();\r\n    this.searchValue = value;\r\n    value = value.toLowerCase();\r\n    if (value === '') {\r\n      this.handleClearSearch();\r\n    } else {\r\n      this.searchList = this.roomsList.filter(room => room.name.toLocaleLowerCase().indexOf(value) != -1);\r\n    }\r\n    this.renderView();\r\n  }\r\n\r\n  handleScrollToRoom(roomId) {\r\n    this.handleClearSearch();\r\n    this.gotoRoomEvent.emit({ key: 'gotoRoom', roomId });\r\n  }\r\n\r\n  getStringDateFormat(dt) {\r\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\r\n  }\r\n\r\n  getNewBookingModel() {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let from_date = this.getStringDateFormat(today);\r\n    today.setDate(today.getDate() + 1);\r\n    today.setHours(0, 0, 0, 0);\r\n    let to_date = this.getStringDateFormat(today);\r\n    return {\r\n      ID: '',\r\n      NAME: '',\r\n      EMAIL: '',\r\n      PHONE: '',\r\n      REFERENCE_TYPE: 'PHONE',\r\n      FROM_DATE: from_date, // \"2023-07-09\",\r\n      TO_DATE: to_date, // \"2023-07-11\",\r\n      roomsInfo: this.calendarData.roomsInfo,\r\n      TITLE: 'New Booking',\r\n      event_type: 'PLUS_BOOKING',\r\n      legendData: this.calendarData.formattedLegendData,\r\n      defaultDateRange: {\r\n        fromDate: new Date(from_date), //new Date(\"2023-09-10\"),\r\n        fromDateStr: '', //\"10 Sep 2023\",\r\n        toDate: new Date(to_date), //new Date(\"2023-09-15\"),\r\n        toDateStr: '', // \"15 Sep 2023\",\r\n        dateDifference: 0,\r\n        editabled: true,\r\n        message: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  renderView() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"stickyCell align-items-center topLeftCell preventPageScroll\">\r\n          <div class=\"row justify-content-around no-gutters\">\r\n            {!this.calendarData.is_vacation_rental && (\r\n              <div class=\"caledarBtns\" onClick={() => this.handleOptionEvent('showAssigned')} data-toggle=\"tooltip\" data-placement=\"bottom\" data-original-title=\"Assignments\">\r\n                <i class=\"la la-tasks\"></i>\r\n              </div>\r\n            )}\r\n            <div class=\"caledarBtns\" onClick={() => this.handleOptionEvent('calendar')} data-toggle=\"tooltip\" data-placement=\"bottom\" data-original-title=\"Navigate\">\r\n              <i class=\"la la-calendar-o\"></i>\r\n              <input class=\"datePickerHidden\" type=\"date\" onChange={this.handleDateSelect.bind(this)} />\r\n            </div>\r\n            <div class=\"caledarBtns\" onClick={() => this.handleOptionEvent('gotoToday')} data-toggle=\"tooltip\" data-placement=\"bottom\" data-original-title=\"Today\">\r\n              <i class=\"la la-clock-o\"></i>\r\n            </div>\r\n            <div\r\n              class=\"caledarBtns\"\r\n              onClick={() => this.handleOptionEvent('add', this.getNewBookingModel())}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"bottom\"\r\n              data-original-title=\"Create new booking\"\r\n            >\r\n              <i class=\"la la-plus\"></i>\r\n            </div>\r\n          </div>\r\n          <div class=\"row justify-content-around no-gutters searchContiner\">\r\n            <fieldset class={`form-group position-relative ${this.searchValue != '' ? 'show' : ''}`}>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-sm input-sm\"\r\n                id=\"iconLeft7\"\r\n                value={this.searchValue}\r\n                placeholder=\"Find unit\"\r\n                onInput={event => this.handleFilterRooms(event)}\r\n              />\r\n              {this.searchValue !== '' ? (\r\n                <div\r\n                  class=\"form-control-position pointer\"\r\n                  onClick={() => this.handleClearSearch()}\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"top\"\r\n                  data-original-title=\"Clear Selection\"\r\n                >\r\n                  <i class=\"la la-close font-small-4\"></i>\r\n                </div>\r\n              ) : null}\r\n\r\n              {this.searchList.length ? (\r\n                <div class=\"position-absolute searchListContainer dropdown-menu dropdown-menu-left min-width-full\">\r\n                  {this.searchList.map(room => (\r\n                    <div class=\"searchListItem1 dropdown-item px-1 text-left pointer\" onClick={() => this.handleScrollToRoom(room.id)}>\r\n                      {room.name}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : null}\r\n            </fieldset>\r\n          </div>\r\n        </div>\r\n        <div class=\"stickyCell headersContainer\">\r\n          <div class=\"monthsContainer\">\r\n            {this.calendarData.monthsInfo.map(monthInfo => (\r\n              <div class=\"monthCell\" style={{ width: monthInfo.daysCount * 70 + 'px' }}>\r\n                <div class=\"monthTitle\">{monthInfo.monthName}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {this.calendarData.days.map(dayInfo => (\r\n            <div class={`headerCell align-items-center ${'day-' + dayInfo.day} ${dayInfo.day === this.today ? 'currentDay' : ''}`} data-day={dayInfo.day}>\r\n              <div class=\"preventPageScroll\">\r\n                <span class={`badge badge-${dayInfo.unassigned_units_nbr !== 0 ? 'info pointer' : 'light'} badge-pill`} onClick={() => this.showToBeAssigned(dayInfo)}>\r\n                  {dayInfo.unassigned_units_nbr}\r\n                </span>\r\n              </div>\r\n              <div class=\"dayTitle\">{dayInfo.dayDisplayName}</div>\r\n              <div class=\"dayCapacityPercent\">{dayInfo.occupancy}%</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: flex;\r\n  text-align: left;\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n.date-range-input {\r\n  border: 0;\r\n  outline: 0;\r\n  margin: 0;\r\n  flex: 1;\r\n}\r\n.date-range-input:focus {\r\n  border: 0;\r\n  outline: 0;\r\n}\r\n.iglRangePicker {\r\n  margin: 0;\r\n  border: 1px solid #379ff2;\r\n  border-radius: 6px;\r\n  min-width: 300px;\r\n  max-width: 320px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  text-align: center;\r\n  margin-right: 5px;\r\n  padding: 5px 2rem;\r\n}\r\n.calendarPickerContainer {\r\n  display: flex;\r\n  flex-direction: column;\r\n  /*align-items: center;*/\r\n}\r\n\r\n.dateRangeLabel {\r\n  margin-right: 5px;\r\n}\r\n\r\n.taxMessage {\r\n  padding: 5px;\r\n  display: inline-block;\r\n}\r\n@media only screen and (min-width: 600px) {\r\n  :host {\r\n    flex-direction: row;\r\n  }\r\n  .calendarPickerContainer {\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n}","import {\r\n  Component,\r\n  Host,\r\n  h,\r\n  State,\r\n  Event,\r\n  EventEmitter,\r\n  Prop,\r\n} from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"igl-date-range\",\r\n  styleUrl: \"igl-date-range.css\",\r\n  scoped: true,\r\n})\r\nexport class IglDateRange {\r\n  @Prop({ reflect: true }) message: string = \"\";\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() renderAgain: boolean = false;\r\n\r\n  private totalNights: number = 0;\r\n  private fromDate: Date;\r\n  private toDate: Date;\r\n  private fromDateStr: string = \"from\";\r\n  private toDateStr: string = \"to\";\r\n  dateRangeInput: HTMLElement;\r\n\r\n  getStringDateFormat(dt) {\r\n    return (\r\n      dt.getFullYear() +\r\n      \"-\" +\r\n      (dt.getMonth() < 9 ? \"0\" : \"\") +\r\n      (dt.getMonth() + 1) +\r\n      \"-\" +\r\n      (dt.getDate() <= 9 ? \"0\" : \"\") +\r\n      dt.getDate()\r\n    );\r\n  }\r\n\r\n  componentWillLoad() {\r\n    let dt = new Date();\r\n    dt.setHours(0, 0, 0, 0);\r\n    dt.setDate(dt.getDate() + 1);\r\n    if (this.defaultData) {\r\n      if (this.defaultData.fromDate) {\r\n        this.fromDate = new Date(this.defaultData.fromDate);\r\n        this.fromDate.setHours(0, 0, 0, 0);\r\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\r\n      }\r\n      if (this.defaultData.toDate) {\r\n        this.toDate = new Date(this.defaultData.toDate);\r\n        this.toDate.setHours(0, 0, 0, 0);\r\n        this.toDateStr = this.getFormattedDateString(this.toDate);\r\n      }\r\n    }\r\n    if (this.fromDate && this.toDate) {\r\n      this.calculateTotalNights();\r\n      this.handleDateSelectEvent(\"selectedDateRange\", {\r\n        fromDate: this.fromDate.getTime(),\r\n        toDate: this.toDate.getTime(),\r\n        fromDateStr: this.fromDateStr,\r\n        toDateStr: this.toDateStr,\r\n        dateDifference: this.totalNights,\r\n      });\r\n    }\r\n  }\r\n\r\n  calculateTotalNights() {\r\n    this.totalNights = Math.floor(\r\n      (this.toDate.getTime() - this.fromDate.getTime()) / 86400000\r\n    );\r\n  }\r\n  getFormattedDateString(dt) {\r\n    return (\r\n      dt.getDate() +\r\n      \" \" +\r\n      dt.toLocaleString(\"default\", { month: \"short\" }).toLowerCase() +\r\n      \" \" +\r\n      dt.getFullYear()\r\n    );\r\n  }\r\n\r\n  handleDateSelectEvent(key, data: any = \"\") {\r\n    this.dateSelectEvent.emit({ key, data });\r\n  }\r\n  handleDateChange(evt) {\r\n    const { start, end } = evt.detail;\r\n    this.fromDate = start.toDate();\r\n    this.toDate = end.toDate();\r\n    this.calculateTotalNights();\r\n    this.handleDateSelectEvent(\"selectedDateRange\", {\r\n      fromDate: this.fromDate.getTime(),\r\n      toDate: this.toDate.getTime(),\r\n      fromDateStr: start.format(\"DD MMM YYYY\"),\r\n      toDateStr: end.format(\"DD MMM YYYY\"),\r\n      dateDifference: this.totalNights,\r\n    });\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"calendarPickerContainer ml-0\">\r\n          <h5 class=\"dateRangeLabel\">Dates</h5>\r\n          <div class=\"iglRangePicker\">\r\n            <ir-date-picker\r\n              fromDate={this.fromDate}\r\n              toDate={this.toDate}\r\n              autoApply\r\n              onDateChanged={(evt) => {\r\n                this.handleDateChange(evt);\r\n              }}\r\n            ></ir-date-picker>\r\n\r\n            {this.totalNights ? (\r\n              <span class=\"iglRangeNights\">\r\n                {this.totalNights +\r\n                  (this.totalNights > 1 ? \" nights\" : \" night\")}\r\n              </span>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div class=\"taxMessage display-inline\">{this.message}</div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n/* Legend */\r\n\r\n.legendHeader {\r\n  font-weight: 500;\r\n  letter-spacing: 0.05rem;\r\n  font-size: 1.12rem;\r\n  padding-top: 5px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.legendCloseBtn {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  font-size: 1.75em;\r\n  line-height: 1em;\r\n  padding: 0.4rem;\r\n}\r\n\r\n.legendCloseBtn:hover {\r\n  background-color: #f6f6f6;\r\n}\r\n\r\n.stickyHeader {\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: #ffffff;\r\n  z-index: 1;\r\n}\r\n\r\n.legendRow {\r\n  position: relative;\r\n  vertical-align: middle;\r\n  margin-bottom: 0.3rem;\r\n}\r\n\r\n.legendRow div {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n}\r\n\r\n.legend_skew,\r\n.legend_skewsplit {\r\n  transform: skew(-30deg);\r\n  width: 15px;\r\n  height: 16px;\r\n}\r\n\r\n.legend_circle {\r\n  border-radius: 100%;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin: 3px 3px 3px 2px;\r\n}\r\n\r\n.legend_skewsplit {\r\n  border-right: 2px solid #000000;\r\n}\r\n\r\n.blueColor {\r\n  background-color: #31bef1;\r\n}\r\n.greenColor {\r\n  background-color: #45b16d;\r\n}\r\n.yellowColor {\r\n  background-color: #f4d552;\r\n}\r\n.greyColor {\r\n  background-color: #a0a0a0;\r\n}\r\n.redColor {\r\n  background-color: #f34752;\r\n}\r\n.pinkColor {\r\n  background-color: #f9b4b7;\r\n}\r\n\r\n/* Legend Calendar */\r\n\r\n.legendCalendar .legendRow {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.legendCalendar .legendRow:first-child .legendCal {\r\n  background-color: #ececec;\r\n}\r\n\r\n.legendCalendar .legendRow div {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n}\r\n\r\n.legendCalendar .legendCal {\r\n  width: 80px;\r\n  height: 25px;\r\n  text-align: center;\r\n  display: inline-grid !important;\r\n  align-content: center;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.legendCalendar .legendCal .badge {\r\n  margin-top: 0.2rem;\r\n}\r\n\r\n.legendCalendar .legendCal.legendCal-h2 {\r\n  height: 40px;\r\n}\r\n\r\n.br-t {\r\n  border-top: 1px solid #a0a0a0;\r\n}\r\n.br-s {\r\n  border-left: 1px solid #a0a0a0;\r\n  border-right: 1px solid #a0a0a0;\r\n}\r\n.br-bt {\r\n  border-bottom: 1px solid #a0a0a0;\r\n}\r\n\r\n.highphenLegend {\r\n  font-size: 0.9em;\r\n}\r\n\r\n.highphenLegend::before {\r\n  width: 12px;\r\n  height: 0.5px;\r\n  content: \" \";\r\n  background-color: #000000;\r\n  vertical-align: middle;\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-legends',\r\n  styleUrl: 'igl-legends.css',\r\n  scoped: true,\r\n})\r\nexport class IglLegends {\r\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() legendData: { [key: string]: any };\r\n  handleOptionEvent(key, data = '') {\r\n    this.optionEvent.emit({ key, data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"legendContainer pr-1 text-left\">\r\n        <div>\r\n          <div>\r\n            <div class=\"stickyHeader\">\r\n              <div class=\"legendHeader pt-1\">Legend</div>\r\n              <div class=\"legendCloseBtn pt-1\" onClick={() => this.handleOptionEvent('closeSideMenu')}>\r\n                <i class=\"ft-chevrons-left\"></i>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n            <div class=\"mt-2 pl-1\">\r\n              {this.legendData.map(legendInfo => (\r\n                <div class=\"legendRow \">\r\n                  <div class={`legend_${legendInfo.design} mr-1`} style={{ backgroundColor: legendInfo.color }}></div>\r\n                  <span class=\"font-small-3\">{legendInfo.name}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <hr />\r\n            <div class=\"mt-2\">\r\n              <div class=\"legendCalendar\">\r\n                <div class=\"legendRow align-items-center\">\r\n                  <div class=\"legendCal br-t br-s br-bt\">\r\n                    <strong>MAR 2022</strong>\r\n                  </div>\r\n                  <div class=\"highphenLegend\">Month and Year</div>\r\n                </div>\r\n                <div class=\"legendRow\">\r\n                  <div class=\"legendCal pl-2 pr-2 br-s\">\r\n                    <span class=\"badge badge-primary badge-pill\">3</span>\r\n                  </div>\r\n                  <div class=\"highphenLegend\">\r\n                    <div>Unassigned Units (Click to Assign)</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"legendRow\">\r\n                  <div class=\"legendCal br-s\">FRI 18</div>\r\n                  <div class=\"highphenLegend\">Date</div>\r\n                </div>\r\n                <div class=\"legendRow\">\r\n                  <div class=\"legendCal br-s br-bt font-small-3\">15%</div>\r\n                  <div class=\"highphenLegend\">Occupancy</div>\r\n                </div>\r\n                <div class=\"legendRow\">\r\n                  <div class=\"legendCal br-s font-small-3\">20</div>\r\n                  <div class=\"highphenLegend\">Inventory</div>\r\n                </div>\r\n                <div class=\"legendRow align-items-center\">\r\n                  <div class=\"legendCal br-s br-bt font-small-2\">\r\n                    <u>R$100,00</u>\r\n                  </div>\r\n                  <div class=\"highphenLegend\">\r\n                    <div>Rate (Click to Change)</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 10000;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type=\"button\"]:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, Host, State } from '@stencil/core';\r\nimport { IPageTwoDataUpdateProps, PageTwoButtonsTypes } from '../../../models/models';\r\n@Component({\r\n  tag: 'igl-pagetwo',\r\n  styleUrl: 'igl-pagetwo.css',\r\n  scoped: true,\r\n})\r\nexport class IglPagetwo {\r\n  @Prop() showPaymentDetails: boolean;\r\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\r\n  @Prop() dateRangeData: { [key: string]: any };\r\n  @Prop() bookingData: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() language: string;\r\n  @Prop() bookedByInfoData: { [key: string]: any };\r\n  @Prop() bedPreferenceType: any;\r\n  @Prop() selectedRooms: any;\r\n  @Prop({ reflect: true }) isLoading: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() selectedGuestData;\r\n  @Event() dataUpdateEvent: EventEmitter<IPageTwoDataUpdateProps>;\r\n  @Event() buttonClicked: EventEmitter<{\r\n    key: PageTwoButtonsTypes;\r\n    data?: CustomEvent;\r\n  }>;\r\n  @State() selectedBookedByData;\r\n  @State() guestData: any;\r\n\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n\r\n  componentWillLoad() {\r\n    this.initializeGuestData();\r\n  }\r\n  initializeGuestData() {\r\n    let total = 0;\r\n    const newSelectedUnits = { ...this.selectedUnits };\r\n\r\n    for (const key in this.selectedRooms) {\r\n      for (const prop in this.selectedRooms[key]) {\r\n        const totalRooms = this.selectedRooms[key][prop].totalRooms;\r\n        newSelectedUnits[key] = Array(totalRooms).fill(-1);\r\n      }\r\n    }\r\n\r\n    this.selectedUnits = newSelectedUnits;\r\n    this.guestData = [];\r\n    for (const key of Object.keys(this.selectedRooms)) {\r\n      for (const prop of Object.keys(this.selectedRooms[key])) {\r\n        for (let i = 1; i <= this.selectedRooms[key][prop].totalRooms; i++) {\r\n          this.guestData.push({\r\n            guestName: '',\r\n            roomId: '',\r\n            preference: '',\r\n            ...this.selectedRooms[key][prop],\r\n          });\r\n        }\r\n        total += this.selectedRooms[key][prop].totalRooms * this.selectedRooms[key][prop].rate;\r\n      }\r\n    }\r\n    this.bookingData.TOTAL_PRICE = total;\r\n  }\r\n\r\n  getRoomsListFromCategoryId(categoryId) {\r\n    let category = this.bookingData.roomsInfo?.find(category => category.id === categoryId);\r\n    return (category && category.physicalrooms) || [];\r\n  }\r\n  handleOnApplicationInfoDataUpdateEvent(event: CustomEvent, index: number) {\r\n    const opt = event.detail;\r\n    const categoryIdKey = `c_${opt.data.roomCategoryId}`;\r\n    const updatedUnits = [...(this.selectedUnits[categoryIdKey] || [])];\r\n    updatedUnits[index] = opt.data.roomId;\r\n    this.selectedUnits = {\r\n      ...this.selectedUnits,\r\n      [categoryIdKey]: updatedUnits,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'applicationInfoUpdateEvent',\r\n      value: event.detail,\r\n    });\r\n  }\r\n\r\n  handleEventData(event: any, key: string, index: number) {\r\n    if (key === 'application-info') {\r\n      this.handleOnApplicationInfoDataUpdateEvent(event, index);\r\n    } else {\r\n      this.selectedBookedByData = event.detail.data;\r\n      this.dataUpdateEvent.emit({\r\n        key: 'propertyBookedBy',\r\n        value: event.detail,\r\n      });\r\n    }\r\n  }\r\n  isGuestDataIncomplete() {\r\n    if (this.selectedGuestData.length !== this.guestData.length) {\r\n      return true;\r\n    }\r\n    for (const data of this.selectedGuestData) {\r\n      if (data.guestName === '' || data.preference === '' || data.roomId === '') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled(key: string) {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.selectedGuestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      const isCardDetails = ['cardNumber', 'cardHolderName', 'expiryMonth', 'expiryYear'].includes(key);\r\n      if (!this.showPaymentDetails && isCardDetails) {\r\n        return false;\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n\r\n    return (\r\n      this.isLoading === key ||\r\n      isValidProperty(this.selectedGuestData, 'guestName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'isdCode', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'contactNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'firstName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'lastName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'countryId', -1) ||\r\n      isValidProperty(this.selectedBookedByData, 'selectedArrivalTime', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'email', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'cardNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'cardHolderName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'expiryMonth', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'expiryYear', '')\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"scrollContent\">\r\n        <div class=\"row\">\r\n          <div class=\"col-6 text-left p-0\">\r\n            <span class=\"mr-1 font-weight-bold font-medium-1\">\r\n              {this.dateRangeData.fromDateStr} - {this.dateRangeData.toDateStr}\r\n            </span>\r\n            {this.dateRangeData.dateDifference} nights\r\n          </div>\r\n          <div class=\"col-6 text-right\">\r\n            Total price <span class=\"font-weight-bold font-medium-1\">{'$' + this.bookingData.TOTAL_PRICE || '$0.00'}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {this.guestData.map((roomInfo, index) => (\r\n          <igl-application-info\r\n            bedPreferenceType={this.bedPreferenceType}\r\n            index={index}\r\n            selectedUnits={this.selectedUnits[`c_${roomInfo.roomCategoryId}`]}\r\n            guestInfo={roomInfo}\r\n            guestRefKey={index}\r\n            bookingType={this.bookingData.event_type}\r\n            roomsList={this.getRoomsListFromCategoryId(roomInfo.roomCategoryId)}\r\n            onDataUpdateEvent={event =>\r\n              //this.handleOnApplicationInfoDataUpdateEvent(event, index)\r\n              this.handleEventData(event, 'application-info', index)\r\n            }\r\n          ></igl-application-info>\r\n        ))}\r\n\r\n        {this.isEditOrAddRoomEvent || this.showSplitBookingOption ? null : (\r\n          <igl-property-booked-by\r\n            countryNodeList={this.countryNodeList}\r\n            language={this.language}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            defaultData={this.bookedByInfoData}\r\n            onDataUpdateEvent={event =>\r\n              // this.dataUpdateEvent.emit({\r\n              //   key: \"propertyBookedBy\",\r\n              //   value: event.detail,\r\n              // })\r\n              this.handleEventData(event, 'propertyBookedBy', 0)\r\n            }\r\n          ></igl-property-booked-by>\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent ? (\r\n          <div class=\"row p-0 mb-1 mt-2\">\r\n            <div class=\"col-6\">\r\n              <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'cancel' })}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <div class=\"col-6\">\r\n              <button\r\n                disabled={this.isLoading === 'save' || this.isGuestDataIncomplete()}\r\n                type=\"button\"\r\n                class=\"btn btn-primary full-width\"\r\n                onClick={() => this.buttonClicked.emit({ key: 'save' })}\r\n              >\r\n                {this.isLoading === 'save' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"row p-0 mb-1 mt-2\">\r\n            <div class=\"col-4\">\r\n              <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'back' })}>\r\n                &lt;&lt; Back\r\n              </button>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <button disabled={this.isButtonDisabled('book')} type=\"button\" class=\"btn btn-primary full-width\" onClick={() => this.buttonClicked.emit({ key: 'book' })}>\r\n                {this.isLoading === 'book' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                Book\r\n              </button>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <button\r\n                disabled={this.isButtonDisabled('bookAndCheckIn')}\r\n                type=\"button\"\r\n                class=\"btn btn-primary full-width\"\r\n                onClick={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n              >\r\n                {this.isLoading === 'bookAndCheckIn' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                Book & check in\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n\r\n.bookedByEmailContainer {\r\n  flex: auto;\r\n  max-width: 250px;\r\n}\r\n\r\n.bookedDetailsForm label {\r\n  min-width: 125px;\r\n  max-width: 125px;\r\n}\r\n\r\n.bookedDetailsForm .controlContainer {\r\n  width: calc(100% - 127px);\r\n}\r\n\r\n.bookedDetailsForm .form-group {\r\n  margin-bottom: 10px !important;\r\n}\r\n\r\n.bookedDetailsForm .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Fragment } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries, ICountry } from '../../../models/IBooking';\r\nimport { v4 } from 'uuid';\r\n\r\n@Component({\r\n  tag: 'igl-property-booked-by',\r\n  styleUrl: 'igl-property-booked-by.css',\r\n  scoped: true,\r\n})\r\nexport class IglPropertyBookedBy {\r\n  @Prop() language: string;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() countryNodeList: ICountry[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private arrivalTimeList: IEntries[] = [];\r\n  private expiryMonths: string[] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\n  private expiryYears: string[] = [];\r\n  private currentMonth: string = '01';\r\n  @State() bookedByData: { [key: string]: any } = {\r\n    id: undefined,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    countryId: '',\r\n    isdCode: '',\r\n    contactNumber: '',\r\n    selectedArrivalTime: {\r\n      code: '',\r\n      description: '',\r\n    },\r\n    emailGuest: false,\r\n    message: '',\r\n    cardNumber: '',\r\n    cardHolderName: '',\r\n    expiryMonth: '',\r\n    expiryYear: '',\r\n  };\r\n\r\n  async componentWillLoad() {\r\n    this.assignCountryCode();\r\n    this.initializeExpiryYears();\r\n    this.initializeDateData();\r\n    this.populateBookedByData();\r\n  }\r\n\r\n  private initializeExpiryYears() {\r\n    const currentYear = new Date().getFullYear();\r\n    this.expiryYears = Array.from({ length: 4 }, (_, index) => (currentYear + index).toString());\r\n  }\r\n  private async assignCountryCode() {\r\n    const country = await this.bookingService.getUserDefaultCountry();\r\n    console.log(country);\r\n    const countryId = country['COUNTRY_ID'];\r\n    console.log(countryId);\r\n    this.bookedByData = { ...this.bookedByData, isdCode: countryId.toString(), countryId };\r\n  }\r\n  private initializeDateData() {\r\n    const dt = new Date();\r\n    const month = dt.getMonth() + 1;\r\n    this.currentMonth = month < 10 ? `0${month}` : month.toString();\r\n  }\r\n\r\n  private populateBookedByData() {\r\n    this.bookedByData = this.defaultData ? { ...this.defaultData } : {};\r\n    this.arrivalTimeList = this.defaultData?.arrivalTime || [];\r\n\r\n    if (!this.bookedByData.expiryMonth) {\r\n      this.bookedByData.expiryMonth = this.currentMonth;\r\n    }\r\n    if (!this.bookedByData.expiryYear) {\r\n      this.bookedByData.expiryYear = new Date().getFullYear();\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, event) {\r\n    const foundTime = this.arrivalTimeList.find(time => time.CODE_NAME === event.target.value);\r\n\r\n    this.bookedByData[key] =\r\n      key === 'emailGuest'\r\n        ? event.target.checked\r\n        : key === 'arrivalTime'\r\n        ? {\r\n            code: event.target.value,\r\n            description: (foundTime && foundTime.CODE_VALUE_EN) || '',\r\n          }\r\n        : event.target.value;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    if (key === 'countryId') {\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        isdCode: event.target.value,\r\n      };\r\n    }\r\n  }\r\n\r\n  handleNumberInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n\r\n    // Regular expression to match only numeric characters (0-9)\r\n    const numericRegex = /^[0-9]+$/;\r\n\r\n    if (!numericRegex.test(inputValue)) {\r\n      // If the input is not numeric, prevent it from being entered\r\n      inputElement.value = inputValue.replace(/[^0-9]/g, '');\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n\r\n  async handleEmailInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n    if (this.isValidEmail(inputValue)) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n  async checkUser() {\r\n    try {\r\n      const email = this.bookedByData.email;\r\n      if (this.isValidEmail(email)) {\r\n        const res = await this.bookingService.getUserInfo(email);\r\n        if (res !== null) {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: res.id,\r\n            firstName: res.first_name,\r\n            lastName: res.last_name,\r\n            contactNumber: res.mobile,\r\n            countryId: res.country_id,\r\n            isdCode: res.country_id.toString(),\r\n          };\r\n        } else {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: undefined,\r\n            firstName: '',\r\n            lastName: '',\r\n            contactNumber: '',\r\n            countryId: '',\r\n            isdCode: '',\r\n          };\r\n        }\r\n        this.dataUpdateEvent.emit({\r\n          key: 'bookedByInfoUpdated',\r\n          data: { ...this.bookedByData },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n  isValidEmail(emailId) {\r\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    return emailPattern.test(emailId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-3\">\r\n          <div class=\"form-group row text-left align-items-center\">\r\n            <label class=\"p-0 m-0 label-control mr-1 font-weight-bold\">Booked by</label>\r\n            <div class=\"bookedByEmailContainer\">\r\n              <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Email address\"\r\n                name=\"bookeyByEmail\"\r\n                value={this.bookedByData.email}\r\n                onInput={event => this.handleEmailInput('email', event)}\r\n                required\r\n                onBlur={() => this.checkUser()}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bookedDetailsForm text-left mt-2 font-small-3\">\r\n          <div class=\"row\">\r\n            <div class=\"p-0 col-md-6\">\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">First name</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"First name\"\r\n                    id={v4()}\r\n                    value={this.bookedByData.firstName}\r\n                    onInput={event => this.handleDataChange('firstName', event)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Last name</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Last name\"\r\n                    id={v4()}\r\n                    value={this.bookedByData.lastName}\r\n                    onInput={event => this.handleDataChange('lastName', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Country</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('countryId', event)}>\r\n                    <option value=\"\" selected={this.bookedByData.countryId === ''}>\r\n                      Select\r\n                    </option>\r\n                    {this.countryNodeList.map(countryNode => (\r\n                      <option value={countryNode.id} selected={this.bookedByData.countryId === countryNode.id}>\r\n                        {countryNode.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Mobile phone</label>\r\n                <div class=\"p-0 m-0 pr-1 row controlContainer\">\r\n                  <div class=\"col-3 p-0 m-0\">\r\n                    <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('isdCode', event)}>\r\n                      <option value=\"\" selected={this.bookedByData.isdCode === ''}>\r\n                        ISD\r\n                      </option>\r\n                      {this.countryNodeList.map(country => (\r\n                        <option value={country.id} selected={this.bookedByData.isdCode === country.id.toString()}>\r\n                          {country.phone_prefix}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-9 p-0 m-0\">\r\n                    <input\r\n                      class=\"form-control\"\r\n                      type=\"tel\"\r\n                      placeholder=\"Contact Number\"\r\n                      id={v4()}\r\n                      value={this.bookedByData.contactNumber}\r\n                      onInput={event => this.handleNumberInput('contactNumber', event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Your arrival time</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('selectedArrivalTime', event)}>\r\n                    <option value=\"\" selected={this.bookedByData.selectedArrivalTime === ''}>\r\n                      -\r\n                    </option>\r\n                    {this.arrivalTimeList.map(time => (\r\n                      <option value={time.CODE_NAME} selected={this.bookedByData.selectedArrivalTime === time.CODE_NAME}>\r\n                        {time.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Email the guest</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer checkBoxContainer\">\r\n                  <input class=\"form-control\" type=\"checkbox\" checked={this.bookedByData.emailGuest} id={v4()} onChange={event => this.handleDataChange('emailGuest', event)} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6 p-0\">\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Any message for us?</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <textarea\r\n                    id={v4()}\r\n                    rows={4}\r\n                    class=\"form-control\"\r\n                    name=\"message\"\r\n                    value={this.bookedByData.message}\r\n                    onInput={event => this.handleDataChange('message', event)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              {this.showPaymentDetails && (\r\n                <Fragment>\r\n                  <div class=\"form-group row p-0 align-items-center\">\r\n                    <label class=\"p-0 m-0\">Card Number</label>\r\n                    <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardNumber}\r\n                        onInput={event => this.handleNumberInput('cardNumber', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group row p-0 align-items-center\">\r\n                    <label class=\"p-0 m-0\">Card holder name</label>\r\n                    <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardHolderName}\r\n                        onInput={event => this.handleDataChange('cardHolderName', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group row p-0 align-items-center\">\r\n                    <label class=\"p-0 m-0\">Expiry Date</label>\r\n                    <div class=\"p-0 m-0 row pr-1 controlContainer\">\r\n                      <div class=\"p-0 m-0\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryMonth', event)}>\r\n                          {this.expiryMonths.map(month => (\r\n                            <option value={month} selected={month === this.bookedByData.expiryMonth}>\r\n                              {month}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"p-0 m-0 ml-1\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryYear', event)}>\r\n                          {this.expiryYears.map((year, index) => (\r\n                            <option value={year} selected={index === this.bookedByData.expiryYear}>\r\n                              {year}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport { IAvailableRoom, IRoomCategory, IUnassignedDates, InnerRecord } from '../models/tobeassigned';\r\nimport { dateDifference, dateToFormattedString } from '../utils/utils';\r\n\r\nexport class ToBeAssignedService {\r\n  public async getUnassignedDates(propertyid: number, from_date: string, to_date: string) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_UnAssigned_Dates?Ticket=${token}`, {\r\n          propertyid,\r\n          from_date,\r\n          to_date,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return this.convertUnassignedDates(data.My_Result);\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getUnassignedRooms(propertyid: number, specific_date: string, roomInfo: any, formattedLegendData: any) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Aggregated_UnAssigned_Rooms?Ticket=${token}`, {\r\n          propertyid,\r\n          specific_date,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return this.transformToAssignable(data, roomInfo, formattedLegendData);\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async assignUnit(booking_nbr: string, identifier: string, pr_id: number) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Assign_Exposed_Room?Ticket=${token}`, {\r\n          booking_nbr,\r\n          identifier,\r\n          pr_id,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        console.log(data);\r\n        return data;\r\n      } else {\r\n        throw new Error('Invalid token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  private cleanSpacesAndSpecialChars(str: string) {\r\n    const regex = /[^a-zA-Z0-9]+/g;\r\n    return str.replace(regex, '');\r\n  }\r\n\r\n  private transformToAssignable(data: any, roomInfo, formattedLegendData): IRoomCategory[] {\r\n    const result: IRoomCategory[] = [];\r\n    data.My_Result.forEach((customer: any) => {\r\n      customer.unassigned_rooms.forEach((room: any) => {\r\n        let roomCategory: IRoomCategory = {\r\n          roomTypeName: room.room_type_name,\r\n          ID: room.identifier,\r\n          NAME: room.guest_name,\r\n          identifier: room.identifier,\r\n          FROM_DATE: room.unassigned_date,\r\n          TO_DATE: room.unassigned_date,\r\n          BOOKING_NUMBER: room.book_nbr,\r\n          STATUS: 'IN-HOUSE',\r\n          defaultDateRange: {\r\n            fromDate: undefined,\r\n            toDate: undefined,\r\n            fromDateTimeStamp: 0,\r\n            toDateTimeStamp: 0,\r\n            fromDateStr: '',\r\n            toDateStr: '',\r\n            dateDifference: 0,\r\n          },\r\n          NO_OF_DAYS: 1,\r\n          roomsInfo: roomInfo,\r\n          legendData: formattedLegendData,\r\n          availableRooms: [],\r\n          RT_ID: this.getRoomTypeId(room.room_type_name, roomInfo),\r\n        };\r\n        this.updateAvailableRooms(room, roomCategory, formattedLegendData, roomInfo);\r\n        this.addDefaultDateRange(roomCategory);\r\n        result.push(roomCategory);\r\n      });\r\n    });\r\n    return result;\r\n  }\r\n  addDefaultDateRange(roomCategory: IRoomCategory) {\r\n    roomCategory.defaultDateRange.fromDate = new Date(roomCategory.FROM_DATE + 'T00:00:00');\r\n    roomCategory.defaultDateRange.fromDateStr = dateToFormattedString(roomCategory.defaultDateRange.fromDate);\r\n    roomCategory.defaultDateRange.fromDateTimeStamp = roomCategory.defaultDateRange.fromDate.getTime();\r\n\r\n    roomCategory.defaultDateRange.toDate = new Date(roomCategory.TO_DATE + 'T00:00:00');\r\n    roomCategory.defaultDateRange.toDateStr = dateToFormattedString(roomCategory.defaultDateRange.toDate);\r\n    roomCategory.defaultDateRange.toDateTimeStamp = roomCategory.defaultDateRange.toDate.getTime();\r\n\r\n    roomCategory.defaultDateRange.dateDifference = roomCategory.NO_OF_DAYS;\r\n  }\r\n  private getRoomTypeId(roomName: string, roomInfo: any) {\r\n    return roomInfo.find(room => this.cleanSpacesAndSpecialChars(room.name) === this.cleanSpacesAndSpecialChars(roomName)).id || null;\r\n  }\r\n  private updateAvailableRooms(room: any, roomCategory: IRoomCategory, formattedLegendData, roomsInfo): void {\r\n    const rooms: IAvailableRoom[] = [];\r\n    room.assignable_units.forEach((unit: any) => {\r\n      if (unit.Is_Fully_Available && !unit.Is_Not_Available) {\r\n        const days = dateDifference(unit.from_date, unit.to_date);\r\n        rooms.push({\r\n          RT_ID: roomCategory.RT_ID,\r\n          STATUS: 'PENDING-CONFIRMATION',\r\n          FROM_DATE: unit.from_date,\r\n          roomName: unit.name,\r\n          PR_ID: unit.pr_id,\r\n          TO_DATE: unit.to_date,\r\n          NO_OF_DAYS: days,\r\n          ID: 'NEW_TEMP_EVENT',\r\n          NAME: '',\r\n          NOTES: '',\r\n          BALANCE: '',\r\n          INTERNAL_NOTE: '',\r\n          hideBubble: true,\r\n          legendData: formattedLegendData,\r\n          roomsInfo,\r\n        });\r\n        roomCategory.TO_DATE = unit.to_date;\r\n        roomCategory.NO_OF_DAYS = days;\r\n      }\r\n    });\r\n    roomCategory.availableRooms = rooms;\r\n  }\r\n\r\n  private convertUnassignedDates(dates: IUnassignedDates[]): Record<number, InnerRecord> {\r\n    let convertedDates: Record<number, InnerRecord> = {};\r\n    dates.forEach(date => {\r\n      convertedDates[new Date(date.date).getTime()] = {\r\n        categories: {},\r\n        dateStr: date.description,\r\n      };\r\n    });\r\n    return convertedDates;\r\n  }\r\n}\r\n","@import url(\"../../../../assets/feather/style.min.css\");\r\n@import url(\"../../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.guestTitle {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  padding: 2px;\r\n  margin-bottom: 5px;\r\n  margin-top: 5px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  /* margin-bottom: 5px; */\r\n}\r\n\r\n.guestTitle.selectedOrder {\r\n  background-color: #f9f9c9;\r\n}\r\n\r\n.pointer {\r\n  cursor: pointer;\r\n}\r\n\r\nhr {\r\n  margin-top: 8px;\r\n  margin-bottom: 0px;\r\n}\r\n\r\n.bookingContainer {\r\n  background-color: #ececec;\r\n}\r\n\r\n.actionsContainer {\r\n  padding: 5px !important;\r\n  padding-right: 0px !important;\r\n}\r\n\r\n.selectContainer {\r\n  width: 195px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.buttonsContainer {\r\n  width: 100px;\r\n}\r\n.btn-secondary {\r\n  margin-right: 8px !important;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter, Listen, State } from '@stencil/core';\r\nimport { ToBeAssignedService } from '../../../../services/toBeAssigned.service';\r\nimport { v4 } from 'uuid';\r\nimport { BookingService } from '../../../../services/booking.service';\r\nimport { transformNewBooking } from '../../../../utils/booking';\r\n// import $ from 'jquery';\r\n\r\n@Component({\r\n  tag: 'igl-tba-booking-view',\r\n  styleUrl: 'igl-tba-booking-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglTbaBookingView {\r\n  // @Element() private element: HTMLElement;\r\n  @Event({ bubbles: true, composed: true })\r\n  highlightToBeAssignedBookingEvent: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) addToBeAssignedEvent: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) scrollPageToRoom: EventEmitter;\r\n  @Event() assignRoomEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() selectedDate;\r\n  @Prop() eventData: { [key: string]: any } = {};\r\n  @Prop() categoriesData: { [key: string]: any } = {};\r\n  @Prop() categoryId;\r\n  @Prop() categoryIndex;\r\n  @Prop() eventIndex;\r\n  @State() renderAgain: boolean = false;\r\n\r\n  @State() selectedRoom: number = -1;\r\n  private highlightSection: boolean = false;\r\n  private allRoomsList: { [key: string]: any }[] = [];\r\n  private toBeAssignedService = new ToBeAssignedService();\r\n  private bookingService = new BookingService();\r\n  onSelectRoom(evt) {\r\n    if (evt.stopImmediatePropagation) {\r\n      evt.stopImmediatePropagation();\r\n      evt.stopPropagation();\r\n    }\r\n    this.selectedRoom = parseInt(evt.target.value);\r\n  }\r\n\r\n  // componentDidLoad(){\r\n  //   this.initializeToolTips();\r\n  // }\r\n\r\n  componentShouldUpdate(newValue: string, oldValue: string, propName: string): boolean {\r\n    if (propName === 'selectedDate' && newValue !== oldValue) {\r\n      this.highlightSection = false;\r\n      this.selectedRoom = -1;\r\n      return true; // Prevent update for a specific prop value\r\n    } else if (propName === 'eventData' && newValue !== oldValue) {\r\n      this.selectedRoom = -1;\r\n      return true;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentWillLoad() {\r\n    if (this.categoryIndex === 0 && this.eventIndex === 0) {\r\n      setTimeout(() => {\r\n        this.handleHighlightAvailability();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  // initializeToolTips(){\r\n  // console.log($(this.element));\r\n  // console.log($('[data-toggle=\"tooltip\"]'))\r\n  // console.log($(this.element + ' [data-toggle=\"tooltip\"]'));\r\n\r\n  // $('[data-toggle=\"tooltip\"]').tooltip({\r\n  //   container: 'body'\r\n  // });\r\n  // }\r\n  //\r\n  async handleAssignUnit(event) {\r\n    try {\r\n      event.stopImmediatePropagation();\r\n      event.stopPropagation();\r\n      if (this.selectedRoom) {\r\n        await this.toBeAssignedService.assignUnit(this.eventData.BOOKING_NUMBER, this.eventData.ID, this.selectedRoom);\r\n        const booking = await this.bookingService.getExoposedBooking(this.eventData.BOOKING_NUMBER, 'en');\r\n        let assignEvent = transformNewBooking(booking);\r\n        const newEvent = { ...this.eventData, ...assignEvent[0] };\r\n        this.calendarData.bookingEvents.push(newEvent);\r\n        //console.log(newEvent);\r\n        this.addToBeAssignedEvent.emit({\r\n          key: 'tobeAssignedEvents',\r\n          data: [newEvent],\r\n        });\r\n        this.assignRoomEvent.emit({ key: 'assignRoom', data: newEvent });\r\n      }\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleHighlightAvailability() {\r\n    this.highlightToBeAssignedBookingEvent.emit({\r\n      key: 'highlightBookingId',\r\n      data: { bookingId: this.eventData.ID },\r\n    });\r\n    if (!this.selectedDate) {\r\n      return;\r\n    }\r\n    let filteredEvents = [];\r\n    let allRoomsList = [];\r\n    filteredEvents = this.eventData.availableRooms.map(room => {\r\n      allRoomsList.push({\r\n        calendar_cell: null,\r\n        id: room.PR_ID,\r\n        name: room.roomName,\r\n      });\r\n      return {\r\n        ...room,\r\n        defaultDateRange: this.eventData.defaultDateRange,\r\n        identifier: this.eventData.identifier,\r\n        // roomsInfo: this.eventData.roomsInfo,\r\n        // legendData: this.eventData.legendData,\r\n      };\r\n    });\r\n    this.allRoomsList = allRoomsList;\r\n    this.addToBeAssignedEvent.emit({\r\n      key: 'tobeAssignedEvents',\r\n      data: filteredEvents,\r\n    });\r\n\r\n    this.scrollPageToRoom.emit({\r\n      key: 'scrollPageToRoom',\r\n      id: this.categoryId,\r\n      refClass: 'category_' + this.categoryId,\r\n    });\r\n    // ID: \"NEW_TEMP_EVENT\",\r\n    // STATUS: \"PENDING_CONFIRMATION\"\r\n    this.renderView();\r\n  }\r\n\r\n  handleCloseAssignment(event) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    this.highlightSection = false;\r\n    this.highlightToBeAssignedBookingEvent.emit({\r\n      key: 'highlightBookingId',\r\n      data: { bookingId: '----' },\r\n    });\r\n    this.onSelectRoom({ target: { value: '' } });\r\n    this.addToBeAssignedEvent.emit({ key: 'tobeAssignedEvents', data: [] });\r\n    this.renderView();\r\n  }\r\n\r\n  @Listen('highlightToBeAssignedBookingEvent', { target: 'window' })\r\n  highlightBookingEvent(event: CustomEvent) {\r\n    let data = event.detail.data;\r\n    if (data.bookingId != this.eventData.ID) {\r\n      this.highlightSection = false;\r\n      this.selectedRoom = -1;\r\n      this.renderView();\r\n    } else {\r\n      this.highlightSection = true;\r\n      this.renderView();\r\n    }\r\n  }\r\n\r\n  renderView() {\r\n    this.renderAgain = !this.renderAgain;\r\n    // this.initializeToolTips();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"bookingContainer\" onClick={() => this.handleHighlightAvailability()}>\r\n          <div\r\n            class={`guestTitle ${this.highlightSection ? 'selectedOrder' : ''} pointer font-small-3`}\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            data-original-title=\"Click to assign unit\"\r\n          >\r\n            {`Book# ${this.eventData.BOOKING_NUMBER} , ${this.eventData.NAME}`}\r\n          </div>\r\n          <div class=\"row m-0 p-0 actionsContainer\">\r\n            <div class=\"d-inline-block p-0 selectContainer\">\r\n              <select class=\"form-control input-sm\" id={v4()} onChange={evt => this.onSelectRoom(evt)}>\r\n                <option value=\"\" selected={this.selectedRoom == -1}>\r\n                  Assign unit\r\n                </option>\r\n                {this.allRoomsList.map(room => (\r\n                  <option value={room.id} selected={this.selectedRoom == room.id}>\r\n                    {room.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            {this.highlightSection ? (\r\n              <div class=\"d-inline-block text-right buttonsContainer\">\r\n                <button type=\"button\" class=\"btn btn-secondary btn-sm\" onClick={evt => this.handleCloseAssignment(evt)}>\r\n                  X\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-sm\" onClick={evt => this.handleAssignUnit(evt)} disabled={this.selectedRoom === -1}>\r\n                  Assign\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../../assets/feather/style.min.css\");\r\n@import url(\"../../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Prop,\r\n  State,\r\n  h,\r\n  Event,\r\n  EventEmitter,\r\n} from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"igl-tba-category-view\",\r\n  styleUrl: \"igl-tba-category-view.css\",\r\n  scoped: true,\r\n})\r\nexport class IglTbaCategoryView {\r\n  @Event() assignUnitEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() selectedDate;\r\n  @Prop() categoriesData: { [key: string]: any } = {};\r\n  @Prop() categoryId;\r\n  @Prop({ mutable: true }) eventDatas;\r\n  @Prop() categoryIndex;\r\n  @State() renderAgain: boolean = false;\r\n\r\n  // private localEventDatas;\r\n\r\n  componentWillLoad() {\r\n    // this.localEventDatas = this.eventDatas;\r\n  }\r\n\r\n  handleAssignRoomEvent(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.eventDatas = this.eventDatas.filter(\r\n      (eventData) => eventData.ID != opt.data.ID\r\n    );\r\n    this.calendarData.bookingEvents.push(opt.data);\r\n    this.assignUnitEvent.emit({\r\n      key: \"assignUnit\",\r\n      data: {\r\n        RT_ID: this.categoryId,\r\n        selectedDate: this.selectedDate,\r\n        assignEvent: opt.data,\r\n        calendarData: this.calendarData,\r\n      },\r\n    });\r\n    // if(this.localEventDatas.length){\r\n    this.renderView();\r\n    // }\r\n  }\r\n\r\n  getEventView(categoryId, eventDatas) {\r\n    return eventDatas.map((eventData, ind) => (\r\n      <igl-tba-booking-view\r\n        calendarData={this.calendarData}\r\n        selectedDate={this.selectedDate}\r\n        eventData={eventData}\r\n        categoriesData={this.categoriesData}\r\n        categoryId={categoryId}\r\n        categoryIndex={this.categoryIndex}\r\n        eventIndex={ind}\r\n        onAssignRoomEvent={(evt) => this.handleAssignRoomEvent(evt)}\r\n      ></igl-tba-booking-view>\r\n    ));\r\n  }\r\n\r\n  renderView() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"sectionContainer\">\r\n          <div class=\"font-weight-bold mt-1 font-small-3\">\r\n            {this.categoriesData[this.categoryId].name}\r\n          </div>\r\n          {this.getEventView(this.categoryId, this.eventDatas)}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.tobeAssignedHeader {\r\n  font-weight: 500;\r\n  letter-spacing: 0.05rem;\r\n  font-size: 1.12rem;\r\n  padding-top: 5px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.closeBtn {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  font-size: 1.75em;\r\n  line-height: 1em;\r\n  padding: 0.4rem;\r\n}\r\n\r\n.closeBtn:hover {\r\n  background-color: #f6f6f6;\r\n}\r\n\r\n.stickyHeader {\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: #ffffff;\r\n  z-index: 1;\r\n}\r\n\r\n.pointer {\r\n  cursor: pointer;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Listen, Fragment } from '@stencil/core';\r\nimport { ToBeAssignedService } from '../../../services/toBeAssigned.service';\r\nimport { dateToFormattedString } from '../../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'igl-to-be-assigned',\r\n  styleUrl: 'igl-to-be-assigned.css',\r\n  scoped: true,\r\n})\r\nexport class IglToBeAssigned {\r\n  @Prop() propertyid: number;\r\n  @Prop() from_date: string;\r\n  @Prop() to_date: string;\r\n  @Prop() loadingMessage: string = 'Fetching unassigned units';\r\n  @Prop({ mutable: true }) calendarData: { [key: string]: any };\r\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event({ bubbles: true, composed: true })\r\n  reduceAvailableUnitEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() showBookingPopup: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) addToBeAssignedEvent: EventEmitter;\r\n  @Event({ bubbles: true, composed: true })\r\n  highlightToBeAssignedBookingEvent: EventEmitter;\r\n  @State() showDatesList: boolean = false;\r\n  @State() renderAgain: boolean = false;\r\n  @State() orderedDatesList: any[] = [];\r\n  @State() isLoading: boolean = false;\r\n  private selectedDate = null;\r\n  private data: { [key: string]: any } = {};\r\n  private today = new Date();\r\n  private categoriesData: { [key: string]: any } = {};\r\n  private toBeAssignedService: ToBeAssignedService = new ToBeAssignedService();\r\n  private unassignedDates: any;\r\n  componentWillLoad() {\r\n    this.reArrangeData();\r\n  }\r\n  async updateCategories(key, calendarData) {\r\n    try {\r\n      let categorisedRooms = {};\r\n      const result = await this.toBeAssignedService.getUnassignedRooms(\r\n        this.propertyid,\r\n        dateToFormattedString(new Date(+key)),\r\n        calendarData.roomsInfo,\r\n        calendarData.formattedLegendData,\r\n      );\r\n      result.forEach(room => {\r\n        if (!categorisedRooms.hasOwnProperty(room.RT_ID)) {\r\n          categorisedRooms[room.RT_ID] = [room];\r\n        } else {\r\n          categorisedRooms[room.RT_ID].push(room);\r\n        }\r\n      });\r\n      this.unassignedDates[key].categories = categorisedRooms;\r\n    } catch (error) {\r\n      //  toastr.error(error);\r\n    }\r\n  }\r\n\r\n  async reArrangeData() {\r\n    try {\r\n      this.isLoading = true;\r\n      this.today.setHours(0, 0, 0, 0);\r\n      this.calendarData.roomsInfo.forEach(category => {\r\n        this.categoriesData[category.id] = {\r\n          name: category.name,\r\n          roomsList: category.physicalrooms,\r\n          roomIds: category.physicalrooms.map(room => {\r\n            return room.id;\r\n          }),\r\n        };\r\n      });\r\n\r\n      this.selectedDate = null;\r\n      this.unassignedDates = await this.toBeAssignedService.getUnassignedDates(this.propertyid, dateToFormattedString(new Date()), this.to_date);\r\n      console.log(this.unassignedDates);\r\n      if (Object.keys(this.unassignedDates).length > 0) {\r\n        const firstKey = Object.keys(this.unassignedDates)[0];\r\n        await this.updateCategories(firstKey, this.calendarData);\r\n      }\r\n\r\n      this.data = this.unassignedDates;\r\n      this.orderedDatesList = Object.keys(this.data).sort((a, b) => parseInt(a) - parseInt(b));\r\n      if (!this.selectedDate && this.orderedDatesList.length) {\r\n        this.selectedDate = this.orderedDatesList[0];\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching unassigned dates:', error);\r\n      //  toastr.error(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  @Listen('gotoToBeAssignedDate', { target: 'window' })\r\n  gotoDate(event: CustomEvent) {\r\n    this.showForDate(event.detail.data);\r\n    this.showDatesList = false;\r\n    this.renderView();\r\n  }\r\n\r\n  async showForDate(dateStamp) {\r\n    try {\r\n      this.isLoading = true;\r\n      this.showUnassignedDate();\r\n      await this.updateCategories(dateStamp, this.calendarData);\r\n      this.addToBeAssignedEvent.emit({ key: 'tobeAssignedEvents', data: [] });\r\n      this.selectedDate = dateStamp;\r\n      this.showBookingPopup.emit({\r\n        key: 'calendar',\r\n        data: parseInt(dateStamp) - 86400000,\r\n      });\r\n      this.isLoading = false; // goto 1 days before.. // calendar moves another 1 day\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  getDay(dt) {\r\n    const currentDate = new Date(dt);\r\n    const locale = 'default'; //'en-US';\r\n    const dayOfWeek = this.getLocalizedDayOfWeek(currentDate, locale);\r\n    // const monthName = currentDate.toLocaleString(\"default\", { month: 'short' })\r\n    return dayOfWeek + ' ' + currentDate.getDate() + ', ' + currentDate.getFullYear();\r\n  }\r\n\r\n  getLocalizedDayOfWeek(date, locale) {\r\n    const options = { weekday: 'short' };\r\n    return date.toLocaleDateString(locale, options);\r\n  }\r\n\r\n  handleOptionEvent(key, data = '') {\r\n    this.highlightToBeAssignedBookingEvent.emit({\r\n      key: 'highlightBookingId',\r\n      data: { bookingId: '----' },\r\n    });\r\n    this.addToBeAssignedEvent.emit({ key: 'tobeAssignedEvents', data: [] });\r\n    this.optionEvent.emit({ key, data });\r\n  }\r\n\r\n  showUnassignedDate() {\r\n    this.showDatesList = !this.showDatesList;\r\n  }\r\n\r\n  getToBeAssignedEntities() {\r\n    // toBeAssignedEvents\r\n  }\r\n\r\n  getCategoryView() {\r\n    if (this.orderedDatesList.length && this.selectedDate && this.data[this.selectedDate]) {\r\n      return Object.entries(this.data[this.selectedDate].categories).map(([id, eventDatas], ind) => (\r\n        <igl-tba-category-view\r\n          calendarData={this.calendarData}\r\n          selectedDate={this.selectedDate}\r\n          categoryId={id}\r\n          categoryIndex={ind}\r\n          categoriesData={this.categoriesData}\r\n          eventDatas={eventDatas}\r\n          onAssignUnitEvent={evt => this.handleAssignUnit(evt)}\r\n        ></igl-tba-category-view>\r\n      ));\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  handleAssignUnit(event: CustomEvent<{ [key: string]: any }>) {\r\n    const opt: { [key: string]: any } = event.detail;\r\n    const data = opt.data;\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n\r\n    if (opt.key === 'assignUnit') {\r\n      // this.data[data.selectedDate].categories[data.RT_ID] = this.data[data.selectedDate].categories[data.RT_ID].filter(eventData => eventData.ID != data.assignEvent.ID);\r\n      // // this.calendarData = data.calendarData; // RAJA\r\n      // // this.calendarData.bookingEvents.push(data.assignEvent);\r\n\r\n      // if (!this.data[data.selectedDate].categories[data.RT_ID].length) {\r\n      //   delete this.data[data.selectedDate].categories[data.RT_ID];\r\n\r\n      //   if (!Object.keys(this.data[data.selectedDate].categories).length) {\r\n      //     delete this.data[data.selectedDate];\r\n      //     this.orderedDatesList = this.orderedDatesList.filter(dateStamp => dateStamp != data.selectedDate);\r\n      //     this.selectedDate = this.orderedDatesList.length ? this.orderedDatesList[0] : null;\r\n      //   }\r\n      // }\r\n\r\n      this.reduceAvailableUnitEvent.emit({\r\n        key: 'reduceAvailableDays',\r\n        data: { selectedDate: data.selectedDate },\r\n      });\r\n      this.renderView();\r\n    }\r\n  }\r\n\r\n  renderView() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"tobeAssignedContainer pr-1 text-left\">\r\n        <div>\r\n          <div>\r\n            <div class=\"stickyHeader\">\r\n              <div class=\"tobeAssignedHeader pt-1\">Assignments</div>\r\n              <div class=\"closeBtn pt-1\" onClick={() => this.handleOptionEvent('closeSideMenu')}>\r\n                <i class=\"ft-chevrons-left\"></i>\r\n              </div>\r\n              <hr />\r\n              {this.isLoading ? (\r\n                <p>{this.loadingMessage}</p>\r\n              ) : (\r\n                <Fragment>\r\n                  {this.orderedDatesList.length ? (\r\n                    <div class={`text-center ` + (this.showDatesList ? 'show' : '')}>\r\n                      <div onClick={() => this.showUnassignedDate()}>\r\n                        <span class=\"font-weight-bold\">{this.data[this.selectedDate].dateStr}</span>\r\n                        <i class=\"la la-angle-down ml-2\"></i>\r\n                      </div>\r\n                      {this.showDatesList ? (\r\n                        <div class=\"dropdown-menu dropdown-menu-right full-width\">\r\n                          {this.orderedDatesList.map(ordDate => (\r\n                            <div class=\"pointer dropdown-item pointer\" onClick={() => this.showForDate(ordDate)}>\r\n                              {this.data[ordDate].dateStr}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  ) : (\r\n                    'All bookings assigned'\r\n                  )}\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n            {!this.isLoading && (\r\n              <div class=\"scrollabledArea\">\r\n                {this.orderedDatesList.length ? (\r\n                  Object.keys(this.data[this.selectedDate].categories).length ? (\r\n                    this.getCategoryView()\r\n                  ) : (\r\n                    <div class=\"mt-1\">All assigned for this day.</div>\r\n                  )\r\n                ) : null}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport class RoomService {\r\n  public async fetchData(\r\n    id: number,\r\n    language: string\r\n  ): Promise<{ [key: string]: any }> {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem(\"token\"));\r\n      if (token !== null) {\r\n        const { data } = await axios.post(\r\n          `/Get_Exposed_Property?Ticket=${token}`,\r\n          { id, language }\r\n        );\r\n        if (data.ExceptionMsg !== \"\") {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n}\r\n","@import url('../../assets/feather/style.min.css');\r\n@import url('../../assets/fontawesome/css/all.css');\r\n@import url('../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  display: block;\r\n  position: relative;\r\n  background-color: #ffffff;\r\n  height: 100%;\r\n  text-align: center;\r\n}\r\n\r\n.igl-calendar {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  height: 100%;\r\n}\r\n\r\n.calendarScrollContainer div {\r\n  position: relative;\r\n}\r\n\r\n.calendarScrollContainer {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  position: relative;\r\n  white-space: nowrap;\r\n  border-left: 2px solid grey;\r\n}\r\n\r\n.showToBeAssigned,\r\n.showLegend {\r\n  grid-template-columns: 330px 1fr;\r\n}\r\n\r\n#calendarContainer {\r\n  position: absolute;\r\n}\r\n\r\ndiv {\r\n  position: relative;\r\n}\r\n\r\n.legendContainer,\r\n.tobeAssignedContainer {\r\n  display: none;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding-left: 0.5em !important;\r\n  padding-right: 0.5em !important;\r\n}\r\n\r\n.showToBeAssigned .tobeAssignedContainer {\r\n  display: block;\r\n}\r\n\r\n.showLegend .legendContainer {\r\n  display: block;\r\n}\r\n\r\n.tobeBooked {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  text-align: left;\r\n}\r\n","import { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\r\nimport { RoomService } from '../../services/room.service';\r\nimport { BookingService } from '../../services/booking.service';\r\nimport { computeEndDate, convertDMYToISO, formatLegendColors } from '../../utils/utils';\r\n\r\nimport axios from 'axios';\r\nimport { EventsService } from '../../services/events.service';\r\nimport { ICountry, RoomBlockDetails, RoomBookingDetails } from '../../models/IBooking';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'igloo-calendar',\r\n  styleUrl: 'igloo-calendar.css',\r\n  scoped: true,\r\n})\r\nexport class IglooCalendar {\r\n  @Prop() propertyid: number;\r\n  @Prop() from_date: string;\r\n  @Prop() to_date: string;\r\n  @Prop() language: string;\r\n  @Prop() baseurl: string;\r\n  @Prop() loadingMessage: string;\r\n  @Prop() currencyName: string;\r\n  @Prop({ reflect: true }) ticket: string = '';\r\n  @Element() private element: HTMLElement;\r\n  @Event({ bubbles: true, composed: true })\r\n  dragOverHighlightElement: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) moveBookingTo: EventEmitter;\r\n\r\n  @State() calendarData: { [key: string]: any } = new Object();\r\n  @State() days: { [key: string]: any }[] = new Array();\r\n  @State() scrollViewDragging: boolean = false;\r\n\r\n  @State() bookingItem: { [key: string]: any } = null;\r\n  @State() showLegend: boolean = false;\r\n  @State() showPaymentDetails: boolean = false;\r\n  @State() showToBeAssigned: boolean = false;\r\n  private bookingService: BookingService = new BookingService();\r\n  private countryNodeList: ICountry[] = [];\r\n  private visibleCalendarCells: { x: any[]; y: any[] } = { x: [], y: [] };\r\n  private scrollContainer: HTMLElement;\r\n  private today: String = '';\r\n  private roomService: RoomService = new RoomService();\r\n  private eventsService = new EventsService();\r\n  @Watch('ticket')\r\n  async ticketChanged() {\r\n    sessionStorage.setItem('token', JSON.stringify(this.ticket));\r\n    this.initializeApp();\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    if (this.baseurl) {\r\n      axios.defaults.baseURL = this.baseurl;\r\n    }\r\n    if (this.ticket !== '') {\r\n      this.initializeApp();\r\n    }\r\n  }\r\n  initializeApp() {\r\n    try {\r\n      this.roomService.fetchData(this.propertyid, this.language).then(roomResp => {\r\n        this.setRoomsData(roomResp);\r\n        this.bookingService.getCalendarData(this.propertyid, this.from_date, this.to_date).then(async bookingResp => {\r\n          this.countryNodeList = await this.bookingService.getCountries(this.language);\r\n          this.calendarData.currency = roomResp['My_Result'].currency;\r\n          this.calendarData.legendData = this.getLegendData(roomResp);\r\n          this.calendarData.is_vacation_rental = roomResp['My_Result'].is_vacation_rental;\r\n          this.calendarData.startingDate = new Date(bookingResp.My_Params_Get_Rooming_Data.FROM).getTime();\r\n          this.calendarData.endingDate = new Date(bookingResp.My_Params_Get_Rooming_Data.TO).getTime();\r\n          this.calendarData.formattedLegendData = formatLegendColors(this.calendarData.legendData);\r\n          this.calendarData.bookingEvents = bookingResp.myBookings || [];\r\n          this.calendarData.toBeAssignedEvents = [];\r\n          let paymentMethods = roomResp['My_Result']['allowed_payment_methods'] as any[];\r\n          this.showPaymentDetails = paymentMethods.some(item => item.code === '001' || item.code === '004');\r\n          this.updateBookingEventsDateRange(this.calendarData.bookingEvents);\r\n          this.updateBookingEventsDateRange(this.calendarData.toBeAssignedEvents);\r\n          this.today = this.transformDateForScroll(new Date());\r\n          let startingDay: Date = new Date(this.getStartingDateOfCalendar());\r\n          startingDay.setHours(0, 0, 0, 0);\r\n          this.days = bookingResp.days;\r\n          this.calendarData.days = this.days;\r\n          this.calendarData.monthsInfo = bookingResp.months;\r\n          setTimeout(() => {\r\n            this.scrollToElement(this.today);\r\n          }, 200);\r\n        });\r\n      });\r\n    } catch (error) {}\r\n  }\r\n  componentDidLoad() {\r\n    this.scrollToElement(this.today);\r\n  }\r\n  @Listen('deleteButton')\r\n  async handledeleteEvent(ev: CustomEvent) {\r\n    try {\r\n      ev.stopImmediatePropagation();\r\n      ev.preventDefault();\r\n      const bookingEvent = [...this.calendarData.bookingEvents];\r\n      await this.eventsService.deleteEvent(ev.detail);\r\n\r\n      this.calendarData = {\r\n        ...this.calendarData,\r\n        bookingEvents: bookingEvent.filter(e => e.POOL !== ev.detail),\r\n      };\r\n    } catch (error) {\r\n      //toastr.error(error);\r\n    }\r\n  }\r\n\r\n  updateBookingEventsDateRange(eventData) {\r\n    eventData.forEach(bookingEvent => {\r\n      bookingEvent.legendData = this.calendarData.formattedLegendData;\r\n      bookingEvent.defaultDateRange = {};\r\n      bookingEvent.defaultDateRange.fromDate = new Date(bookingEvent.FROM_DATE + 'T00:00:00');\r\n      bookingEvent.defaultDateRange.fromDateStr = this.getDateStr(bookingEvent.defaultDateRange.fromDate);\r\n      bookingEvent.defaultDateRange.fromDateTimeStamp = bookingEvent.defaultDateRange.fromDate.getTime();\r\n\r\n      bookingEvent.defaultDateRange.toDate = new Date(bookingEvent.TO_DATE + 'T00:00:00');\r\n      bookingEvent.defaultDateRange.toDateStr = this.getDateStr(bookingEvent.defaultDateRange.toDate);\r\n      bookingEvent.defaultDateRange.toDateTimeStamp = bookingEvent.defaultDateRange.toDate.getTime();\r\n\r\n      bookingEvent.defaultDateRange.dateDifference = bookingEvent.NO_OF_DAYS; // (bookingEvent.defaultDateRange.toDate.getTime() - bookingEvent.defaultDateRange.fromDate.getTime())/(86400000);\r\n      bookingEvent.roomsInfo = [...this.calendarData.roomsInfo];\r\n    });\r\n  }\r\n  setRoomsData(roomServiceResp) {\r\n    let roomsData: { [key: string]: any }[] = new Array();\r\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\r\n      roomsData = roomServiceResp.My_Result.roomtypes;\r\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\r\n        roomCategory.expanded = true;\r\n      });\r\n    }\r\n    this.calendarData.roomsInfo = roomsData;\r\n  }\r\n\r\n  getLegendData(aData) {\r\n    return aData['My_Result'].calendar_legends;\r\n  }\r\n\r\n  getStartingDateOfCalendar() {\r\n    return this.calendarData.startingDate;\r\n  }\r\n\r\n  getEndingDateOfCalendar() {\r\n    return this.calendarData.endingDate;\r\n  }\r\n\r\n  getDay(dt) {\r\n    const currentDate = new Date(dt);\r\n    const locale = 'en-US';\r\n    const dayOfWeek = this.getLocalizedDayOfWeek(currentDate, locale);\r\n    return dayOfWeek + ' ' + currentDate.getDate();\r\n  }\r\n\r\n  getLocalizedDayOfWeek(date, locale) {\r\n    const options = { weekday: 'short' };\r\n    return date.toLocaleDateString(locale, options);\r\n  }\r\n\r\n  getLocalizedMonth(date, locale = 'default') {\r\n    return date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\r\n  }\r\n\r\n  getDateStr(date, locale = 'default') {\r\n    return date.getDate() + ' ' + date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\r\n  }\r\n\r\n  scrollToElement(goToDate) {\r\n    console.log(goToDate);\r\n    this.scrollContainer = this.scrollContainer || this.element.querySelector('.calendarScrollContainer');\r\n    const topLeftCell = this.element.querySelector('.topLeftCell');\r\n    const gotoDay = this.element.querySelector('.day-' + goToDate);\r\n    if (gotoDay) {\r\n      this.scrollContainer.scrollTo({ left: 0 });\r\n      const gotoRect = gotoDay.getBoundingClientRect();\r\n      const containerRect = this.scrollContainer.getBoundingClientRect();\r\n      const topLeftCellRect = topLeftCell.getBoundingClientRect();\r\n      this.scrollContainer.scrollTo({\r\n        left: gotoRect.left - containerRect.left - topLeftCellRect.width - gotoRect.width,\r\n      });\r\n    }\r\n  }\r\n  @Listen('bookingCreated')\r\n  onBookingCreation(event: CustomEvent<RoomBookingDetails[]>) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    this.updateBookingEventsDateRange(event.detail);\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: [...this.calendarData.bookingEvents, ...event.detail],\r\n    };\r\n    setTimeout(() => {\r\n      this.scrollToElement(this.transformDateForScroll(new Date(event.detail[0].FROM_DATE)));\r\n    }, 200);\r\n  }\r\n  @Listen('blockedCreated')\r\n  onBlockCreation(event: CustomEvent<RoomBlockDetails>) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    this.updateBookingEventsDateRange([event.detail]);\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: [...this.calendarData.bookingEvents, event.detail],\r\n    };\r\n    // setTimeout(() => {\r\n    //   this.scrollToElement(this.transformDateForScroll(new Date(event.detail.FROM_DATE)));\r\n    // }, 200);\r\n  }\r\n  private transformDateForScroll(date: Date) {\r\n    return moment(date).format('D_M_YYYY');\r\n  }\r\n  @Listen('scrollPageToRoom', { target: 'window' })\r\n  scrollPageToRoom(event: CustomEvent) {\r\n    let targetScrollClass = event.detail.refClass;\r\n    this.scrollContainer = this.scrollContainer || this.element.querySelector('.calendarScrollContainer');\r\n    const topLeftCell = this.element.querySelector('.topLeftCell');\r\n    const gotoRoom = this.element.querySelector('.' + targetScrollClass);\r\n    if (gotoRoom) {\r\n      this.scrollContainer.scrollTo({ top: 0 });\r\n      const gotoRect = gotoRoom.getBoundingClientRect();\r\n      const containerRect = this.scrollContainer.getBoundingClientRect();\r\n      const topLeftCellRect = topLeftCell.getBoundingClientRect();\r\n      this.scrollContainer.scrollTo({\r\n        top: gotoRect.top - containerRect.top - topLeftCellRect.height - gotoRect.height,\r\n      });\r\n    }\r\n  }\r\n\r\n  shouldRenderCalendarView() {\r\n    // console.log(\"rendering...\")\r\n    return this.calendarData && this.calendarData.days && this.calendarData.days.length;\r\n  }\r\n\r\n  onOptionSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    const opt: { [key: string]: any } = event.detail;\r\n    const calendarElement = this.element.querySelector('#iglooCalendar');\r\n    switch (opt.key) {\r\n      case 'showAssigned':\r\n        calendarElement.classList.remove('showLegend');\r\n        calendarElement.classList.remove('showToBeAssigned');\r\n        calendarElement.classList.toggle('showToBeAssigned');\r\n\r\n        this.showLegend = false;\r\n        this.showToBeAssigned = true;\r\n        break;\r\n      case 'showLegend':\r\n        calendarElement.classList.remove('showToBeAssigned');\r\n        calendarElement.classList.remove('showLegend');\r\n        calendarElement.classList.toggle('showLegend');\r\n\r\n        this.showLegend = true;\r\n        this.showToBeAssigned = false;\r\n        break;\r\n      case 'calendar':\r\n        let dt = new Date(opt.data);\r\n        this.scrollToElement(dt.getDate() + '_' + (dt.getMonth() + 1) + '_' + dt.getFullYear());\r\n        break;\r\n      case 'search':\r\n        break;\r\n      case 'add':\r\n        this.bookingItem = opt.data;\r\n        break;\r\n      case 'gotoToday':\r\n        this.scrollToElement(this.today);\r\n        break;\r\n      case 'closeSideMenu':\r\n        this.closeSideMenu();\r\n        break;\r\n    }\r\n  }\r\n\r\n  closeSideMenu() {\r\n    const calendarElement = this.element.querySelector('#iglooCalendar');\r\n    calendarElement.classList.remove('showToBeAssigned');\r\n    calendarElement.classList.remove('showLegend');\r\n\r\n    this.showLegend = false;\r\n    this.showToBeAssigned = false;\r\n  }\r\n\r\n  scrollViewDragPos = { top: 0, left: 0, x: 0, y: 0 };\r\n  dragScrollContent(event: MouseEvent) {\r\n    this.scrollViewDragging = false;\r\n    let isPreventPageScroll = event && event.target ? this.hasAncestorWithClass(event.target as HTMLElement, 'preventPageScroll') : false;\r\n    if (!isPreventPageScroll) {\r\n      this.scrollViewDragPos = {\r\n        // The current scroll\r\n        left: this.scrollContainer.scrollLeft,\r\n        top: this.scrollContainer.scrollTop,\r\n        // Get the current mouse position\r\n        x: event.clientX,\r\n        y: event.clientY,\r\n      };\r\n      document.addEventListener('mousemove', this.onScrollContentMoveHandler);\r\n      document.addEventListener('mouseup', this.onScrollContentMoveEndHandler);\r\n    }\r\n  }\r\n\r\n  onScrollContentMoveHandler: EventListener = (event: MouseEvent) => {\r\n    // How far the mouse has been moved\r\n    const dx = event.clientX - this.scrollViewDragPos.x;\r\n    const dy = event.clientY - this.scrollViewDragPos.y;\r\n\r\n    // Scroll the element\r\n    this.scrollContainer.scrollTop = this.scrollViewDragPos.top - dy;\r\n    this.scrollContainer.scrollLeft = this.scrollViewDragPos.left - dx;\r\n    if (Math.abs(dx) > 5 || Math.abs(dy) > 5) {\r\n      this.scrollViewDragging = true;\r\n    }\r\n  };\r\n\r\n  onScrollContentMoveEndHandler: EventListener = () => {\r\n    document.removeEventListener('mousemove', this.onScrollContentMoveHandler);\r\n    document.removeEventListener('mouseup', this.onScrollContentMoveEndHandler);\r\n  };\r\n\r\n  calendarScrolling() {\r\n    const containerRect = this.scrollContainer.getBoundingClientRect();\r\n    let leftSideMenuSize = 170;\r\n    let maxWidth = containerRect.width - leftSideMenuSize;\r\n    let leftX = containerRect.x + leftSideMenuSize;\r\n    let rightX = containerRect.x + containerRect.width;\r\n\r\n    let cells = Array.from(this.element.querySelectorAll('.monthCell')) as HTMLElement[];\r\n\r\n    if (cells.length) {\r\n      cells.map((monthContainer: HTMLElement) => {\r\n        let monthRect = monthContainer.getBoundingClientRect();\r\n        if (monthRect.x + monthRect.width < leftX) {\r\n          // item end is scrolled outside view, in -x\r\n        } else if (monthRect.x > rightX) {\r\n          // item is outside scrollview, in +x\r\n        } else {\r\n          let titleElement = monthContainer.querySelector('.monthTitle') as HTMLElement;\r\n          let marginLeft = 0;\r\n          let monthWidth = monthRect.width;\r\n          if (monthRect.x < leftX) {\r\n            marginLeft = Math.abs(monthRect.x) - leftX;\r\n            marginLeft = monthRect.x < 0 ? Math.abs(monthRect.x) + leftX : Math.abs(marginLeft);\r\n            monthWidth = monthRect.x + monthRect.width > rightX ? maxWidth : monthRect.x + monthRect.width - leftX;\r\n          } else {\r\n            monthWidth = maxWidth - monthWidth > monthWidth ? monthWidth : maxWidth - monthRect.x + leftX;\r\n          }\r\n          titleElement.style.marginLeft = marginLeft + 'px';\r\n          titleElement.style.width = monthWidth + 'px';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  hasAncestorWithClass(element: HTMLElement, className: string): boolean {\r\n    let currentElement = element;\r\n    while (currentElement !== null) {\r\n      if (currentElement.matches(`.${className}`)) {\r\n        return true;\r\n      }\r\n      currentElement = currentElement.parentElement;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  @Listen('showBookingPopup', { target: 'window' })\r\n  showBookingPopupEventDataHandler(event: CustomEvent) {\r\n    event.preventDefault();\r\n    event.stopImmediatePropagation();\r\n    this.onOptionSelect(event);\r\n    //console.log(\"show booking event\", event);\r\n  }\r\n\r\n  @Listen('updateEventData')\r\n  updateEventDataHandler(event: CustomEvent) {\r\n    let bookedData = this.calendarData.bookingEvents.find(bookedEvent => bookedEvent.id === event.detail.id);\r\n    if (bookedData && event.detail && event.detail.data) {\r\n      Object.entries(event.detail.data).forEach(([key, value]) => {\r\n        bookedData[key] = value;\r\n      });\r\n    }\r\n  }\r\n\r\n  @Listen('dragOverEventData')\r\n  dragOverEventDataHandler(event: CustomEvent) {\r\n    if (event.detail.id === 'CALCULATE_DRAG_OVER_BOUNDS') {\r\n      let topLeftCell = document.querySelector('igl-cal-header .topLeftCell') as HTMLElement;\r\n      let containerDays = document.querySelectorAll('.headersContainer .headerCell');\r\n      let containerRooms = document.querySelectorAll('.bodyContainer .roomRow .roomTitle');\r\n      this.visibleCalendarCells = { x: [], y: [] };\r\n\r\n      containerDays.forEach(element => {\r\n        const htmlElement = element as HTMLElement;\r\n        this.visibleCalendarCells.x.push({\r\n          left: htmlElement.offsetLeft + topLeftCell.offsetWidth,\r\n          width: htmlElement.offsetWidth,\r\n          id: htmlElement.getAttribute('data-day'),\r\n        });\r\n      });\r\n\r\n      containerRooms.forEach(element => {\r\n        const htmlElement = element as HTMLElement;\r\n        this.visibleCalendarCells.y.push({\r\n          top: htmlElement.offsetTop,\r\n          height: htmlElement.offsetHeight,\r\n          id: htmlElement.getAttribute('data-room'),\r\n        });\r\n      });\r\n      this.highlightDragOver(true, event.detail.data);\r\n    } else if (event.detail.id === 'DRAG_OVER') {\r\n      this.highlightDragOver(true, event.detail.data);\r\n    } else if (event.detail.id === 'DRAG_OVER_END') {\r\n      this.highlightDragOver(false, event.detail.data);\r\n    } else if (event.detail.id === 'STRETCH_OVER_END') {\r\n      this.highlightDragOver(false, event.detail.data);\r\n    }\r\n  }\r\n\r\n  async highlightDragOver(hightLightElement, currentPosition) {\r\n    let xElement, yElement;\r\n    if (currentPosition) {\r\n      xElement = this.visibleCalendarCells.x.find(pos => pos.left < currentPosition.x && currentPosition.x <= pos.left + pos.width);\r\n      yElement = this.visibleCalendarCells.y.find(pos => pos.top < currentPosition.y && currentPosition.y <= pos.top + pos.height);\r\n    }\r\n    // console.log(hightLightElement+\":::\"+yElement.id+\"_\"+xElement.id);\r\n    if (hightLightElement && xElement && yElement) {\r\n      this.dragOverHighlightElement.emit({\r\n        dragOverElement: yElement.id + '_' + xElement.id,\r\n      });\r\n    } else {\r\n      this.dragOverHighlightElement.emit({ dragOverElement: '' });\r\n    }\r\n    if (!hightLightElement) {\r\n      this.moveBookingTo.emit({\r\n        bookingId: currentPosition.id,\r\n        fromRoomId: currentPosition.fromRoomId,\r\n        toRoomId: (yElement && yElement.id) || 'revert',\r\n        moveToDay: (xElement && xElement.id) || 'revert',\r\n        pool: currentPosition.pool,\r\n        from_date: convertDMYToISO(xElement && xElement.id),\r\n        to_date: computeEndDate(xElement && xElement.id, currentPosition.nbOfDays),\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <ir-interceptor></ir-interceptor>\r\n        <ir-common></ir-common>\r\n        <div id=\"iglooCalendar\" class=\"igl-calendar\">\r\n          {this.shouldRenderCalendarView() ? (\r\n            [\r\n              this.showToBeAssigned ? (\r\n                <igl-to-be-assigned\r\n                  loadingMessage={'Fetching unassigned units'}\r\n                  to_date={this.to_date}\r\n                  from_date={this.from_date}\r\n                  propertyid={this.propertyid}\r\n                  class=\"tobeAssignedContainer\"\r\n                  calendarData={this.calendarData}\r\n                  onOptionEvent={evt => this.onOptionSelect(evt)}\r\n                ></igl-to-be-assigned>\r\n              ) : null,\r\n              this.showLegend ? (\r\n                <igl-legends class=\"legendContainer\" legendData={this.calendarData.legendData} onOptionEvent={evt => this.onOptionSelect(evt)}></igl-legends>\r\n              ) : null,\r\n              <div class=\"calendarScrollContainer\" onMouseDown={event => this.dragScrollContent(event)} onScroll={() => this.calendarScrolling()}>\r\n                <div id=\"calendarContainer\">\r\n                  <igl-cal-header today={this.today} calendarData={this.calendarData} onOptionEvent={evt => this.onOptionSelect(evt)}></igl-cal-header>\r\n                  <igl-cal-body\r\n                    countryNodeList={this.countryNodeList}\r\n                    currency={this.calendarData.currency}\r\n                    today={this.today}\r\n                    isScrollViewDragging={this.scrollViewDragging}\r\n                    calendarData={this.calendarData}\r\n                  ></igl-cal-body>\r\n                  <igl-cal-footer today={this.today} calendarData={this.calendarData} onOptionEvent={evt => this.onOptionSelect(evt)}></igl-cal-footer>\r\n                </div>\r\n              </div>,\r\n            ]\r\n          ) : (\r\n            <ir-loading-screen message=\"Preparing Calendar Data\"></ir-loading-screen>\r\n          )}\r\n          {this.bookingItem && (\r\n            <igl-book-property\r\n              showPaymentDetails={this.showPaymentDetails}\r\n              countryNodeList={this.countryNodeList}\r\n              currency={this.calendarData.currency}\r\n              language={this.language}\r\n              propertyid={this.propertyid}\r\n              bookingData={this.bookingItem}\r\n              onCloseBookingWindow={_ => (this.bookingItem = null)}\r\n            ></igl-book-property>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { IrOnlineResource } from './models';\r\nexport const onlineResources: IrOnlineResource[] = [\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/jquery.min.js\",\r\n  // },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i%7CQuicksand:300,400,500,700',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/bootstrap.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/bootstrap-extended.css',\r\n  },\r\n  { isCSS: true, link: 'https://x.igloorooms.com/app-assets/css/colors.css' },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/core/menu/menu-types/horizontal-menu.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/core/colors/palette-gradient.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/components.css',\r\n  },\r\n  { isCSS: true, link: 'https://x.igloorooms.com/assets/css/style.css' },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/vendors/css/forms/icheck/icheck.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/vendors/css/forms/icheck/custom.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/pages/login-register.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/daterangepicker.css',\r\n  },\r\n\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/moment.min.js\",\r\n  // },\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/daterangepicker.js\",\r\n  // },\r\n];\r\n","import { Component, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport { IrOnlineResource } from '../../common/models';\r\nimport { onlineResources } from '../../common/ir.common.resources';\r\n\r\n@Component({\r\n  tag: 'ir-common',\r\n})\r\nexport class IrCommon {\r\n  @Prop({ reflect: true }) extraResources: string = '';\r\n  @State() resources: IrOnlineResource[] = onlineResources;\r\n  componentWillLoad() {\r\n    this.parseRefs();\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.initializeStyles();\r\n  }\r\n\r\n  @Watch('extraResources')\r\n  hrefsChanged() {\r\n    this.parseRefs();\r\n    this.initializeStyles();\r\n  }\r\n\r\n  private parseRefs() {\r\n    if (this.extraResources !== '') this.resources.push(JSON.parse(this.extraResources));\r\n  }\r\n\r\n  private appendTag(tagName: string, attributes: any) {\r\n    const tag = document.createElement(tagName);\r\n    const selectorParts = [];\r\n\r\n    Object.keys(attributes).forEach(attr => {\r\n      tag.setAttribute(attr, attributes[attr]);\r\n      selectorParts.push(`[${attr}=\"${attributes[attr]}\"]`);\r\n    });\r\n\r\n    const selector = `${tagName}${selectorParts.join('')}`;\r\n    const existingTag = document.querySelector(selector);\r\n\r\n    if (!existingTag) {\r\n      document.head.appendChild(tag);\r\n    }\r\n  }\r\n\r\n  private initializeStyles() {\r\n    this.resources.forEach(res => {\r\n      if (res.isCSS) {\r\n        this.appendTag('link', {\r\n          href: res.link,\r\n          rel: 'stylesheet',\r\n          type: 'text/css',\r\n        });\r\n      }\r\n      if (res.isJS) {\r\n        this.appendTag('script', {\r\n          src: res.link,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <slot></slot>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","\r\n.date-range-input {\r\n  border: 0;\r\n  outline: 0;\r\n  margin: 0;\r\n  flex: 1;\r\n}\r\n.date-range-input:focus {\r\n  border: 0;\r\n  outline: 0;\r\n}\r\n","import {\r\n  Component,\r\n  h,\r\n  Element,\r\n  Prop,\r\n  Event,\r\n  EventEmitter,\r\n} from \"@stencil/core\";\r\nimport moment from \"moment\";\r\n\r\n@Component({\r\n  tag: \"ir-date-picker\",\r\n  styleUrl: \"ir-date-picker.css\",\r\n  scoped: true,\r\n})\r\nexport class IrDatePicker {\r\n  @Element() private element: HTMLElement;\r\n  @Prop({ reflect: true }) fromDate: Date;\r\n  @Prop({ reflect: true }) toDate: Date;\r\n\r\n  @Prop({ reflect: true }) opens: \"left\" | \"right\" | \"center\";\r\n  @Prop({ reflect: true }) autoApply: boolean;\r\n  @Prop({ reflect: true }) firstDay: number = 1;\r\n  @Prop({ reflect: true }) monthNames: string[] = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  @Prop({ reflect: true }) daysOfWeek: string[] = [\r\n    \"Su\",\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\",\r\n  ];\r\n  @Prop({ reflect: true }) format: string = \"MMM DD,YYYY\";\r\n  @Prop({ reflect: true }) separator: string = \"-\";\r\n  @Prop({ reflect: true }) applyLabel: string = \"Apply\";\r\n  @Prop({ reflect: true }) cancelLabel: string = \"Cancel\";\r\n  @Prop({ reflect: true }) fromLabel: string = \"Form\";\r\n  @Prop({ reflect: true }) toLabel: string = \"To\";\r\n  @Prop({ reflect: true }) customRangeLabel: string = \"Custom\";\r\n  @Prop({ reflect: true }) weekLabel: string = \"W\";\r\n  @Prop({ reflect: true }) maxSpan: moment.DurationInputArg1 = {\r\n    days: 240,\r\n  };\r\n\r\n  @Event() dateChanged: EventEmitter<{\r\n    start: moment.Moment;\r\n    end: moment.Moment;\r\n  }>;\r\n  dateRangeInput: HTMLElement;\r\n  componentDidLoad() {\r\n    this.dateRangeInput = this.element.querySelector(\".date-range-input\");\r\n    $(this.dateRangeInput).daterangepicker(\r\n      {\r\n        opens: this.opens,\r\n        startDate: moment(this.fromDate),\r\n        endDate: moment(this.toDate),\r\n        maxSpan: this.maxSpan,\r\n        autoApply: this.autoApply,\r\n        locale: {\r\n          format: this.format,\r\n          separator: this.separator,\r\n          applyLabel: this.applyLabel,\r\n          cancelLabel: this.cancelLabel,\r\n          fromLabel: this.fromLabel,\r\n          toLabel: this.toLabel,\r\n          customRangeLabel: this.customRangeLabel,\r\n          weekLabel: this.weekLabel,\r\n          daysOfWeek: this.daysOfWeek,\r\n          monthNames: this.monthNames,\r\n          firstDay: this.firstDay,\r\n        },\r\n      },\r\n      (start, end) => {\r\n        this.dateChanged.emit({ start, end });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <input class=\"date-range-input\" type=\"text\" />;\r\n  }\r\n}\r\n",":host {\r\n  --viewport-padding: 25px;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: var(--viewport-padding);\r\n  gap: 10px;\r\n  max-width: 60vw;\r\n  margin: 0;\r\n  list-style: none;\r\n  z-index: 2147483647;\r\n  outline: none;\r\n  pointer-events: none;\r\n}\r\n\r\n.toast-container {\r\n  background-color: white;\r\n  border-radius: 6px;\r\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\r\n  padding: 15px 30px;\r\n  display: grid;\r\n  grid-template-areas: 'title action';\r\n  grid-template-columns: auto max-content;\r\n  column-gap: 15px;\r\n  align-items: center;\r\n  overflow: hidden;\r\n}\r\n.toast-container[data-state='open'] {\r\n  animation: slideIn 150ms cubic-bezier(0.16, 1, 0.3, 1) forwards;\r\n}\r\n.toast-container[data-state='closed'] {\r\n  pointer-events: none;\r\n  animation: fadeOut 150ms ease-in forwards;\r\n}\r\np {\r\n  margin: 0;\r\n  padding: 0;\r\n  grid-area: title;\r\n  font-weight: 500;\r\n  color: #1c2024;\r\n  font-size: 15px;\r\n}\r\n\r\n.x-mark-container,\r\n.check-mark-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 1.5rem;\r\n  width: 1.5rem;\r\n  border-radius: 50%;\r\n}\r\n.x-mark-container {\r\n  background: red;\r\n}\r\n.check-mark-container {\r\n  background: rgb(9, 153, 9);\r\n}\r\n\r\n.loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n.loadingScreenContainer {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 100;\r\n  background: rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n@keyframes fadeOut {\r\n  0% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n}\r\n@keyframes slideIn {\r\n  0% {\r\n    transform: translateX(calc(100% + var(--viewport-padding)));\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n","import { Component, Fragment, Host, Prop, State, h } from '@stencil/core';\r\nimport axios from 'axios';\r\n\r\n@Component({\r\n  tag: 'ir-interceptor',\r\n  styleUrl: 'ir-interceptor.css',\r\n  scoped: true,\r\n})\r\nexport class IrInterceptor {\r\n  @State() isShown = false;\r\n  @State() isLoading = false;\r\n  @State() isSuccess = false;\r\n  @State() isUnassignedUnit = false;\r\n\r\n  @Prop({ reflect: true, mutable: true }) defaultMessage = {\r\n    loadingMessage: 'Fetching Data',\r\n    successMessage: 'Success',\r\n    errorMessage: 'Something Went Wrong',\r\n  };\r\n\r\n  @Prop({ reflect: true }) handledEndpoints = ['/Get_Exposed_Booking_Availability', '/ReAllocate_Exposed_Room'];\r\n\r\n  componentWillLoad() {\r\n    this.setupAxiosInterceptors();\r\n  }\r\n\r\n  setupAxiosInterceptors() {\r\n    axios.interceptors.request.use(this.handleRequest.bind(this), this.handleError.bind(this));\r\n    axios.interceptors.response.use(this.handleResponse.bind(this), this.handleError.bind(this));\r\n  }\r\n\r\n  extractEndpoint(url: string): string {\r\n    return url.split('?')[0];\r\n  }\r\n\r\n  isHandledEndpoint(url: string): boolean {\r\n    return this.handledEndpoints.includes(this.extractEndpoint(url));\r\n  }\r\n\r\n  handleRequest(config) {\r\n    if (this.isHandledEndpoint(config.url)) {\r\n      this.isLoading = true;\r\n      if (this.extractEndpoint(config.url) === '/ReAllocate_Exposed_Room') {\r\n        this.defaultMessage.loadingMessage = 'Updating Event';\r\n      } else if (this.extractEndpoint(config.url) === '/Get_Aggregated_UnAssigned_Rooms') {\r\n        this.isUnassignedUnit = true;\r\n      } else {\r\n        this.defaultMessage.loadingMessage = 'Fetching Data';\r\n      }\r\n      this.showToast();\r\n    }\r\n    return config;\r\n  }\r\n\r\n  handleResponse(response) {\r\n    this.isLoading = false;\r\n\r\n    if (response.data.ExceptionMsg?.trim()) {\r\n      this.handleError(response.data.ExceptionMsg);\r\n\r\n      throw new Error(response.data.ExceptionMsg);\r\n    }\r\n\r\n    if (this.isHandledEndpoint(response.config.url)) {\r\n      this.handleCompletion('Success', true);\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  handleError(error) {\r\n    if (this.isUnassignedUnit) {\r\n      this.isUnassignedUnit = false;\r\n    }\r\n    if (!this.isShown) {\r\n      this.showToast();\r\n    }\r\n    this.handleCompletion(error, false);\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  showToast() {\r\n    this.isShown = true;\r\n  }\r\n\r\n  hideToastAfterDelay(isSuccess: boolean) {\r\n    if (this.isUnassignedUnit) {\r\n      this.isShown = false;\r\n      this.isUnassignedUnit = false;\r\n    } else {\r\n      const delay = isSuccess ? 0 : 5000;\r\n\r\n      setTimeout(() => {\r\n        this.isShown = false;\r\n      }, delay);\r\n    }\r\n  }\r\n\r\n  handleCompletion(message: string, success: boolean) {\r\n    this.isSuccess = success;\r\n    this.defaultMessage = {\r\n      ...this.defaultMessage,\r\n      [success ? 'successMessage' : 'errorMessage']: message,\r\n    };\r\n    this.hideToastAfterDelay(success);\r\n  }\r\n\r\n  renderMessage(): string {\r\n    if (this.isLoading) return this.defaultMessage.loadingMessage;\r\n    return this.isSuccess ? this.defaultMessage.successMessage : this.defaultMessage.errorMessage;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.isLoading && this.isShown && (\r\n          <div class=\"loadingScreenContainer\">\r\n            <div class=\"loadingContainer\">\r\n              <ir-loading-screen></ir-loading-screen>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div class=\"toast-container\" data-state={!this.isLoading && this.isShown && !this.isSuccess ? 'open' : 'closed'}>\r\n          {!this.isLoading && this.isShown && !this.isSuccess && (\r\n            <Fragment>\r\n              <div class=\"x-mark-container\">\r\n                <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path\r\n                    d=\"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z\"\r\n                    fill=\"white\"\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                  ></path>\r\n                </svg>\r\n              </div>\r\n              <p>{this.renderMessage()}</p>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: fix;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 1000;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\n.loader {\r\n  width: 2.25rem;\r\n  height: 2.25rem;\r\n  border: 3.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n.backdrop {\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n.loaderContainer {\r\n  position: absolute;\r\n  z-index: 100001;\r\n  padding: 20px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\r\n}\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","import { Component, Host, Prop, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-loading-screen',\r\n  styleUrl: 'ir-loading-screen.css',\r\n  scoped: true,\r\n})\r\nexport class IrLoadingScreen {\r\n  @Prop() message: string = '';\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"loaderContainer\">\r\n          <span class=\"loader\"></span>\r\n          {this.message && <p class={'m-0'}>{this.message}</p>}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../assets/feather/style.min.css\");\r\n@import url(\"../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  position: relative;\r\n}\r\n\r\n/* p {\r\n  position: absolute;\r\n  top: 10px;\r\n  background-color: antiquewhite;\r\n  border-radius: 7px;\r\n  padding: 10px 15px;\r\n  z-index: 1000000;\r\n} */\r\n","import { Component, Host, Prop, State, h } from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"ir-tooltip\",\r\n  styleUrl: \"ir-tooltip.css\",\r\n  scoped: true,\r\n})\r\nexport class IrTooltip {\r\n  @Prop({ reflect: true }) message: string;\r\n  @State() open: boolean;\r\n  tooltipTimeout: any;\r\n  toggleOpen(shouldOpen: boolean) {\r\n    if (this.tooltipTimeout) {\r\n      clearTimeout(this.tooltipTimeout);\r\n    }\r\n\r\n    if (shouldOpen) {\r\n      this.tooltipTimeout = setTimeout(() => {\r\n        this.open = true;\r\n      }, 300);\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <span\r\n          onMouseEnter={() => this.toggleOpen(true)}\r\n          onMouseLeave={() => this.toggleOpen(false)}\r\n        >\r\n          <i\r\n            class=\"ml-1 ft-info\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            data-original-title=\"Info popup\"\r\n          ></i>\r\n        </span>\r\n        {this.open && (\r\n          <div class=\"tooltip bottom show position-absolute\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner fit\">\r\n              <i class=\"tooltip-top-demo\"></i>\r\n              <span innerHTML={this.message}></span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}
{"version":3,"names":["iglApplicationInfoCss","IglApplicationInfo","componentWillLoad","this","guestData","guestInfo","Object","assign","updateRoomList","handleSelctedUnits","units","selectedUnits","index","filterdRoomList","roomsList","filter","e","includes","id","updateData","dataUpdateEvent","emit","key","guestRefKey","data","handleDataChange","value","find","room","name","handleGuestNameChange","event","guestName","target","render","h","Host","class","bookingType","roomCategoryName","ratePlanName","replace","message","cancelation","guarantee","adult_child_offering","v4","type","placeholder","onInput","required","onChange","selected","roomId","map","preference","bedPreferenceType","CODE_NAME","CODE_VALUE_EN","rate","iglBlockDatesViewCss","IglBlockDatesView","blockDatesData","RELEASE_AFTER_HOURS","OPTIONAL_REASON","OUT_OF_SERVICE","releaseList","bookingService","BookingService","getBlockedInfo","defaultData","parseInt","emitData","error","handleOptionalReason","handleReleaseAfterChange","evt","entryDate","undefined","renderPage","getReleaseHoursString","dt","Date","entryHour","entryMinute","setHours","getHours","getMinutes","toLocaleString","month","getDate","formatNumber","handleOutOfService","checked","renderAgain","isEventHover","fromDate","toDate","releaseItem","EventsService","constructor","reallocateEvent","pool","destination_pr_id","from_date","to_date","token","JSON","parse","sessionStorage","getItem","console","log","axios","post","ExceptionMsg","Error","deleteEvent","POOL","My_Result","updateBlockedEvent","bookingEvent","releaseData","blockUnit","formatDate","FROM_DATE","TO_DATE","pr_id","PR_ID","STAY_STATUS_CODE","DESCRIPTION","NOTES","date","split","join","iglBookPropertyCss","IglBookProperty","PAGE_ZERO","PAGE_ONE","PAGE_TWO","PAGE_BLOCK_DATES","showSplitBookingOption","sourceOptions","selectedRooms","bookedByInfoData","ratePricingMode","eventsService","code","description","componentDidLoad","document","addEventListener","closeWindow","disconnectedCallback","removeEventListener","bookingData","defaultDateRange","dateRangeData","setupEntries","fetchSetupEntries","setSourceOptions","bookingSource","setOtherProperties","isEventType","setEditingRoomInfo","page","getDefaultPage","source","sourceOption","res","arrivalTime","category","getRoomCategoryByRoomId","getBookingPreferenceRoomId","RATE_PLAN_ID","adultCount","ADULTS_COUNT","RATE","rateType","RATE_TYPE","ratePlanId","roomCategoryId","totalRooms","RATE_PLAN","NAME","initializeBookingAvailability","room_type_ids","roomsInfo","getBookingAvailability","propertyid","language","currency","roomtypes","tax_statement","_a","roomCategory","physicalrooms","event_type","hasOwnProperty","getSplitBookings","splitBookingEvents","isConvertedBooking","closeBookingWindow","isEditBooking","onRoomsDataUpdate","changedKey","detail","roomCategoryKey","getRoomCategoryKey","ratePlanKey","getRatePlanKey","shouldClearData","initializeRoomCategoryIfNeeded","applyBookingEditToSelectedRoom","setSelectedRoomData","cleanupEmptyData","isEditBookingEvent","hasSelectedRoomData","keys","length","onDateRangeSelect","opt","dateToFormattedString","handleBlockDateUpdate","stopImmediatePropagation","stopPropagation","handleSubmit","preventDefault","handleGuestInfoUpdate","handleBookedByInfoUpdate","isActiveSouceOption","srcIndex","handleSourceDropDown","selectedOption","toString","gotoSplitPageTwo","gotoPage","showSplitBooking","getSelectedSplitBookingName","bookingId","splitBooking","booking","ID","isActiveSplitBookingOption","spltIndex","splitBookingId","handleSplitBookingDropDown","isPageZero","isPageOne","isPageTwo","isPageBlockDates","getSplitBookingList","option","getSourceNode","getRoomsListFromCategoryId","categoryId","getPageZeroView","onClick","getPageOneView","onDateSelectEvent","roomInfo","dateDifference","roomTypeData","onDataUpdateEvent","disabled","getPageBlockDatesView","fromDateStr","toDateStr","ENTRY_DATE","handleBlockDate","handleButtonClicked","bookUser","handlePageTwoDataUpdateEvent","result","blockedUnit","transformNewBLockedRooms","blockedCreated","check_in","setLoadingState","STATUS_CODE","getArrivalTimeForBooking","booking_nbr","BOOKING_NUMBER","GUEST","newBookings","transformNewBooking","bookingCreated","resetLoadingState","assign_units","isLoading","ARRIVAL_TIME","setTimeout","BLOCK_DATES_TITLE","TITLE","showPaymentDetails","selectedGuestData","countryNodeList","isEditOrAddRoomEvent","onButtonClicked","iglBookingEventCss","IglBookingEvent","dayWidth","eventSpace","vertSpace","showInfoPopup","bubbleInfoTopSide","resizeSide","isDragging","handleMouseMoveBind","handleMouseMove","bind","handleMouseUpBind","handleMouseUp","handleClickOutsideBind","handleClickOutside","window","isNewEvent","hideBubble","showEventInfo","clickedElement","element","contains","hideBubbleInfoPopup","currentInfoBubbleId","getBookingId","moveBookingToHandler","moveToDay","toRoomId","fromRoomId","isTouchStart","moveDiffereneX","moveDiffereneY","getBookedRoomId","onMoveUpdateBooking","renderElement","getUniqueId","getTime","reverse","tempDate","setDate","getStayDays","getFullYear","getMonth","isSplitBooking","SPLIT_BOOKING","isHighlightEventType","getEventType","getBookingStatus","STATUS","getBookedBy","getEventStartingDate","getEventEndingDate","getEventLegend","status","legendData","statusId","orderRide","color","_b","getLegendOfStatus","aStatusId","getNoteNode","INTERNAL_NOTE","getBalanceNode","BALANCE","setStayDays","aStayDays","NO_OF_DAYS","getPosition","startingDate","startingCellClass","bodyContainer","querySelector","startingCell","pos","top","left","width","height","getBoundingClientRect","bodyContainerRect","boundingRect","getNumber","aData","parseFloat","startDragging","side","initialX","clientX","touches","initialY","clientY","elementRect","offsetX","offsetY","dragInitPos","style","x","y","dragEndPos","dragOverEventData","initialWidth","offsetWidth","initialLeft","offsetLeft","currentX","distanceX","currentY","distanceY","newWidth","Math","min","max","newLeft","finalWidth","abs","nbOfDays","numberOfDays","round","initialStayDays","updateEventData","showInfo","midPoint","hideBubbleInfo","legend","noteNode","balanceNode","clsName","backgroundColor","onTouchStart","onMouseDown","is_vacation_rental","bubbleInfoTop","iglBookingEventHoverCss","IglBookingEventHover","todayTimeStamp","eventService","getTotalOccupants","getPhoneNumber","PHONE","getCountry","findCountry","COUNTRY","getPhoneCode","phone_prefix","renderPhone","is_direct","getGuestNote","getInternalNote","getTotalPrice","TOTAL_PRICE","getCheckInDate","FROM_DATE_STR","getCheckOutDate","TO_DATE_STR","getArrivalTime","getRatePlan","getEntryDate","getReleaseAfterHours","isNewBooking","isCheckedIn","isCheckedOut","isBlockedDateEvent","getRoomId","getCategoryByRoomId","hasSplitBooking","canCheckIn","fromTimeStamp","toTimeStamp","canCheckOut","handleEditBooking","handleBookingOption","getStringDateFormat","handleAddRoom","from_date_str","to_date_str","eventData","ADD_ROOM_TO_BOOKING","editabled","handleCustomerCheckIn","handleCustomerCheckOut","handleDeleteEvent","deleteButton","handleUpdateBlockedDates","handleConvertBlockedDateToBooking","getRoomInfo","roomIdToFind","selectedRoom","physicalRoom","CATEGORY","ROOM_NAME","ROOMS_INFO","eventType","roomData","showBookingPopup","getInfoElement","src","origin","Icon","alt","channel_booking_nbr","getCurrencySymbol","role","_","IS_EDITABLE","getNewBookingOptions","getBlockedView","ENTRY_HOUR","ENTRY_MINUTE","iglBookingRoomRatePlanCss","IglBookingRoomRatePlan","selectedData","ratePlanData","variations","amount","adult_nbr","childrenCount","child_nbr","isRateModified","defaultSelectedRate","entries","getSelectedOffering","variation","ratePlanDataChanged","handleRateDaysUpdate","handleInput","inputElement","inputValue","numericRegex","test","offering","bookProperty","gotoSplitPageTwoEvent","Array","from","totalAvailableRooms","i","iglBookingRoomsCss","IglBookingRooms","validBookingTypes","fill","roomsDistributions","onRoomDataUpdate","newValue","updateRatePlanTotalRooms","inventory","ratePlanIndex","calculateTotalSelectedRoomsExcludingIndex","excludedIndex","reduce","acc","rooms","idx","ratePlan","totalSelectedRoomsExcludingCurrent","availableRooms","rateplans","iglCalBodyCss","IglCalBody","currentDate","dragOverHighlightElementHandler","dragOverElement","gotoRoom","expanded","toggleCategory","scrollToRoom","addToBeAssignedEvents","addBookingDatas","scrollPageToRoom","refClass","calendarData","getCategoryRooms","getCategoryName","getCategoryId","getTotalPhysicalRooms","getRoomName","getRoomById","physicalRooms","physical_room","getBookingData","bookingEvents","concat","getSelectedCellRefName","selectedDay","getSplitBookingEvents","newEvent","ind","findIndex","ev","splice","addNewEvent","startDate","endDate","EMAIL","convertBooking","REFERENCE_TYPE","getTwoDigitNumStr","editable","popupTitle","getDateStr","toISOString","formattedLegendData","push","num","locale","removeNewEvent","events","clickCell","isScrollViewDragging","refKey","showNewBookingPopup","getGeneralCategoryDayColumns","addClass","isCategory","days","dayInfo","day","today","getGeneralRoomDayColumns","getRoomCategoryRow","getRoomsByCategory","getRoomRows","allBookingEvents","iglCalFooterCss","IglCalFooter","handleOptionEvent","optionEvent","dayDisplayName","ToBeAssignedService","getUnassignedDates","convertUnassignedDates","getUnassignedRooms","specific_date","transformToAssignable","assignUnit","identifier","cleanSpacesAndSpecialChars","str","regex","forEach","customer","unassigned_rooms","roomTypeName","room_type_name","guest_name","unassigned_date","book_nbr","fromDateTimeStamp","toDateTimeStamp","RT_ID","getRoomTypeId","updateAvailableRooms","addDefaultDateRange","roomName","assignable_units","unit","Is_Fully_Available","Is_Not_Available","dates","convertedDates","newDate","categories","dateStr","transformDateFormatWithMoment","dateObj","moment","format","iglCalHeaderCss","IglCalHeader","searchValue","searchList","toBeAssignedService","initializeRoomsList","fetchAndAssignUnassignedRooms","unassignedDates","assignRoomsToDate","unassignedRoomsNumber","handleReduceAvailableUnitEvent","selectedDate","tobeAssignedCount","renderView","showToBeAssigned","gotoToBeAssignedDate","handleDateSelect","picker","blur","handleClearSearch","handleFilterRooms","trim","toLowerCase","toLocaleLowerCase","indexOf","handleScrollToRoom","gotoRoomEvent","getNewBookingModel","title","monthsInfo","monthInfo","daysCount","monthName","unassigned_units_nbr","occupancy","iglDateRangeCss","IglDateRange","totalNights","getFormattedDateString","calculateTotalNights","handleDateSelectEvent","floor","dateSelectEvent","handleDateChange","start","end","autoApply","onDateChanged","iglLegendsCss","IglLegends","legendInfo","design","iglPagetwoCss","IglPagetwo","initializeGuestData","total","newSelectedUnits","prop","handleOnApplicationInfoDataUpdateEvent","categoryIdKey","updatedUnits","handleEventData","selectedBookedByData","isGuestDataIncomplete","isButtonDisabled","isValidProperty","property","comparedBy","isCardDetails","buttonClicked","iglPropertyBookedByCss","IglPropertyBookedBy","arrivalTimeList","expiryMonths","expiryYears","currentMonth","email","firstName","lastName","countryId","isdCode","contactNumber","selectedArrivalTime","emailGuest","cardNumber","cardHolderName","expiryMonth","expiryYear","assignCountryCode","initializeExpiryYears","initializeDateData","populateBookedByData","currentYear","country","getUserDefaultCountry","bookedByData","foundTime","time","handleNumberInput","handleEmailInput","isValidEmail","checkUser","getUserInfo","first_name","last_name","mobile","country_id","emailId","emailPattern","onBlur","countryNode","rows","Fragment","pattern","year","iglTbaBookingViewCss","IglTbaBookingView","highlightSection","allRoomsList","onSelectRoom","componentShouldUpdate","oldValue","propName","categoryIndex","eventIndex","handleHighlightAvailability","handleAssignUnit","getExoposedBooking","assignEvent","addToBeAssignedEvent","assignRoomEvent","highlightToBeAssignedBookingEvent","filteredEvents","calendar_cell","handleCloseAssignment","highlightBookingEvent","iglTbaCategoryViewCss","IglTbaCategoryView","handleAssignRoomEvent","eventDatas","assignUnitEvent","getEventView","categoriesData","onAssignRoomEvent","iglToBeAssignedCss","IglToBeAssigned","reArrangeData","updateCategories","categorisedRooms","roomIds","orderedDatesList","sort","a","b","isGotoToBeAssignedDate","firstKey","showForDate","gotoDate","showDatesList","dateStamp","showUnassignedDate","getDay","dayOfWeek","getLocalizedDayOfWeek","options","weekday","toLocaleDateString","getToBeAssignedEntities","getCategoryView","onAssignUnitEvent","reduceAvailableUnitEvent","loadingMessage","ordDate","RoomService","fetchData","iglooCalendarCss","IglooCalendar","visibleCalendarCells","roomService","scrollViewDragPos","onScrollContentMoveHandler","dx","dy","scrollContainer","scrollTop","scrollLeft","scrollViewDragging","onScrollContentMoveEndHandler","ticketChanged","setItem","stringify","ticket","initializeApp","baseurl","defaults","baseURL","then","roomResp","setRoomsData","getCalendarData","async","bookingResp","getCountries","getLegendData","My_Params_Get_Rooming_Data","FROM","endingDate","TO","formatLegendColors","myBookings","toBeAssignedEvents","paymentMethods","some","item","updateBookingEventsDateRange","transformDateForScroll","startingDay","getStartingDateOfCalendar","months","scrollToElement","handledeleteEvent","roomServiceResp","roomsData","calendar_legends","getEndingDateOfCalendar","getLocalizedMonth","goToDate","topLeftCell","gotoDay","scrollTo","gotoRect","containerRect","topLeftCellRect","onBookingCreation","onBlockCreation","targetScrollClass","shouldRenderCalendarView","onOptionSelect","calendarElement","classList","remove","toggle","showLegend","bookingItem","closeSideMenu","dragScrollContent","isPreventPageScroll","hasAncestorWithClass","calendarScrolling","leftSideMenuSize","maxWidth","leftX","rightX","cells","querySelectorAll","monthContainer","monthRect","titleElement","marginLeft","monthWidth","className","currentElement","matches","parentElement","showBookingPopupEventDataHandler","updateEventDataHandler","bookedData","bookedEvent","dragOverEventDataHandler","containerDays","containerRooms","htmlElement","getAttribute","offsetTop","offsetHeight","highlightDragOver","hightLightElement","currentPosition","xElement","yElement","dragOverHighlightElement","moveBookingTo","convertDMYToISO","computeEndDate","onOptionEvent","onScroll","onCloseBookingWindow","onlineResources","isCSS","link","IrCommon","parseRefs","initializeStyles","hrefsChanged","extraResources","resources","appendTag","tagName","attributes","tag","createElement","selectorParts","attr","setAttribute","selector","existingTag","head","appendChild","href","rel","isJS","irDatePickerCss","IrDatePicker","dateRangeInput","$","daterangepicker","opens","maxSpan","separator","applyLabel","cancelLabel","fromLabel","toLabel","customRangeLabel","weekLabel","daysOfWeek","monthNames","firstDay","dateChanged","irInterceptorCss","IrInterceptor","successMessage","errorMessage","setupAxiosInterceptors","interceptors","request","use","handleRequest","handleError","response","handleResponse","extractEndpoint","url","isHandledEndpoint","handledEndpoints","config","defaultMessage","isUnassignedUnit","showToast","handleCompletion","isShown","Promise","reject","hideToastAfterDelay","isSuccess","delay","success","renderMessage","viewBox","xmlns","d","irLoadingScreenCss","IrLoadingScreen","irTooltipCss","IrTooltip","toggleOpen","shouldOpen","tooltipTimeout","clearTimeout","open","onMouseEnter","onMouseLeave","innerHTML"],"sources":["src/components/igloo-calendar/igl-application-info/igl-application-info.css?tag=igl-application-info&encapsulation=scoped","src/components/igloo-calendar/igl-application-info/igl-application-info.tsx","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.css?tag=igl-block-dates-view&encapsulation=scoped","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx","src/services/events.service.ts","src/components/igloo-calendar/igl-book-property/igl-book-property.css?tag=igl-book-property&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property.tsx","src/components/igloo-calendar/igl-booking-event/igl-booking-event.css?tag=igl-booking-event&encapsulation=scoped","src/components/igloo-calendar/igl-booking-event/igl-booking-event.tsx","src/components/igloo-calendar/igl-booking-event-hover/igl-booking-event-hover.css?tag=igl-booking-event-hover&encapsulation=scoped","src/components/igloo-calendar/igl-booking-event-hover/igl-booking-event-hover.tsx","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.css?tag=igl-booking-room-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.tsx","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.css?tag=igl-booking-rooms&encapsulation=scoped","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.tsx","src/components/igloo-calendar/igl-cal-body/igl-cal-body.css?tag=igl-cal-body&encapsulation=scoped","src/components/igloo-calendar/igl-cal-body/igl-cal-body.tsx","src/components/igloo-calendar/igl-cal-footer/igl-cal-footer.css?tag=igl-cal-footer&encapsulation=scoped","src/components/igloo-calendar/igl-cal-footer/igl-cal-footer.tsx","src/services/toBeAssigned.service.ts","src/utils/events.utils.ts","src/components/igloo-calendar/igl-cal-header/igl-cal-header.css?tag=igl-cal-header&encapsulation=scoped","src/components/igloo-calendar/igl-cal-header/igl-cal-header.tsx","src/components/igloo-calendar/igl-date-range/igl-date-range.css?tag=igl-date-range&encapsulation=scoped","src/components/igloo-calendar/igl-date-range/igl-date-range.tsx","src/components/igloo-calendar/igl-legends/igl-legends.css?tag=igl-legends&encapsulation=scoped","src/components/igloo-calendar/igl-legends/igl-legends.tsx","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.css?tag=igl-pagetwo&encapsulation=scoped","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.tsx","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.css?tag=igl-property-booked-by&encapsulation=scoped","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.tsx","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-booking-view/igl-tba-booking-view.css?tag=igl-tba-booking-view&encapsulation=scoped","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-booking-view/igl-tba-booking-view.tsx","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-category-view/igl-tba-category-view.css?tag=igl-tba-category-view&encapsulation=scoped","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-category-view/igl-tba-category-view.tsx","src/components/igloo-calendar/igl-to-be-assigned/igl-to-be-assigned.css?tag=igl-to-be-assigned&encapsulation=scoped","src/components/igloo-calendar/igl-to-be-assigned/igl-to-be-assigned.tsx","src/services/room.service.ts","src/components/igloo-calendar/igloo-calendar.css?tag=igloo-calendar&encapsulation=scoped","src/components/igloo-calendar/igloo-calendar.tsx","src/common/ir.common.resources.ts","src/components/ir-common/ir-common.tsx","src/components/ir-date-picker/ir-date-picker.css?tag=ir-date-picker&encapsulation=scoped","src/components/ir-date-picker/ir-date-picker.tsx","src/components/ir-interceptor/ir-interceptor.css?tag=ir-interceptor&encapsulation=scoped","src/components/ir-interceptor/ir-interceptor.tsx","src/components/ir-loading-screen/ir-loading-screen.css?tag=ir-loading-screen&encapsulation=scoped","src/components/ir-loading-screen/ir-loading-screen.tsx","src/components/ir-tooltip/ir-tooltip.css?tag=ir-tooltip&encapsulation=scoped","src/components/ir-tooltip/ir-tooltip.tsx"],"sourcesContent":["@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, Watch, State } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\n\r\n@Component({\r\n  tag: 'igl-application-info',\r\n  styleUrl: 'igl-application-info.css',\r\n  scoped: true,\r\n})\r\nexport class IglApplicationInfo {\r\n  @Prop() guestInfo: { [key: string]: any };\r\n  @Prop({ reflect: true, mutable: true }) roomsList: { [key: string]: any }[] = [];\r\n  @Prop() guestRefKey: string;\r\n  @Prop() bedPreferenceType = [];\r\n  @Prop() selectedUnits: number[] = [];\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() index: number;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() filterdRoomList = [];\r\n  private guestData: { [key: string]: any };\r\n\r\n  componentWillLoad() {\r\n    this.guestData = this.guestInfo ? { ...this.guestInfo } : {};\r\n    this.updateRoomList();\r\n  }\r\n  @Watch('selectedUnits')\r\n  async handleSelctedUnits() {\r\n    this.updateRoomList();\r\n  }\r\n  updateRoomList() {\r\n    const units = [...this.selectedUnits];\r\n    units[this.index] = -1;\r\n    this.filterdRoomList = this.roomsList.filter(e => !units.includes(e.id));\r\n  }\r\n  updateData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      guestRefKey: this.guestRefKey,\r\n      data: { ...this.guestData },\r\n    });\r\n  }\r\n\r\n  handleDataChange(key, value) {\r\n    this.guestData[key] = +value;\r\n    if (value === '') {\r\n      this.guestData['roomName'] = value;\r\n    }\r\n    if (key === 'roomId' && value !== '') {\r\n      this.guestData['roomName'] = this.filterdRoomList.find(room => room.id === +value).name || '';\r\n    }\r\n    this.updateData();\r\n  }\r\n\r\n  handleGuestNameChange(event) {\r\n    // console.log(\"On Guest name Change::\", event.target.value);\r\n    this.guestData.guestName = event.target.value;\r\n    this.updateData();\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.guestInfo, this.roomsList);\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-1\">\r\n          <div class=\"ml-1 mb-1\">\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING' ? (\r\n              <span class=\"h5\">{this.guestInfo.roomCategoryName}</span>\r\n            ) : null}\r\n            <span class=\"ml-1 font-weight-bold\">\r\n              {this.guestInfo.ratePlanName.replace(this.guestInfo.roomCategoryName + '/', '')}\r\n              <ir-tooltip class=\"ml-1 mr-1\" message={this.guestInfo.cancelation + this.guestInfo.guarantee}></ir-tooltip>\r\n            </span>\r\n            <span>{this.guestInfo.adult_child_offering}</span>\r\n          </div>\r\n\r\n          <div class=\"row m-0 p-0 align-items-center\">\r\n            <div class=\"col-5\">\r\n              <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Guest first name & last name\"\r\n                name=\"guestName\"\r\n                onInput={event => this.handleGuestNameChange(event)}\r\n                required\r\n                value={this.guestData.guestName}\r\n              />\r\n            </div>\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING' ? (\r\n              <div class=\"col-2 p-0\">\r\n                <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('roomId', (event.target as HTMLInputElement).value)}>\r\n                  <option value=\"\" selected={this.guestData.roomId === ''}>\r\n                    Assign units\r\n                  </option>\r\n                  {this.filterdRoomList.map(room => (\r\n                    <option value={room.id} selected={+this.guestData.roomId === room.id}>\r\n                      {room.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            ) : null}\r\n\r\n            <div class=\"col-3\">\r\n              <select class=\"form-control input-sm\" id={v4()} onChange={event => this.handleDataChange('preference', (event.target as HTMLInputElement).value)}>\r\n                <option value=\"\" selected={this.guestData.preference === ''}>\r\n                  No preference\r\n                </option>\r\n                {this.bedPreferenceType.map(data => (\r\n                  <option value={data.CODE_NAME} selected={this.guestData.preference === data.CODE_NAME}>\r\n                    {data.CODE_VALUE_EN}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div class=\"col-2\">${this.guestInfo.rate}</div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n:host .controlContainer {\r\n  width: 24px;\r\n}\r\n\r\n:host .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n\r\n.releaseTime {\r\n  padding-left: 5px;\r\n}\r\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries } from '../../../models/IBooking';\r\n\r\n@Component({\r\n  tag: 'igl-block-dates-view',\r\n  styleUrl: 'igl-block-dates-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglBlockDatesView {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() fromDate: string;\r\n  @Prop() toDate: string;\r\n  @Prop({ mutable: true }) entryDate: string;\r\n  @Prop() entryHour: number;\r\n  @Prop() isEventHover: boolean=false;\r\n  @Prop() entryMinute: number;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private blockDatesData: { [key: string]: any } = {\r\n    RELEASE_AFTER_HOURS: 0,\r\n    OPTIONAL_REASON: '',\r\n    OUT_OF_SERVICE: false,\r\n  }; // Change of property name might require updates in booking-event-hover\r\n  private releaseList: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  async componentWillLoad() {\r\n    try {\r\n      this.releaseList = await this.bookingService.getBlockedInfo();\r\n      if (this.defaultData) {\r\n        this.blockDatesData = { ...this.defaultData };\r\n      } else {\r\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(this.releaseList[0].CODE_NAME);\r\n        this.emitData();\r\n      }\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleOptionalReason(event) {\r\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\r\n    this.emitData();\r\n  }\r\n\r\n  handleReleaseAfterChange(evt) {\r\n    if (this.entryDate) this.entryDate = undefined;\r\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  emitData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'blockDatesData',\r\n      data: { ...this.blockDatesData },\r\n    });\r\n  }\r\n\r\n  getReleaseHoursString() {\r\n    // console.log(\"entry date\", this.entryDate);\r\n    // console.log(\"blocked date data\", this.blockDatesData);\r\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\r\n    if (this.entryDate && this.entryHour && this.entryMinute) {\r\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\r\n    } else {\r\n      dt.setHours(dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS, dt.getMinutes(), 0, 0);\r\n    }\r\n\r\n    return dt.toLocaleString('default', { month: 'short' }) + ' ' + dt.getDate() + ', ' + this.formatNumber(dt.getHours()) + ':' + this.formatNumber(dt.getMinutes());\r\n  }\r\n  formatNumber(value: number) {\r\n    return value < 10 ? `0${value}` : value;\r\n  }\r\n  handleOutOfService(evt) {\r\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\r\n    if (this.blockDatesData.OUT_OF_SERVICE) {\r\n      this.blockDatesData.OPTIONAL_REASON = '';\r\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\r\n    }\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={`row m-0 p-0 ${!this.isEventHover&&\"ml-1\"} mb-1`}>\r\n          <div class=\"col-12 text-left p-0\">\r\n            <span class=\"pr-1\">\r\n              <span class=\"text-bold-700 font-medium-1\">From: </span>\r\n              {this.fromDate}\r\n            </span>{' '}\r\n            <span class=\"text-bold-700 font-medium-1\">To: </span>\r\n            {this.toDate}\r\n          </div>\r\n        </div>\r\n        <div class={`col mb-1 text-left ${this.isEventHover&&\"p-0\"}` }>\r\n          <div class=\"mb-1 \" >\r\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">Reason:</label>\r\n            <div class=\"p-0 m-0 pr-1 controlContainer checkBoxContainer d-inline-block align-middle\">\r\n              <input class=\"form-control\" type=\"checkbox\" checked={this.blockDatesData.OUT_OF_SERVICE} id=\"userinput6\" onChange={event => this.handleOutOfService(event)} />\r\n            </div>{' '}\r\n            <span class=\"align-middle\">Out of service</span>\r\n          </div>\r\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\r\n            <div>\r\n              <div class=\"mb-1 d-flex w-100 align-items-center\">\r\n                <span class=\"align-middle\">or </span>\r\n                <div class=\"d-inline-flex col pr-0 align-middle\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Optional reason\"\r\n                    id=\"optReason\"\r\n                    value={this.blockDatesData.OPTIONAL_REASON}\r\n                    onInput={event => this.handleOptionalReason(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-1 w-100 pr-0 \">\r\n                <span class=\"text-bold-700 font-medium-1\">Automatic release in: </span>\r\n                <div class=\"d-inline-block\">\r\n                  <select class=\"form-control input-sm\" id=\"zSmallSelect\" onChange={evt => this.handleReleaseAfterChange(evt)}>\r\n                    {this.releaseList.map(releaseItem => (\r\n                      <option value={+releaseItem.CODE_NAME} selected={this.blockDatesData.RELEASE_AFTER_HOURS == +releaseItem.CODE_NAME}>\r\n                        {releaseItem.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\r\n                  <div class=\"d-inline-block releaseTime\">\r\n                    <em>on {this.getReleaseHoursString()}</em>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { BookingService } from \"./booking.service\";\r\nimport { getReleaseHoursString } from \"../utils/utils\";\r\n\r\nexport class EventsService {\r\n  private readonly bookingService: BookingService = new BookingService();\r\n\r\n  async reallocateEvent(\r\n    pool: string,\r\n    destination_pr_id: number,\r\n    from_date: string,\r\n    to_date: string\r\n  ) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem(\"token\"));\r\n      if (token) {\r\n        console.log(pool, destination_pr_id, from_date, to_date);\r\n        const { data } = await axios.post(\r\n          `/ReAllocate_Exposed_Room?Ticket=${token}`,\r\n          { pool, destination_pr_id, from_date, to_date }\r\n        );\r\n        if (data.ExceptionMsg !== \"\") {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        console.log(data);\r\n        return data;\r\n      } else {\r\n        throw new Error(\"Invalid Token\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async deleteEvent(POOL: string) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem(\"token\"));\r\n      if (token) {\r\n        const { data } = await axios.post(\r\n          `/UnBlock_Exposed_Unit?Ticket=${token}`,\r\n          {\r\n            POOL,\r\n          }\r\n        );\r\n        if (data.ExceptionMsg !== \"\") {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      } else {\r\n        throw new Error(\"Invalid Token\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async updateBlockedEvent(bookingEvent: any) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem(\"token\"));\r\n      if (token) {\r\n        const releaseData = getReleaseHoursString(\r\n          +bookingEvent.RELEASE_AFTER_HOURS\r\n        );\r\n        await this.deleteEvent(bookingEvent.POOL);\r\n        await this.bookingService.blockUnit({\r\n          from_date: this.formatDate(bookingEvent.FROM_DATE),\r\n          to_date: this.formatDate(bookingEvent.TO_DATE),\r\n          pr_id: bookingEvent.PR_ID,\r\n          STAY_STATUS_CODE: bookingEvent.OUT_OF_SERVICE\r\n            ? \"004\"\r\n            : bookingEvent.RELEASE_AFTER_HOURS === 0\r\n            ? \"002\"\r\n            : \"003\",\r\n          DESCRIPTION: bookingEvent.RELEASE_AFTER_HOURS || \"\",\r\n          NOTES: bookingEvent.OPTIONAL_REASON || \"\",\r\n          ...releaseData,\r\n        });\r\n      } else {\r\n        throw new Error(\"Invalid Token\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  private formatDate(date: string) {\r\n    return date.split(\"/\").join(\"-\");\r\n  }\r\n}\r\n","@import url('../../../assets/feather/style.min.css');\r\n@import url('../../../assets/fontawesome/css/all.css');\r\n@import url('../../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 99;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h, Listen } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { dateToFormattedString, getReleaseHoursString } from '../../../utils/utils';\r\nimport { IEntries, RoomBlockDetails, RoomBookingDetails } from '../../../models/IBooking';\r\nimport { IPageTwoDataUpdateProps, PageTwoButtonsTypes } from '../../../models/models';\r\nimport { EventsService } from '../../../services/events.service';\r\nimport { transformNewBLockedRooms, transformNewBooking } from '../../../utils/booking';\r\n\r\n@Component({\r\n  tag: 'igl-book-property',\r\n  styleUrls: ['igl-book-property.css'],\r\n  scoped: true,\r\n})\r\nexport class IglBookProperty {\r\n  @Prop() propertyid: number;\r\n  @Prop() language: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() currency: { id: number; code: string };\r\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\r\n  @State() sourceOption: { code: string; description: string } = {\r\n    code: '',\r\n    description: '',\r\n  };\r\n  @State() splitBookingId: any = '';\r\n  @State() renderAgain: boolean = false;\r\n  @State() message: string = '';\r\n  @State() isLoading: string;\r\n  @State() isConvertedBooking: boolean;\r\n  @State() dateRangeData: { [key: string]: any };\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\r\n  @Event() bookingCreated: EventEmitter<RoomBookingDetails[]>;\r\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\r\n  private PAGE_ZERO: string = 'page_zero';\r\n  private PAGE_ONE: string = 'page_one';\r\n  private PAGE_TWO: string = 'page_two';\r\n  private PAGE_BLOCK_DATES: string = 'page_block_date';\r\n  private page: string;\r\n  private showSplitBookingOption: boolean = false;\r\n  private sourceOptions: { id: string; value: string }[] = [];\r\n  private selectedRooms: { [key: string]: any } = {};\r\n  private guestData: { [key: string]: any }[] = [];\r\n  private bookedByInfoData: { [key: string]: any } = {};\r\n  private blockDatesData: { [key: string]: any } = {};\r\n  private ratePricingMode: IEntries[] = [];\r\n  private bedPreferenceType: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private eventsService = new EventsService();\r\n  componentDidLoad() {\r\n    document.addEventListener('keydown', e => {\r\n      if (e.key === 'Escape') {\r\n        this.closeWindow();\r\n      }\r\n    });\r\n  }\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', () => {});\r\n  }\r\n  async componentWillLoad() {\r\n    if (!this.bookingData.defaultDateRange) {\r\n      return;\r\n    }\r\n\r\n    this.dateRangeData = { ...this.bookingData.defaultDateRange };\r\n\r\n    try {\r\n      const setupEntries = await this.fetchSetupEntries();\r\n      this.setSourceOptions(setupEntries.bookingSource);\r\n      this.setOtherProperties(setupEntries);\r\n\r\n      if (this.isEventType('EDIT_BOOKING')) {\r\n        this.setEditingRoomInfo();\r\n      }\r\n      //this.bookingData.roomsInfo = [];\r\n      this.page = this.getDefaultPage();\r\n    } catch (error) {\r\n      console.error('Error fetching setup entries:', error);\r\n    }\r\n  }\r\n\r\n  async fetchSetupEntries() {\r\n    return await this.bookingService.fetchSetupEntries();\r\n  }\r\n\r\n  setSourceOptions(bookingSource: any[]) {\r\n    this.sourceOptions = bookingSource.map(source => ({\r\n      id: source.CODE_NAME,\r\n      value: source.CODE_VALUE_EN,\r\n    }));\r\n    this.sourceOption = {\r\n      code: bookingSource[0].CODE_NAME,\r\n      description: bookingSource[0].CODE_VALUE_EN,\r\n    };\r\n  }\r\n\r\n  setOtherProperties(res: any) {\r\n    this.ratePricingMode = res.ratePricingMode;\r\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\r\n    this.bedPreferenceType = res.bedPreferenceType;\r\n  }\r\n\r\n  setEditingRoomInfo() {\r\n    const category = this.getRoomCategoryByRoomId(this.getBookingPreferenceRoomId());\r\n    const key = `c_${category.id}`;\r\n    this.selectedRooms[key] = {\r\n      [`p_${this.bookingData.RATE_PLAN_ID}`]: {\r\n        adultCount: this.bookingData.ADULTS_COUNT,\r\n        rate: this.bookingData.RATE,\r\n        rateType: this.bookingData.RATE_TYPE,\r\n        ratePlanId: this.bookingData.RATE_PLAN_ID,\r\n        roomCategoryId: category.id,\r\n        roomCategoryName: category.name,\r\n        totalRooms: 1,\r\n        ratePlanName: this.bookingData.RATE_PLAN,\r\n        roomId: this.bookingData.PR_ID,\r\n        guestName: this.bookingData.NAME,\r\n        cancelation: this.bookingData.cancelation,\r\n        guarantee: this.bookingData.guarantee,\r\n        adult_child_offering: this.bookingData.adult_child_offering,\r\n      },\r\n    };\r\n  }\r\n\r\n  async initializeBookingAvailability(from_date: string, to_date: string) {\r\n    try {\r\n      const room_type_ids = this.bookingData.roomsInfo.map(room => room.id);\r\n      const data = await this.bookingService.getBookingAvailability(from_date, to_date, this.propertyid, this.language, room_type_ids, this.currency);\r\n      this.message = '';\r\n      this.bookingData = {\r\n        ...this.bookingData,\r\n        roomsInfo: data.roomtypes,\r\n      };\r\n      this.message = data.tax_statement;\r\n      console.log(data);\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n  getRoomCategoryByRoomId(roomId) {\r\n    return this.bookingData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.physicalrooms.find(room => room.id === +roomId);\r\n    });\r\n  }\r\n\r\n  getDefaultPage() {\r\n    if (this.bookingData.event_type === 'BLOCK_DATES') {\r\n      return this.PAGE_BLOCK_DATES;\r\n    } else if (this.bookingData.event_type === 'SPLIT_BOOKING') {\r\n      this.showSplitBookingOption = true;\r\n      return this.PAGE_ONE;\r\n    } else {\r\n      // if( || this.bookingData.event_type === \"NEW_BOOKING\")\r\n      return this.PAGE_ONE;\r\n    }\r\n  }\r\n\r\n  getBookingPreferenceRoomId() {\r\n    //console.log(this.bookingData);\r\n    return (this.bookingData.hasOwnProperty('PR_ID') && this.bookingData.PR_ID) || null;\r\n  }\r\n\r\n  getSplitBookings() {\r\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n\r\n  closeWindow() {\r\n    this.isConvertedBooking = false;\r\n    this.closeBookingWindow.emit();\r\n  }\r\n  isEditBooking() {\r\n    return this.bookingData.event_type === 'EDIT_BOOKING';\r\n  }\r\n  onRoomsDataUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    const { data, key, changedKey } = event.detail;\r\n    const roomCategoryKey = this.getRoomCategoryKey(data.roomCategoryId);\r\n    const ratePlanKey = this.getRatePlanKey(data.ratePlanId);\r\n\r\n    if (this.shouldClearData(key)) {\r\n      this.selectedRooms = {};\r\n    }\r\n\r\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey);\r\n\r\n    if (this.isEditBooking()) {\r\n      if (changedKey === 'rate') {\r\n        if (this.selectedRooms.hasOwnProperty(roomCategoryKey) && this.selectedRooms[roomCategoryKey].hasOwnProperty(ratePlanKey)) {\r\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data);\r\n        }\r\n      } else {\r\n        if (changedKey !== 'rateType') {\r\n          if (changedKey === 'adult_child_offering') {\r\n            if (this.selectedRooms.hasOwnProperty(roomCategoryKey) && this.selectedRooms[roomCategoryKey].hasOwnProperty(ratePlanKey)) {\r\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data);\r\n            }\r\n          } else {\r\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data);\r\n    }\r\n\r\n    this.cleanupEmptyData(roomCategoryKey, ratePlanKey);\r\n    this.renderPage();\r\n  }\r\n  getRoomCategoryKey(roomCategoryId: string): string {\r\n    return `c_${roomCategoryId}`;\r\n  }\r\n\r\n  getRatePlanKey(ratePlanId: string): string {\r\n    return `p_${ratePlanId}`;\r\n  }\r\n\r\n  shouldClearData(key: string | undefined): boolean {\r\n    return key === 'clearData' || this.isEditBookingEvent(key);\r\n  }\r\n\r\n  isEditBookingEvent(key: string | undefined): boolean {\r\n    return key === 'EDIT_BOOKING';\r\n  }\r\n\r\n  initializeRoomCategoryIfNeeded(roomCategoryKey: string) {\r\n    if (!this.selectedRooms[roomCategoryKey]) {\r\n      this.selectedRooms[roomCategoryKey] = {};\r\n    }\r\n  }\r\n\r\n  setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any) {\r\n    this.selectedRooms[roomCategoryKey][ratePlanKey] = data;\r\n  }\r\n\r\n  hasSelectedRoomData(roomCategoryKey: string, ratePlanKey: string): boolean {\r\n    return this.selectedRooms[roomCategoryKey] && this.selectedRooms[roomCategoryKey][ratePlanKey];\r\n  }\r\n\r\n  cleanupEmptyData(roomCategoryKey: string, ratePlanKey: string) {\r\n    if (this.selectedRooms[roomCategoryKey][ratePlanKey]?.totalRooms === 0) {\r\n      delete this.selectedRooms[roomCategoryKey][ratePlanKey];\r\n    }\r\n\r\n    if (!Object.keys(this.selectedRooms[roomCategoryKey]).length) {\r\n      delete this.selectedRooms[roomCategoryKey];\r\n    }\r\n  }\r\n\r\n  applyBookingEditToSelectedRoom(roomCategoryKey: string, ratePlanKey: string, data) {\r\n    this.selectedRooms = {\r\n      [roomCategoryKey]: {\r\n        [ratePlanKey]: {\r\n          ...data,\r\n          guestName: this.bookingData.NAME,\r\n          roomId: this.bookingData.PR_ID,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    const opt: { [key: string]: any } = event.detail;\r\n    if (opt.key === 'selectedDateRange') {\r\n      this.dateRangeData = opt.data;\r\n      this.bookingData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\r\n      this.bookingData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\r\n      this.initializeBookingAvailability(dateToFormattedString(this.bookingData.defaultDateRange.fromDate), dateToFormattedString(this.bookingData.defaultDateRange.toDate));\r\n    }\r\n  }\r\n\r\n  handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.blockDatesData = opt.data;\r\n    //console.log(\"blocked date data\", this.blockDatesData);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    //console.log(event);\r\n  }\r\n\r\n  handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n\r\n    const opt = event.detail;\r\n    if (opt.guestRefKey) {\r\n      if (this.isEventType('BAR_BOOKING')) {\r\n        this.guestData[opt.guestRefKey] = {\r\n          ...opt.data,\r\n          roomId: this.bookingData.PR_ID,\r\n        };\r\n      } else this.guestData[opt.guestRefKey] = opt.data;\r\n    }\r\n  }\r\n\r\n  handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookedByInfoData = opt.value.data;\r\n  }\r\n\r\n  isActiveSouceOption(srcIndex) {\r\n    return this.sourceOption === srcIndex ? 'active' : '';\r\n  }\r\n\r\n  handleSourceDropDown(selectedOption) {\r\n    this.sourceOption = {\r\n      code: selectedOption.target.value,\r\n      description: this.sourceOptions.find(opt => opt.id === selectedOption.target.value.toString()).value || '',\r\n    };\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\r\n  gotoSplitPageTwo() {\r\n    this.gotoPage(this.PAGE_TWO);\r\n  }\r\n\r\n  gotoPage(gotoPage) {\r\n    this.page = gotoPage;\r\n    this.renderPage();\r\n  }\r\n\r\n  showSplitBooking() {\r\n    this.showSplitBookingOption = true;\r\n    this.gotoPage(this.PAGE_ONE);\r\n  }\r\n\r\n  getSelectedSplitBookingName(bookingId) {\r\n    let splitBooking = this.getSplitBookings().find(booking => booking.ID === bookingId);\r\n    return splitBooking.ID + ' ' + splitBooking.NAME;\r\n  }\r\n\r\n  isActiveSplitBookingOption(spltIndex) {\r\n    return this.splitBookingId === spltIndex ? 'active' : '';\r\n  }\r\n\r\n  handleSplitBookingDropDown(evt) {\r\n    this.splitBookingId = evt.target.value;\r\n  }\r\n\r\n  isPageZero() {\r\n    return this.page === this.PAGE_ZERO;\r\n  }\r\n\r\n  isPageOne() {\r\n    return this.page === this.PAGE_ONE;\r\n  }\r\n\r\n  isPageTwo() {\r\n    return this.page === this.PAGE_TWO;\r\n  }\r\n\r\n  isPageBlockDates() {\r\n    return this.page === this.PAGE_BLOCK_DATES;\r\n  }\r\n\r\n  getSplitBookingList() {\r\n    return (\r\n      <fieldset class=\"form-group col-12 text-left\">\r\n        <label class=\"h5\">To booking# </label>\r\n        <div class=\"btn-group ml-1\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.handleSplitBookingDropDown(evt)}>\r\n            <option value=\"\" selected={this.splitBookingId != ''}>\r\n              Select\r\n            </option>\r\n            {this.getSplitBookings().map(option => (\r\n              <option value={option.ID} selected={this.splitBookingId === option.ID}>\r\n                {this.getSelectedSplitBookingName(option.ID)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          {/* <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" name=\"sourceType\" data-toggle=\"dropdown\">\r\n                    {this.splitBookingId!=null ? this.getSelectedSplitBookingName(this.splitBookingId) : \"Select\"}\r\n                </button>\r\n                <div class=\"dropdown-menu\">\r\n                  {this.getSplitBookings().map((option) => <button class={`dropdown-item ${this.isActiveSplitBookingOption(option.ID)}`}  type=\"button\" onClick={() => this.handleSplitBookingDropDown(option.ID)}>{this.getSelectedSplitBookingName(option.ID)}</button>)}\r\n                </div> */}\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n\r\n  getSourceNode() {\r\n    return (\r\n      <fieldset class=\"form-group col-12 text-left\">\r\n        <label class=\"h5\">Source </label>\r\n        <div class=\"btn-group ml-1\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.handleSourceDropDown(evt)}>\r\n            {this.sourceOptions.map(option => (\r\n              <option value={option.id} selected={this.sourceOption.code === option.id}>\r\n                {option.value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n\r\n  getRoomsListFromCategoryId(categoryId) {\r\n    let category = this.bookingData.roomsInfo?.find(category => category.id === categoryId);\r\n    return (category && category.physicalrooms) || [];\r\n  }\r\n\r\n  getPageZeroView() {\r\n    return (\r\n      <div class=\"scrollContent\">\r\n        <div class=\"row p-0 mb-1\">\r\n          <div class=\"col-md-3 col-sm-12 mb-1\">\r\n            <button class=\"btn btn-primary full-width\" onClick={() => this.gotoPage(this.PAGE_ONE)}>\r\n              Create New Booking\r\n            </button>\r\n          </div>\r\n          {this.getSplitBookings().length ? (\r\n            <div class=\"col-md-3 col-sm-12 mb-1\">\r\n              <button class=\"btn btn-primary full-width\" onClick={() => this.showSplitBooking()}>\r\n                Add Unit to Existing Booking\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n          <div class=\"col-md-3 col-sm-12 mb-1\">\r\n            <button class=\"btn btn-primary full-width\" onClick={() => this.gotoPage(this.PAGE_BLOCK_DATES)}>\r\n              Block Dates\r\n            </button>\r\n          </div>\r\n          <div class=\"col-md-3 col-sm-12 mb-1\">\r\n            <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPageOneView() {\r\n    return (\r\n      <div class=\"scrollContent\">\r\n        {this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? null : this.getSourceNode()}\r\n\r\n        <fieldset class=\"form-group col-12 row\">\r\n          <igl-date-range message={this.message} defaultData={this.bookingData.defaultDateRange} onDateSelectEvent={evt => this.onDateRangeSelect(evt)}></igl-date-range>\r\n        </fieldset>\r\n\r\n        <div class=\"col text-left\">\r\n          {this.bookingData.roomsInfo?.map(roomInfo => (\r\n            <igl-booking-rooms\r\n              currency={this.currency}\r\n              ratePricingMode={this.ratePricingMode}\r\n              dateDifference={this.dateRangeData.dateDifference}\r\n              bookingType={this.bookingData.event_type}\r\n              roomTypeData={roomInfo}\r\n              class=\"mt-2 mb-1\"\r\n              defaultData={this.selectedRooms['c_' + roomInfo.id]}\r\n              onDataUpdateEvent={evt => this.onRoomsDataUpdate(evt)}\r\n            ></igl-booking-rooms>\r\n          ))}\r\n        </div>\r\n\r\n        {this.isEventType('EDIT_BOOKING') ? (\r\n          <div class=\"row p-0 mb-1 mt-2\">\r\n            <div class=\"col-6\">\r\n              <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <div class=\"col-6\">\r\n              <button class=\"btn btn-primary full-width\" onClick={() => this.gotoPage(this.PAGE_TWO)}>\r\n                Next &gt;&gt;\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"row p-0 mb-1 mt-2\">\r\n            <div class={this.bookingData.event_type === 'PLUS_BOOKING' || this.isEventType('ADD_ROOM') ? 'col-6' : 'col-12'}>\r\n              <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            {this.bookingData.event_type === 'PLUS_BOOKING' || this.isEventType('ADD_ROOM') ? (\r\n              <div class=\"col-6\">\r\n                <button class=\"btn btn-primary full-width\" disabled={Object.keys(this.selectedRooms).length === 0} onClick={() => this.gotoPage(this.PAGE_TWO)}>\r\n                  Next &gt;&gt;\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPageBlockDatesView() {\r\n    return (\r\n      <div class=\"scrollContent blockDatesForm\">\r\n        <igl-block-dates-view\r\n          fromDate={this.dateRangeData.fromDateStr}\r\n          toDate={this.dateRangeData.toDateStr}\r\n          entryDate={this.bookingData.ENTRY_DATE}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"row p-0 mb-1 mt-2\">\r\n          <div class=\"col-6\">\r\n            <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <button class=\"btn btn-primary full-width\" onClick={() => this.handleBlockDate()}>\r\n              Block dates\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: PageTwoButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    switch (event.detail.key) {\r\n      case 'save':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'cancel':\r\n        this.closeWindow();\r\n        break;\r\n      case 'back':\r\n        this.gotoPage(this.PAGE_ONE);\r\n        break;\r\n      case 'book':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'bookAndCheckIn':\r\n        this.bookUser(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (event.detail.key === 'propertyBookedBy') {\r\n      this.handleBookedByInfoUpdate(event);\r\n    } else {\r\n      this.handleGuestInfoUpdate(event);\r\n    }\r\n  }\r\n  async handleBlockDate() {\r\n    const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\r\n    const result = await this.bookingService.blockUnit({\r\n      from_date: dateToFormattedString(this.bookingData.defaultDateRange.fromDate),\r\n      to_date: dateToFormattedString(this.bookingData.defaultDateRange.toDate),\r\n      NOTES: this.blockDatesData.OPTIONAL_REASON || '',\r\n      pr_id: this.bookingData.PR_ID.toString(),\r\n      STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n      DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\r\n      ...releaseData,\r\n    });\r\n    const blockedUnit = await transformNewBLockedRooms(result);\r\n    this.blockedCreated.emit(blockedUnit);\r\n    this.closeWindow();\r\n    //window.location.reload();\r\n  }\r\n\r\n  async bookUser(check_in: boolean) {\r\n    this.setLoadingState(check_in);\r\n\r\n    try {\r\n      if (['003', '002', '004'].includes(this.bookingData.STATUS_CODE)) {\r\n        this.eventsService.deleteEvent(this.bookingData.POOL);\r\n      }\r\n\r\n      const arrivalTime = this.isEventType('EDIT_BOOKING') ? this.getArrivalTimeForBooking() : '';\r\n      const pr_id = this.isEventType('BAR_BOOKING') ? this.bookingData.PR_ID : undefined;\r\n      const booking_nbr = this.isEventType('EDIT_BOOKING') ? this.bookingData.BOOKING_NUMBER : undefined;\r\n      const result = await this.bookingService.bookUser(\r\n        this.bookedByInfoData,\r\n        check_in,\r\n        this.bookingData.defaultDateRange.fromDate,\r\n        this.bookingData.defaultDateRange.toDate,\r\n        this.guestData,\r\n        this.dateRangeData.dateDifference,\r\n        this.sourceOption,\r\n        this.propertyid,\r\n        this.currency,\r\n        booking_nbr,\r\n        this.bookingData.GUEST,\r\n        arrivalTime,\r\n        pr_id,\r\n      );\r\n      if (check_in) {\r\n        const newBookings: RoomBookingDetails[] = transformNewBooking(result);\r\n        this.bookingCreated.emit(newBookings);\r\n      }\r\n      //window.location.reload();\r\n      //console.log(\"booking data \", this.bookingData);\r\n    } catch (error) {\r\n      //  toastr.error(error);\r\n    } finally {\r\n      this.resetLoadingState();\r\n    }\r\n  }\r\n\r\n  setLoadingState(assign_units: boolean) {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.isLoading = 'save';\r\n    } else {\r\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\r\n    }\r\n  }\r\n\r\n  getArrivalTimeForBooking(): string {\r\n    return this.bookedByInfoData.arrivalTime.find(e => e.CODE_VALUE_EN === this.bookingData.ARRIVAL_TIME).CODE_NAME;\r\n  }\r\n\r\n  resetLoadingState() {\r\n    this.isLoading = '';\r\n    setTimeout(() => {\r\n      this.closeWindow();\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\r\n        <div class={'sideWindow ' + (this.isPageBlockDates() ? 'col-sm-12 col-md-6 col-lg-5 col-xl-4' : 'col-sm-12 col-md-11 col-lg-9 col-xl-8')}>\r\n          <div class=\"card mb-0 shadow-none p-0\">\r\n            <div class=\"card-header\">\r\n              <h3 class=\"card-title text-left pb-1 font-medium-2\">{this.isPageBlockDates() ? this.bookingData.BLOCK_DATES_TITLE : this.bookingData.TITLE}</h3>\r\n              <button type=\"button\" class=\"close close-icon\" onClick={() => this.closeWindow()}>\r\n                <i class=\"ft-x\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {this.isPageZero() && this.getPageZeroView()}\r\n\r\n          {this.isPageOne() && this.getPageOneView()}\r\n\r\n          {this.isPageTwo() && (\r\n            <igl-pagetwo\r\n              showPaymentDetails={this.showPaymentDetails}\r\n              selectedGuestData={this.guestData}\r\n              countryNodeList={this.countryNodeList}\r\n              isLoading={this.isLoading}\r\n              selectedRooms={this.selectedRooms}\r\n              bedPreferenceType={this.bedPreferenceType}\r\n              dateRangeData={this.dateRangeData}\r\n              bookingData={this.bookingData}\r\n              showSplitBookingOption={this.showSplitBookingOption}\r\n              language={this.language}\r\n              bookedByInfoData={this.bookedByInfoData}\r\n              isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\r\n              onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\r\n              onButtonClicked={event => this.handleButtonClicked(event)}\r\n            ></igl-pagetwo>\r\n          )}\r\n\r\n          {this.isPageBlockDates() ? this.getPageBlockDatesView() : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n  position: absolute;\r\n}\r\n\r\n.bookingEventBase {\r\n  position: absolute;\r\n  background-color: rgb(49, 190, 241);\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: skewX(-22deg);\r\n}\r\n\r\n.bookingEventHiddenBase {\r\n  position: absolute;\r\n  top: 0;\r\n  left: -4px;\r\n  width: calc(100% + 8);\r\n}\r\n\r\n.bookingEventDragHandle {\r\n  position: absolute;\r\n  top: 0;\r\n  width: 15px;\r\n  height: 100%;\r\n  opacity: 0.1;\r\n  background-color: rgba(0, 0, 0, 0.15);\r\n  transform: skewX(-22deg);\r\n  /* display: none; */\r\n  cursor: pointer;\r\n}\r\n\r\n.splitBooking {\r\n  border-right: 2px solid #000000;\r\n}\r\n\r\n:host:hover .bookingEventDragHandle {\r\n  display: block;\r\n  opacity: 1;\r\n}\r\n\r\n:host.newEvent:hover .bookingEventDragHandle {\r\n  display: none;\r\n  opacity: 1;\r\n}\r\n\r\n.leftSide {\r\n  left: 0;\r\n}\r\n\r\n.rightSide {\r\n  right: 0;\r\n}\r\n\r\n.bookingEventTitle {\r\n  color: #fff;\r\n  font-size: 0.8em;\r\n  position: relative;\r\n  max-width: calc(100% - 10px);\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  top: 2px;\r\n  left: 5px;\r\n}\r\n\r\n.legend_circle {\r\n  border-radius: 100%;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin: 3px 3px 3px 2px;\r\n  border: 1px solid #fff;\r\n}\r\n\r\n.noteIcon {\r\n  position: absolute;\r\n  bottom: -8px;\r\n  left: 2px;\r\n}\r\n\r\n.balanceIcon {\r\n  position: absolute;\r\n  top: -8px;\r\n  right: 2px;\r\n}\r\n","import { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, h } from '@stencil/core';\r\nimport { EventsService } from '../../../services/events.service';\r\n\r\n@Component({\r\n  tag: 'igl-booking-event',\r\n  styleUrl: 'igl-booking-event.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingEvent {\r\n  @Element() private element: HTMLElement;\r\n  @Prop() currency;\r\n  @Prop() is_vacation_rental: boolean = false;\r\n  @Event({ bubbles: true, composed: true }) hideBubbleInfo: EventEmitter;\r\n\r\n  @Event() updateEventData: EventEmitter;\r\n  @Event() dragOverEventData: EventEmitter;\r\n\r\n  @Prop() bookingEvent: { [key: string]: any };\r\n  @Prop() allBookingEvents: { [key: string]: any } = [];\r\n  @Prop() countryNodeList;\r\n\r\n  @State() renderElement: boolean = false;\r\n  @State() position: { [key: string]: any };\r\n\r\n  dayWidth: number = 0;\r\n  eventSpace: number = 8;\r\n  vertSpace: number = 10;\r\n\r\n  /* show bubble */\r\n  private showInfoPopup: boolean = false;\r\n  private bubbleInfoTopSide: boolean = false;\r\n  private eventsService = new EventsService();\r\n  /* Resize props */\r\n  resizeSide: string = '';\r\n  isDragging: boolean = false;\r\n  initialX: number;\r\n  initialY: number;\r\n  currentX: number;\r\n  currentY: number;\r\n  initialWidth: number;\r\n  initialLeft: number;\r\n  finalWidth: number;\r\n  dragInitPos: { [key: string]: any };\r\n  dragEndPos: { [key: string]: any };\r\n  elementRect: { [key: string]: any };\r\n  isTouchStart: boolean;\r\n  moveDiffereneX: number;\r\n  moveDiffereneY: number;\r\n\r\n  handleMouseMoveBind = this.handleMouseMove.bind(this);\r\n  handleMouseUpBind = this.handleMouseUp.bind(this);\r\n  handleClickOutsideBind = this.handleClickOutside.bind(this);\r\n\r\n  componentWillLoad() {\r\n    window.addEventListener('click', this.handleClickOutsideBind);\r\n  }\r\n\r\n  componentDidLoad() {\r\n    if (this.isNewEvent()) {\r\n      if (!this.bookingEvent.hideBubble) {\r\n        /* auto matically open the popup, calling the method shows bubble either top or bottom based on available space. */\r\n        setTimeout(() => {\r\n          this.showEventInfo(true);\r\n          this.renderAgain();\r\n        }, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.removeEventListener('click', this.handleClickOutsideBind);\r\n  }\r\n\r\n  @Listen('click', { target: 'window' })\r\n  handleClickOutside(event: Event) {\r\n    const clickedElement = event.target as HTMLElement;\r\n    // Check if the clicked element is not within the target div\r\n    if (!this.element.contains(clickedElement)) {\r\n      // The click occurred outside the target div\r\n      this.showEventInfo(false);\r\n    }\r\n  }\r\n\r\n  @Listen('hideBubbleInfo', { target: 'window' })\r\n  hideBubbleInfoPopup(event: CustomEvent) {\r\n    if (event.detail.currentInfoBubbleId != this.getBookingId() || (event.detail.key === 'hidebubble' && event.detail.currentInfoBubbleId === this.getBookingId())) {\r\n      this.showInfoPopup = false;\r\n      this.renderAgain();\r\n    }\r\n  }\r\n\r\n  @Listen('moveBookingTo', { target: 'window' })\r\n  async moveBookingToHandler(event: CustomEvent) {\r\n    try {\r\n      if (event.detail.bookingId !== this.getBookingId()) {\r\n        this.showEventInfo(false);\r\n        return;\r\n      }\r\n      // event.detail.fromRoomId === this.getBookedRoomId() && ()\r\n      if (event.detail.moveToDay === 'revert' || event.detail.toRoomId === 'revert') {\r\n        event.detail.moveToDay = this.bookingEvent.FROM_DATE;\r\n        event.detail.toRoomId = event.detail.fromRoomId;\r\n        if (this.isTouchStart && this.moveDiffereneX <= 5 && this.moveDiffereneY <= 5) {\r\n          this.showEventInfo(true);\r\n        }\r\n      } else {\r\n        if (this.isTouchStart && this.moveDiffereneX <= 5 && this.moveDiffereneY <= 5) {\r\n          this.showEventInfo(true);\r\n        } else {\r\n          const { pool, from_date, to_date, toRoomId } = event.detail as any;\r\n          console.log(pool, from_date, to_date, toRoomId);\r\n          const result = await this.eventsService.reallocateEvent(pool, toRoomId, from_date, to_date);\r\n          this.bookingEvent.POOL = result.My_Result.POOL;\r\n          console.log(event.detail);\r\n          console.log('calll update here');\r\n        }\r\n      }\r\n\r\n      if (event.detail.fromRoomId === this.getBookedRoomId()) {\r\n        // Temporarily set to some other title and revert it.. as refresh issue is happening when there minimum change in top / left.\r\n        // this.onMoveUpdateBooking({ toRoomId: \"X\", moveToDay: \"01_01_2023\" });\r\n        // this.renderAgain();\r\n        // setTimeout(() => {\r\n        // }, 20);\r\n        this.onMoveUpdateBooking(event.detail);\r\n        this.renderAgain();\r\n      }\r\n    } catch (error) {\r\n      //  toastr.error(error);\r\n    }\r\n  }\r\n\r\n  renderAgain() {\r\n    this.renderElement = !this.renderElement;\r\n  }\r\n\r\n  getUniqueId() {\r\n    return new Date().getTime();\r\n  }\r\n\r\n  onMoveUpdateBooking(data) {\r\n    this.bookingEvent.PR_ID = data.toRoomId;\r\n    this.bookingEvent.FROM_DATE = data.moveToDay.split('_').reverse().join('/');\r\n    let tempDate = new Date(this.bookingEvent.FROM_DATE);\r\n    tempDate.setDate(tempDate.getDate() + this.getStayDays());\r\n    this.bookingEvent.TO_DATE = tempDate.getFullYear() + '/' + (tempDate.getMonth() + 1) + '/' + tempDate.getDate();\r\n  }\r\n  /* End of Resize props */\r\n\r\n  isSplitBooking() {\r\n    return !!this.bookingEvent.SPLIT_BOOKING;\r\n  }\r\n\r\n  isNewEvent() {\r\n    return this.getBookingId() === 'NEW_TEMP_EVENT';\r\n  }\r\n\r\n  isHighlightEventType() {\r\n    return this.getEventType() === 'HIGH_LIGHT';\r\n  }\r\n\r\n  getBookingId() {\r\n    return this.bookingEvent.ID;\r\n  }\r\n\r\n  getBookingStatus() {\r\n    return this.bookingEvent.STATUS;\r\n  }\r\n\r\n  getBookedBy() {\r\n    return this.bookingEvent.NAME;\r\n  }\r\n\r\n  getBookedRoomId() {\r\n    return this.bookingEvent.PR_ID;\r\n  }\r\n\r\n  getEventStartingDate() {\r\n    return new Date(this.bookingEvent.FROM_DATE);\r\n  }\r\n\r\n  getEventEndingDate() {\r\n    return new Date(this.bookingEvent.TO_DATE);\r\n  }\r\n\r\n  getEventType() {\r\n    return this.bookingEvent.event_type;\r\n  }\r\n\r\n  getEventLegend() {\r\n    // console.log(this.getBookingStatus());\r\n    let status = this.bookingEvent?.legendData.statusId[this.getBookingStatus()];\r\n    let orderRide = this.isNewEvent() ? { color: '#f9f9c9' } : {};\r\n    return {\r\n      ...this.bookingEvent?.legendData[status.id],\r\n      ...status,\r\n      ...orderRide,\r\n    };\r\n  }\r\n\r\n  getLegendOfStatus(aStatusId) {\r\n    // console.log(aStatusId);\r\n    let status = this.bookingEvent?.legendData.statusId[aStatusId];\r\n    return { ...this.bookingEvent.legendData[status.id], ...status };\r\n  }\r\n\r\n  getNoteNode() {\r\n    if (this.bookingEvent.NOTES || this.bookingEvent.INTERNAL_NOTE) {\r\n      return this.getLegendOfStatus('NOTES');\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getBalanceNode() {\r\n    if (this.bookingEvent.BALANCE) {\r\n      return this.getLegendOfStatus('OUTSTANDING-BALANCE');\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setStayDays(aStayDays: number) {\r\n    this.bookingEvent.NO_OF_DAYS = aStayDays;\r\n    this.renderAgain();\r\n    // this.updateData({id: this.getBookedRoomId(), data: { NO_OF_DAYS: aStayDays }});\r\n  }\r\n\r\n  getStayDays() {\r\n    return this.bookingEvent.NO_OF_DAYS;\r\n  }\r\n\r\n  getPosition() {\r\n    let startingDate = this.getEventStartingDate();\r\n    let startingCellClass = '.room_' + this.getBookedRoomId() + '_' + startingDate.getDate() + '_' + (startingDate.getMonth() + 1) + '_' + startingDate.getFullYear();\r\n    let bodyContainer = document.querySelector('.bodyContainer');\r\n    let startingCell = document.querySelector(startingCellClass);\r\n    let pos = { top: '0', left: '0', width: '0', height: '20px' };\r\n    if (startingCell && bodyContainer && startingCell.getBoundingClientRect() && bodyContainer.getBoundingClientRect()) {\r\n      let bodyContainerRect = bodyContainer.getBoundingClientRect();\r\n      let boundingRect = startingCell.getBoundingClientRect();\r\n      this.dayWidth = this.dayWidth || boundingRect.width;\r\n      pos.top = boundingRect.top + boundingRect.height / 2 - this.vertSpace - bodyContainerRect.top + 'px';\r\n      pos.left = boundingRect.left + this.dayWidth / 2 + this.eventSpace / 2 - bodyContainerRect.left + 'px';\r\n      pos.width = this.getStayDays() * this.dayWidth - this.eventSpace + 'px';\r\n    } else {\r\n      console.log('Locating event cell failed ', startingCellClass);\r\n    }\r\n    //console.log(pos);\r\n    return pos;\r\n  }\r\n\r\n  getNumber(aData) {\r\n    return aData ? parseFloat(aData) : 0;\r\n  }\r\n\r\n  startDragging(event: any, side: string) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n\r\n    if (this.isNewEvent() || this.isHighlightEventType()) {\r\n      return null;\r\n    }\r\n\r\n    this.resizeSide = side;\r\n    this.isDragging = true;\r\n\r\n    this.showEventInfo(false); // Hide bubble;\r\n\r\n    if (side === 'move') {\r\n      this.initialX = event.clientX || event.touches[0].clientX;\r\n      this.initialY = event.clientY || event.touches[0].clientY;\r\n      this.elementRect = this.element.getBoundingClientRect();\r\n      const offsetX = 0; //this.initialX - this.elementRect.left - 18;\r\n      const offsetY = 0; // this.initialY - this.elementRect.top - (this.elementRect.height/2);\r\n      this.dragInitPos = {\r\n        id: this.getBookingId(),\r\n        fromRoomId: this.getBookedRoomId(),\r\n        top: this.getNumber(this.element.style.top) + offsetY,\r\n        left: this.getNumber(this.element.style.left) + offsetX,\r\n      };\r\n      this.dragInitPos.x = this.dragInitPos.left; // + 18;\r\n      this.dragInitPos.y = this.dragInitPos.top; // + (this.elementRect.height/2);\r\n      this.dragEndPos = { ...this.dragInitPos };\r\n      this.element.style.top = `${this.dragInitPos.top}px`;\r\n      this.element.style.left = `${this.dragInitPos.left}px`;\r\n      this.isTouchStart = true; // !!(event.touches && event.touches.length);\r\n      this.dragOverEventData.emit({\r\n        id: 'CALCULATE_DRAG_OVER_BOUNDS',\r\n        data: this.dragInitPos,\r\n      });\r\n    } else {\r\n      this.initialWidth = this.element.offsetWidth;\r\n      this.initialLeft = this.element.offsetLeft;\r\n      this.initialX = event.clientX || event.touches[0].clientX;\r\n      this.dragOverEventData.emit({\r\n        id: 'CALCULATE_DRAG_OVER_BOUNDS',\r\n        data: {\r\n          id: this.getBookingId(),\r\n          fromRoomId: this.getBookedRoomId(),\r\n          top: this.getNumber(this.element.style.top),\r\n          left: this.initialLeft,\r\n          x: this.initialX,\r\n          y: event.clientY || event.touches[0].clientY,\r\n        },\r\n      });\r\n    }\r\n\r\n    document.addEventListener('mousemove', this.handleMouseMoveBind);\r\n    document.addEventListener('touchmove', this.handleMouseMoveBind);\r\n    document.addEventListener('pointermove', this.handleMouseMoveBind);\r\n\r\n    document.addEventListener('mouseup', this.handleMouseUpBind);\r\n    document.addEventListener('touchup', this.handleMouseUpBind);\r\n    document.addEventListener('pointerup', this.handleMouseUpBind);\r\n  }\r\n\r\n  handleMouseMove(event: any) {\r\n    if (this.isDragging) {\r\n      this.currentX = event.clientX || event.touches[0].clientX;\r\n      let distanceX = this.currentX - this.initialX;\r\n      if (this.resizeSide === 'move') {\r\n        this.currentY = event.clientY || event.touches[0].clientY;\r\n        let distanceY = this.currentY - this.initialY;\r\n        this.element.style.top = `${this.dragInitPos.top + distanceY}px`;\r\n        this.element.style.left = `${this.dragInitPos.left + distanceX}px`;\r\n        this.dragEndPos = {\r\n          id: this.getBookingId(),\r\n          fromRoomId: this.getBookedRoomId(),\r\n          top: this.dragInitPos.top + distanceY,\r\n          left: this.dragInitPos.left + distanceX,\r\n        };\r\n        this.dragEndPos.x = this.dragEndPos.left; // + 18;\r\n        this.dragEndPos.y = this.dragEndPos.top; // + (this.elementRect.height/2);\r\n        this.dragOverEventData.emit({ id: 'DRAG_OVER', data: this.dragEndPos });\r\n      } else {\r\n        let newWidth = this.initialWidth;\r\n        if (this.resizeSide == 'rightSide') {\r\n          newWidth = this.initialWidth + distanceX;\r\n          newWidth = Math.min(newWidth, this.initialX + this.element.offsetWidth);\r\n          newWidth = Math.max(this.dayWidth - this.eventSpace, newWidth);\r\n          this.element.style.width = `${newWidth}px`;\r\n        } else if (this.resizeSide == 'leftSide') {\r\n          newWidth = Math.max(this.dayWidth - this.eventSpace, this.initialWidth - distanceX);\r\n          let newLeft = this.initialLeft + (this.initialWidth - newWidth);\r\n          this.element.style.left = `${newLeft}px`;\r\n          this.element.style.width = `${newWidth}px`;\r\n        }\r\n        this.finalWidth = newWidth;\r\n      }\r\n    } else {\r\n      console.log('still mouse move listening...');\r\n    }\r\n  }\r\n\r\n  handleMouseUp() {\r\n    if (this.isDragging) {\r\n      if (this.resizeSide === 'move') {\r\n        // console.log(\"Initial X::\"+this.dragInitPos.x);\r\n        // console.log(\"Initial Y::\"+this.dragInitPos.y);\r\n        // console.log(\"End X::\"+this.dragEndPos.x);\r\n        // console.log(\"End Y::\"+this.dragEndPos.y);\r\n        if (this.isTouchStart) {\r\n          this.moveDiffereneX = Math.abs(this.dragEndPos.x - this.dragInitPos.x);\r\n          this.moveDiffereneY = Math.abs(this.dragEndPos.y - this.dragInitPos.y);\r\n        }\r\n        this.dragOverEventData.emit({\r\n          id: 'DRAG_OVER_END',\r\n          data: {\r\n            ...this.dragEndPos,\r\n            pool: this.bookingEvent.POOL,\r\n            nbOfDays: this.bookingEvent.NO_OF_DAYS,\r\n          },\r\n        });\r\n      } else {\r\n        let numberOfDays = Math.round(this.finalWidth / this.dayWidth);\r\n        let initialStayDays = this.getStayDays();\r\n        if (initialStayDays != numberOfDays) {\r\n          this.setStayDays(numberOfDays);\r\n          if (this.resizeSide == 'leftSide') {\r\n            this.element.style.left = `${this.initialLeft + (initialStayDays - numberOfDays) * this.dayWidth}px`;\r\n            // set FROM_DATE = TO_DATE - numberOfDays\r\n          } else {\r\n            // set TO_DATE = FROM_DATE + numberOfDays\r\n          }\r\n          this.dragOverEventData.emit({\r\n            id: 'STRETCH_OVER_END',\r\n            data: {\r\n              id: this.getBookingId(),\r\n              fromRoomId: +this.getBookedRoomId(),\r\n              x: +this.element.style.left.replace('px', ''),\r\n              y: +this.element.style.top.replace('px', ''),\r\n              pool: this.bookingEvent.POOL,\r\n              nbOfDays: this.bookingEvent.NO_OF_DAYS,\r\n            },\r\n          });\r\n          this.element.style.width = `${numberOfDays * this.dayWidth - this.eventSpace}px`;\r\n        } else {\r\n          this.element.style.left = `${this.initialLeft}px`;\r\n          this.element.style.width = `${numberOfDays * this.dayWidth - this.eventSpace}px`;\r\n        }\r\n      }\r\n    } else {\r\n      console.log('still mouse up listening...');\r\n    }\r\n    this.isDragging = false;\r\n    document.removeEventListener('mousemove', this.handleMouseMoveBind);\r\n    document.removeEventListener('touchmove', this.handleMouseMoveBind);\r\n    document.removeEventListener('pointermove', this.handleMouseMoveBind);\r\n\r\n    document.removeEventListener('mouseup', this.handleMouseUpBind);\r\n    document.removeEventListener('touchup', this.handleMouseUpBind);\r\n    document.removeEventListener('pointerup', this.handleMouseUpBind);\r\n  }\r\n\r\n  updateData(data: any) {\r\n    this.updateEventData.emit(data);\r\n  }\r\n\r\n  showEventInfo(showInfo) {\r\n    if (this.isHighlightEventType() || this.bookingEvent.hideBubble) {\r\n      return null;\r\n    }\r\n\r\n    if (showInfo) {\r\n      // Calculate which side we need to show the bubble, top side or bottom.\r\n      let bodyContainer = document.querySelector('.calendarScrollContainer');\r\n      let bodyContainerRect: { [key: string]: any } = bodyContainer.getBoundingClientRect();\r\n      let elementRect: { [key: string]: any } = this.element.getBoundingClientRect();\r\n      let midPoint = bodyContainerRect.height / 2 + bodyContainerRect.top;\r\n      // let topDifference = elementRect.top - bodyContainerRect.top;\r\n      // let bottomDifference = bodyContainerRect.bottom - elementRect.bottom;\r\n\r\n      if (elementRect.top < midPoint) {\r\n        this.bubbleInfoTopSide = false;\r\n      } else {\r\n        this.bubbleInfoTopSide = true;\r\n      }\r\n    }\r\n\r\n    // showInfo = true;\r\n    if (showInfo) {\r\n      this.hideBubbleInfo.emit({\r\n        key: 'hidePopup',\r\n        currentInfoBubbleId: this.getBookingId(),\r\n      });\r\n    }\r\n    this.showInfoPopup = showInfo;\r\n    this.renderAgain();\r\n  }\r\n\r\n  render() {\r\n    // onMouseLeave={()=>this.showEventInfo(false)}\r\n    let legend = this.getEventLegend();\r\n    let noteNode = this.getNoteNode();\r\n    let balanceNode = this.getBalanceNode();\r\n\r\n    return (\r\n      <Host\r\n        class={`bookingEvent ${this.isNewEvent() || this.isHighlightEventType() ? 'newEvent' : ''} ${legend.clsName}`}\r\n        style={this.getPosition()}\r\n        id={'event_' + this.getBookingId()}\r\n      >\r\n        {/* onMouseOver={() =>this.showEventInfo(true)}  */}\r\n        <div\r\n          class={`bookingEventBase  ${this.isSplitBooking() ? 'splitBooking' : ''}`}\r\n          style={{ backgroundColor: legend.color }}\r\n          onTouchStart={event => this.startDragging(event, 'move')}\r\n          onMouseDown={event => this.startDragging(event, 'move')}\r\n        ></div>\r\n        {noteNode ? <div class=\"legend_circle noteIcon\" style={{ backgroundColor: noteNode.color }}></div> : null}\r\n        {balanceNode ? <div class=\"legend_circle balanceIcon\" style={{ backgroundColor: balanceNode.color }}></div> : null}\r\n        {/* onMouseOver={() => this.showEventInfo(true)}  */}\r\n        <div class=\"bookingEventTitle\" onTouchStart={event => this.startDragging(event, 'move')} onMouseDown={event => this.startDragging(event, 'move')}>\r\n          {this.getBookedBy()}\r\n        </div>\r\n        <div\r\n          class=\"bookingEventDragHandle leftSide\"\r\n          onTouchStart={event => this.startDragging(event, 'leftSide')}\r\n          onMouseDown={event => this.startDragging(event, 'leftSide')}\r\n        ></div>\r\n        <div\r\n          class=\"bookingEventDragHandle rightSide\"\r\n          onTouchStart={event => this.startDragging(event, 'rightSide')}\r\n          onMouseDown={event => this.startDragging(event, 'rightSide')}\r\n        ></div>\r\n        {this.showInfoPopup ? (\r\n          <igl-booking-event-hover\r\n            is_vacation_rental={this.is_vacation_rental}\r\n            countryNodeList={this.countryNodeList}\r\n            currency={this.currency}\r\n            class=\"top\"\r\n            bookingEvent={this.bookingEvent}\r\n            bubbleInfoTop={this.bubbleInfoTopSide}\r\n          ></igl-booking-event-hover>\r\n        ) : null}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url('../../../assets/feather/style.min.css');\r\n@import url('../../../assets/fontawesome/css/all.css');\r\n@import url('../../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  display: block;\r\n  position: relative;\r\n  z-index: 100;\r\n}\r\n\r\n.btn {\r\n  padding-left: 4px !important;\r\n  padding-right: 4px !important;\r\n}\r\n\r\n.pointerContainer {\r\n  position: absolute;\r\n  left: 50%;\r\n  height: 10px;\r\n  width: 350px;\r\n  transform: translate(-50%, 0);\r\n}\r\n\r\n.pointerContainerTop {\r\n  top: -26px;\r\n}\r\n\r\n.iglPopOver {\r\n  max-width: 350px;\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  border: 1px solid #656ee7;\r\n  border-radius: 6px;\r\n  position: absolute;\r\n  transform: translate(-50%, 10px);\r\n  left: 50%;\r\n  box-shadow: 1px 0px 20px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.iglPopOver.infoBubble {\r\n  width: 350px;\r\n}\r\n\r\n.iglPopOver.blockedView {\r\n  max-width: 400px;\r\n  width: 400px;\r\n}\r\n\r\n.iglPopOver.newBookingOptions {\r\n  width: 230px;\r\n}\r\n\r\n.bubblePointer {\r\n  position: absolute;\r\n  width: 0;\r\n  height: 0;\r\n  left: 50%;\r\n  border-left: 10px solid transparent;\r\n  border-right: 10px solid transparent;\r\n  transform: translate(-50%, 0px);\r\n}\r\n\r\n.bubblePointTop {\r\n  border-top: 10px solid #656ee7;\r\n}\r\n\r\n.bubblePointBottom {\r\n  border-bottom: 10px solid #656ee7;\r\n}\r\n\r\n.bubbleInfoAbove {\r\n  bottom: 35px;\r\n}\r\n\r\n.updateBtnIcon {\r\n  margin-right: 4px;\r\n}\r\n.icon-image {\r\n  margin-right: 5px;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State } from '@stencil/core';\r\nimport { findCountry, getCurrencySymbol } from '../../../utils/utils';\r\nimport { ICountry } from '../../../models/IBooking';\r\nimport { EventsService } from '../../../services/events.service';\r\n\r\n@Component({\r\n  tag: 'igl-booking-event-hover',\r\n  styleUrl: 'igl-booking-event-hover.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingEventHover {\r\n  @Prop({ mutable: true }) bookingEvent: { [key: string]: any };\r\n  @Prop() bubbleInfoTop: boolean = false;\r\n  @Prop() currency;\r\n  @Prop() countryNodeList: ICountry[];\r\n  @Prop() is_vacation_rental: boolean = false;\r\n  @State() isLoading: string;\r\n  @Event() showBookingPopup: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) hideBubbleInfo: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) deleteButton: EventEmitter<string>;\r\n  private fromTimeStamp: number;\r\n  private toTimeStamp: number;\r\n  private todayTimeStamp: number = new Date().setHours(0, 0, 0, 0);\r\n  private eventService = new EventsService();\r\n  getBookingId() {\r\n    return this.bookingEvent.ID;\r\n  }\r\n\r\n  getTotalOccupants() {\r\n    return this.bookingEvent.ADULTS_COUNT;\r\n  }\r\n\r\n  getPhoneNumber() {\r\n    return this.bookingEvent.PHONE;\r\n  }\r\n\r\n  getCountry() {\r\n    return findCountry(this.bookingEvent.COUNTRY, this.countryNodeList).name;\r\n  }\r\n  getPhoneCode() {\r\n    return findCountry(this.bookingEvent.COUNTRY, this.countryNodeList).phone_prefix;\r\n  }\r\n  renderPhone() {\r\n    return this.bookingEvent.COUNTRY ? `${this.bookingEvent.is_direct?this.getPhoneCode()+\"-\":\"\"}${this.getPhoneNumber()} - ${this.getCountry()}` : this.getPhoneNumber();\r\n  }\r\n\r\n  getGuestNote() {\r\n    return this.bookingEvent.NOTES;\r\n  }\r\n\r\n  getInternalNote() {\r\n    return this.bookingEvent.INTERNAL_NOTE;\r\n  }\r\n\r\n  getTotalPrice() {\r\n    return this.bookingEvent.TOTAL_PRICE;\r\n  }\r\n\r\n  getCheckInDate() {\r\n    return this.bookingEvent.FROM_DATE_STR;\r\n  }\r\n\r\n  getCheckOutDate() {\r\n    return this.bookingEvent.TO_DATE_STR;\r\n  }\r\n\r\n  getArrivalTime() {\r\n    return this.bookingEvent.ARRIVAL_TIME;\r\n  }\r\n\r\n  getRatePlan() {\r\n    return this.bookingEvent.RATE_PLAN;\r\n  }\r\n\r\n  getEntryDate() {\r\n    return this.bookingEvent.ENTRY_DATE;\r\n  }\r\n\r\n  getReleaseAfterHours() {\r\n    return this.bookingEvent.RELEASE_AFTER_HOURS;\r\n  }\r\n\r\n  isNewBooking() {\r\n    return this.getBookingId() === 'NEW_TEMP_EVENT';\r\n  }\r\n\r\n  isCheckedIn() {\r\n    return this.bookingEvent.STATUS === 'CHECKED-IN';\r\n  }\r\n\r\n  isCheckedOut() {\r\n    return this.bookingEvent.STATUS === 'CHECKED-OUT';\r\n  }\r\n\r\n  isBlockedDateEvent() {\r\n    return this.bookingEvent.STATUS === 'BLOCKED' || this.bookingEvent.STATUS === 'BLOCKED-WITH-DATES';\r\n  }\r\n\r\n  getRoomId() {\r\n    return this.bookingEvent.PR_ID;\r\n  }\r\n\r\n  getCategoryByRoomId(roomId) {\r\n    // console.log(\"room id \",roomId)\r\n    // console.log(\"booking event\",this.bookingEvent)\r\n    return this.bookingEvent.roomsInfo.find(roomCategory => roomCategory.physicalrooms.find(room => room.id === roomId));\r\n  }\r\n\r\n  hasSplitBooking() {\r\n    return this.bookingEvent.hasOwnProperty('splitBookingEvents') && this.bookingEvent.splitBookingEvents.length;\r\n  }\r\n\r\n  canCheckIn() {\r\n    if (!this.fromTimeStamp) {\r\n      let dt = new Date(this.getCheckInDate());\r\n      dt.setHours(0, 0, 0, 0);\r\n      this.fromTimeStamp = dt.getTime();\r\n    }\r\n    if (!this.toTimeStamp) {\r\n      let dt = new Date(this.getCheckOutDate());\r\n      dt.setHours(0, 0, 0, 0);\r\n      this.toTimeStamp = dt.getTime();\r\n    }\r\n    if (this.isCheckedIn() || this.isCheckedOut()) {\r\n      return false;\r\n    }\r\n    if (this.fromTimeStamp <= this.todayTimeStamp && this.todayTimeStamp <= this.toTimeStamp) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  canCheckOut() {\r\n    if (this.isCheckedIn() && this.todayTimeStamp <= this.toTimeStamp) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookingEvent = { ...this.bookingEvent, ...opt.data };\r\n    //console.log(\"blocked date booking event\", this.bookingEvent);\r\n  }\r\n\r\n  handleEditBooking() {\r\n    // console.log(\"Edit booking\");\r\n    this.bookingEvent.TITLE = 'Edit Room';\r\n    this.handleBookingOption('EDIT_BOOKING');\r\n  }\r\n\r\n  getStringDateFormat(dt) {\r\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\r\n  }\r\n\r\n  handleAddRoom() {\r\n    let fromDate = new Date();\r\n    fromDate.setHours(0, 0, 0, 0);\r\n    let from_date_str = this.getStringDateFormat(fromDate);\r\n\r\n    let toDate = new Date();\r\n    toDate.setDate(toDate.getDate() + 1);\r\n    toDate.setHours(0, 0, 0, 0);\r\n    let to_date_str = this.getStringDateFormat(toDate);\r\n\r\n    let eventData = {\r\n      ID: '',\r\n      NAME: '',\r\n      FROM_DATE: from_date_str, // \"2023-07-09\",\r\n      TO_DATE: to_date_str, // \"2023-07-11\",\r\n      roomsInfo: this.bookingEvent.roomsInfo,\r\n      ADD_ROOM_TO_BOOKING: this.bookingEvent.ID,\r\n      TITLE: 'Add Room to #' + this.bookingEvent.ID + ' - ' + this.bookingEvent.NAME,\r\n      event_type: 'ADD_ROOM',\r\n      defaultDateRange: {\r\n        fromDate: fromDate, //new Date(\"2023-09-10\"),\r\n        fromDateStr: '', //\"10 Sep 2023\",\r\n        toDate: toDate, //new Date(\"2023-09-15\"),\r\n        toDateStr: '', // \"15 Sep 2023\",\r\n        dateDifference: 0,\r\n        editabled: true,\r\n        message: 'Including 5.00% City Tax - Excluding 11.00% VAT',\r\n      },\r\n    };\r\n\r\n    this.handleBookingOption('ADD_ROOM', eventData);\r\n  }\r\n\r\n  handleCustomerCheckIn() {\r\n    console.log('Handle Customer Check In');\r\n  }\r\n\r\n  handleCustomerCheckOut() {\r\n    console.log('Handle Customer Check Out');\r\n  }\r\n  handleDeleteEvent() {\r\n    this.deleteButton.emit(this.bookingEvent.POOL);\r\n    console.log('Delete Event');\r\n  }\r\n\r\n  async handleUpdateBlockedDates() {\r\n    try {\r\n      this.isLoading = 'update';\r\n      await this.eventService.updateBlockedEvent(this.bookingEvent);\r\n      this.hideBubbleInfo.emit({\r\n        key: 'hidebubble',\r\n        currentInfoBubbleId: this.getBookingId(),\r\n      });\r\n      this.isLoading = '';\r\n      console.log('Updated blocked dates');\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleConvertBlockedDateToBooking() {\r\n    this.handleBookingOption('BAR_BOOKING');\r\n  }\r\n\r\n  getRoomInfo() {\r\n    const roomIdToFind = +this.bookingEvent.PR_ID;\r\n    let selectedRoom: any = {};\r\n\r\n    for (const room of this.bookingEvent.roomsInfo) {\r\n      for (const physicalRoom of room.physicalrooms) {\r\n        if (roomIdToFind === physicalRoom.id) {\r\n          selectedRoom.CATEGORY = room.name;\r\n          selectedRoom.ROOM_NAME = physicalRoom.name;\r\n          selectedRoom.ROOMS_INFO = room;\r\n          return selectedRoom;\r\n        }\r\n      }\r\n    }\r\n\r\n    return selectedRoom;\r\n  }\r\n  handleBookingOption(eventType, roomData = null) {\r\n    const roomInfo = this.getRoomInfo();\r\n    let data = roomData ? roomData : this.bookingEvent;\r\n    data.event_type = eventType;\r\n    if (['003', '002', '004'].includes(this.bookingEvent.STATUS_CODE)) {\r\n      data.roomsInfo = [roomInfo.ROOMS_INFO];\r\n    }\r\n    this.showBookingPopup.emit({\r\n      key: 'add',\r\n      data: {\r\n        ...data,\r\n        TITLE: `New Booking for ${roomInfo.CATEGORY} ${roomInfo.ROOM_NAME}`,\r\n        //roomsInfo: [roomInfo.ROOMS_INFO],\r\n      },\r\n    });\r\n    this.hideBubbleInfo.emit({\r\n      key: 'hidebubble',\r\n      currentInfoBubbleId: this.getBookingId(),\r\n    });\r\n  }\r\n\r\n  getInfoElement() {\r\n    return (\r\n      <div class={`iglPopOver infoBubble ${this.bubbleInfoTop ? 'bubbleInfoAbove' : ''} text-left`}>\r\n        <div class=\"row p-0 m-0 pb-1\">\r\n          <div class=\"pl-0 col-8 font-weight-bold font-medium-1 d-flex align-items-center\">\r\n            <img src={this.bookingEvent.origin.Icon} alt=\"icon\" class={'icon-image'} />\r\n            <p class={'p-0 m-0'}>{!this.bookingEvent.is_direct ? this.bookingEvent.channel_booking_nbr : this.bookingEvent.BOOKING_NUMBER}</p>\r\n          </div>\r\n          <div class=\"pr-0 col-4 text-right\">\r\n            {getCurrencySymbol(this.currency.code)}\r\n            {this.getTotalPrice()}\r\n          </div>\r\n        </div>\r\n        <div class=\"row p-0 m-0\">\r\n          <div class=\"pl-0 pr-0 col-12\">\r\n            <span class=\"font-weight-bold\">In: </span>\r\n            {this.getCheckInDate()} - <span class=\"font-weight-bold\">Out: </span>\r\n            {this.getCheckOutDate()}\r\n          </div>\r\n        </div>\r\n        {this.getArrivalTime() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12\">\r\n              <span class=\"font-weight-bold\">Arrival time: </span>\r\n              {this.getArrivalTime()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getTotalOccupants() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12\">\r\n              <span class=\"font-weight-bold\">Occupancy: </span>\r\n              {this.getTotalOccupants()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getPhoneNumber() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12 text-wrap\">\r\n              <span class=\"font-weight-bold\">Phone: </span>\r\n              {this.renderPhone()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getRatePlan() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12\">\r\n              <span class=\"font-weight-bold\">Rate plan: </span>\r\n              {this.getRatePlan()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getGuestNote() ? (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"col-12 pl-0 pr-0 text-wrap\">\r\n              <sapn class=\"font-weight-bold\">Note: </sapn>\r\n              {this.getGuestNote()}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.getInternalNote() ? (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"col-12 pl-0 pr-0 text-wrap\">\r\n              <span class=\"font-weight-bold\">Internal remark: </span>\r\n              {this.getInternalNote()}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div class=\"row p-0 m-0 mt-2\">\r\n          <div class=\"full-width btn-group btn-group-sm font-small-3\" role=\"group\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary mr-1\"\r\n              onClick={_ => {\r\n                this.handleEditBooking();\r\n              }}\r\n              disabled={!this.bookingEvent.IS_EDITABLE}\r\n            >\r\n              <i class=\"ft ft-edit font-small-3\"></i> Edit\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary mr-1\"\r\n              onClick={_ => {\r\n                this.handleAddRoom();\r\n              }}\r\n              disabled={!this.bookingEvent.IS_EDITABLE}\r\n            >\r\n              <i class=\"ft ft-plus-circle font-small-3\"></i> Add room\r\n            </button>\r\n            {this.canCheckIn() ? (\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary p-0 mr-1\"\r\n                onClick={_ => {\r\n                  this.handleCustomerCheckIn();\r\n                }}\r\n                disabled={!this.bookingEvent.IS_EDITABLE}\r\n              >\r\n                <i class=\"ft ft-edit font-small-3\"></i> Check-in\r\n              </button>\r\n            ) : null}\r\n            {this.canCheckOut() ? (\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary p-0 mr-1\"\r\n                onClick={_ => {\r\n                  this.handleCustomerCheckOut();\r\n                }}\r\n                disabled={!this.bookingEvent.IS_EDITABLE}\r\n              >\r\n                <i class=\"ft ft-log-out font-small-3\"></i> Check-out\r\n              </button>\r\n            ) : null}\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-danger p-0\"\r\n              onClick={_ => {\r\n                this.handleDeleteEvent();\r\n              }}\r\n              disabled={!this.bookingEvent.IS_EDITABLE || this.is_vacation_rental}\r\n            >\r\n              <i class=\"ft ft-trash-2 font-small-3\"></i> Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getNewBookingOptions() {\r\n    return (\r\n      <div class={`iglPopOver newBookingOptions ${this.bubbleInfoTop ? 'bubbleInfoAbove' : ''} text-left`}>\r\n        <button\r\n          type=\"button\"\r\n          class=\"d-block full-width btn btn-sm btn-primary mb-1 font-small-3 square\"\r\n          onClick={_ => {\r\n            this.handleBookingOption('BAR_BOOKING');\r\n          }}\r\n        >\r\n          Create new booking\r\n        </button>\r\n        {this.hasSplitBooking() ? (\r\n          <button\r\n            type=\"button\"\r\n            class=\"d-block full-width btn btn-sm btn-primary mb-1 font-small-3 square\"\r\n            onClick={_ => {\r\n              this.handleBookingOption('SPLIT_BOOKING');\r\n            }}\r\n          >\r\n            Assign unit to existing booking\r\n          </button>\r\n        ) : null}\r\n        <button\r\n          type=\"button\"\r\n          class=\"d-block full-width btn btn-sm btn-primary font-small-3 square\"\r\n          onClick={_ => {\r\n            this.handleBookingOption('BLOCK_DATES');\r\n          }}\r\n        >\r\n          Block dates\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBlockedView() {\r\n    // let defaultData = {RELEASE_AFTER_HOURS: 0, OPTIONAL_REASON: \"\", OUT_OF_SERVICE: false};\r\n    return (\r\n      <div class={`iglPopOver blockedView ${this.bubbleInfoTop ? 'bubbleInfoAbove' : ''} text-left`}>\r\n        <igl-block-dates-view\r\n          isEventHover={true}\r\n          entryHour={this.bookingEvent.ENTRY_HOUR}\r\n          entryMinute={this.bookingEvent.ENTRY_MINUTE}\r\n          defaultData={this.bookingEvent}\r\n          fromDate={this.getCheckInDate()}\r\n          toDate={this.getCheckOutDate()}\r\n          entryDate={this.getEntryDate()}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"row p-0 m-0 mt-2\">\r\n          <div class=\"full-width btn-group btn-group-sm font-small-3\" role=\"group\">\r\n            <button\r\n              disabled={this.isLoading === 'update'}\r\n              type=\"button\"\r\n              class=\"btn btn-primary mr-1\"\r\n              onClick={_ => {\r\n                this.handleUpdateBlockedDates();\r\n              }}\r\n            >\r\n              {this.isLoading === 'update' ? <i class=\"la la-circle-o-notch spinner mx-1\"></i> : <i class=\"ft ft-edit font-small-3 updateBtnIcon\"></i>}\r\n              Update\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary\"\r\n              onClick={_ => {\r\n                this.handleConvertBlockedDateToBooking();\r\n              }}\r\n            >\r\n              Convert to booking\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-danger ml-1\"\r\n              onClick={_ => {\r\n                this.handleDeleteEvent();\r\n              }}\r\n            >\r\n              <i class=\"ft ft-trash-2 font-small-3\"></i> Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={`pointerContainer ${this.bubbleInfoTop ? 'pointerContainerTop' : ''}`}>\r\n          <div class={`bubblePointer ${this.bubbleInfoTop ? 'bubblePointTop' : 'bubblePointBottom'}`}></div>\r\n        </div>\r\n        {this.isBlockedDateEvent() ? this.getBlockedView() : null}\r\n        {this.isNewBooking() ? this.getNewBookingOptions() : null}\r\n        {!this.isBlockedDateEvent() && !this.isNewBooking() ? this.getInfoElement() : null}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n","import { Component, Host, Prop, h, State, Event, EventEmitter, Watch } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { getCurrencySymbol } from '../../../utils/utils';\r\n@Component({\r\n  tag: 'igl-booking-room-rate-plan',\r\n  styleUrl: 'igl-booking-room-rate-plan.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRoomRatePlan {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop({ mutable: true }) ratePlanData: { [key: string]: any };\r\n  @Prop() totalAvailableRooms: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() currency: any;\r\n  @Prop({ reflect: true }) dateDifference: number;\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @State() sourceOption: number;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() gotoSplitPageTwoEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() selectedData: { [key: string]: any };\r\n  @State() plan: { [key: string]: any };\r\n  componentWillLoad() {\r\n    this.selectedData = {\r\n      ratePlanId: this.ratePlanData.id,\r\n      adult_child_offering: this.ratePlanData.variations[0].adult_child_offering,\r\n      rateType: 1,\r\n      totalRooms: 0,\r\n      rate: this.ratePlanData.variations[0].amount,\r\n      ratePlanName: this.ratePlanData.name,\r\n      adultCount: this.ratePlanData.variations[0].adult_nbr,\r\n      childrenCount: this.ratePlanData.variations[0].child_nbr,\r\n      cancelation: this.ratePlanData.cancelation,\r\n      guarantee: this.ratePlanData.guarantee,\r\n      isRateModified: false,\r\n      defaultSelectedRate: 0,\r\n    };\r\n    if (this.defaultData) {\r\n      for (const [key, value] of Object.entries(this.defaultData)) {\r\n        this.selectedData[key] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  getSelectedOffering(value: any) {\r\n    return this.ratePlanData.variations.find(variation => variation.adult_child_offering === value);\r\n  }\r\n  @Watch('ratePlanData')\r\n  async ratePlanDataChanged() {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      rate: this.handleRateDaysUpdate(),\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: 'rate',\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  handleRateDaysUpdate() {\r\n    let rate = this.selectedData.defaultSelectedRate;\r\n    if (this.selectedData.isRateModified) {\r\n      return this.selectedData.rateType === 1 ? rate * this.dateDifference : rate;\r\n    }\r\n    return this.getSelectedOffering(this.selectedData.adult_child_offering).amount;\r\n  }\r\n\r\n  handleInput(event: InputEvent) {\r\n    this.selectedData.isRateModified = true;\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let inputValue = inputElement.value;\r\n    const numericRegex = /^[0-9]+$/;\r\n    if (!numericRegex.test(inputValue)) {\r\n      inputValue = inputValue.replace(/[^0-9]/g, '');\r\n      inputElement.value = inputValue;\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange('rate', event);\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, evt) {\r\n    if (key === 'adult_child_offering') {\r\n      const offering = this.getSelectedOffering(evt.target.value);\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        [key]: evt.target.value,\r\n        adultCount: offering.adult_nbr,\r\n        childrenCount: offering.child_nbr,\r\n        rate: offering.amount,\r\n      };\r\n    } else {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        [key]: evt.target.value === '' ? 0 : parseInt(evt.target.value),\r\n      };\r\n    }\r\n    if (key === 'rate' && evt.target.value === '') {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        totalRooms: 0,\r\n      };\r\n    }\r\n    if (key === 'rate') {\r\n      this.selectedData.defaultSelectedRate = this.selectedData.rateType === 1 ? parseInt(evt.target.value) / this.dateDifference : parseInt(evt.target.value);\r\n    }\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: key,\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  bookProperty() {\r\n    this.dataUpdateEvent.emit({ key: 'clearData', data: this.selectedData });\r\n    this.handleDataChange('totalRooms', { target: { value: '1' } });\r\n    this.gotoSplitPageTwoEvent.emit({ key: 'gotoSplitPage', data: '' });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"row m-0 p-0\">\r\n          <div class=\"col-md-6 col-sm-12 p-0 align-self-center\">\r\n            <span>{this.ratePlanData.name}</span>\r\n            <ir-tooltip message={this.ratePlanData.cancelation + this.ratePlanData.guarantee}></ir-tooltip>\r\n          </div>\r\n          <div class=\"col-md-6 col-sm-12 row pr-0\">\r\n            <div class=\"col-4\">\r\n              <fieldset class=\"position-relative\">\r\n                <select class=\"form-control input-sm\" id={v4()} onChange={evt => this.handleDataChange('adult_child_offering', evt)}>\r\n                  {this.ratePlanData.variations.map(variation => (\r\n                    <option value={variation.adult_child_offering} selected={this.selectedData.adult_child_offering === variation.adult_child_offering}>\r\n                      {variation.adult_child_offering}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </fieldset>\r\n            </div>\r\n            <div class=\"row col-6 m-0 p-0\">\r\n              <fieldset class=\"position-relative has-icon-left col-6 m-0 p-0\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control input-sm\"\r\n                  value={this.selectedData.rateType === 1 ? this.selectedData.rate : this.selectedData.rate / this.dateDifference}\r\n                  id={v4()}\r\n                  placeholder=\"Rate\"\r\n                  onInput={(event: InputEvent) => this.handleInput(event)}\r\n                />\r\n                <span class=\"form-control-position\">{getCurrencySymbol(this.currency.code)}</span>\r\n              </fieldset>\r\n              <fieldset class=\"position-relative m-0 p-0\">\r\n                <select class=\"form-control input-sm\" id={v4()} onChange={evt => this.handleDataChange('rateType', evt)}>\r\n                  {this.ratePricingMode.map(data => (\r\n                    <option value={data.CODE_NAME} selected={this.selectedData.rateType === +data.CODE_NAME}>\r\n                      {data.CODE_VALUE_EN}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </fieldset>\r\n            </div>\r\n\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' ? (\r\n              <div class=\"col-2 m-0 p-0\">\r\n                <fieldset class=\"position-relative\">\r\n                  <select disabled={this.selectedData.rate === 0} class=\"form-control input-sm\" id={v4()} onChange={evt => this.handleDataChange('totalRooms', evt)}>\r\n                    {Array.from({ length: this.totalAvailableRooms + 1 }, (_, i) => i).map(i => (\r\n                      <option value={i} selected={this.selectedData.totalRooms === i}>\r\n                        {i}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </fieldset>\r\n              </div>\r\n            ) : null}\r\n\r\n            {this.bookingType === 'EDIT_BOOKING' ? (\r\n              <div class=\"col-2 m-0 p-0 align-self-center\">\r\n                <fieldset class=\"position-relative\">\r\n                  <input type=\"radio\" name=\"ratePlanGroup\" value=\"1\" onChange={evt => this.handleDataChange('totalRooms', evt)} checked={this.selectedData.totalRooms === 1} />\r\n                </fieldset>\r\n              </div>\r\n            ) : null}\r\n\r\n            {this.bookingType === 'BAR_BOOKING' || this.bookingType === 'SPLIT_BOOKING' ? (\r\n              <button disabled={this.selectedData.rate === 0} type=\"button\" class=\"btn mb-1 btn-primary btn-sm\" onClick={() => this.bookProperty()}>\r\n                Book\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  h,\r\n  Prop,\r\n  Event,\r\n  EventEmitter,\r\n  State,\r\n} from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"igl-booking-rooms\",\r\n  styleUrl: \"igl-booking-rooms.css\",\r\n  scoped: true,\r\n})\r\nexport class IglBookingRooms {\r\n  @Prop({ reflect: true, mutable: true }) roomTypeData: { [key: string]: any };\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() bookingType: string = \"PLUS_BOOKING\";\r\n  @Prop({ reflect: true }) dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() currency;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() selectedRooms: number[] = [];\r\n  @State() roomsDistributions: number[] = [];\r\n  private validBookingTypes = [\"PLUS_BOOKING\", \"ADD_ROOM\", \"EDIT_BOOKING\"];\r\n  private totalRooms: number;\r\n  componentWillLoad() {\r\n    this.totalRooms = this.roomTypeData.physicalrooms.length;\r\n    this.selectedRooms = new Array(this.totalRooms).fill(0);\r\n    this.roomsDistributions = new Array(this.totalRooms).fill(this.totalRooms);\r\n  }\r\n\r\n  onRoomDataUpdate(event: CustomEvent<{ [key: string]: any }>, index: number) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    let data = { ...opt.data };\r\n    if (opt.changedKey === \"totalRooms\") {\r\n      let newValue = data.totalRooms;\r\n      this.selectedRooms[index] = newValue;\r\n      this.updateRatePlanTotalRooms(index);\r\n    }\r\n    data.roomCategoryId = this.roomTypeData.id;\r\n    data.roomCategoryName = this.roomTypeData.name;\r\n    data.inventory = this.roomTypeData.inventory;\r\n    this.dataUpdateEvent.emit({\r\n      key: opt.key,\r\n      data: data,\r\n      changedKey: opt.changedKey,\r\n    });\r\n  }\r\n  updateRatePlanTotalRooms(ratePlanIndex: number) {\r\n    const calculateTotalSelectedRoomsExcludingIndex = (excludedIndex) => {\r\n      return this.selectedRooms.reduce(\r\n        (acc, rooms, idx) => (idx !== excludedIndex ? acc + rooms : acc),\r\n        0\r\n      );\r\n    };\r\n    this.roomsDistributions = this.roomsDistributions.map((ratePlan, index) => {\r\n      if (index === ratePlanIndex) {\r\n        return ratePlan;\r\n      }\r\n      const totalSelectedRoomsExcludingCurrent =\r\n        calculateTotalSelectedRoomsExcludingIndex(index);\r\n      const availableRooms =\r\n        this.totalRooms - totalSelectedRoomsExcludingCurrent;\r\n\r\n      return availableRooms > 0 ? availableRooms : 0;\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.validBookingTypes.includes(this.bookingType) && (\r\n          <div class=\"font-weight-bold font-medium-1\">\r\n            {this.roomTypeData.name}\r\n          </div>\r\n        )}\r\n        {this.roomTypeData.rateplans.map((ratePlan, index) => {\r\n          if (ratePlan.variations !== null) {\r\n            return (\r\n              <igl-booking-room-rate-plan\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={\r\n                  this.validBookingTypes.includes(this.bookingType)\r\n                    ? \"ml-1\"\r\n                    : \"\"\r\n                }\r\n                currency={this.currency}\r\n                dateDifference={this.dateDifference}\r\n                ratePlanData={ratePlan}\r\n                totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                defaultData={\r\n                  (this.defaultData && this.defaultData[\"p_\" + ratePlan.id]) ||\r\n                  null\r\n                }\r\n                onDataUpdateEvent={(evt) => this.onRoomDataUpdate(evt, index)}\r\n              ></igl-booking-room-rate-plan>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url('../../../assets/feather/style.min.css');\r\n@import url('../../../assets/fontawesome/css/all.css');\r\n@import url('../../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.bodyContainer {\r\n  position: relative;\r\n}\r\n\r\n.roomRow {\r\n  width: max-content;\r\n}\r\n\r\n.roomRow:first-child {\r\n  margin-top: 80px;\r\n}\r\n.categoryName {\r\n  font-weight: bold;\r\n}\r\n\r\n\r\n.cellData {\r\n  width: 70px;\r\n  height: 30px;\r\n  display: inline-grid;\r\n  border-top: 1px solid #e0e0e0;\r\n  border-left: 1px solid #e0e0e0;\r\n  vertical-align: top;\r\n  padding-left: 15px;\r\n}\r\n\r\n.cellData:nth-child(2) {\r\n  border-left: 0px;\r\n}\r\n\r\n.cellData:last-child {\r\n  border-right: 1px solid #e0e0e0;\r\n}\r\n\r\n.roomHeaderCell {\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  left: 0;\r\n  background: #fff;\r\n  border-right: 1px solid #ccc;\r\n  width: 170px;\r\n  z-index: 1;\r\n}\r\n\r\n.currentDay {\r\n  background-color: #e3f3fa;\r\n}\r\n\r\n.dragOverHighlight {\r\n  background-color: #f5f5dc !important;\r\n}\r\n\r\n.selectedDay {\r\n  background-color: #f9f9c9 !important;\r\n}\r\n\r\n.categoryTitle {\r\n  grid-template-columns: 1fr 20px;\r\n  padding-left: 10px;\r\n  cursor: pointer;\r\n  height: 40px;\r\n  font-size: 0.9em;\r\n}\r\n.categoryTitle > :nth-child(1) {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.roomTitle {\r\n  padding-left: 20px;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.roomTitle > :nth-child(1) {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.roomTitle.pl10 {\r\n  padding-left: 10px;\r\n}\r\n\r\n.categoryPriceColumn {\r\n  font-size: 0.75em;\r\n  align-items: center;\r\n  height: 40px;\r\n}\r\n\r\n/* BOOKING EVENT */\r\n.bookingEventsContainer {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n","import { Component, Host, Listen, Prop, State, h, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-cal-body',\r\n  styleUrl: 'igl-cal-body.css',\r\n  scoped: true,\r\n})\r\nexport class IglCalBody {\r\n  @Event() showBookingPopup: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) scrollPageToRoom: EventEmitter;\r\n  @Prop() isScrollViewDragging: boolean;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() today: String;\r\n  @Prop() currency;\r\n  @Prop() countryNodeList;\r\n  @State() dragOverElement: string = '';\r\n  @State() renderAgain: boolean = false;\r\n\r\n  private selectedRooms: { [key: string]: any } = {};\r\n  private fromRoomId: number = -1;\r\n  private newEvent: { [key: string]: any };\r\n  private currentDate = new Date();\r\n\r\n  componentWillLoad() {\r\n    this.currentDate.setHours(0, 0, 0, 0);\r\n  }\r\n\r\n  @Listen('dragOverHighlightElement', { target: 'window' })\r\n  dragOverHighlightElementHandler(event: CustomEvent) {\r\n    this.dragOverElement = event.detail.dragOverElement;\r\n  }\r\n\r\n  @Listen('gotoRoomEvent', { target: 'window' })\r\n  gotoRoom(event: CustomEvent) {\r\n    let roomId = event.detail.roomId;\r\n    let category = this.getRoomCategoryByRoomId(roomId);\r\n    if (!category.expanded) {\r\n      this.toggleCategory(category);\r\n      setTimeout(() => {\r\n        this.scrollToRoom(roomId);\r\n      }, 10);\r\n    } else {\r\n      this.scrollToRoom(roomId);\r\n    }\r\n  }\r\n\r\n  @Listen('addToBeAssignedEvent', { target: 'window' })\r\n  addToBeAssignedEvents(event: CustomEvent) {\r\n    // let roomId = event.detail.roomId;\r\n    this.addBookingDatas(event.detail.data);\r\n    this.renderElement();\r\n  }\r\n\r\n  scrollToRoom(roomId) {\r\n    this.scrollPageToRoom.emit({\r\n      key: 'scrollPageToRoom',\r\n      id: roomId,\r\n      refClass: 'room_' + roomId,\r\n    });\r\n  }\r\n\r\n  getRoomCategoryByRoomId(roomId) {\r\n    return this.calendarData.roomsInfo.find(roomCategory => {\r\n      return this.getCategoryRooms(roomCategory).find(room => this.getRoomId(room) === roomId);\r\n    });\r\n  }\r\n\r\n  getCategoryName(roomCategory) {\r\n    return roomCategory.name;\r\n  }\r\n\r\n  getCategoryId(roomCategory) {\r\n    return roomCategory.id;\r\n  }\r\n\r\n  getTotalPhysicalRooms(roomCategory) {\r\n    return this.getCategoryRooms(roomCategory).length;\r\n  }\r\n\r\n  getCategoryRooms(roomCategory) {\r\n    return (roomCategory && roomCategory.physicalrooms) || [];\r\n  }\r\n\r\n  getRoomName(roomInfo) {\r\n    return roomInfo.name;\r\n  }\r\n\r\n  getRoomId(roomInfo) {\r\n    return roomInfo.id;\r\n  }\r\n\r\n  getRoomById(physicalRooms, roomId) {\r\n    return physicalRooms.find(physical_room => this.getRoomId(physical_room) === roomId);\r\n  }\r\n\r\n  getBookingData() {\r\n    return this.calendarData.bookingEvents;\r\n  }\r\n\r\n  addBookingDatas(aData) {\r\n    this.calendarData.bookingEvents = this.calendarData.bookingEvents.filter(bookingEvent => bookingEvent.ID !== 'NEW_TEMP_EVENT');\r\n    this.calendarData.bookingEvents = this.calendarData.bookingEvents.concat(aData);\r\n  }\r\n\r\n  getSelectedCellRefName(roomId, selectedDay) {\r\n    return 'room_' + roomId + '_' + selectedDay.currentDate;\r\n  }\r\n\r\n  getSplitBookingEvents(newEvent) {\r\n    return this.getBookingData().filter(bookingEvent => newEvent.FROM_DATE === bookingEvent.TO_DATE);\r\n  }\r\n\r\n  @Listen('closeBookingWindow', { target: 'window' })\r\n  closeWindow() {\r\n    let ind = this.getBookingData().findIndex(ev => ev.ID === 'NEW_TEMP_EVENT');\r\n    if (ind !== -1) {\r\n      this.getBookingData().splice(ind, 1);\r\n      console.log('removed item..');\r\n      this.renderElement();\r\n    }\r\n  }\r\n\r\n  addNewEvent(roomCategory) {\r\n    let keys = Object.keys(this.selectedRooms);\r\n    let startDate, endDate;\r\n\r\n    if (this.selectedRooms[keys[0]].currentDate < this.selectedRooms[keys[1]].currentDate) {\r\n      startDate = new Date(this.selectedRooms[keys[0]].currentDate);\r\n      endDate = new Date(this.selectedRooms[keys[1]].currentDate);\r\n    } else {\r\n      startDate = new Date(this.selectedRooms[keys[1]].currentDate);\r\n      endDate = new Date(this.selectedRooms[keys[0]].currentDate);\r\n    }\r\n\r\n    this.newEvent = {\r\n      ID: 'NEW_TEMP_EVENT',\r\n      NAME: <span>&nbsp;</span>,\r\n      EMAIL: '',\r\n      PHONE: '',\r\n      convertBooking: false,\r\n      REFERENCE_TYPE: 'PHONE',\r\n      FROM_DATE: startDate.getFullYear() + '-' + this.getTwoDigitNumStr(startDate.getMonth() + 1) + '-' + this.getTwoDigitNumStr(startDate.getDate()),\r\n      TO_DATE: endDate.getFullYear() + '-' + this.getTwoDigitNumStr(endDate.getMonth() + 1) + '-' + this.getTwoDigitNumStr(endDate.getDate()),\r\n      BALANCE: '',\r\n      NOTES: '',\r\n      RELEASE_AFTER_HOURS: 0,\r\n      PR_ID: this.selectedRooms[keys[0]].roomId,\r\n      ENTRY_DATE: '',\r\n      NO_OF_DAYS: (endDate - startDate) / 86400000,\r\n      ADULTS_COUNT: 1,\r\n      COUNTRY: '',\r\n      INTERNAL_NOTE: '',\r\n      RATE: '',\r\n      TOTAL_PRICE: '',\r\n      RATE_PLAN: '',\r\n      ARRIVAL_TIME: '',\r\n      TITLE: 'New Booking for ',\r\n      roomsInfo: [roomCategory],\r\n      CATEGORY: roomCategory.name,\r\n      event_type: 'BAR_BOOKING',\r\n      STATUS: 'PENDING-CONFIRMATION',\r\n      defaultDateRange: {\r\n        fromDate: null,\r\n        fromDateStr: '',\r\n        toDate: null,\r\n        toDateStr: '',\r\n        dateDifference: (endDate - startDate) / 86400000,\r\n        editable: false,\r\n        message: 'Including 5.00% City Tax - Excluding 11.00% VAT',\r\n      },\r\n    };\r\n\r\n    let popupTitle = roomCategory.name + ' ' + this.getRoomName(this.getRoomById(this.getCategoryRooms(roomCategory), this.selectedRooms[keys[0]].roomId));\r\n    this.newEvent.BLOCK_DATES_TITLE = 'Block Dates for ' + popupTitle;\r\n    this.newEvent.TITLE += popupTitle;\r\n    this.newEvent.defaultDateRange.toDate = new Date(this.newEvent.TO_DATE + 'T00:00:00');\r\n    this.newEvent.defaultDateRange.fromDate = new Date(this.newEvent.FROM_DATE + 'T00:00:00');\r\n    this.newEvent.defaultDateRange.fromDateStr = this.getDateStr(this.newEvent.defaultDateRange.fromDate);\r\n    this.newEvent.defaultDateRange.toDateStr = this.getDateStr(this.newEvent.defaultDateRange.toDate);\r\n    this.newEvent.ENTRY_DATE = new Date().toISOString();\r\n    this.newEvent.legendData = this.calendarData.formattedLegendData;\r\n\r\n    let splitBookingEvents = this.getSplitBookingEvents(this.newEvent);\r\n    if (splitBookingEvents.length) {\r\n      this.newEvent.splitBookingEvents = splitBookingEvents;\r\n    }\r\n\r\n    this.getBookingData().push(this.newEvent);\r\n    return this.newEvent;\r\n  }\r\n\r\n  getTwoDigitNumStr(num) {\r\n    return num <= 9 ? '0' + num : num;\r\n  }\r\n\r\n  getDateStr(date, locale = 'default') {\r\n    return date.getDate() + ' ' + date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\r\n  }\r\n\r\n  removeNewEvent() {\r\n    this.calendarData.bookingEvents = this.calendarData.bookingEvents.filter(events => events.ID !== 'NEW_TEMP_EVENT');\r\n    this.newEvent = null;\r\n  }\r\n\r\n  clickCell(roomId, selectedDay, roomCategory) {\r\n    if (!this.isScrollViewDragging && selectedDay.currentDate >= this.currentDate.getTime()) {\r\n      let refKey = this.getSelectedCellRefName(roomId, selectedDay);\r\n      if (this.selectedRooms.hasOwnProperty(refKey)) {\r\n        this.removeNewEvent();\r\n        delete this.selectedRooms[refKey];\r\n        this.renderElement();\r\n        return;\r\n      } else if (Object.keys(this.selectedRooms).length != 1 || this.fromRoomId != roomId) {\r\n        this.removeNewEvent();\r\n        this.selectedRooms = {};\r\n        this.selectedRooms[refKey] = { ...selectedDay, roomId };\r\n        this.fromRoomId = roomId;\r\n        this.renderElement();\r\n      } else {\r\n        // create bar;\r\n        this.selectedRooms[refKey] = { ...selectedDay, roomId };\r\n        this.addNewEvent(roomCategory);\r\n        this.selectedRooms = {};\r\n        this.renderElement();\r\n        this.showNewBookingPopup(this.newEvent);\r\n      }\r\n    }\r\n  }\r\n\r\n  showNewBookingPopup(data) {\r\n    console.log(data);\r\n    // this.showBookingPopup.emit({key: \"add\", data});\r\n  }\r\n\r\n  renderElement() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  getGeneralCategoryDayColumns(addClass: string, isCategory: boolean = false, index: number) {\r\n    return this.calendarData.days.map(dayInfo => (\r\n      <div class={`cellData pl-0 categoryPriceColumn ${addClass + '_' + dayInfo.day} ${dayInfo.day === this.today ? 'currentDay' : ''}`}>\r\n        {isCategory ? (\r\n          <span>\r\n            {dayInfo.rate[index].inventory}\r\n            <br />\r\n            <u>$ {dayInfo.rate[index].rate}</u>\r\n          </span>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  getGeneralRoomDayColumns(roomId: string, roomCategory) {\r\n    // onDragOver={event => this.handleDragOver(event)} onDrop={event => this.handleDrop(event, addClass+\"_\"+dayInfo.day)}\r\n    return this.calendarData.days.map(dayInfo => (\r\n      <div\r\n        class={`cellData pl-0 ${'room_' + roomId + '_' + dayInfo.day} ${dayInfo.day === this.today ? 'currentDay' : ''} ${\r\n          this.dragOverElement === roomId + '_' + dayInfo.day ? 'dragOverHighlight' : ''\r\n        } ${this.selectedRooms.hasOwnProperty(this.getSelectedCellRefName(roomId, dayInfo)) ? 'selectedDay' : ''}`}\r\n        onClick={() => this.clickCell(roomId, dayInfo, roomCategory)}\r\n      ></div>\r\n    ));\r\n  }\r\n\r\n  toggleCategory(roomCategory) {\r\n    roomCategory.expanded = !roomCategory.expanded;\r\n    this.renderElement();\r\n  }\r\n\r\n  getRoomCategoryRow(roomCategory, index) {\r\n    if (this.getTotalPhysicalRooms(roomCategory) <= 1) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div class=\"roomRow\">\r\n        <div\r\n          class={`cellData text-left align-items-center roomHeaderCell categoryTitle ${'category_' + this.getCategoryId(roomCategory)}`}\r\n          onClick={() => this.toggleCategory(roomCategory)}\r\n        >\r\n          <div class={\"categoryName\"}>{this.getCategoryName(roomCategory)}</div> <i class={`la la-angle-${roomCategory.expanded ? 'down' : 'right'}`}></i>\r\n        </div>\r\n        {this.getGeneralCategoryDayColumns('category_' + this.getCategoryId(roomCategory), true, index)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getRoomsByCategory(roomCategory) {\r\n    // Check accordion is expanded.\r\n    if (!roomCategory.expanded) {\r\n      return [];\r\n    }\r\n\r\n    return this.getCategoryRooms(roomCategory)?.map(room => (\r\n      <div class=\"roomRow\">\r\n        <div\r\n          class={`cellData text-left align-items-center roomHeaderCell  roomTitle ${this.getTotalPhysicalRooms(roomCategory) <= 1 ? 'pl10' : ''} ${'room_' + this.getRoomId(room)}`}\r\n          data-room={this.getRoomId(room)}\r\n        >\r\n          <div>{this.getTotalPhysicalRooms(roomCategory) <= 1 ? this.getCategoryName(roomCategory) : this.getRoomName(room)}</div>\r\n        </div>\r\n        {this.getGeneralRoomDayColumns(this.getRoomId(room), roomCategory)}\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  getRoomRows() {\r\n    return this.calendarData.roomsInfo.map((roomCategory, index) => [this.getRoomCategoryRow(roomCategory, index), this.getRoomsByCategory(roomCategory)]);\r\n  }\r\n\r\n  render() {\r\n    // onDragStart={event => this.handleDragStart(event)} draggable={true}\r\n    return (\r\n      <Host>\r\n        <div class=\"bodyContainer\">\r\n          {this.getRoomRows()}\r\n          <div class=\"bookingEventsContainer preventPageScroll\">\r\n            {this.getBookingData()?.map(bookingEvent => (\r\n              <igl-booking-event\r\n                is_vacation_rental={this.calendarData.is_vacation_rental}\r\n                countryNodeList={this.countryNodeList}\r\n                currency={this.currency}\r\n                data-component-id={bookingEvent.ID}\r\n                bookingEvent={bookingEvent}\r\n                allBookingEvents={this.getBookingData()}\r\n              ></igl-booking-event>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n  position: sticky;\r\n  bottom: 0;\r\n  width: max-content;\r\n  z-index: 3;\r\n}\r\n\r\n.footerCell {\r\n  display: -moz-inline-grid;\r\n  display: -ms-inline-grid;\r\n  display: inline-grid;\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  bottom: 0;\r\n  width: 70px;\r\n  height: 40px;\r\n  /* color: #b8b6b7; */\r\n  background: #fff;\r\n  vertical-align: top;\r\n  border-top: 1px solid #e0e0e0;\r\n}\r\n\r\n.bottomLeftCell {\r\n  left: -1px;\r\n  z-index: 2;\r\n  width: 170px;\r\n  text-align: left;\r\n  padding-left: 15px;\r\n  color: #000000;\r\n}\r\n\r\n.footerCell i {\r\n  margin-right: 5px;\r\n}\r\n\r\n.legendBtn {\r\n  color: #41bff3;\r\n  cursor: pointer;\r\n}\r\n\r\n.isOnline i {\r\n  color: #2f9c3f;\r\n  font-weight: bold;\r\n}\r\n\r\n.isOffline i {\r\n  font-weight: bold;\r\n}\r\n\r\n.isOffline {\r\n  color: #a40000;\r\n}\r\n\r\n.dayTitle {\r\n  font-size: 0.8em;\r\n  font-weight: 600;\r\n  display: grid;\r\n\r\n  /* height: 100%;\r\n  \r\n  align-items: center;\r\n  text-align: center;\r\n  width: 100%; */\r\n}\r\n\r\n.currentDay .dayTitle {\r\n  font-weight: bold;\r\n  /* color: #262b31; */\r\n}\r\n\r\n.currentDay {\r\n  background-color: #e3f3fa;\r\n}\r\n\r\n.dayCapacityPercent {\r\n  font-size: 0.75em;\r\n}\r\n\r\n.badge-pill {\r\n  padding-left: 1em;\r\n  padding-right: 1em;\r\n  font-size: 0.7em;\r\n  margin-bottom: 2px;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, h } from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"igl-cal-footer\",\r\n  styleUrl: \"igl-cal-footer.css\",\r\n  scoped: true,\r\n})\r\nexport class IglCalFooter {\r\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() today: String;\r\n  // private isOnline:boolean = false;\r\n\r\n  handleOptionEvent(key, data = \"\") {\r\n    this.optionEvent.emit({ key, data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"footerContainer\">\r\n        <div class=\"footerCell bottomLeftCell align-items-center preventPageScroll\">\r\n          <div\r\n            class=\"legendBtn\"\r\n            onClick={() => this.handleOptionEvent(\"showLegend\")}\r\n          >\r\n            <i class=\"la la-square\"></i>\r\n            <u>Legend</u>\r\n          </div>\r\n          {/* <div class={`${this.isOnline ? 'isOnline' : 'isOffline'}`}>\r\n            <i class=\"la la-share-alt isOffline\"></i><span>{this.isOnline ? \"Connected\": \"Offline\"}</span>\r\n          </div> */}\r\n        </div>\r\n        {this.calendarData.days.map((dayInfo) => (\r\n          <div class=\"footerCell align-items-center\">\r\n            <div\r\n              class={`dayTitle full-height align-items-center ${\r\n                dayInfo.day === this.today ? \"currentDay\" : \"\"\r\n              }`}\r\n            >\r\n              {dayInfo.dayDisplayName}\r\n            </div>\r\n\r\n            {/* <div class=\"dayTitle\">{dayInfo.dayDisplayName}</div>\r\n              <div class=\"dayCapacityPercent\">28.57%</div>\r\n              <div class=\"preventPageScroll\">\r\n                <span class=\"badge badge-primary badge-pill\">\r\n                  {index}\r\n                </span>\r\n              </div> */}\r\n          </div>\r\n        ))}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport { IAvailableRoom, IRoomCategory, IUnassignedDates, InnerRecord } from '../models/tobeassigned';\r\nimport { dateDifference, dateToFormattedString } from '../utils/utils';\r\n\r\nexport class ToBeAssignedService {\r\n  public async getUnassignedDates(propertyid: number, from_date: string, to_date: string) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_UnAssigned_Dates?Ticket=${token}`, {\r\n          propertyid,\r\n          from_date,\r\n          to_date,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return this.convertUnassignedDates(data.My_Result);\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getUnassignedRooms(propertyid: number, specific_date: string, roomInfo: any, formattedLegendData: any) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Aggregated_UnAssigned_Rooms?Ticket=${token}`, {\r\n          propertyid,\r\n          specific_date,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return this.transformToAssignable(data, roomInfo, formattedLegendData);\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async assignUnit(booking_nbr: string, identifier: string, pr_id: number) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Assign_Exposed_Room?Ticket=${token}`, {\r\n          booking_nbr,\r\n          identifier,\r\n          pr_id,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        console.log(data);\r\n        return data;\r\n      } else {\r\n        throw new Error('Invalid token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  private cleanSpacesAndSpecialChars(str: string) {\r\n    const regex = /[^a-zA-Z0-9]+/g;\r\n    return str.replace(regex, '');\r\n  }\r\n\r\n  private transformToAssignable(data: any, roomInfo, formattedLegendData): IRoomCategory[] {\r\n    const result: IRoomCategory[] = [];\r\n    data.My_Result.forEach((customer: any) => {\r\n      customer.unassigned_rooms.forEach((room: any) => {\r\n        let roomCategory: IRoomCategory = {\r\n          roomTypeName: room.room_type_name,\r\n          ID: room.identifier,\r\n          NAME: room.guest_name,\r\n          identifier: room.identifier,\r\n          FROM_DATE: room.unassigned_date,\r\n          TO_DATE: room.unassigned_date,\r\n          BOOKING_NUMBER: room.book_nbr,\r\n          STATUS: 'IN-HOUSE',\r\n          defaultDateRange: {\r\n            fromDate: undefined,\r\n            toDate: undefined,\r\n            fromDateTimeStamp: 0,\r\n            toDateTimeStamp: 0,\r\n            fromDateStr: '',\r\n            toDateStr: '',\r\n            dateDifference: 0,\r\n          },\r\n          NO_OF_DAYS: 1,\r\n          roomsInfo: roomInfo,\r\n          legendData: formattedLegendData,\r\n          availableRooms: [],\r\n          RT_ID: this.getRoomTypeId(room.room_type_name, roomInfo),\r\n        };\r\n        this.updateAvailableRooms(room, roomCategory, formattedLegendData, roomInfo);\r\n        this.addDefaultDateRange(roomCategory);\r\n        result.push(roomCategory);\r\n      });\r\n    });\r\n    return result;\r\n  }\r\n  addDefaultDateRange(roomCategory: IRoomCategory) {\r\n    roomCategory.defaultDateRange.fromDate = new Date(roomCategory.FROM_DATE + 'T00:00:00');\r\n    roomCategory.defaultDateRange.fromDateStr = dateToFormattedString(roomCategory.defaultDateRange.fromDate);\r\n    roomCategory.defaultDateRange.fromDateTimeStamp = roomCategory.defaultDateRange.fromDate.getTime();\r\n\r\n    roomCategory.defaultDateRange.toDate = new Date(roomCategory.TO_DATE + 'T00:00:00');\r\n    roomCategory.defaultDateRange.toDateStr = dateToFormattedString(roomCategory.defaultDateRange.toDate);\r\n    roomCategory.defaultDateRange.toDateTimeStamp = roomCategory.defaultDateRange.toDate.getTime();\r\n\r\n    roomCategory.defaultDateRange.dateDifference = roomCategory.NO_OF_DAYS;\r\n  }\r\n  private getRoomTypeId(roomName: string, roomInfo: any) {\r\n    return roomInfo.find(room => this.cleanSpacesAndSpecialChars(room.name) === this.cleanSpacesAndSpecialChars(roomName)).id || null;\r\n  }\r\n  private updateAvailableRooms(room: any, roomCategory: IRoomCategory, formattedLegendData, roomsInfo): void {\r\n    const rooms: IAvailableRoom[] = [];\r\n    room.assignable_units.forEach((unit: any) => {\r\n      if (unit.Is_Fully_Available && !unit.Is_Not_Available) {\r\n        const days = dateDifference(unit.from_date, unit.to_date);\r\n        rooms.push({\r\n          RT_ID: roomCategory.RT_ID,\r\n          STATUS: 'PENDING-CONFIRMATION',\r\n          FROM_DATE: unit.from_date,\r\n          roomName: unit.name,\r\n          PR_ID: unit.pr_id,\r\n          TO_DATE: unit.to_date,\r\n          NO_OF_DAYS: days,\r\n          ID: 'NEW_TEMP_EVENT',\r\n          NAME: '',\r\n          NOTES: '',\r\n          BALANCE: '',\r\n          INTERNAL_NOTE: '',\r\n          hideBubble: true,\r\n          legendData: formattedLegendData,\r\n          roomsInfo,\r\n        });\r\n        roomCategory.TO_DATE = unit.to_date;\r\n        roomCategory.NO_OF_DAYS = days;\r\n      }\r\n    });\r\n    roomCategory.availableRooms = rooms;\r\n  }\r\n\r\n  private convertUnassignedDates(dates: IUnassignedDates[]): Record<number, InnerRecord> {\r\n    let convertedDates: Record<number, InnerRecord> = {};\r\n    dates.forEach(date => {\r\n      let newDate = new Date(date.date);\r\n      newDate.setHours(0, 0, 0, 0);\r\n      convertedDates[newDate.getTime()] = {\r\n        categories: {},\r\n        dateStr: date.description,\r\n      };\r\n    });\r\n    return convertedDates;\r\n  }\r\n}\r\n","import moment from 'moment';\r\nimport { ToBeAssignedService } from '../services/toBeAssigned.service';\r\nimport { dateToFormattedString } from './utils';\r\n\r\nexport async function updateCategories(key, calendarData, property_id, unassignedDates) {\r\n  try {\r\n    const toBeAssignedService = new ToBeAssignedService();\r\n    let categorisedRooms = {};\r\n    const result = await toBeAssignedService.getUnassignedRooms(property_id, dateToFormattedString(new Date(+key)), calendarData.roomsInfo, calendarData.formattedLegendData);\r\n    result.forEach(room => {\r\n      if (!categorisedRooms.hasOwnProperty(room.RT_ID)) {\r\n        categorisedRooms[room.RT_ID] = [room];\r\n      } else {\r\n        categorisedRooms[room.RT_ID].push(room);\r\n      }\r\n    });\r\n    unassignedDates[key].categories = categorisedRooms;\r\n  } catch (error) {\r\n    //  toastr.error(error);\r\n  }\r\n}\r\nexport function transformDateFormatWithMoment(dateStr: string) {\r\n  var dateObj = moment(dateStr, 'ddd, DD MMM YYYY');\r\n  return dateObj.format('D_M_YYYY');\r\n}\r\n","@import url('../../../assets/feather/style.min.css');\r\n@import url('../../../assets/fontawesome/css/all.css');\r\n@import url('../../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  height: 100%;\r\n}\r\n.darkGrey {\r\n  background: #ececec;\r\n}\r\n.btn {\r\n  pointer-events: auto;\r\n}\r\n\r\n.stickyCell {\r\n  display: -ms-inline-grid;\r\n  display: -moz-inline-grid;\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 0px;\r\n  height: 82px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  z-index: 2;\r\n}\r\n\r\n.headersContainer {\r\n  background-color: #ffffff;\r\n}\r\n\r\n.headerCell {\r\n  display: inline-grid;\r\n  width: 70px;\r\n  height: 60px;\r\n  vertical-align: top;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.datePickerHidden {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  opacity: 0;\r\n}\r\n\r\n.monthsContainer {\r\n  height: 20px;\r\n  background-color: #ffffff;\r\n  margin-bottom: 0.2em;\r\n}\r\n\r\n.monthCell {\r\n  display: inline-grid;\r\n  height: 20px;\r\n  background-color: #ececec;\r\n  border-right: 1px solid #c7c7c7;\r\n  vertical-align: top;\r\n}\r\n\r\n.monthCell:nth-child(odd) {\r\n  background-color: #dddddd;\r\n}\r\n\r\n.monthTitle {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-size: 0.9em;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n}\r\n\r\n.topLeftCell {\r\n  left: 0px;\r\n  z-index: 3;\r\n  width: 170px;\r\n  background-color: #ffffff;\r\n  display: inline-grid;\r\n  display: -ms-inline-grid;\r\n  display: -moz-inline-grid;\r\n}\r\n\r\n.caledarBtns {\r\n  position: relative;\r\n  cursor: pointer;\r\n  font-size: 1.75em;\r\n  line-height: 1em;\r\n  padding: 0.4rem;\r\n}\r\n\r\n.caledarBtns .la {\r\n  font-size: 1.1em;\r\n}\r\n\r\n.caledarBtns:hover {\r\n  background-color: #f6f6f6;\r\n}\r\n\r\n.dayTitle {\r\n  font-size: 0.8em;\r\n  font-weight: 600;\r\n}\r\n\r\n.currentDay .dayTitle {\r\n  font-weight: bold;\r\n}\r\n\r\n.currentDay {\r\n  background-color: #e3f3fa;\r\n}\r\n\r\n.dayCapacityPercent {\r\n  font-size: 0.75em;\r\n}\r\n\r\n.badge-pill {\r\n  padding: 3px 1em;\r\n  font-size: 0.8em;\r\n}\r\n\r\n.pointer {\r\n  cursor: pointer;\r\n}\r\n\r\n.searchContiner {\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n}\r\n\r\n.searchListContainer {\r\n  background: #fff;\r\n  border: 1px solid #ccc;\r\n  border-bottom: none;\r\n}\r\n\r\n.searchListItem {\r\n  background: white;\r\n  border-bottom: 1px solid #ccc;\r\n  padding-left: 8px;\r\n}\r\n\r\n.badge-light {\r\n  background-color: #999999;\r\n}\r\n.min-width-full {\r\n  min-width: 100%;\r\n}\r\n","import { Component, Event, EventEmitter, Element, Host, Prop, h, State, Listen } from '@stencil/core';\r\nimport { ToBeAssignedService } from '../../../services/toBeAssigned.service';\r\nimport { dateToFormattedString } from '../../../utils/utils';\r\nimport { transformDateFormatWithMoment } from '../../../utils/events.utils';\r\n\r\n@Component({\r\n  tag: 'igl-cal-header',\r\n  styleUrl: 'igl-cal-header.css',\r\n  scoped: true,\r\n})\r\nexport class IglCalHeader {\r\n  @Element() private element: HTMLElement;\r\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event({ bubbles: true, composed: true }) gotoRoomEvent: EventEmitter<{\r\n    [key: string]: any;\r\n  }>;\r\n  @Event({ bubbles: true, composed: true }) gotoToBeAssignedDate: EventEmitter<{\r\n    [key: string]: any;\r\n  }>;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() today: String;\r\n  @Prop() propertyid: number;\r\n  @Prop() to_date: string;\r\n  @State() renderAgain: boolean = false;\r\n  @State() unassignedRoomsNumber: any = {};\r\n  private searchValue: string = '';\r\n  private searchList: { [key: string]: any }[] = [];\r\n  private roomsList: { [key: string]: any }[] = [];\r\n  private toBeAssignedService = new ToBeAssignedService();\r\n  componentWillLoad() {\r\n    try {\r\n      this.initializeRoomsList();\r\n      if (!this.calendarData.is_vacation_rental) {\r\n        this.fetchAndAssignUnassignedRooms();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in componentWillLoad:', error);\r\n    }\r\n  }\r\n  private initializeRoomsList() {\r\n    this.roomsList = [];\r\n    this.calendarData.roomsInfo.forEach(category => {\r\n      this.roomsList = this.roomsList.concat(...category.physicalrooms);\r\n    });\r\n  }\r\n\r\n  private async fetchAndAssignUnassignedRooms() {\r\n    //const days = await this.toBeAssignedService.getUnassignedDates(this.propertyid, dateToFormattedString(new Date()), this.to_date);\r\n    const days = this.calendarData.unassignedDates;\r\n    await this.assignRoomsToDate(days);\r\n  }\r\n\r\n  private async assignRoomsToDate(days) {\r\n    for (const day of Object.keys(days)) {\r\n      const result = await this.toBeAssignedService.getUnassignedRooms(\r\n        this.propertyid,\r\n        dateToFormattedString(new Date(+day)),\r\n        this.calendarData.roomsInfo,\r\n        this.calendarData.formattedLegendData,\r\n      );\r\n      this.unassignedRoomsNumber = { ...this.unassignedRoomsNumber, [transformDateFormatWithMoment(days[day].dateStr)]: result.length };\r\n    }\r\n    console.log(this.unassignedRoomsNumber);\r\n  }\r\n\r\n  @Listen('reduceAvailableUnitEvent', { target: 'window' })\r\n  handleReduceAvailableUnitEvent(event: CustomEvent<{ [key: string]: any }>) {\r\n    const opt: { [key: string]: any } = event.detail;\r\n    const data = opt.data;\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n\r\n    // return {day, dayDisplayName, currentDate, tobeAssignedCount: dates[currentDate]};\r\n    if (opt.key === 'reduceAvailableDays') {\r\n      this.calendarData.days.find(day => {\r\n        if (day.currentDate === parseInt(data.selectedDate)) {\r\n          day.tobeAssignedCount--;\r\n          return true;\r\n        }\r\n      });\r\n      this.renderView();\r\n    }\r\n  }\r\n\r\n  showToBeAssigned(dayInfo) {\r\n    if (this.unassignedRoomsNumber[dayInfo.day] || 0) {\r\n      this.handleOptionEvent('showAssigned');\r\n      setTimeout(() => {\r\n        this.gotoToBeAssignedDate.emit({\r\n          key: 'gotoToBeAssignedDate',\r\n          data: dayInfo.currentDate,\r\n        });\r\n      }, 100);\r\n    } else {\r\n      // do nothing as the value is 0;\r\n    }\r\n  }\r\n\r\n  handleOptionEvent(key, data: any = '') {\r\n    this.optionEvent.emit({ key, data });\r\n  }\r\n\r\n  handleDateSelect(event: Event) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let selectedDate = inputElement.value;\r\n\r\n    // // Manually close the date picker - for Safari\r\n    const picker = this.element.querySelector('.datePickerHidden') as HTMLInputElement;\r\n    picker.blur();\r\n    if (selectedDate) {\r\n      this.handleOptionEvent('calendar', selectedDate);\r\n    }\r\n  }\r\n\r\n  handleClearSearch() {\r\n    this.searchValue = '';\r\n    this.searchList = [];\r\n    this.renderView();\r\n  }\r\n\r\n  handleFilterRooms(event: Event) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let value = inputElement.value.trim();\r\n    this.searchValue = value;\r\n    value = value.toLowerCase();\r\n    if (value === '') {\r\n      this.handleClearSearch();\r\n    } else {\r\n      this.searchList = this.roomsList.filter(room => room.name.toLocaleLowerCase().indexOf(value) != -1);\r\n    }\r\n    this.renderView();\r\n  }\r\n\r\n  handleScrollToRoom(roomId) {\r\n    this.handleClearSearch();\r\n    this.gotoRoomEvent.emit({ key: 'gotoRoom', roomId });\r\n  }\r\n\r\n  getStringDateFormat(dt) {\r\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\r\n  }\r\n\r\n  getNewBookingModel() {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let from_date = this.getStringDateFormat(today);\r\n    today.setDate(today.getDate() + 1);\r\n    today.setHours(0, 0, 0, 0);\r\n    let to_date = this.getStringDateFormat(today);\r\n    return {\r\n      ID: '',\r\n      NAME: '',\r\n      EMAIL: '',\r\n      PHONE: '',\r\n      REFERENCE_TYPE: 'PHONE',\r\n      FROM_DATE: from_date, // \"2023-07-09\",\r\n      TO_DATE: to_date, // \"2023-07-11\",\r\n      roomsInfo: this.calendarData.roomsInfo,\r\n      TITLE: 'New Booking',\r\n      event_type: 'PLUS_BOOKING',\r\n      legendData: this.calendarData.formattedLegendData,\r\n      defaultDateRange: {\r\n        fromDate: new Date(from_date), //new Date(\"2023-09-10\"),\r\n        fromDateStr: '', //\"10 Sep 2023\",\r\n        toDate: new Date(to_date), //new Date(\"2023-09-15\"),\r\n        toDateStr: '', // \"15 Sep 2023\",\r\n        dateDifference: 0,\r\n        editabled: true,\r\n        message: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  renderView() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"stickyCell align-items-center topLeftCell preventPageScroll\">\r\n          <div class=\"row justify-content-around no-gutters\">\r\n            {!this.calendarData.is_vacation_rental && (\r\n              <div class=\"caledarBtns\" onClick={() => this.handleOptionEvent('showAssigned')} data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Unassigned Units\">\r\n                <i class=\"la la-tasks\"></i>\r\n              </div>\r\n            )}\r\n            <div class=\"caledarBtns\" onClick={() => this.handleOptionEvent('calendar')} data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Navigate\">\r\n              <i class=\"la la-calendar-o\"></i>\r\n              <input class=\"datePickerHidden\" type=\"date\" onChange={this.handleDateSelect.bind(this)} title=\"\" />\r\n            </div>\r\n            <div class=\"caledarBtns\" onClick={() => this.handleOptionEvent('gotoToday')} data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Today\">\r\n              <i class=\"la la-clock-o\"></i>\r\n            </div>\r\n            <div\r\n              class=\"caledarBtns\"\r\n              onClick={() => this.handleOptionEvent('add', this.getNewBookingModel())}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"bottom\"\r\n              title=\"Create new booking\"\r\n            >\r\n              <i class=\"la la-plus\"></i>\r\n            </div>\r\n          </div>\r\n          <div class=\"row justify-content-around no-gutters searchContiner\">\r\n            <fieldset class={`form-group position-relative ${this.searchValue != '' ? 'show' : ''}`}>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-sm input-sm\"\r\n                id=\"iconLeft7\"\r\n                value={this.searchValue}\r\n                placeholder=\"Find unit\"\r\n                onInput={event => this.handleFilterRooms(event)}\r\n              />\r\n              {this.searchValue !== '' ? (\r\n                <div\r\n                  class=\"form-control-position pointer\"\r\n                  onClick={() => this.handleClearSearch()}\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"top\"\r\n                  data-original-title=\"Clear Selection\"\r\n                >\r\n                  <i class=\"la la-close font-small-4\"></i>\r\n                </div>\r\n              ) : null}\r\n\r\n              {this.searchList.length ? (\r\n                <div class=\"position-absolute searchListContainer dropdown-menu dropdown-menu-left min-width-full\">\r\n                  {this.searchList.map(room => (\r\n                    <div class=\"searchListItem1 dropdown-item px-1 text-left pointer\" onClick={() => this.handleScrollToRoom(room.id)}>\r\n                      {room.name}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : null}\r\n            </fieldset>\r\n          </div>\r\n        </div>\r\n        <div class=\"stickyCell headersContainer\">\r\n          <div class=\"monthsContainer\">\r\n            {this.calendarData.monthsInfo.map(monthInfo => (\r\n              <div class=\"monthCell\" style={{ width: monthInfo.daysCount * 70 + 'px' }}>\r\n                <div class=\"monthTitle\">{monthInfo.monthName}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {this.calendarData.days.map(dayInfo => (\r\n            <div class={`headerCell align-items-center ${'day-' + dayInfo.day} ${dayInfo.day === this.today ? 'currentDay' : ''}`} data-day={dayInfo.day}>\r\n              {!this.calendarData.is_vacation_rental && (\r\n                <div class=\"preventPageScroll\">\r\n                  <span\r\n                    class={`badge badge-${this.unassignedRoomsNumber[dayInfo.day] || dayInfo.unassigned_units_nbr !== 0 ? 'info pointer' : 'light'} badge-pill`}\r\n                    onClick={() => this.showToBeAssigned(dayInfo)}\r\n                  >\r\n                    {this.unassignedRoomsNumber[dayInfo.day] || dayInfo.unassigned_units_nbr}\r\n                  </span>\r\n                </div>\r\n              )}\r\n              <div class=\"dayTitle\">{dayInfo.dayDisplayName}</div>\r\n              <div class=\"dayCapacityPercent\">{dayInfo.occupancy}%</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: flex;\r\n  text-align: left;\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n.date-range-input {\r\n  border: 0;\r\n  outline: 0;\r\n  margin: 0;\r\n  flex: 1;\r\n}\r\n.date-range-input:focus {\r\n  border: 0;\r\n  outline: 0;\r\n}\r\n.iglRangePicker {\r\n  margin: 0;\r\n  border: 1px solid #379ff2;\r\n  border-radius: 6px;\r\n  min-width: 300px;\r\n  max-width: 320px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  text-align: center;\r\n  margin-right: 5px;\r\n  padding: 5px 2rem;\r\n}\r\n.calendarPickerContainer {\r\n  display: flex;\r\n  flex-direction: column;\r\n  /*align-items: center;*/\r\n}\r\n\r\n.dateRangeLabel {\r\n  margin-right: 5px;\r\n}\r\n\r\n.taxMessage {\r\n  padding: 5px;\r\n  display: inline-block;\r\n}\r\n@media only screen and (min-width: 600px) {\r\n  :host {\r\n    flex-direction: row;\r\n  }\r\n  .calendarPickerContainer {\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n}","import {\r\n  Component,\r\n  Host,\r\n  h,\r\n  State,\r\n  Event,\r\n  EventEmitter,\r\n  Prop,\r\n} from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"igl-date-range\",\r\n  styleUrl: \"igl-date-range.css\",\r\n  scoped: true,\r\n})\r\nexport class IglDateRange {\r\n  @Prop({ reflect: true }) message: string = \"\";\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() renderAgain: boolean = false;\r\n\r\n  private totalNights: number = 0;\r\n  private fromDate: Date;\r\n  private toDate: Date;\r\n  private fromDateStr: string = \"from\";\r\n  private toDateStr: string = \"to\";\r\n  dateRangeInput: HTMLElement;\r\n\r\n  getStringDateFormat(dt) {\r\n    return (\r\n      dt.getFullYear() +\r\n      \"-\" +\r\n      (dt.getMonth() < 9 ? \"0\" : \"\") +\r\n      (dt.getMonth() + 1) +\r\n      \"-\" +\r\n      (dt.getDate() <= 9 ? \"0\" : \"\") +\r\n      dt.getDate()\r\n    );\r\n  }\r\n\r\n  componentWillLoad() {\r\n    let dt = new Date();\r\n    dt.setHours(0, 0, 0, 0);\r\n    dt.setDate(dt.getDate() + 1);\r\n    if (this.defaultData) {\r\n      if (this.defaultData.fromDate) {\r\n        this.fromDate = new Date(this.defaultData.fromDate);\r\n        this.fromDate.setHours(0, 0, 0, 0);\r\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\r\n      }\r\n      if (this.defaultData.toDate) {\r\n        this.toDate = new Date(this.defaultData.toDate);\r\n        this.toDate.setHours(0, 0, 0, 0);\r\n        this.toDateStr = this.getFormattedDateString(this.toDate);\r\n      }\r\n    }\r\n    if (this.fromDate && this.toDate) {\r\n      this.calculateTotalNights();\r\n      this.handleDateSelectEvent(\"selectedDateRange\", {\r\n        fromDate: this.fromDate.getTime(),\r\n        toDate: this.toDate.getTime(),\r\n        fromDateStr: this.fromDateStr,\r\n        toDateStr: this.toDateStr,\r\n        dateDifference: this.totalNights,\r\n      });\r\n    }\r\n  }\r\n\r\n  calculateTotalNights() {\r\n    this.totalNights = Math.floor(\r\n      (this.toDate.getTime() - this.fromDate.getTime()) / 86400000\r\n    );\r\n  }\r\n  getFormattedDateString(dt) {\r\n    return (\r\n      dt.getDate() +\r\n      \" \" +\r\n      dt.toLocaleString(\"default\", { month: \"short\" }).toLowerCase() +\r\n      \" \" +\r\n      dt.getFullYear()\r\n    );\r\n  }\r\n\r\n  handleDateSelectEvent(key, data: any = \"\") {\r\n    this.dateSelectEvent.emit({ key, data });\r\n  }\r\n  handleDateChange(evt) {\r\n    const { start, end } = evt.detail;\r\n    this.fromDate = start.toDate();\r\n    this.toDate = end.toDate();\r\n    this.calculateTotalNights();\r\n    this.handleDateSelectEvent(\"selectedDateRange\", {\r\n      fromDate: this.fromDate.getTime(),\r\n      toDate: this.toDate.getTime(),\r\n      fromDateStr: start.format(\"DD MMM YYYY\"),\r\n      toDateStr: end.format(\"DD MMM YYYY\"),\r\n      dateDifference: this.totalNights,\r\n    });\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"calendarPickerContainer ml-0\">\r\n          <h5 class=\"dateRangeLabel\">Dates</h5>\r\n          <div class=\"iglRangePicker\">\r\n            <ir-date-picker\r\n              fromDate={this.fromDate}\r\n              toDate={this.toDate}\r\n              autoApply\r\n              onDateChanged={(evt) => {\r\n                this.handleDateChange(evt);\r\n              }}\r\n            ></ir-date-picker>\r\n\r\n            {this.totalNights ? (\r\n              <span class=\"iglRangeNights\">\r\n                {this.totalNights +\r\n                  (this.totalNights > 1 ? \" nights\" : \" night\")}\r\n              </span>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div class=\"taxMessage display-inline\">{this.message}</div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n/* Legend */\r\n\r\n.legendHeader {\r\n  font-weight: 500;\r\n  letter-spacing: 0.05rem;\r\n  font-size: 1.12rem;\r\n  padding-top: 5px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.legendCloseBtn {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  font-size: 1.75em;\r\n  line-height: 1em;\r\n  padding: 0.4rem;\r\n}\r\n\r\n.legendCloseBtn:hover {\r\n  background-color: #f6f6f6;\r\n}\r\n\r\n.stickyHeader {\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: #ffffff;\r\n  z-index: 1;\r\n}\r\n\r\n.legendRow {\r\n  position: relative;\r\n  vertical-align: middle;\r\n  margin-bottom: 0.3rem;\r\n}\r\n\r\n.legendRow div {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n}\r\n\r\n.legend_skew,\r\n.legend_skewsplit {\r\n  transform: skew(-30deg);\r\n  width: 15px;\r\n  height: 16px;\r\n}\r\n\r\n.legend_circle {\r\n  border-radius: 100%;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin: 3px 3px 3px 2px;\r\n}\r\n\r\n.legend_skewsplit {\r\n  border-right: 2px solid #000000;\r\n}\r\n\r\n.blueColor {\r\n  background-color: #31bef1;\r\n}\r\n.greenColor {\r\n  background-color: #45b16d;\r\n}\r\n.yellowColor {\r\n  background-color: #f4d552;\r\n}\r\n.greyColor {\r\n  background-color: #a0a0a0;\r\n}\r\n.redColor {\r\n  background-color: #f34752;\r\n}\r\n.pinkColor {\r\n  background-color: #f9b4b7;\r\n}\r\n\r\n/* Legend Calendar */\r\n\r\n.legendCalendar .legendRow {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.legendCalendar .legendRow:first-child .legendCal {\r\n  background-color: #ececec;\r\n}\r\n\r\n.legendCalendar .legendRow div {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n}\r\n\r\n.legendCalendar .legendCal {\r\n  width: 80px;\r\n  height: 25px;\r\n  text-align: center;\r\n  display: inline-grid !important;\r\n  align-content: center;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.legendCalendar .legendCal .badge {\r\n  margin-top: 0.2rem;\r\n}\r\n\r\n.legendCalendar .legendCal.legendCal-h2 {\r\n  height: 40px;\r\n}\r\n\r\n.br-t {\r\n  border-top: 1px solid #a0a0a0;\r\n}\r\n.br-s {\r\n  border-left: 1px solid #a0a0a0;\r\n  border-right: 1px solid #a0a0a0;\r\n}\r\n.br-bt {\r\n  border-bottom: 1px solid #a0a0a0;\r\n}\r\n\r\n.highphenLegend {\r\n  font-size: 0.9em;\r\n}\r\n\r\n.highphenLegend::before {\r\n  width: 12px;\r\n  height: 0.5px;\r\n  content: \" \";\r\n  background-color: #000000;\r\n  vertical-align: middle;\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-legends',\r\n  styleUrl: 'igl-legends.css',\r\n  scoped: true,\r\n})\r\nexport class IglLegends {\r\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() legendData: { [key: string]: any };\r\n  handleOptionEvent(key, data = '') {\r\n    this.optionEvent.emit({ key, data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"legendContainer pr-1 text-left\">\r\n        <div>\r\n          <div>\r\n            <div class=\"stickyHeader\">\r\n              <div class=\"legendHeader pt-1\">Legend</div>\r\n              <div class=\"legendCloseBtn pt-1\" onClick={() => this.handleOptionEvent('closeSideMenu')}>\r\n                <i class=\"ft-chevrons-left\"></i>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n            <div class=\"mt-2 pl-1\">\r\n              {this.legendData.map(legendInfo => (\r\n                <div class=\"legendRow \">\r\n                  <div class={`legend_${legendInfo.design} mr-1`} style={{ backgroundColor: legendInfo.color }}></div>\r\n                  <span class=\"font-small-3\">{legendInfo.name}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <hr />\r\n            <div class=\"mt-2\">\r\n              <div class=\"legendCalendar\">\r\n                <div class=\"legendRow align-items-center\">\r\n                  <div class=\"legendCal br-t br-s br-bt\">\r\n                    <strong>MAR 2022</strong>\r\n                  </div>\r\n                  <div class=\"highphenLegend\">Month and Year</div>\r\n                </div>\r\n                <div class=\"legendRow\">\r\n                  <div class=\"legendCal pl-2 pr-2 br-s\">\r\n                    <span class=\"badge badge-primary badge-pill\">3</span>\r\n                  </div>\r\n                  <div class=\"highphenLegend\">\r\n                    <div>Unassigned Units (Click to Assign)</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"legendRow\">\r\n                  <div class=\"legendCal br-s\">FRI 18</div>\r\n                  <div class=\"highphenLegend\">Date</div>\r\n                </div>\r\n                <div class=\"legendRow\">\r\n                  <div class=\"legendCal br-s br-bt font-small-3\">15%</div>\r\n                  <div class=\"highphenLegend\">Occupancy</div>\r\n                </div>\r\n                <div class=\"legendRow\">\r\n                  <div class=\"legendCal br-s font-small-3\">20</div>\r\n                  <div class=\"highphenLegend\">Inventory</div>\r\n                </div>\r\n                <div class=\"legendRow align-items-center\">\r\n                  <div class=\"legendCal br-s br-bt font-small-2\">\r\n                    <u>R$100,00</u>\r\n                  </div>\r\n                  <div class=\"highphenLegend\">\r\n                    <div>Rate (Click to Change)</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 10000;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type=\"button\"]:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, Host, State } from '@stencil/core';\r\nimport { IPageTwoDataUpdateProps, PageTwoButtonsTypes } from '../../../models/models';\r\n@Component({\r\n  tag: 'igl-pagetwo',\r\n  styleUrl: 'igl-pagetwo.css',\r\n  scoped: true,\r\n})\r\nexport class IglPagetwo {\r\n  @Prop() showPaymentDetails: boolean;\r\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\r\n  @Prop() dateRangeData: { [key: string]: any };\r\n  @Prop() bookingData: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() language: string;\r\n  @Prop() bookedByInfoData: { [key: string]: any };\r\n  @Prop() bedPreferenceType: any;\r\n  @Prop() selectedRooms: any;\r\n  @Prop({ reflect: true }) isLoading: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() selectedGuestData;\r\n  @Event() dataUpdateEvent: EventEmitter<IPageTwoDataUpdateProps>;\r\n  @Event() buttonClicked: EventEmitter<{\r\n    key: PageTwoButtonsTypes;\r\n    data?: CustomEvent;\r\n  }>;\r\n  @State() selectedBookedByData;\r\n  @State() guestData: any;\r\n\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n\r\n  componentWillLoad() {\r\n    this.initializeGuestData();\r\n  }\r\n  initializeGuestData() {\r\n    let total = 0;\r\n    const newSelectedUnits = { ...this.selectedUnits };\r\n\r\n    for (const key in this.selectedRooms) {\r\n      for (const prop in this.selectedRooms[key]) {\r\n        const totalRooms = this.selectedRooms[key][prop].totalRooms;\r\n        newSelectedUnits[key] = Array(totalRooms).fill(-1);\r\n      }\r\n    }\r\n\r\n    this.selectedUnits = newSelectedUnits;\r\n    this.guestData = [];\r\n    for (const key of Object.keys(this.selectedRooms)) {\r\n      for (const prop of Object.keys(this.selectedRooms[key])) {\r\n        for (let i = 1; i <= this.selectedRooms[key][prop].totalRooms; i++) {\r\n          this.guestData.push({\r\n            guestName: '',\r\n            roomId: '',\r\n            preference: '',\r\n            ...this.selectedRooms[key][prop],\r\n          });\r\n        }\r\n        total += this.selectedRooms[key][prop].totalRooms * this.selectedRooms[key][prop].rate;\r\n      }\r\n    }\r\n    this.bookingData.TOTAL_PRICE = total;\r\n  }\r\n\r\n  getRoomsListFromCategoryId(categoryId) {\r\n    let category = this.bookingData.roomsInfo?.find(category => category.id === categoryId);\r\n    return (category && category.physicalrooms) || [];\r\n  }\r\n  handleOnApplicationInfoDataUpdateEvent(event: CustomEvent, index: number) {\r\n    const opt = event.detail;\r\n    const categoryIdKey = `c_${opt.data.roomCategoryId}`;\r\n    const updatedUnits = [...(this.selectedUnits[categoryIdKey] || [])];\r\n    updatedUnits[index] = opt.data.roomId;\r\n    this.selectedUnits = {\r\n      ...this.selectedUnits,\r\n      [categoryIdKey]: updatedUnits,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'applicationInfoUpdateEvent',\r\n      value: event.detail,\r\n    });\r\n  }\r\n\r\n  handleEventData(event: any, key: string, index: number) {\r\n    if (key === 'application-info') {\r\n      this.handleOnApplicationInfoDataUpdateEvent(event, index);\r\n    } else {\r\n      this.selectedBookedByData = event.detail.data;\r\n      this.dataUpdateEvent.emit({\r\n        key: 'propertyBookedBy',\r\n        value: event.detail,\r\n      });\r\n    }\r\n  }\r\n  isGuestDataIncomplete() {\r\n    if (this.selectedGuestData.length !== this.guestData.length) {\r\n      return true;\r\n    }\r\n    for (const data of this.selectedGuestData) {\r\n      if (data.guestName === '' || data.preference === '' || data.roomId === '') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled(key: string) {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.selectedGuestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      const isCardDetails = ['cardNumber', 'cardHolderName', 'expiryMonth', 'expiryYear'].includes(key);\r\n      if (!this.showPaymentDetails && isCardDetails) {\r\n        return false;\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n\r\n    return (\r\n      this.isLoading === key ||\r\n      isValidProperty(this.selectedGuestData, 'guestName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'isdCode', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'contactNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'firstName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'lastName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'countryId', -1) ||\r\n      isValidProperty(this.selectedBookedByData, 'selectedArrivalTime', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'email', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'cardNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'cardHolderName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'expiryMonth', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'expiryYear', '')\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"scrollContent\">\r\n        <div class=\"row\">\r\n          <div class=\"col-6 text-left p-0\">\r\n            <span class=\"mr-1 font-weight-bold font-medium-1\">\r\n              {this.dateRangeData.fromDateStr} - {this.dateRangeData.toDateStr}\r\n            </span>\r\n            {this.dateRangeData.dateDifference} nights\r\n          </div>\r\n          <div class=\"col-6 text-right\">\r\n            Total price <span class=\"font-weight-bold font-medium-1\">{'$' + this.bookingData.TOTAL_PRICE || '$0.00'}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {this.guestData.map((roomInfo, index) => (\r\n          <igl-application-info\r\n            bedPreferenceType={this.bedPreferenceType}\r\n            index={index}\r\n            selectedUnits={this.selectedUnits[`c_${roomInfo.roomCategoryId}`]}\r\n            guestInfo={roomInfo}\r\n            guestRefKey={index}\r\n            bookingType={this.bookingData.event_type}\r\n            roomsList={this.getRoomsListFromCategoryId(roomInfo.roomCategoryId)}\r\n            onDataUpdateEvent={event =>\r\n              //this.handleOnApplicationInfoDataUpdateEvent(event, index)\r\n              this.handleEventData(event, 'application-info', index)\r\n            }\r\n          ></igl-application-info>\r\n        ))}\r\n\r\n        {this.isEditOrAddRoomEvent || this.showSplitBookingOption ? null : (\r\n          <igl-property-booked-by\r\n            countryNodeList={this.countryNodeList}\r\n            language={this.language}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            defaultData={this.bookedByInfoData}\r\n            onDataUpdateEvent={event =>\r\n              // this.dataUpdateEvent.emit({\r\n              //   key: \"propertyBookedBy\",\r\n              //   value: event.detail,\r\n              // })\r\n              this.handleEventData(event, 'propertyBookedBy', 0)\r\n            }\r\n          ></igl-property-booked-by>\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent ? (\r\n          <div class=\"row p-0 mb-1 mt-2\">\r\n            <div class=\"col-6\">\r\n              <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'cancel' })}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <div class=\"col-6\">\r\n              <button\r\n                disabled={this.isLoading === 'save' || this.isGuestDataIncomplete()}\r\n                type=\"button\"\r\n                class=\"btn btn-primary full-width\"\r\n                onClick={() => this.buttonClicked.emit({ key: 'save' })}\r\n              >\r\n                {this.isLoading === 'save' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"row p-0 mb-1 mt-2\">\r\n            <div class=\"col-4\">\r\n              <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'back' })}>\r\n                &lt;&lt; Back\r\n              </button>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <button disabled={this.isButtonDisabled('book')} type=\"button\" class=\"btn btn-primary full-width\" onClick={() => this.buttonClicked.emit({ key: 'book' })}>\r\n                {this.isLoading === 'book' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                Book\r\n              </button>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <button\r\n                disabled={this.isButtonDisabled('bookAndCheckIn')}\r\n                type=\"button\"\r\n                class=\"btn btn-primary full-width\"\r\n                onClick={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n              >\r\n                {this.isLoading === 'bookAndCheckIn' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                Book & check in\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n\r\n.bookedByEmailContainer {\r\n  flex: auto;\r\n  max-width: 250px;\r\n}\r\n\r\n.bookedDetailsForm label {\r\n  min-width: 125px;\r\n  max-width: 125px;\r\n}\r\n\r\n.bookedDetailsForm .controlContainer {\r\n  width: calc(100% - 127px);\r\n}\r\n\r\n.bookedDetailsForm .form-group {\r\n  margin-bottom: 10px !important;\r\n}\r\n\r\n.bookedDetailsForm .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Fragment } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries, ICountry } from '../../../models/IBooking';\r\nimport { v4 } from 'uuid';\r\n\r\n@Component({\r\n  tag: 'igl-property-booked-by',\r\n  styleUrl: 'igl-property-booked-by.css',\r\n  scoped: true,\r\n})\r\nexport class IglPropertyBookedBy {\r\n  @Prop() language: string;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() countryNodeList: ICountry[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private arrivalTimeList: IEntries[] = [];\r\n  private expiryMonths: string[] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\n  private expiryYears: string[] = [];\r\n  private currentMonth: string = '01';\r\n  @State() bookedByData: { [key: string]: any } = {\r\n    id: undefined,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    countryId: '',\r\n    isdCode: '',\r\n    contactNumber: '',\r\n    selectedArrivalTime: {\r\n      code: '',\r\n      description: '',\r\n    },\r\n    emailGuest: false,\r\n    message: '',\r\n    cardNumber: '',\r\n    cardHolderName: '',\r\n    expiryMonth: '',\r\n    expiryYear: '',\r\n  };\r\n\r\n  async componentWillLoad() {\r\n    this.assignCountryCode();\r\n    this.initializeExpiryYears();\r\n    this.initializeDateData();\r\n    this.populateBookedByData();\r\n  }\r\n\r\n  private initializeExpiryYears() {\r\n    const currentYear = new Date().getFullYear();\r\n    this.expiryYears = Array.from({ length: 4 }, (_, index) => (currentYear + index).toString());\r\n  }\r\n  private async assignCountryCode() {\r\n    const country = await this.bookingService.getUserDefaultCountry();\r\n    console.log(country);\r\n    const countryId = country['COUNTRY_ID'];\r\n    console.log(countryId);\r\n    this.bookedByData = { ...this.bookedByData, isdCode: countryId.toString(), countryId };\r\n  }\r\n  private initializeDateData() {\r\n    const dt = new Date();\r\n    const month = dt.getMonth() + 1;\r\n    this.currentMonth = month < 10 ? `0${month}` : month.toString();\r\n  }\r\n\r\n  private populateBookedByData() {\r\n    this.bookedByData = this.defaultData ? { ...this.defaultData } : {};\r\n    this.arrivalTimeList = this.defaultData?.arrivalTime || [];\r\n\r\n    if (!this.bookedByData.expiryMonth) {\r\n      this.bookedByData.expiryMonth = this.currentMonth;\r\n    }\r\n    if (!this.bookedByData.expiryYear) {\r\n      this.bookedByData.expiryYear = new Date().getFullYear();\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, event) {\r\n    const foundTime = this.arrivalTimeList.find(time => time.CODE_NAME === event.target.value);\r\n\r\n    this.bookedByData[key] =\r\n      key === 'emailGuest'\r\n        ? event.target.checked\r\n        : key === 'arrivalTime'\r\n        ? {\r\n            code: event.target.value,\r\n            description: (foundTime && foundTime.CODE_VALUE_EN) || '',\r\n          }\r\n        : event.target.value;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    if (key === 'countryId') {\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        isdCode: event.target.value,\r\n      };\r\n    }\r\n  }\r\n\r\n  handleNumberInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n\r\n    // Regular expression to match only numeric characters (0-9)\r\n    const numericRegex = /^[0-9]+$/;\r\n\r\n    if (!numericRegex.test(inputValue)) {\r\n      // If the input is not numeric, prevent it from being entered\r\n      inputElement.value = inputValue.replace(/[^0-9]/g, '');\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n\r\n  async handleEmailInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n    if (this.isValidEmail(inputValue)) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n  async checkUser() {\r\n    try {\r\n      const email = this.bookedByData.email;\r\n      if (this.isValidEmail(email)) {\r\n        const res = await this.bookingService.getUserInfo(email);\r\n        if (res !== null) {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: res.id,\r\n            firstName: res.first_name,\r\n            lastName: res.last_name,\r\n            contactNumber: res.mobile,\r\n            countryId: res.country_id,\r\n            isdCode: res.country_id.toString(),\r\n          };\r\n        } else {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: undefined,\r\n            firstName: '',\r\n            lastName: '',\r\n            contactNumber: '',\r\n            countryId: '',\r\n            isdCode: '',\r\n          };\r\n        }\r\n        this.dataUpdateEvent.emit({\r\n          key: 'bookedByInfoUpdated',\r\n          data: { ...this.bookedByData },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n  isValidEmail(emailId) {\r\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    return emailPattern.test(emailId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-3\">\r\n          <div class=\"form-group row text-left align-items-center\">\r\n            <label class=\"p-0 m-0 label-control mr-1 font-weight-bold\">Booked by</label>\r\n            <div class=\"bookedByEmailContainer\">\r\n              <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Email address\"\r\n                name=\"bookeyByEmail\"\r\n                value={this.bookedByData.email}\r\n                onInput={event => this.handleEmailInput('email', event)}\r\n                required\r\n                onBlur={() => this.checkUser()}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bookedDetailsForm text-left mt-2 font-small-3\">\r\n          <div class=\"row\">\r\n            <div class=\"p-0 col-md-6\">\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">First name</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"First name\"\r\n                    id={v4()}\r\n                    value={this.bookedByData.firstName}\r\n                    onInput={event => this.handleDataChange('firstName', event)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Last name</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Last name\"\r\n                    id={v4()}\r\n                    value={this.bookedByData.lastName}\r\n                    onInput={event => this.handleDataChange('lastName', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Country</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('countryId', event)}>\r\n                    <option value=\"\" selected={this.bookedByData.countryId === ''}>\r\n                      Select\r\n                    </option>\r\n                    {this.countryNodeList.map(countryNode => (\r\n                      <option value={countryNode.id} selected={this.bookedByData.countryId === countryNode.id}>\r\n                        {countryNode.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Mobile phone</label>\r\n                <div class=\"p-0 m-0 pr-1 row controlContainer\">\r\n                  <div class=\"col-3 p-0 m-0\">\r\n                    <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('isdCode', event)}>\r\n                      <option value=\"\" selected={this.bookedByData.isdCode === ''}>\r\n                        ISD\r\n                      </option>\r\n                      {this.countryNodeList.map(country => (\r\n                        <option value={country.id} selected={this.bookedByData.isdCode === country.id.toString()}>\r\n                          {country.phone_prefix}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-9 p-0 m-0\">\r\n                    <input\r\n                      class=\"form-control\"\r\n                      type=\"tel\"\r\n                      placeholder=\"Contact Number\"\r\n                      id={v4()}\r\n                      value={this.bookedByData.contactNumber}\r\n                      onInput={event => this.handleNumberInput('contactNumber', event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Your arrival time</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('selectedArrivalTime', event)}>\r\n                    <option value=\"\" selected={this.bookedByData.selectedArrivalTime === ''}>\r\n                      -\r\n                    </option>\r\n                    {this.arrivalTimeList.map(time => (\r\n                      <option value={time.CODE_NAME} selected={this.bookedByData.selectedArrivalTime === time.CODE_NAME}>\r\n                        {time.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Email the guest</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer checkBoxContainer\">\r\n                  <input class=\"form-control\" type=\"checkbox\" checked={this.bookedByData.emailGuest} id={v4()} onChange={event => this.handleDataChange('emailGuest', event)} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6 p-0\">\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Any message for us?</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <textarea\r\n                    id={v4()}\r\n                    rows={4}\r\n                    class=\"form-control\"\r\n                    name=\"message\"\r\n                    value={this.bookedByData.message}\r\n                    onInput={event => this.handleDataChange('message', event)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              {this.showPaymentDetails && (\r\n                <Fragment>\r\n                  <div class=\"form-group row p-0 align-items-center\">\r\n                    <label class=\"p-0 m-0\">Card Number</label>\r\n                    <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardNumber}\r\n                        onInput={event => this.handleNumberInput('cardNumber', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group row p-0 align-items-center\">\r\n                    <label class=\"p-0 m-0\">Card holder name</label>\r\n                    <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardHolderName}\r\n                        onInput={event => this.handleDataChange('cardHolderName', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group row p-0 align-items-center\">\r\n                    <label class=\"p-0 m-0\">Expiry Date</label>\r\n                    <div class=\"p-0 m-0 row pr-1 controlContainer\">\r\n                      <div class=\"p-0 m-0\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryMonth', event)}>\r\n                          {this.expiryMonths.map(month => (\r\n                            <option value={month} selected={month === this.bookedByData.expiryMonth}>\r\n                              {month}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"p-0 m-0 ml-1\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryYear', event)}>\r\n                          {this.expiryYears.map((year, index) => (\r\n                            <option value={year} selected={index === this.bookedByData.expiryYear}>\r\n                              {year}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../../assets/feather/style.min.css\");\r\n@import url(\"../../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.guestTitle {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  padding: 2px;\r\n  margin-bottom: 5px;\r\n  margin-top: 5px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  /* margin-bottom: 5px; */\r\n}\r\n\r\n.guestTitle.selectedOrder {\r\n  background-color: #f9f9c9;\r\n}\r\n\r\n.pointer {\r\n  cursor: pointer;\r\n}\r\n\r\nhr {\r\n  margin-top: 8px;\r\n  margin-bottom: 0px;\r\n}\r\n\r\n.bookingContainer {\r\n  background-color: #ececec;\r\n}\r\n\r\n.actionsContainer {\r\n  padding: 5px !important;\r\n  padding-right: 0px !important;\r\n}\r\n\r\n.selectContainer {\r\n  width: 195px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.buttonsContainer {\r\n  width: 100px;\r\n}\r\n.btn-secondary {\r\n  margin-right: 8px !important;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter, Listen, State } from '@stencil/core';\r\nimport { ToBeAssignedService } from '../../../../services/toBeAssigned.service';\r\nimport { v4 } from 'uuid';\r\nimport { BookingService } from '../../../../services/booking.service';\r\nimport { transformNewBooking } from '../../../../utils/booking';\r\n// import $ from 'jquery';\r\n\r\n@Component({\r\n  tag: 'igl-tba-booking-view',\r\n  styleUrl: 'igl-tba-booking-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglTbaBookingView {\r\n  // @Element() private element: HTMLElement;\r\n  @Event({ bubbles: true, composed: true })\r\n  highlightToBeAssignedBookingEvent: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) addToBeAssignedEvent: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) scrollPageToRoom: EventEmitter;\r\n  @Event() assignRoomEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() selectedDate;\r\n  @Prop() eventData: { [key: string]: any } = {};\r\n  @Prop() categoriesData: { [key: string]: any } = {};\r\n  @Prop() categoryId;\r\n  @Prop() categoryIndex;\r\n  @Prop() eventIndex;\r\n  @State() renderAgain: boolean = false;\r\n\r\n  @State() selectedRoom: number = -1;\r\n  private highlightSection: boolean = false;\r\n  private allRoomsList: { [key: string]: any }[] = [];\r\n  private toBeAssignedService = new ToBeAssignedService();\r\n  private bookingService = new BookingService();\r\n  onSelectRoom(evt) {\r\n    if (evt.stopImmediatePropagation) {\r\n      evt.stopImmediatePropagation();\r\n      evt.stopPropagation();\r\n    }\r\n    this.selectedRoom = parseInt(evt.target.value);\r\n  }\r\n\r\n  // componentDidLoad(){\r\n  //   this.initializeToolTips();\r\n  // }\r\n\r\n  componentShouldUpdate(newValue: string, oldValue: string, propName: string): boolean {\r\n    if (propName === 'selectedDate' && newValue !== oldValue) {\r\n      this.highlightSection = false;\r\n      this.selectedRoom = -1;\r\n      return true; // Prevent update for a specific prop value\r\n    } else if (propName === 'eventData' && newValue !== oldValue) {\r\n      this.selectedRoom = -1;\r\n      return true;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentWillLoad() {\r\n    if (this.categoryIndex === 0 && this.eventIndex === 0) {\r\n      setTimeout(() => {\r\n        this.handleHighlightAvailability();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  // initializeToolTips(){\r\n  // console.log($(this.element));\r\n  // console.log($('[data-toggle=\"tooltip\"]'))\r\n  // console.log($(this.element + ' [data-toggle=\"tooltip\"]'));\r\n\r\n  // $('[data-toggle=\"tooltip\"]').tooltip({\r\n  //   container: 'body'\r\n  // });\r\n  // }\r\n  //\r\n  async handleAssignUnit(event) {\r\n    try {\r\n      event.stopImmediatePropagation();\r\n      event.stopPropagation();\r\n      if (this.selectedRoom) {\r\n        await this.toBeAssignedService.assignUnit(this.eventData.BOOKING_NUMBER, this.eventData.ID, this.selectedRoom);\r\n        const booking = await this.bookingService.getExoposedBooking(this.eventData.BOOKING_NUMBER, 'en');\r\n        let assignEvent = transformNewBooking(booking);\r\n        const newEvent = { ...this.eventData, ...assignEvent[0] };\r\n        this.calendarData.bookingEvents.push(newEvent);\r\n        //console.log(newEvent);\r\n        this.addToBeAssignedEvent.emit({\r\n          key: 'tobeAssignedEvents',\r\n          data: [newEvent],\r\n        });\r\n        this.assignRoomEvent.emit({ key: 'assignRoom', data: newEvent });\r\n      }\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleHighlightAvailability() {\r\n    this.highlightToBeAssignedBookingEvent.emit({\r\n      key: 'highlightBookingId',\r\n      data: { bookingId: this.eventData.ID },\r\n    });\r\n    if (!this.selectedDate) {\r\n      return;\r\n    }\r\n    let filteredEvents = [];\r\n    let allRoomsList = [];\r\n    filteredEvents = this.eventData.availableRooms.map(room => {\r\n      allRoomsList.push({\r\n        calendar_cell: null,\r\n        id: room.PR_ID,\r\n        name: room.roomName,\r\n      });\r\n      return {\r\n        ...room,\r\n        defaultDateRange: this.eventData.defaultDateRange,\r\n        identifier: this.eventData.identifier,\r\n        // roomsInfo: this.eventData.roomsInfo,\r\n        // legendData: this.eventData.legendData,\r\n      };\r\n    });\r\n    this.allRoomsList = allRoomsList;\r\n    this.addToBeAssignedEvent.emit({\r\n      key: 'tobeAssignedEvents',\r\n      data: filteredEvents,\r\n    });\r\n\r\n    this.scrollPageToRoom.emit({\r\n      key: 'scrollPageToRoom',\r\n      id: this.categoryId,\r\n      refClass: 'category_' + this.categoryId,\r\n    });\r\n    // ID: \"NEW_TEMP_EVENT\",\r\n    // STATUS: \"PENDING_CONFIRMATION\"\r\n    this.renderView();\r\n  }\r\n\r\n  handleCloseAssignment(event) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    this.highlightSection = false;\r\n    this.highlightToBeAssignedBookingEvent.emit({\r\n      key: 'highlightBookingId',\r\n      data: { bookingId: '----' },\r\n    });\r\n    this.onSelectRoom({ target: { value: '' } });\r\n    this.addToBeAssignedEvent.emit({ key: 'tobeAssignedEvents', data: [] });\r\n    this.renderView();\r\n  }\r\n\r\n  @Listen('highlightToBeAssignedBookingEvent', { target: 'window' })\r\n  highlightBookingEvent(event: CustomEvent) {\r\n    let data = event.detail.data;\r\n    if (data.bookingId != this.eventData.ID) {\r\n      this.highlightSection = false;\r\n      this.selectedRoom = -1;\r\n      this.renderView();\r\n    } else {\r\n      this.highlightSection = true;\r\n      this.renderView();\r\n    }\r\n  }\r\n\r\n  renderView() {\r\n    this.renderAgain = !this.renderAgain;\r\n    // this.initializeToolTips();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"bookingContainer\" onClick={() => this.handleHighlightAvailability()}>\r\n          <div\r\n            class={`guestTitle ${this.highlightSection ? 'selectedOrder' : ''} pointer font-small-3`}\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            data-original-title=\"Click to assign unit\"\r\n          >\r\n            {`Book# ${this.eventData.BOOKING_NUMBER} , ${this.eventData.NAME}`}\r\n          </div>\r\n          <div class=\"row m-0 p-0 actionsContainer\">\r\n            <div class=\"d-inline-block p-0 selectContainer\">\r\n              <select class=\"form-control input-sm\" id={v4()} onChange={evt => this.onSelectRoom(evt)}>\r\n                <option value=\"\" selected={this.selectedRoom == -1}>\r\n                  Assign unit\r\n                </option>\r\n                {this.allRoomsList.map(room => (\r\n                  <option value={room.id} selected={this.selectedRoom == room.id}>\r\n                    {room.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            {this.highlightSection ? (\r\n              <div class=\"d-inline-block text-right buttonsContainer\">\r\n                <button type=\"button\" class=\"btn btn-secondary btn-sm\" onClick={evt => this.handleCloseAssignment(evt)}>\r\n                  X\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-sm\" onClick={evt => this.handleAssignUnit(evt)} disabled={this.selectedRoom === -1}>\r\n                  Assign\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../../assets/feather/style.min.css\");\r\n@import url(\"../../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Prop,\r\n  State,\r\n  h,\r\n  Event,\r\n  EventEmitter,\r\n} from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"igl-tba-category-view\",\r\n  styleUrl: \"igl-tba-category-view.css\",\r\n  scoped: true,\r\n})\r\nexport class IglTbaCategoryView {\r\n  @Event() assignUnitEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() selectedDate;\r\n  @Prop() categoriesData: { [key: string]: any } = {};\r\n  @Prop() categoryId;\r\n  @Prop({ mutable: true }) eventDatas;\r\n  @Prop() categoryIndex;\r\n  @State() renderAgain: boolean = false;\r\n\r\n  // private localEventDatas;\r\n\r\n  componentWillLoad() {\r\n    // this.localEventDatas = this.eventDatas;\r\n  }\r\n\r\n  handleAssignRoomEvent(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.eventDatas = this.eventDatas.filter(\r\n      (eventData) => eventData.ID != opt.data.ID\r\n    );\r\n    this.calendarData.bookingEvents.push(opt.data);\r\n    this.assignUnitEvent.emit({\r\n      key: \"assignUnit\",\r\n      data: {\r\n        RT_ID: this.categoryId,\r\n        selectedDate: this.selectedDate,\r\n        assignEvent: opt.data,\r\n        calendarData: this.calendarData,\r\n      },\r\n    });\r\n    // if(this.localEventDatas.length){\r\n    this.renderView();\r\n    // }\r\n  }\r\n\r\n  getEventView(categoryId, eventDatas) {\r\n    return eventDatas.map((eventData, ind) => (\r\n      <igl-tba-booking-view\r\n        calendarData={this.calendarData}\r\n        selectedDate={this.selectedDate}\r\n        eventData={eventData}\r\n        categoriesData={this.categoriesData}\r\n        categoryId={categoryId}\r\n        categoryIndex={this.categoryIndex}\r\n        eventIndex={ind}\r\n        onAssignRoomEvent={(evt) => this.handleAssignRoomEvent(evt)}\r\n      ></igl-tba-booking-view>\r\n    ));\r\n  }\r\n\r\n  renderView() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"sectionContainer\">\r\n          <div class=\"font-weight-bold mt-1 font-small-3\">\r\n            {this.categoriesData[this.categoryId].name}\r\n          </div>\r\n          {this.getEventView(this.categoryId, this.eventDatas)}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.tobeAssignedHeader {\r\n  font-weight: 500;\r\n  letter-spacing: 0.05rem;\r\n  font-size: 1.12rem;\r\n  padding-top: 5px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.closeBtn {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  font-size: 1.75em;\r\n  line-height: 1em;\r\n  padding: 0.4rem;\r\n}\r\n\r\n.closeBtn:hover {\r\n  background-color: #f6f6f6;\r\n}\r\n\r\n.stickyHeader {\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: #ffffff;\r\n  z-index: 1;\r\n}\r\n\r\n.pointer {\r\n  cursor: pointer;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Listen, Fragment } from '@stencil/core';\r\nimport { ToBeAssignedService } from '../../../services/toBeAssigned.service';\r\nimport { dateToFormattedString } from '../../../utils/utils';\r\n//import { updateCategories } from '../../../utils/events.utils';\r\n\r\n@Component({\r\n  tag: 'igl-to-be-assigned',\r\n  styleUrl: 'igl-to-be-assigned.css',\r\n  scoped: true,\r\n})\r\nexport class IglToBeAssigned {\r\n  @Prop() propertyid: number;\r\n  @Prop() from_date: string;\r\n  @Prop() to_date: string;\r\n  @Prop() loadingMessage: string = 'Fetching unassigned units';\r\n  @Prop({ mutable: true }) calendarData: { [key: string]: any };\r\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event({ bubbles: true, composed: true })\r\n  reduceAvailableUnitEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() showBookingPopup: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) addToBeAssignedEvent: EventEmitter;\r\n  @Event({ bubbles: true, composed: true })\r\n  highlightToBeAssignedBookingEvent: EventEmitter;\r\n  @State() showDatesList: boolean = false;\r\n  @State() renderAgain: boolean = false;\r\n  @State() orderedDatesList: any[] = [];\r\n  @State() isGotoToBeAssignedDate: boolean;\r\n  @State() isLoading: boolean = true;\r\n  private selectedDate = null;\r\n  private data: { [key: string]: any } = {};\r\n  private today = new Date();\r\n  private categoriesData: { [key: string]: any } = {};\r\n  private toBeAssignedService: ToBeAssignedService = new ToBeAssignedService();\r\n  private unassignedDates: any;\r\n  componentWillLoad() {\r\n    this.reArrangeData();\r\n  }\r\n  async updateCategories(key, calendarData) {\r\n    try {\r\n      let categorisedRooms = {};\r\n      const result = await this.toBeAssignedService.getUnassignedRooms(\r\n        this.propertyid,\r\n        dateToFormattedString(new Date(+key)),\r\n        calendarData.roomsInfo,\r\n        calendarData.formattedLegendData,\r\n      );\r\n      result.forEach(room => {\r\n        if (!categorisedRooms.hasOwnProperty(room.RT_ID)) {\r\n          categorisedRooms[room.RT_ID] = [room];\r\n        } else {\r\n          categorisedRooms[room.RT_ID].push(room);\r\n        }\r\n      });\r\n      this.unassignedDates[key].categories = categorisedRooms;\r\n    } catch (error) {\r\n      //  toastr.error(error);\r\n    }\r\n  }\r\n\r\n  async reArrangeData() {\r\n    try {\r\n      this.today.setHours(0, 0, 0, 0);\r\n      this.calendarData.roomsInfo.forEach(category => {\r\n        this.categoriesData[category.id] = {\r\n          name: category.name,\r\n          roomsList: category.physicalrooms,\r\n          roomIds: category.physicalrooms.map(room => {\r\n            return room.id;\r\n          }),\r\n        };\r\n      });\r\n\r\n      this.selectedDate = null;\r\n      //this.unassignedDates = await this.toBeAssignedService.getUnassignedDates(this.propertyid, dateToFormattedString(new Date()), this.to_date);\r\n      this.unassignedDates = this.calendarData.unassignedDates;\r\n\r\n      this.data = this.unassignedDates;\r\n      this.orderedDatesList = Object.keys(this.data).sort((a, b) => parseInt(a) - parseInt(b));\r\n\r\n      if (!this.selectedDate && this.orderedDatesList.length) {\r\n        this.selectedDate = this.orderedDatesList[0];\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching unassigned dates:', error);\r\n      //  toastr.error(error);\r\n    }\r\n  }\r\n  async componentDidLoad() {\r\n    if (!this.isGotoToBeAssignedDate && Object.keys(this.unassignedDates).length > 0) {\r\n      const firstKey = Object.keys(this.unassignedDates)[0];\r\n      this.showForDate(firstKey);\r\n    }\r\n  }\r\n  @Listen('gotoToBeAssignedDate', { target: 'window' })\r\n  async gotoDate(event: CustomEvent) {\r\n    this.isGotoToBeAssignedDate = true;\r\n    this.showForDate(event.detail.data);\r\n    this.showDatesList = false;\r\n    this.renderView();\r\n  }\r\n\r\n  async showForDate(dateStamp) {\r\n    try {\r\n      this.isLoading = true;\r\n      if (this.showDatesList) {\r\n        this.showUnassignedDate();\r\n      }\r\n      await this.updateCategories(dateStamp, this.calendarData);\r\n      this.addToBeAssignedEvent.emit({ key: 'tobeAssignedEvents', data: [] });\r\n      this.showBookingPopup.emit({\r\n        key: 'calendar',\r\n        data: parseInt(dateStamp) - 86400000,\r\n      });\r\n      if (this.isGotoToBeAssignedDate) {\r\n        this.isGotoToBeAssignedDate = false;\r\n      }\r\n      this.isLoading = false;\r\n      this.selectedDate = dateStamp;\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  getDay(dt) {\r\n    const currentDate = new Date(dt);\r\n    const locale = 'default'; //'en-US';\r\n    const dayOfWeek = this.getLocalizedDayOfWeek(currentDate, locale);\r\n    // const monthName = currentDate.toLocaleString(\"default\", { month: 'short' })\r\n    return dayOfWeek + ' ' + currentDate.getDate() + ', ' + currentDate.getFullYear();\r\n  }\r\n\r\n  getLocalizedDayOfWeek(date, locale) {\r\n    const options = { weekday: 'short' };\r\n    return date.toLocaleDateString(locale, options);\r\n  }\r\n\r\n  handleOptionEvent(key, data = '') {\r\n    this.highlightToBeAssignedBookingEvent.emit({\r\n      key: 'highlightBookingId',\r\n      data: { bookingId: '----' },\r\n    });\r\n    this.addToBeAssignedEvent.emit({ key: 'tobeAssignedEvents', data: [] });\r\n    this.optionEvent.emit({ key, data });\r\n  }\r\n\r\n  showUnassignedDate() {\r\n    this.showDatesList = !this.showDatesList;\r\n  }\r\n\r\n  getToBeAssignedEntities() {\r\n    // toBeAssignedEvents\r\n  }\r\n\r\n  getCategoryView() {\r\n    if (this.orderedDatesList.length && this.selectedDate && this.data[this.selectedDate]) {\r\n      return Object.entries(this.data[this.selectedDate].categories).map(([id, eventDatas], ind) => (\r\n        <igl-tba-category-view\r\n          calendarData={this.calendarData}\r\n          selectedDate={this.selectedDate}\r\n          categoryId={id}\r\n          categoryIndex={ind}\r\n          categoriesData={this.categoriesData}\r\n          eventDatas={eventDatas}\r\n          onAssignUnitEvent={evt => this.handleAssignUnit(evt)}\r\n        ></igl-tba-category-view>\r\n      ));\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  handleAssignUnit(event: CustomEvent<{ [key: string]: any }>) {\r\n    const opt: { [key: string]: any } = event.detail;\r\n    const data = opt.data;\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n\r\n    if (opt.key === 'assignUnit') {\r\n      // this.data[data.selectedDate].categories[data.RT_ID] = this.data[data.selectedDate].categories[data.RT_ID].filter(eventData => eventData.ID != data.assignEvent.ID);\r\n      // // this.calendarData = data.calendarData; // RAJA\r\n      // // this.calendarData.bookingEvents.push(data.assignEvent);\r\n\r\n      // if (!this.data[data.selectedDate].categories[data.RT_ID].length) {\r\n      //   delete this.data[data.selectedDate].categories[data.RT_ID];\r\n\r\n      //   if (!Object.keys(this.data[data.selectedDate].categories).length) {\r\n      //     delete this.data[data.selectedDate];\r\n      //     this.orderedDatesList = this.orderedDatesList.filter(dateStamp => dateStamp != data.selectedDate);\r\n      //     this.selectedDate = this.orderedDatesList.length ? this.orderedDatesList[0] : null;\r\n      //   }\r\n      // }\r\n\r\n      this.reduceAvailableUnitEvent.emit({\r\n        key: 'reduceAvailableDays',\r\n        data: { selectedDate: data.selectedDate },\r\n      });\r\n      this.renderView();\r\n    }\r\n  }\r\n\r\n  renderView() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"tobeAssignedContainer pr-1 text-left\">\r\n        <div>\r\n          <div>\r\n            <div class=\"stickyHeader\">\r\n              <div class=\"tobeAssignedHeader pt-1\">Assignments</div>\r\n              <div class=\"closeBtn pt-1\" onClick={() => this.handleOptionEvent('closeSideMenu')}>\r\n                <i class=\"ft-chevrons-left\"></i>\r\n              </div>\r\n              <hr />\r\n              {this.isLoading ? (\r\n                <p>{this.loadingMessage}</p>\r\n              ) : (\r\n                <Fragment>\r\n                  {this.orderedDatesList.length ? (\r\n                    <div class={`text-center ` + (this.showDatesList ? 'show' : '')}>\r\n                      <div onClick={() => this.showUnassignedDate()}>\r\n                        <span class=\"font-weight-bold\">{this.data[this.selectedDate].dateStr}</span>\r\n                        <i class=\"la la-angle-down ml-2\"></i>\r\n                      </div>\r\n                      {this.showDatesList ? (\r\n                        <div class=\"dropdown-menu dropdown-menu-right full-width\">\r\n                          {this.orderedDatesList.map(ordDate => (\r\n                            <div class=\"pointer dropdown-item pointer\" onClick={() => this.showForDate(ordDate)}>\r\n                              {this.data[ordDate].dateStr}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  ) : (\r\n                    'All bookings assigned'\r\n                  )}\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n            {!this.isLoading && (\r\n              <div class=\"scrollabledArea\">\r\n                {this.orderedDatesList.length ? (\r\n                  Object.keys(this.data[this.selectedDate].categories).length ? (\r\n                    this.getCategoryView()\r\n                  ) : (\r\n                    <div class=\"mt-1\">All assigned for this day.</div>\r\n                  )\r\n                ) : null}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport class RoomService {\r\n  public async fetchData(\r\n    id: number,\r\n    language: string\r\n  ): Promise<{ [key: string]: any }> {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem(\"token\"));\r\n      if (token !== null) {\r\n        const { data } = await axios.post(\r\n          `/Get_Exposed_Property?Ticket=${token}`,\r\n          { id, language }\r\n        );\r\n        if (data.ExceptionMsg !== \"\") {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n}\r\n","@import url('../../assets/feather/style.min.css');\r\n@import url('../../assets/fontawesome/css/all.css');\r\n@import url('../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  display: block;\r\n  position: relative;\r\n  background-color: #ffffff;\r\n  height: 100%;\r\n  text-align: center;\r\n}\r\n\r\n.igl-calendar {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  height: 100%;\r\n}\r\n\r\n.calendarScrollContainer div {\r\n  position: relative;\r\n}\r\n\r\n.calendarScrollContainer {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  position: relative;\r\n  white-space: nowrap;\r\n  border-left: 2px solid grey;\r\n}\r\n\r\n.showToBeAssigned,\r\n.showLegend {\r\n  grid-template-columns: 330px 1fr;\r\n}\r\n\r\n#calendarContainer {\r\n  position: absolute;\r\n}\r\n\r\ndiv {\r\n  position: relative;\r\n}\r\n\r\n.legendContainer,\r\n.tobeAssignedContainer {\r\n  display: none;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding-left: 0.5em !important;\r\n  padding-right: 0.5em !important;\r\n}\r\n\r\n.showToBeAssigned .tobeAssignedContainer {\r\n  display: block;\r\n}\r\n\r\n.showLegend .legendContainer {\r\n  display: block;\r\n}\r\n\r\n.tobeBooked {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  text-align: left;\r\n}\r\n","import { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\r\nimport { RoomService } from '../../services/room.service';\r\nimport { BookingService } from '../../services/booking.service';\r\nimport { computeEndDate, convertDMYToISO, dateToFormattedString, formatLegendColors } from '../../utils/utils';\r\n\r\nimport axios from 'axios';\r\nimport { EventsService } from '../../services/events.service';\r\nimport { ICountry, RoomBlockDetails, RoomBookingDetails } from '../../models/IBooking';\r\nimport moment from 'moment';\r\nimport { ToBeAssignedService } from '../../services/toBeAssigned.service';\r\n\r\n@Component({\r\n  tag: 'igloo-calendar',\r\n  styleUrl: 'igloo-calendar.css',\r\n  scoped: true,\r\n})\r\nexport class IglooCalendar {\r\n  @Prop() propertyid: number;\r\n  @Prop() from_date: string;\r\n  @Prop() to_date: string;\r\n  @Prop() language: string;\r\n  @Prop() baseurl: string;\r\n  @Prop() loadingMessage: string;\r\n  @Prop() currencyName: string;\r\n  @Prop({ reflect: true }) ticket: string = '';\r\n  @Element() private element: HTMLElement;\r\n  @Event({ bubbles: true, composed: true })\r\n  dragOverHighlightElement: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) moveBookingTo: EventEmitter;\r\n\r\n  @State() calendarData: { [key: string]: any } = new Object();\r\n  @State() days: { [key: string]: any }[] = new Array();\r\n  @State() scrollViewDragging: boolean = false;\r\n\r\n  @State() bookingItem: { [key: string]: any } = null;\r\n  @State() showLegend: boolean = false;\r\n  @State() showPaymentDetails: boolean = false;\r\n  @State() showToBeAssigned: boolean = false;\r\n  private bookingService: BookingService = new BookingService();\r\n  private countryNodeList: ICountry[] = [];\r\n  private visibleCalendarCells: { x: any[]; y: any[] } = { x: [], y: [] };\r\n  private scrollContainer: HTMLElement;\r\n  private today: String = '';\r\n  private roomService: RoomService = new RoomService();\r\n  private eventsService = new EventsService();\r\n  private toBeAssignedService = new ToBeAssignedService();\r\n  @Watch('ticket')\r\n  async ticketChanged() {\r\n    sessionStorage.setItem('token', JSON.stringify(this.ticket));\r\n    this.initializeApp();\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    if (this.baseurl) {\r\n      axios.defaults.baseURL = this.baseurl;\r\n    }\r\n    if (this.ticket !== '') {\r\n      this.initializeApp();\r\n    }\r\n  }\r\n  initializeApp() {\r\n    try {\r\n      this.roomService.fetchData(this.propertyid, this.language).then(roomResp => {\r\n        this.setRoomsData(roomResp);\r\n        this.bookingService.getCalendarData(this.propertyid, this.from_date, this.to_date).then(async bookingResp => {\r\n          this.countryNodeList = await this.bookingService.getCountries(this.language);\r\n          this.calendarData.currency = roomResp['My_Result'].currency;\r\n          this.calendarData.legendData = this.getLegendData(roomResp);\r\n          this.calendarData.is_vacation_rental = roomResp['My_Result'].is_vacation_rental;\r\n          if (!this.calendarData.is_vacation_rental) {\r\n            this.calendarData.unassignedDates = await this.toBeAssignedService.getUnassignedDates(this.propertyid, dateToFormattedString(new Date()), this.to_date);\r\n          }\r\n          this.calendarData.startingDate = new Date(bookingResp.My_Params_Get_Rooming_Data.FROM).getTime();\r\n          this.calendarData.endingDate = new Date(bookingResp.My_Params_Get_Rooming_Data.TO).getTime();\r\n          this.calendarData.formattedLegendData = formatLegendColors(this.calendarData.legendData);\r\n          this.calendarData.bookingEvents = bookingResp.myBookings || [];\r\n          this.calendarData.toBeAssignedEvents = [];\r\n          let paymentMethods = roomResp['My_Result']['allowed_payment_methods'] as any[];\r\n          this.showPaymentDetails = paymentMethods.some(item => item.code === '001' || item.code === '004');\r\n          this.updateBookingEventsDateRange(this.calendarData.bookingEvents);\r\n          this.updateBookingEventsDateRange(this.calendarData.toBeAssignedEvents);\r\n          this.today = this.transformDateForScroll(new Date());\r\n          let startingDay: Date = new Date(this.getStartingDateOfCalendar());\r\n          startingDay.setHours(0, 0, 0, 0);\r\n          this.days = bookingResp.days;\r\n          this.calendarData.days = this.days;\r\n          this.calendarData.monthsInfo = bookingResp.months;\r\n          setTimeout(() => {\r\n            this.scrollToElement(this.today);\r\n          }, 200);\r\n        });\r\n      });\r\n    } catch (error) {}\r\n  }\r\n  componentDidLoad() {\r\n    this.scrollToElement(this.today);\r\n  }\r\n  @Listen('deleteButton')\r\n  async handledeleteEvent(ev: CustomEvent) {\r\n    try {\r\n      ev.stopImmediatePropagation();\r\n      ev.preventDefault();\r\n      const bookingEvent = [...this.calendarData.bookingEvents];\r\n      await this.eventsService.deleteEvent(ev.detail);\r\n\r\n      this.calendarData = {\r\n        ...this.calendarData,\r\n        bookingEvents: bookingEvent.filter(e => e.POOL !== ev.detail),\r\n      };\r\n    } catch (error) {\r\n      //toastr.error(error);\r\n    }\r\n  }\r\n\r\n  updateBookingEventsDateRange(eventData) {\r\n    eventData.forEach(bookingEvent => {\r\n      bookingEvent.legendData = this.calendarData.formattedLegendData;\r\n      bookingEvent.defaultDateRange = {};\r\n      bookingEvent.defaultDateRange.fromDate = new Date(bookingEvent.FROM_DATE + 'T00:00:00');\r\n      bookingEvent.defaultDateRange.fromDateStr = this.getDateStr(bookingEvent.defaultDateRange.fromDate);\r\n      bookingEvent.defaultDateRange.fromDateTimeStamp = bookingEvent.defaultDateRange.fromDate.getTime();\r\n\r\n      bookingEvent.defaultDateRange.toDate = new Date(bookingEvent.TO_DATE + 'T00:00:00');\r\n      bookingEvent.defaultDateRange.toDateStr = this.getDateStr(bookingEvent.defaultDateRange.toDate);\r\n      bookingEvent.defaultDateRange.toDateTimeStamp = bookingEvent.defaultDateRange.toDate.getTime();\r\n\r\n      bookingEvent.defaultDateRange.dateDifference = bookingEvent.NO_OF_DAYS; // (bookingEvent.defaultDateRange.toDate.getTime() - bookingEvent.defaultDateRange.fromDate.getTime())/(86400000);\r\n      bookingEvent.roomsInfo = [...this.calendarData.roomsInfo];\r\n    });\r\n  }\r\n  setRoomsData(roomServiceResp) {\r\n    let roomsData: { [key: string]: any }[] = new Array();\r\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\r\n      roomsData = roomServiceResp.My_Result.roomtypes;\r\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\r\n        roomCategory.expanded = true;\r\n      });\r\n    }\r\n    this.calendarData.roomsInfo = roomsData;\r\n  }\r\n\r\n  getLegendData(aData) {\r\n    return aData['My_Result'].calendar_legends;\r\n  }\r\n\r\n  getStartingDateOfCalendar() {\r\n    return this.calendarData.startingDate;\r\n  }\r\n\r\n  getEndingDateOfCalendar() {\r\n    return this.calendarData.endingDate;\r\n  }\r\n\r\n  getDay(dt) {\r\n    const currentDate = new Date(dt);\r\n    const locale = 'en-US';\r\n    const dayOfWeek = this.getLocalizedDayOfWeek(currentDate, locale);\r\n    return dayOfWeek + ' ' + currentDate.getDate();\r\n  }\r\n\r\n  getLocalizedDayOfWeek(date, locale) {\r\n    const options = { weekday: 'short' };\r\n    return date.toLocaleDateString(locale, options);\r\n  }\r\n\r\n  getLocalizedMonth(date, locale = 'default') {\r\n    return date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\r\n  }\r\n\r\n  getDateStr(date, locale = 'default') {\r\n    return date.getDate() + ' ' + date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\r\n  }\r\n\r\n  scrollToElement(goToDate) {\r\n    console.log(goToDate);\r\n    this.scrollContainer = this.scrollContainer || this.element.querySelector('.calendarScrollContainer');\r\n    const topLeftCell = this.element.querySelector('.topLeftCell');\r\n    const gotoDay = this.element.querySelector('.day-' + goToDate);\r\n    if (gotoDay) {\r\n      this.scrollContainer.scrollTo({ left: 0 });\r\n      const gotoRect = gotoDay.getBoundingClientRect();\r\n      const containerRect = this.scrollContainer.getBoundingClientRect();\r\n      const topLeftCellRect = topLeftCell.getBoundingClientRect();\r\n      this.scrollContainer.scrollTo({\r\n        left: gotoRect.left - containerRect.left - topLeftCellRect.width - gotoRect.width,\r\n      });\r\n    }\r\n  }\r\n  @Listen('bookingCreated')\r\n  onBookingCreation(event: CustomEvent<RoomBookingDetails[]>) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    this.updateBookingEventsDateRange(event.detail);\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: [...this.calendarData.bookingEvents, ...event.detail],\r\n    };\r\n    setTimeout(() => {\r\n      this.scrollToElement(this.transformDateForScroll(new Date(event.detail[0].FROM_DATE)));\r\n    }, 200);\r\n  }\r\n  @Listen('blockedCreated')\r\n  onBlockCreation(event: CustomEvent<RoomBlockDetails>) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    this.updateBookingEventsDateRange([event.detail]);\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: [...this.calendarData.bookingEvents, event.detail],\r\n    };\r\n    // setTimeout(() => {\r\n    //   this.scrollToElement(this.transformDateForScroll(new Date(event.detail.FROM_DATE)));\r\n    // }, 200);\r\n  }\r\n  private transformDateForScroll(date: Date) {\r\n    return moment(date).format('D_M_YYYY');\r\n  }\r\n  @Listen('scrollPageToRoom', { target: 'window' })\r\n  scrollPageToRoom(event: CustomEvent) {\r\n    let targetScrollClass = event.detail.refClass;\r\n    this.scrollContainer = this.scrollContainer || this.element.querySelector('.calendarScrollContainer');\r\n    const topLeftCell = this.element.querySelector('.topLeftCell');\r\n    const gotoRoom = this.element.querySelector('.' + targetScrollClass);\r\n    if (gotoRoom) {\r\n      this.scrollContainer.scrollTo({ top: 0 });\r\n      const gotoRect = gotoRoom.getBoundingClientRect();\r\n      const containerRect = this.scrollContainer.getBoundingClientRect();\r\n      const topLeftCellRect = topLeftCell.getBoundingClientRect();\r\n      this.scrollContainer.scrollTo({\r\n        top: gotoRect.top - containerRect.top - topLeftCellRect.height - gotoRect.height,\r\n      });\r\n    }\r\n  }\r\n\r\n  shouldRenderCalendarView() {\r\n    // console.log(\"rendering...\")\r\n    return this.calendarData && this.calendarData.days && this.calendarData.days.length;\r\n  }\r\n\r\n  onOptionSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    const opt: { [key: string]: any } = event.detail;\r\n    const calendarElement = this.element.querySelector('#iglooCalendar');\r\n    switch (opt.key) {\r\n      case 'showAssigned':\r\n        calendarElement.classList.remove('showLegend');\r\n        calendarElement.classList.remove('showToBeAssigned');\r\n        calendarElement.classList.toggle('showToBeAssigned');\r\n\r\n        this.showLegend = false;\r\n        this.showToBeAssigned = true;\r\n        break;\r\n      case 'showLegend':\r\n        calendarElement.classList.remove('showToBeAssigned');\r\n        calendarElement.classList.remove('showLegend');\r\n        calendarElement.classList.toggle('showLegend');\r\n\r\n        this.showLegend = true;\r\n        this.showToBeAssigned = false;\r\n        break;\r\n      case 'calendar':\r\n        let dt = new Date(opt.data);\r\n        this.scrollToElement(dt.getDate() + '_' + (dt.getMonth() + 1) + '_' + dt.getFullYear());\r\n        break;\r\n      case 'search':\r\n        break;\r\n      case 'add':\r\n        this.bookingItem = opt.data;\r\n        break;\r\n      case 'gotoToday':\r\n        this.scrollToElement(this.today);\r\n        break;\r\n      case 'closeSideMenu':\r\n        this.closeSideMenu();\r\n        break;\r\n    }\r\n  }\r\n\r\n  closeSideMenu() {\r\n    const calendarElement = this.element.querySelector('#iglooCalendar');\r\n    calendarElement.classList.remove('showToBeAssigned');\r\n    calendarElement.classList.remove('showLegend');\r\n\r\n    this.showLegend = false;\r\n    this.showToBeAssigned = false;\r\n  }\r\n\r\n  scrollViewDragPos = { top: 0, left: 0, x: 0, y: 0 };\r\n  dragScrollContent(event: MouseEvent) {\r\n    this.scrollViewDragging = false;\r\n    let isPreventPageScroll = event && event.target ? this.hasAncestorWithClass(event.target as HTMLElement, 'preventPageScroll') : false;\r\n    if (!isPreventPageScroll) {\r\n      this.scrollViewDragPos = {\r\n        // The current scroll\r\n        left: this.scrollContainer.scrollLeft,\r\n        top: this.scrollContainer.scrollTop,\r\n        // Get the current mouse position\r\n        x: event.clientX,\r\n        y: event.clientY,\r\n      };\r\n      document.addEventListener('mousemove', this.onScrollContentMoveHandler);\r\n      document.addEventListener('mouseup', this.onScrollContentMoveEndHandler);\r\n    }\r\n  }\r\n\r\n  onScrollContentMoveHandler: EventListener = (event: MouseEvent) => {\r\n    // How far the mouse has been moved\r\n    const dx = event.clientX - this.scrollViewDragPos.x;\r\n    const dy = event.clientY - this.scrollViewDragPos.y;\r\n\r\n    // Scroll the element\r\n    this.scrollContainer.scrollTop = this.scrollViewDragPos.top - dy;\r\n    this.scrollContainer.scrollLeft = this.scrollViewDragPos.left - dx;\r\n    if (Math.abs(dx) > 5 || Math.abs(dy) > 5) {\r\n      this.scrollViewDragging = true;\r\n    }\r\n  };\r\n\r\n  onScrollContentMoveEndHandler: EventListener = () => {\r\n    document.removeEventListener('mousemove', this.onScrollContentMoveHandler);\r\n    document.removeEventListener('mouseup', this.onScrollContentMoveEndHandler);\r\n  };\r\n\r\n  calendarScrolling() {\r\n    const containerRect = this.scrollContainer.getBoundingClientRect();\r\n    let leftSideMenuSize = 170;\r\n    let maxWidth = containerRect.width - leftSideMenuSize;\r\n    let leftX = containerRect.x + leftSideMenuSize;\r\n    let rightX = containerRect.x + containerRect.width;\r\n\r\n    let cells = Array.from(this.element.querySelectorAll('.monthCell')) as HTMLElement[];\r\n\r\n    if (cells.length) {\r\n      cells.map((monthContainer: HTMLElement) => {\r\n        let monthRect = monthContainer.getBoundingClientRect();\r\n        if (monthRect.x + monthRect.width < leftX) {\r\n          // item end is scrolled outside view, in -x\r\n        } else if (monthRect.x > rightX) {\r\n          // item is outside scrollview, in +x\r\n        } else {\r\n          let titleElement = monthContainer.querySelector('.monthTitle') as HTMLElement;\r\n          let marginLeft = 0;\r\n          let monthWidth = monthRect.width;\r\n          if (monthRect.x < leftX) {\r\n            marginLeft = Math.abs(monthRect.x) - leftX;\r\n            marginLeft = monthRect.x < 0 ? Math.abs(monthRect.x) + leftX : Math.abs(marginLeft);\r\n            monthWidth = monthRect.x + monthRect.width > rightX ? maxWidth : monthRect.x + monthRect.width - leftX;\r\n          } else {\r\n            monthWidth = maxWidth - monthWidth > monthWidth ? monthWidth : maxWidth - monthRect.x + leftX;\r\n          }\r\n          titleElement.style.marginLeft = marginLeft + 'px';\r\n          titleElement.style.width = monthWidth + 'px';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  hasAncestorWithClass(element: HTMLElement, className: string): boolean {\r\n    let currentElement = element;\r\n    while (currentElement !== null) {\r\n      if (currentElement.matches(`.${className}`)) {\r\n        return true;\r\n      }\r\n      currentElement = currentElement.parentElement;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  @Listen('showBookingPopup', { target: 'window' })\r\n  showBookingPopupEventDataHandler(event: CustomEvent) {\r\n    event.preventDefault();\r\n    event.stopImmediatePropagation();\r\n    this.onOptionSelect(event);\r\n    //console.log(\"show booking event\", event);\r\n  }\r\n\r\n  @Listen('updateEventData')\r\n  updateEventDataHandler(event: CustomEvent) {\r\n    let bookedData = this.calendarData.bookingEvents.find(bookedEvent => bookedEvent.id === event.detail.id);\r\n    if (bookedData && event.detail && event.detail.data) {\r\n      Object.entries(event.detail.data).forEach(([key, value]) => {\r\n        bookedData[key] = value;\r\n      });\r\n    }\r\n  }\r\n\r\n  @Listen('dragOverEventData')\r\n  dragOverEventDataHandler(event: CustomEvent) {\r\n    if (event.detail.id === 'CALCULATE_DRAG_OVER_BOUNDS') {\r\n      let topLeftCell = document.querySelector('igl-cal-header .topLeftCell') as HTMLElement;\r\n      let containerDays = document.querySelectorAll('.headersContainer .headerCell');\r\n      let containerRooms = document.querySelectorAll('.bodyContainer .roomRow .roomTitle');\r\n      this.visibleCalendarCells = { x: [], y: [] };\r\n\r\n      containerDays.forEach(element => {\r\n        const htmlElement = element as HTMLElement;\r\n        this.visibleCalendarCells.x.push({\r\n          left: htmlElement.offsetLeft + topLeftCell.offsetWidth,\r\n          width: htmlElement.offsetWidth,\r\n          id: htmlElement.getAttribute('data-day'),\r\n        });\r\n      });\r\n\r\n      containerRooms.forEach(element => {\r\n        const htmlElement = element as HTMLElement;\r\n        this.visibleCalendarCells.y.push({\r\n          top: htmlElement.offsetTop,\r\n          height: htmlElement.offsetHeight,\r\n          id: htmlElement.getAttribute('data-room'),\r\n        });\r\n      });\r\n      this.highlightDragOver(true, event.detail.data);\r\n    } else if (event.detail.id === 'DRAG_OVER') {\r\n      this.highlightDragOver(true, event.detail.data);\r\n    } else if (event.detail.id === 'DRAG_OVER_END') {\r\n      this.highlightDragOver(false, event.detail.data);\r\n    } else if (event.detail.id === 'STRETCH_OVER_END') {\r\n      this.highlightDragOver(false, event.detail.data);\r\n    }\r\n  }\r\n\r\n  async highlightDragOver(hightLightElement, currentPosition) {\r\n    let xElement, yElement;\r\n    if (currentPosition) {\r\n      xElement = this.visibleCalendarCells.x.find(pos => pos.left < currentPosition.x && currentPosition.x <= pos.left + pos.width);\r\n      yElement = this.visibleCalendarCells.y.find(pos => pos.top < currentPosition.y && currentPosition.y <= pos.top + pos.height);\r\n    }\r\n    // console.log(hightLightElement+\":::\"+yElement.id+\"_\"+xElement.id);\r\n    if (hightLightElement && xElement && yElement) {\r\n      this.dragOverHighlightElement.emit({\r\n        dragOverElement: yElement.id + '_' + xElement.id,\r\n      });\r\n    } else {\r\n      this.dragOverHighlightElement.emit({ dragOverElement: '' });\r\n    }\r\n    if (!hightLightElement) {\r\n      this.moveBookingTo.emit({\r\n        bookingId: currentPosition.id,\r\n        fromRoomId: currentPosition.fromRoomId,\r\n        toRoomId: (yElement && yElement.id) || 'revert',\r\n        moveToDay: (xElement && xElement.id) || 'revert',\r\n        pool: currentPosition.pool,\r\n        from_date: convertDMYToISO(xElement && xElement.id),\r\n        to_date: computeEndDate(xElement && xElement.id, currentPosition.nbOfDays),\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <ir-interceptor></ir-interceptor>\r\n        <ir-common></ir-common>\r\n        <div id=\"iglooCalendar\" class=\"igl-calendar\">\r\n          {this.shouldRenderCalendarView() ? (\r\n            [\r\n              this.showToBeAssigned ? (\r\n                <igl-to-be-assigned\r\n                  loadingMessage={'Fetching unassigned units'}\r\n                  to_date={this.to_date}\r\n                  from_date={this.from_date}\r\n                  propertyid={this.propertyid}\r\n                  class=\"tobeAssignedContainer\"\r\n                  calendarData={this.calendarData}\r\n                  onOptionEvent={evt => this.onOptionSelect(evt)}\r\n                ></igl-to-be-assigned>\r\n              ) : null,\r\n              this.showLegend ? (\r\n                <igl-legends class=\"legendContainer\" legendData={this.calendarData.legendData} onOptionEvent={evt => this.onOptionSelect(evt)}></igl-legends>\r\n              ) : null,\r\n              <div class=\"calendarScrollContainer\" onMouseDown={event => this.dragScrollContent(event)} onScroll={() => this.calendarScrolling()}>\r\n                <div id=\"calendarContainer\">\r\n                  <igl-cal-header\r\n                    to_date={this.to_date}\r\n                    propertyid={this.propertyid}\r\n                    today={this.today}\r\n                    calendarData={this.calendarData}\r\n                    onOptionEvent={evt => this.onOptionSelect(evt)}\r\n                  ></igl-cal-header>\r\n                  <igl-cal-body\r\n                    countryNodeList={this.countryNodeList}\r\n                    currency={this.calendarData.currency}\r\n                    today={this.today}\r\n                    isScrollViewDragging={this.scrollViewDragging}\r\n                    calendarData={this.calendarData}\r\n                  ></igl-cal-body>\r\n                  <igl-cal-footer today={this.today} calendarData={this.calendarData} onOptionEvent={evt => this.onOptionSelect(evt)}></igl-cal-footer>\r\n                </div>\r\n              </div>,\r\n            ]\r\n          ) : (\r\n            <ir-loading-screen message=\"Preparing Calendar Data\"></ir-loading-screen>\r\n          )}\r\n          {this.bookingItem && (\r\n            <igl-book-property\r\n              showPaymentDetails={this.showPaymentDetails}\r\n              countryNodeList={this.countryNodeList}\r\n              currency={this.calendarData.currency}\r\n              language={this.language}\r\n              propertyid={this.propertyid}\r\n              bookingData={this.bookingItem}\r\n              onCloseBookingWindow={_ => (this.bookingItem = null)}\r\n            ></igl-book-property>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { IrOnlineResource } from './models';\r\nexport const onlineResources: IrOnlineResource[] = [\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/jquery.min.js\",\r\n  // },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i%7CQuicksand:300,400,500,700',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/bootstrap.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/bootstrap-extended.css',\r\n  },\r\n  { isCSS: true, link: 'https://x.igloorooms.com/app-assets/css/colors.css' },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/core/menu/menu-types/horizontal-menu.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/core/colors/palette-gradient.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/components.css',\r\n  },\r\n  { isCSS: true, link: 'https://x.igloorooms.com/assets/css/style.css' },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/vendors/css/forms/icheck/icheck.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/vendors/css/forms/icheck/custom.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/pages/login-register.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/daterangepicker.css',\r\n  },\r\n\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/moment.min.js\",\r\n  // },\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/daterangepicker.js\",\r\n  // },\r\n];\r\n","import { Component, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport { IrOnlineResource } from '../../common/models';\r\nimport { onlineResources } from '../../common/ir.common.resources';\r\n\r\n@Component({\r\n  tag: 'ir-common',\r\n})\r\nexport class IrCommon {\r\n  @Prop({ reflect: true }) extraResources: string = '';\r\n  @State() resources: IrOnlineResource[] = onlineResources;\r\n  componentWillLoad() {\r\n    this.parseRefs();\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.initializeStyles();\r\n  }\r\n\r\n  @Watch('extraResources')\r\n  hrefsChanged() {\r\n    this.parseRefs();\r\n    this.initializeStyles();\r\n  }\r\n\r\n  private parseRefs() {\r\n    if (this.extraResources !== '') this.resources.push(JSON.parse(this.extraResources));\r\n  }\r\n\r\n  private appendTag(tagName: string, attributes: any) {\r\n    const tag = document.createElement(tagName);\r\n    const selectorParts = [];\r\n\r\n    Object.keys(attributes).forEach(attr => {\r\n      tag.setAttribute(attr, attributes[attr]);\r\n      selectorParts.push(`[${attr}=\"${attributes[attr]}\"]`);\r\n    });\r\n\r\n    const selector = `${tagName}${selectorParts.join('')}`;\r\n    const existingTag = document.querySelector(selector);\r\n\r\n    if (!existingTag) {\r\n      document.head.appendChild(tag);\r\n    }\r\n  }\r\n\r\n  private initializeStyles() {\r\n    this.resources.forEach(res => {\r\n      if (res.isCSS) {\r\n        this.appendTag('link', {\r\n          href: res.link,\r\n          rel: 'stylesheet',\r\n          type: 'text/css',\r\n        });\r\n      }\r\n      if (res.isJS) {\r\n        this.appendTag('script', {\r\n          src: res.link,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <slot></slot>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","\r\n.date-range-input {\r\n  border: 0;\r\n  outline: 0;\r\n  margin: 0;\r\n  flex: 1;\r\n}\r\n.date-range-input:focus {\r\n  border: 0;\r\n  outline: 0;\r\n}\r\n","import {\r\n  Component,\r\n  h,\r\n  Element,\r\n  Prop,\r\n  Event,\r\n  EventEmitter,\r\n} from \"@stencil/core\";\r\nimport moment from \"moment\";\r\n\r\n@Component({\r\n  tag: \"ir-date-picker\",\r\n  styleUrl: \"ir-date-picker.css\",\r\n  scoped: true,\r\n})\r\nexport class IrDatePicker {\r\n  @Element() private element: HTMLElement;\r\n  @Prop({ reflect: true }) fromDate: Date;\r\n  @Prop({ reflect: true }) toDate: Date;\r\n\r\n  @Prop({ reflect: true }) opens: \"left\" | \"right\" | \"center\";\r\n  @Prop({ reflect: true }) autoApply: boolean;\r\n  @Prop({ reflect: true }) firstDay: number = 1;\r\n  @Prop({ reflect: true }) monthNames: string[] = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  @Prop({ reflect: true }) daysOfWeek: string[] = [\r\n    \"Su\",\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\",\r\n  ];\r\n  @Prop({ reflect: true }) format: string = \"MMM DD,YYYY\";\r\n  @Prop({ reflect: true }) separator: string = \"-\";\r\n  @Prop({ reflect: true }) applyLabel: string = \"Apply\";\r\n  @Prop({ reflect: true }) cancelLabel: string = \"Cancel\";\r\n  @Prop({ reflect: true }) fromLabel: string = \"Form\";\r\n  @Prop({ reflect: true }) toLabel: string = \"To\";\r\n  @Prop({ reflect: true }) customRangeLabel: string = \"Custom\";\r\n  @Prop({ reflect: true }) weekLabel: string = \"W\";\r\n  @Prop({ reflect: true }) maxSpan: moment.DurationInputArg1 = {\r\n    days: 240,\r\n  };\r\n\r\n  @Event() dateChanged: EventEmitter<{\r\n    start: moment.Moment;\r\n    end: moment.Moment;\r\n  }>;\r\n  dateRangeInput: HTMLElement;\r\n  componentDidLoad() {\r\n    this.dateRangeInput = this.element.querySelector(\".date-range-input\");\r\n    $(this.dateRangeInput).daterangepicker(\r\n      {\r\n        opens: this.opens,\r\n        startDate: moment(this.fromDate),\r\n        endDate: moment(this.toDate),\r\n        maxSpan: this.maxSpan,\r\n        autoApply: this.autoApply,\r\n        locale: {\r\n          format: this.format,\r\n          separator: this.separator,\r\n          applyLabel: this.applyLabel,\r\n          cancelLabel: this.cancelLabel,\r\n          fromLabel: this.fromLabel,\r\n          toLabel: this.toLabel,\r\n          customRangeLabel: this.customRangeLabel,\r\n          weekLabel: this.weekLabel,\r\n          daysOfWeek: this.daysOfWeek,\r\n          monthNames: this.monthNames,\r\n          firstDay: this.firstDay,\r\n        },\r\n      },\r\n      (start, end) => {\r\n        this.dateChanged.emit({ start, end });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <input class=\"date-range-input\" type=\"text\" />;\r\n  }\r\n}\r\n",":host {\r\n  --viewport-padding: 25px;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: var(--viewport-padding);\r\n  gap: 10px;\r\n  max-width: 60vw;\r\n  margin: 0;\r\n  list-style: none;\r\n  z-index: 2147483647;\r\n  outline: none;\r\n  pointer-events: none;\r\n}\r\n\r\n.toast-container {\r\n  background-color: white;\r\n  border-radius: 6px;\r\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\r\n  padding: 15px 30px;\r\n  display: grid;\r\n  grid-template-areas: 'title action';\r\n  grid-template-columns: auto max-content;\r\n  column-gap: 15px;\r\n  align-items: center;\r\n  overflow: hidden;\r\n}\r\n.toast-container[data-state='open'] {\r\n  animation: slideIn 150ms cubic-bezier(0.16, 1, 0.3, 1) forwards;\r\n}\r\n.toast-container[data-state='closed'] {\r\n  pointer-events: none;\r\n  animation: fadeOut 150ms ease-in forwards;\r\n}\r\np {\r\n  margin: 0;\r\n  padding: 0;\r\n  grid-area: title;\r\n  font-weight: 500;\r\n  color: #1c2024;\r\n  font-size: 15px;\r\n}\r\n\r\n.x-mark-container,\r\n.check-mark-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 1.5rem;\r\n  width: 1.5rem;\r\n  border-radius: 50%;\r\n}\r\n.x-mark-container {\r\n  background: red;\r\n}\r\n.check-mark-container {\r\n  background: rgb(9, 153, 9);\r\n}\r\n\r\n.loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n.loadingScreenContainer {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 100;\r\n  background: rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n@keyframes fadeOut {\r\n  0% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n}\r\n@keyframes slideIn {\r\n  0% {\r\n    transform: translateX(calc(100% + var(--viewport-padding)));\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n","import { Component, Fragment, Host, Prop, State, h } from '@stencil/core';\r\nimport axios from 'axios';\r\n\r\n@Component({\r\n  tag: 'ir-interceptor',\r\n  styleUrl: 'ir-interceptor.css',\r\n  scoped: true,\r\n})\r\nexport class IrInterceptor {\r\n  @State() isShown = false;\r\n  @State() isLoading = false;\r\n  @State() isSuccess = false;\r\n  @State() isUnassignedUnit = false;\r\n\r\n  @Prop({ reflect: true, mutable: true }) defaultMessage = {\r\n    loadingMessage: 'Fetching Data',\r\n    successMessage: 'Success',\r\n    errorMessage: 'Something Went Wrong',\r\n  };\r\n\r\n  @Prop({ reflect: true }) handledEndpoints = ['/Get_Exposed_Booking_Availability', '/ReAllocate_Exposed_Room'];\r\n\r\n  componentWillLoad() {\r\n    this.setupAxiosInterceptors();\r\n  }\r\n\r\n  setupAxiosInterceptors() {\r\n    axios.interceptors.request.use(this.handleRequest.bind(this), this.handleError.bind(this));\r\n    axios.interceptors.response.use(this.handleResponse.bind(this), this.handleError.bind(this));\r\n  }\r\n\r\n  extractEndpoint(url: string): string {\r\n    return url.split('?')[0];\r\n  }\r\n\r\n  isHandledEndpoint(url: string): boolean {\r\n    return this.handledEndpoints.includes(this.extractEndpoint(url));\r\n  }\r\n\r\n  handleRequest(config) {\r\n    if (this.isHandledEndpoint(config.url)) {\r\n      this.isLoading = true;\r\n      if (this.extractEndpoint(config.url) === '/ReAllocate_Exposed_Room') {\r\n        this.defaultMessage.loadingMessage = 'Updating Event';\r\n      } else if (this.extractEndpoint(config.url) === '/Get_Aggregated_UnAssigned_Rooms') {\r\n        this.isUnassignedUnit = true;\r\n      } else {\r\n        this.defaultMessage.loadingMessage = 'Fetching Data';\r\n      }\r\n      this.showToast();\r\n    }\r\n    return config;\r\n  }\r\n\r\n  handleResponse(response) {\r\n    this.isLoading = false;\r\n\r\n    if (response.data.ExceptionMsg?.trim()) {\r\n      this.handleError(response.data.ExceptionMsg);\r\n\r\n      throw new Error(response.data.ExceptionMsg);\r\n    }\r\n\r\n    if (this.isHandledEndpoint(response.config.url)) {\r\n      this.handleCompletion('Success', true);\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  handleError(error) {\r\n    if (this.isUnassignedUnit) {\r\n      this.isUnassignedUnit = false;\r\n    }\r\n    if (!this.isShown) {\r\n      this.showToast();\r\n    }\r\n    this.handleCompletion(error, false);\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  showToast() {\r\n    this.isShown = true;\r\n  }\r\n\r\n  hideToastAfterDelay(isSuccess: boolean) {\r\n    if (this.isUnassignedUnit) {\r\n      this.isShown = false;\r\n      this.isUnassignedUnit = false;\r\n    } else {\r\n      const delay = isSuccess ? 0 : 5000;\r\n\r\n      setTimeout(() => {\r\n        this.isShown = false;\r\n      }, delay);\r\n    }\r\n  }\r\n\r\n  handleCompletion(message: string, success: boolean) {\r\n    this.isSuccess = success;\r\n    this.defaultMessage = {\r\n      ...this.defaultMessage,\r\n      [success ? 'successMessage' : 'errorMessage']: message,\r\n    };\r\n    this.hideToastAfterDelay(success);\r\n  }\r\n\r\n  renderMessage(): string {\r\n    if (this.isLoading) return this.defaultMessage.loadingMessage;\r\n    return this.isSuccess ? this.defaultMessage.successMessage : this.defaultMessage.errorMessage;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.isLoading && this.isShown && (\r\n          <div class=\"loadingScreenContainer\">\r\n            <div class=\"loadingContainer\">\r\n              <ir-loading-screen></ir-loading-screen>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div class=\"toast-container\" data-state={!this.isLoading && this.isShown && !this.isSuccess ? 'open' : 'closed'}>\r\n          {!this.isLoading && this.isShown && !this.isSuccess && (\r\n            <Fragment>\r\n              <div class=\"x-mark-container\">\r\n                <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path\r\n                    d=\"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z\"\r\n                    fill=\"white\"\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                  ></path>\r\n                </svg>\r\n              </div>\r\n              <p>{this.renderMessage()}</p>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: fix;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 1000;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\n.loader {\r\n  width: 2.25rem;\r\n  height: 2.25rem;\r\n  border: 3.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n.backdrop {\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n.loaderContainer {\r\n  position: absolute;\r\n  z-index: 100001;\r\n  padding: 20px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\r\n}\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","import { Component, Host, Prop, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-loading-screen',\r\n  styleUrl: 'ir-loading-screen.css',\r\n  scoped: true,\r\n})\r\nexport class IrLoadingScreen {\r\n  @Prop() message: string = '';\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"loaderContainer\">\r\n          <span class=\"loader\"></span>\r\n          {this.message && <p class={'m-0'}>{this.message}</p>}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../assets/feather/style.min.css\");\r\n@import url(\"../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  position: relative;\r\n}\r\n\r\n/* p {\r\n  position: absolute;\r\n  top: 10px;\r\n  background-color: antiquewhite;\r\n  border-radius: 7px;\r\n  padding: 10px 15px;\r\n  z-index: 1000000;\r\n} */\r\n","import { Component, Host, Prop, State, h } from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"ir-tooltip\",\r\n  styleUrl: \"ir-tooltip.css\",\r\n  scoped: true,\r\n})\r\nexport class IrTooltip {\r\n  @Prop({ reflect: true }) message: string;\r\n  @State() open: boolean;\r\n  tooltipTimeout: any;\r\n  toggleOpen(shouldOpen: boolean) {\r\n    if (this.tooltipTimeout) {\r\n      clearTimeout(this.tooltipTimeout);\r\n    }\r\n\r\n    if (shouldOpen) {\r\n      this.tooltipTimeout = setTimeout(() => {\r\n        this.open = true;\r\n      }, 300);\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <span\r\n          onMouseEnter={() => this.toggleOpen(true)}\r\n          onMouseLeave={() => this.toggleOpen(false)}\r\n        >\r\n          <i\r\n            class=\"ml-1 ft-info\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            data-original-title=\"Info popup\"\r\n          ></i>\r\n        </span>\r\n        {this.open && (\r\n          <div class=\"tooltip bottom show position-absolute\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner fit\">\r\n              <i class=\"tooltip-top-demo\"></i>\r\n              <span innerHTML={this.message}></span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"gQAAA,MAAMA,EAAwB,swyJ,MCQjBC,EAAkB,M,kHAEiD,G,kDAElD,G,mBACM,G,iBACJ,e,0CAGH,E,CAG3B,iBAAAC,GACEC,KAAKC,UAAYD,KAAKE,UAASC,OAAAC,OAAA,GAAQJ,KAAKE,WAAc,GAC1DF,KAAKK,gB,CAGP,wBAAMC,GACJN,KAAKK,gB,CAEP,cAAAA,GACE,MAAME,EAAQ,IAAIP,KAAKQ,eACvBD,EAAMP,KAAKS,QAAU,EACrBT,KAAKU,gBAAkBV,KAAKW,UAAUC,QAAOC,IAAMN,EAAMO,SAASD,EAAEE,K,CAEtE,UAAAC,GACEhB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,qBACLC,YAAapB,KAAKoB,YAClBC,KAAIlB,OAAAC,OAAA,GAAOJ,KAAKC,Y,CAIpB,gBAAAqB,CAAiBH,EAAKI,GACpBvB,KAAKC,UAAUkB,IAAQI,EACvB,GAAIA,IAAU,GAAI,CAChBvB,KAAKC,UAAU,YAAcsB,C,CAE/B,GAAIJ,IAAQ,UAAYI,IAAU,GAAI,CACpCvB,KAAKC,UAAU,YAAcD,KAAKU,gBAAgBc,MAAKC,GAAQA,EAAKV,MAAQQ,IAAOG,MAAQ,E,CAE7F1B,KAAKgB,Y,CAGP,qBAAAW,CAAsBC,GAEpB5B,KAAKC,UAAU4B,UAAYD,EAAME,OAAOP,MACxCvB,KAAKgB,Y,CAGP,MAAAe,GAEE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,kBACTF,EAAA,OAAKE,MAAM,aACRlC,KAAKmC,cAAgB,gBAAkBnC,KAAKmC,cAAgB,YAAcnC,KAAKmC,cAAgB,eAC9FH,EAAA,QAAME,MAAM,MAAMlC,KAAKE,UAAUkC,kBAC/B,KACJJ,EAAA,QAAME,MAAM,yBACTlC,KAAKE,UAAUmC,aAAaC,QAAQtC,KAAKE,UAAUkC,iBAAmB,IAAK,IAC5EJ,EAAA,cAAYE,MAAM,YAAYK,QAASvC,KAAKE,UAAUsC,YAAcxC,KAAKE,UAAUuC,aAErFT,EAAA,YAAOhC,KAAKE,UAAUwC,uBAGxBV,EAAA,OAAKE,MAAM,kCACTF,EAAA,OAAKE,MAAM,SACTF,EAAA,SACEjB,GAAI4B,IACJC,KAAK,QACLV,MAAM,eACNW,YAAY,+BACZnB,KAAK,YACLoB,QAASlB,GAAS5B,KAAK2B,sBAAsBC,GAC7CmB,SAAQ,KACRxB,MAAOvB,KAAKC,UAAU4B,aAGzB7B,KAAKmC,cAAgB,gBAAkBnC,KAAKmC,cAAgB,YAAcnC,KAAKmC,cAAgB,eAC9FH,EAAA,OAAKE,MAAM,aACTF,EAAA,UAAQE,MAAM,6BAA6BnB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,SAAWM,EAAME,OAA4BP,QACzIS,EAAA,UAAQT,MAAM,GAAG0B,SAAUjD,KAAKC,UAAUiD,SAAW,IAAE,gBAGtDlD,KAAKU,gBAAgByC,KAAI1B,GACxBO,EAAA,UAAQT,MAAOE,EAAKV,GAAIkC,UAAWjD,KAAKC,UAAUiD,SAAWzB,EAAKV,IAC/DU,EAAKC,UAKZ,KAEJM,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQE,MAAM,wBAAwBnB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,aAAeM,EAAME,OAA4BP,QACxIS,EAAA,UAAQT,MAAM,GAAG0B,SAAUjD,KAAKC,UAAUmD,aAAe,IAAE,iBAG1DpD,KAAKqD,kBAAkBF,KAAI9B,GAC1BW,EAAA,UAAQT,MAAOF,EAAKiC,UAAWL,SAAUjD,KAAKC,UAAUmD,aAAe/B,EAAKiC,WACzEjC,EAAKkC,mBAKdvB,EAAA,OAAKE,MAAM,SAAO,IAAGlC,KAAKE,UAAUsD,Q,gFClHhD,MAAMC,EAAuB,ohzJ,MCShBC,EAAiB,M,0EAWpB1D,KAAA2D,eAAyC,CAC/CC,oBAAqB,EACrBC,gBAAiB,GACjBC,eAAgB,OAEV9D,KAAA+D,YAA0B,GAC1B/D,KAAAgE,eAAiC,IAAIC,E,6IAXf,M,4CAEE,K,CAUhC,uBAAMlE,GACJ,IACEC,KAAK+D,kBAAoB/D,KAAKgE,eAAeE,iBAC7C,GAAIlE,KAAKmE,YAAa,CACpBnE,KAAK2D,eAAcxD,OAAAC,OAAA,GAAQJ,KAAKmE,Y,KAC3B,CACLnE,KAAK2D,eAAeC,oBAAsBQ,SAASpE,KAAK+D,YAAY,GAAGT,WACvEtD,KAAKqE,U,EAEP,MAAOC,G,EAKX,oBAAAC,CAAqB3C,GACnB5B,KAAK2D,eAAeE,gBAAkBjC,EAAME,OAAOP,MACnDvB,KAAKqE,U,CAGP,wBAAAG,CAAyBC,GACvB,GAAIzE,KAAK0E,UAAW1E,KAAK0E,UAAYC,UACrC3E,KAAK2D,eAAeC,oBAAsBQ,SAASK,EAAI3C,OAAOP,OAC9DvB,KAAK4E,aACL5E,KAAKqE,U,CAGP,QAAAA,GACErE,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,iBACLE,KAAIlB,OAAAC,OAAA,GAAOJ,KAAK2D,iB,CAIpB,qBAAAkB,GAGE,IAAIC,EAAK9E,KAAK0E,UAAY,IAAIK,KAAK/E,KAAK0E,WAAa,IAAIK,KACzD,GAAI/E,KAAK0E,WAAa1E,KAAKgF,WAAahF,KAAKiF,YAAa,CACxDH,EAAGI,SAASlF,KAAKgF,UAAWhF,KAAKiF,YAAa,EAAG,E,KAC5C,CACLH,EAAGI,SAASJ,EAAGK,WAAanF,KAAK2D,eAAeC,oBAAqBkB,EAAGM,aAAc,EAAG,E,CAG3F,OAAON,EAAGO,eAAe,UAAW,CAAEC,MAAO,UAAa,IAAMR,EAAGS,UAAY,KAAOvF,KAAKwF,aAAaV,EAAGK,YAAc,IAAMnF,KAAKwF,aAAaV,EAAGM,a,CAEtJ,YAAAI,CAAajE,GACX,OAAOA,EAAQ,GAAK,IAAIA,IAAUA,C,CAEpC,kBAAAkE,CAAmBhB,GACjBzE,KAAK2D,eAAeG,eAAiBW,EAAI3C,OAAO4D,QAChD,GAAI1F,KAAK2D,eAAeG,eAAgB,CACtC9D,KAAK2D,eAAeE,gBAAkB,GACtC7D,KAAK2D,eAAeC,oBAAsB,C,CAE5C5D,KAAK4E,aACL5E,KAAKqE,U,CAGP,UAAAO,GACE5E,KAAK2F,aAAe3F,KAAK2F,W,CAG3B,MAAA5D,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAO,gBAAgBlC,KAAK4F,cAAc,eAC7C5D,EAAA,OAAKE,MAAM,wBACTF,EAAA,QAAME,MAAM,QACVF,EAAA,QAAME,MAAM,+BAA6B,UACxClC,KAAK6F,UACA,IACR7D,EAAA,QAAME,MAAM,+BAA6B,QACxClC,KAAK8F,SAGV9D,EAAA,OAAKE,MAAO,sBAAsBlC,KAAK4F,cAAc,SACnD5D,EAAA,OAAKE,MAAM,SACTF,EAAA,SAAOE,MAAM,oDAAkD,WAC/DF,EAAA,OAAKE,MAAM,+EACTF,EAAA,SAAOE,MAAM,eAAeU,KAAK,WAAW8C,QAAS1F,KAAK2D,eAAeG,eAAgB/C,GAAG,aAAaiC,SAAUpB,GAAS5B,KAAKyF,mBAAmB7D,MAC/I,IACPI,EAAA,QAAME,MAAM,gBAAc,oBAE1BlC,KAAK2D,eAAeG,eACpB9B,EAAA,WACEA,EAAA,OAAKE,MAAM,wCACTF,EAAA,QAAME,MAAM,gBAAc,OAC1BF,EAAA,OAAKE,MAAM,uCACTF,EAAA,SACEE,MAAM,eACNU,KAAK,OACLC,YAAY,kBACZ9B,GAAG,YACHQ,MAAOvB,KAAK2D,eAAeE,gBAC3Bf,QAASlB,GAAS5B,KAAKuE,qBAAqB3C,OAIlDI,EAAA,OAAKE,MAAM,oBACTF,EAAA,QAAME,MAAM,+BAA6B,0BACzCF,EAAA,OAAKE,MAAM,kBACTF,EAAA,UAAQE,MAAM,wBAAwBnB,GAAG,eAAeiC,SAAUyB,GAAOzE,KAAKwE,yBAAyBC,IACpGzE,KAAK+D,YAAYZ,KAAI4C,GACpB/D,EAAA,UAAQT,OAAQwE,EAAYzC,UAAWL,SAAUjD,KAAK2D,eAAeC,sBAAwBmC,EAAYzC,WACtGyC,EAAYxC,mBAKpBvD,KAAK2D,eAAeC,oBACnB5B,EAAA,OAAKE,MAAM,8BACTF,EAAA,gBAAQhC,KAAK6E,0BAEb,OAGN,M,mBC3IDmB,EAAb,WAAAC,GACmBjG,KAAAgE,eAAiC,IAAIC,C,CAEtD,qBAAMiC,CACJC,EACAC,EACAC,EACAC,GAEA,IACE,MAAMC,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,EAAO,CACTK,QAAQC,IAAIV,EAAMC,EAAmBC,EAAWC,GAChD,MAAMjF,KAAEA,SAAeyF,EAAMC,KAC3B,mCAAmCR,IACnC,CAAEJ,OAAMC,oBAAmBC,YAAWC,YAExC,GAAIjF,EAAK2F,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAM5F,EAAK2F,a,CAEvBJ,QAAQC,IAAIxF,GACZ,OAAOA,C,KACF,CACL,MAAM,IAAI4F,MAAM,gB,EAElB,MAAO3C,GACPsC,QAAQtC,MAAMA,GACd,MAAM,IAAI2C,MAAM3C,E,EAGb,iBAAM4C,CAAYC,GACvB,IACE,MAAMZ,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,EAAO,CACT,MAAMlF,KAAEA,SAAeyF,EAAMC,KAC3B,gCAAgCR,IAChC,CACEY,SAGJ,GAAI9F,EAAK2F,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAM5F,EAAK2F,a,CAEvB,OAAO3F,EAAK+F,S,KACP,CACL,MAAM,IAAIH,MAAM,gB,EAElB,MAAO3C,GACPsC,QAAQC,IAAIvC,GACZ,MAAM,IAAI2C,MAAM3C,E,EAIb,wBAAM+C,CAAmBC,GAC9B,IACE,MAAMf,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,EAAO,CACT,MAAMgB,EAAc1C,GACjByC,EAAa1D,2BAEV5D,KAAKkH,YAAYI,EAAaH,YAC9BnH,KAAKgE,eAAewD,UAASrH,OAAAC,OAAA,CACjCiG,UAAWrG,KAAKyH,WAAWH,EAAaI,WACxCpB,QAAStG,KAAKyH,WAAWH,EAAaK,SACtCC,MAAON,EAAaO,MACpBC,iBAAkBR,EAAaxD,eAC3B,MACAwD,EAAa1D,sBAAwB,EACrC,MACA,MACJmE,YAAaT,EAAa1D,qBAAuB,GACjDoE,MAAOV,EAAazD,iBAAmB,IACpC0D,G,KAEA,CACL,MAAM,IAAIN,MAAM,gB,EAElB,MAAO3C,GACPsC,QAAQtC,MAAMA,GACd,MAAM,IAAI2C,MAAM3C,E,EAGZ,UAAAmD,CAAWQ,GACjB,OAAOA,EAAKC,MAAM,KAAKC,KAAK,I,ECvFhC,MAAMC,EAAqB,29lJ,MCadC,EAAe,M,8KAqBlBrI,KAAAsI,UAAoB,YACpBtI,KAAAuI,SAAmB,WACnBvI,KAAAwI,SAAmB,WACnBxI,KAAAyI,iBAA2B,kBAE3BzI,KAAA0I,uBAAkC,MAClC1I,KAAA2I,cAAiD,GACjD3I,KAAA4I,cAAwC,GACxC5I,KAAAC,UAAsC,GACtCD,KAAA6I,iBAA2C,GAC3C7I,KAAA2D,eAAyC,GACzC3D,KAAA8I,gBAA8B,GAC9B9I,KAAAqD,kBAAgC,GAChCrD,KAAAgE,eAAiC,IAAIC,EACrCjE,KAAA+I,cAAgB,IAAI/C,E,yGA/BU,M,qEAGyB,CAC7DgD,KAAM,GACNC,YAAa,I,oBAEgB,G,iBACC,M,aACL,G,2GAIsB,E,CAmBjD,gBAAAC,GACEC,SAASC,iBAAiB,WAAWvI,IACnC,GAAIA,EAAEM,MAAQ,SAAU,CACtBnB,KAAKqJ,a,KAIX,oBAAAC,GACEH,SAASI,oBAAoB,WAAW,Q,CAE1C,uBAAMxJ,GACJ,IAAKC,KAAKwJ,YAAYC,iBAAkB,CACtC,M,CAGFzJ,KAAK0J,cAAavJ,OAAAC,OAAA,GAAQJ,KAAKwJ,YAAYC,kBAE3C,IACE,MAAME,QAAqB3J,KAAK4J,oBAChC5J,KAAK6J,iBAAiBF,EAAaG,eACnC9J,KAAK+J,mBAAmBJ,GAExB,GAAI3J,KAAKgK,YAAY,gBAAiB,CACpChK,KAAKiK,oB,CAGPjK,KAAKkK,KAAOlK,KAAKmK,gB,CACjB,MAAO7F,GACPsC,QAAQtC,MAAM,gCAAiCA,E,EAInD,uBAAMsF,GACJ,aAAa5J,KAAKgE,eAAe4F,mB,CAGnC,gBAAAC,CAAiBC,GACf9J,KAAK2I,cAAgBmB,EAAc3G,KAAIiH,IAAM,CAC3CrJ,GAAIqJ,EAAO9G,UACX/B,MAAO6I,EAAO7G,kBAEhBvD,KAAKqK,aAAe,CAClBrB,KAAMc,EAAc,GAAGxG,UACvB2F,YAAaa,EAAc,GAAGvG,c,CAIlC,kBAAAwG,CAAmBO,GACjBtK,KAAK8I,gBAAkBwB,EAAIxB,gBAC3B9I,KAAK6I,iBAAiB0B,YAAcD,EAAIC,YACxCvK,KAAKqD,kBAAoBiH,EAAIjH,iB,CAG/B,kBAAA4G,GACE,MAAMO,EAAWxK,KAAKyK,wBAAwBzK,KAAK0K,8BACnD,MAAMvJ,EAAM,KAAKqJ,EAASzJ,KAC1Bf,KAAK4I,cAAczH,GAAO,CACxB,CAAC,KAAKnB,KAAKwJ,YAAYmB,gBAAiB,CACtCC,WAAY5K,KAAKwJ,YAAYqB,aAC7BrH,KAAMxD,KAAKwJ,YAAYsB,KACvBC,SAAU/K,KAAKwJ,YAAYwB,UAC3BC,WAAYjL,KAAKwJ,YAAYmB,aAC7BO,eAAgBV,EAASzJ,GACzBqB,iBAAkBoI,EAAS9I,KAC3ByJ,WAAY,EACZ9I,aAAcrC,KAAKwJ,YAAY4B,UAC/BlI,OAAQlD,KAAKwJ,YAAY3B,MACzBhG,UAAW7B,KAAKwJ,YAAY6B,KAC5B7I,YAAaxC,KAAKwJ,YAAYhH,YAC9BC,UAAWzC,KAAKwJ,YAAY/G,UAC5BC,qBAAsB1C,KAAKwJ,YAAY9G,sB,CAK7C,mCAAM4I,CAA8BjF,EAAmBC,GACrD,IACE,MAAMiF,EAAgBvL,KAAKwJ,YAAYgC,UAAUrI,KAAI1B,GAAQA,EAAKV,KAClE,MAAMM,QAAarB,KAAKgE,eAAeyH,uBAAuBpF,EAAWC,EAAStG,KAAK0L,WAAY1L,KAAK2L,SAAUJ,EAAevL,KAAK4L,UACtI5L,KAAKuC,QAAU,GACfvC,KAAKwJ,YAAWrJ,OAAAC,OAAAD,OAAAC,OAAA,GACXJ,KAAKwJ,aAAW,CACnBgC,UAAWnK,EAAKwK,YAElB7L,KAAKuC,QAAUlB,EAAKyK,cACpBlF,QAAQC,IAAIxF,E,CACZ,MAAOiD,G,EAIX,uBAAAmG,CAAwBvH,G,MACtB,OAAO6I,EAAA/L,KAAKwJ,YAAYgC,aAAS,MAAAO,SAAA,SAAAA,EAAEvK,MAAKwK,GAC/BA,EAAaC,cAAczK,MAAKC,GAAQA,EAAKV,MAAQmC,K,CAIhE,cAAAiH,GACE,GAAInK,KAAKwJ,YAAY0C,aAAe,cAAe,CACjD,OAAOlM,KAAKyI,gB,MACP,GAAIzI,KAAKwJ,YAAY0C,aAAe,gBAAiB,CAC1DlM,KAAK0I,uBAAyB,KAC9B,OAAO1I,KAAKuI,Q,KACP,CAEL,OAAOvI,KAAKuI,Q,EAIhB,0BAAAmC,GAEE,OAAQ1K,KAAKwJ,YAAY2C,eAAe,UAAYnM,KAAKwJ,YAAY3B,OAAU,I,CAGjF,gBAAAuE,GACE,OAAQpM,KAAKwJ,YAAY2C,eAAe,uBAAyBnM,KAAKwJ,YAAY6C,oBAAuB,E,CAE3G,WAAArC,CAAY7I,GACV,OAAOnB,KAAKwJ,YAAY0C,aAAe/K,C,CAGzC,WAAAkI,GACErJ,KAAKsM,mBAAqB,MAC1BtM,KAAKuM,mBAAmBrL,M,CAE1B,aAAAsL,GACE,OAAOxM,KAAKwJ,YAAY0C,aAAe,c,CAEzC,iBAAAO,CAAkB7K,GAChB,MAAMP,KAAEA,EAAIF,IAAEA,EAAGuL,WAAEA,GAAe9K,EAAM+K,OACxC,MAAMC,EAAkB5M,KAAK6M,mBAAmBxL,EAAK6J,gBACrD,MAAM4B,EAAc9M,KAAK+M,eAAe1L,EAAK4J,YAE7C,GAAIjL,KAAKgN,gBAAgB7L,GAAM,CAC7BnB,KAAK4I,cAAgB,E,CAGvB5I,KAAKiN,+BAA+BL,GAEpC,GAAI5M,KAAKwM,gBAAiB,CACxB,GAAIE,IAAe,OAAQ,CACzB,GAAI1M,KAAK4I,cAAcuD,eAAeS,IAAoB5M,KAAK4I,cAAcgE,GAAiBT,eAAeW,GAAc,CACzH9M,KAAKkN,+BAA+BN,EAAiBE,EAAazL,E,MAE/D,CACL,GAAIqL,IAAe,WAAY,CAC7B,GAAIA,IAAe,uBAAwB,CACzC,GAAI1M,KAAK4I,cAAcuD,eAAeS,IAAoB5M,KAAK4I,cAAcgE,GAAiBT,eAAeW,GAAc,CACzH9M,KAAKkN,+BAA+BN,EAAiBE,EAAazL,E,MAE/D,CACLrB,KAAKkN,+BAA+BN,EAAiBE,EAAazL,E,QAInE,CACLrB,KAAKmN,oBAAoBP,EAAiBE,EAAazL,E,CAGzDrB,KAAKoN,iBAAiBR,EAAiBE,GACvC9M,KAAK4E,Y,CAEP,kBAAAiI,CAAmB3B,GACjB,MAAO,KAAKA,G,CAGd,cAAA6B,CAAe9B,GACb,MAAO,KAAKA,G,CAGd,eAAA+B,CAAgB7L,GACd,OAAOA,IAAQ,aAAenB,KAAKqN,mBAAmBlM,E,CAGxD,kBAAAkM,CAAmBlM,GACjB,OAAOA,IAAQ,c,CAGjB,8BAAA8L,CAA+BL,GAC7B,IAAK5M,KAAK4I,cAAcgE,GAAkB,CACxC5M,KAAK4I,cAAcgE,GAAmB,E,EAI1C,mBAAAO,CAAoBP,EAAyBE,EAAqBzL,GAChErB,KAAK4I,cAAcgE,GAAiBE,GAAezL,C,CAGrD,mBAAAiM,CAAoBV,EAAyBE,GAC3C,OAAO9M,KAAK4I,cAAcgE,IAAoB5M,KAAK4I,cAAcgE,GAAiBE,E,CAGpF,gBAAAM,CAAiBR,EAAyBE,G,MACxC,KAAIf,EAAA/L,KAAK4I,cAAcgE,GAAiBE,MAAY,MAAAf,SAAA,SAAAA,EAAEZ,cAAe,EAAG,QAC/DnL,KAAK4I,cAAcgE,GAAiBE,E,CAG7C,IAAK3M,OAAOoN,KAAKvN,KAAK4I,cAAcgE,IAAkBY,OAAQ,QACrDxN,KAAK4I,cAAcgE,E,EAI9B,8BAAAM,CAA+BN,EAAyBE,EAAqBzL,GAC3ErB,KAAK4I,cAAgB,CACnBgE,CAACA,GAAkB,CACjBE,CAACA,GAAW3M,OAAAC,OAAAD,OAAAC,OAAA,GACPiB,GAAI,CACPQ,UAAW7B,KAAKwJ,YAAY6B,KAC5BnI,OAAQlD,KAAKwJ,YAAY3B,S,CAMjC,iBAAA4F,CAAkB7L,GAChB,MAAM8L,EAA8B9L,EAAM+K,OAC1C,GAAIe,EAAIvM,MAAQ,oBAAqB,CACnCnB,KAAK0J,cAAgBgE,EAAIrM,KACzBrB,KAAKwJ,YAAYC,iBAAiB5D,SAAW,IAAId,KAAK/E,KAAK0J,cAAc7D,UACzE7F,KAAKwJ,YAAYC,iBAAiB3D,OAAS,IAAIf,KAAK/E,KAAK0J,cAAc5D,QACvE9F,KAAKsL,8BAA8BqC,EAAsB3N,KAAKwJ,YAAYC,iBAAiB5D,UAAW8H,EAAsB3N,KAAKwJ,YAAYC,iBAAiB3D,Q,EAIlK,qBAAA8H,CAAsBhM,GACpBA,EAAMiM,2BACNjM,EAAMkM,kBACN,MAAMJ,EAA8B9L,EAAM+K,OAC1C3M,KAAK2D,eAAiB+J,EAAIrM,I,CAI5B,YAAA0M,CAAanM,GACXA,EAAMoM,gB,CAIR,qBAAAC,CAAsBrM,GACpBA,EAAMiM,2BACNjM,EAAMkM,kBAEN,MAAMJ,EAAM9L,EAAM+K,OAClB,GAAIe,EAAItM,YAAa,CACnB,GAAIpB,KAAKgK,YAAY,eAAgB,CACnChK,KAAKC,UAAUyN,EAAItM,aAAYjB,OAAAC,OAAAD,OAAAC,OAAA,GAC1BsN,EAAIrM,MAAI,CACX6B,OAAQlD,KAAKwJ,YAAY3B,O,MAEtB7H,KAAKC,UAAUyN,EAAItM,aAAesM,EAAIrM,I,EAIjD,wBAAA6M,CAAyBtM,GACvBA,EAAMiM,2BACNjM,EAAMkM,kBACN,MAAMJ,EAA8B9L,EAAM+K,OAC1C3M,KAAK6I,iBAAmB6E,EAAInM,MAAMF,I,CAGpC,mBAAA8M,CAAoBC,GAClB,OAAOpO,KAAKqK,eAAiB+D,EAAW,SAAW,E,CAGrD,oBAAAC,CAAqBC,GACnBtO,KAAKqK,aAAe,CAClBrB,KAAMsF,EAAexM,OAAOP,MAC5B0H,YAAajJ,KAAK2I,cAAcnH,MAAKkM,GAAOA,EAAI3M,KAAOuN,EAAexM,OAAOP,MAAMgN,aAAYhN,OAAS,G,CAI5G,UAAAqD,GACE5E,KAAK2F,aAAe3F,KAAK2F,W,CAI3B,gBAAA6I,GACExO,KAAKyO,SAASzO,KAAKwI,S,CAGrB,QAAAiG,CAASA,GACPzO,KAAKkK,KAAOuE,EACZzO,KAAK4E,Y,CAGP,gBAAA8J,GACE1O,KAAK0I,uBAAyB,KAC9B1I,KAAKyO,SAASzO,KAAKuI,S,CAGrB,2BAAAoG,CAA4BC,GAC1B,IAAIC,EAAe7O,KAAKoM,mBAAmB5K,MAAKsN,GAAWA,EAAQC,KAAOH,IAC1E,OAAOC,EAAaE,GAAK,IAAMF,EAAaxD,I,CAG9C,0BAAA2D,CAA2BC,GACzB,OAAOjP,KAAKkP,iBAAmBD,EAAY,SAAW,E,CAGxD,0BAAAE,CAA2B1K,GACzBzE,KAAKkP,eAAiBzK,EAAI3C,OAAOP,K,CAGnC,UAAA6N,GACE,OAAOpP,KAAKkK,OAASlK,KAAKsI,S,CAG5B,SAAA+G,GACE,OAAOrP,KAAKkK,OAASlK,KAAKuI,Q,CAG5B,SAAA+G,GACE,OAAOtP,KAAKkK,OAASlK,KAAKwI,Q,CAG5B,gBAAA+G,GACE,OAAOvP,KAAKkK,OAASlK,KAAKyI,gB,CAG5B,mBAAA+G,GACE,OACExN,EAAA,YAAUE,MAAM,+BACdF,EAAA,SAAOE,MAAM,MAAI,gBACjBF,EAAA,OAAKE,MAAM,kBACTF,EAAA,UAAQE,MAAM,wBAAwBnB,GAAG,eAAeiC,SAAUyB,GAAOzE,KAAKmP,2BAA2B1K,IACvGzC,EAAA,UAAQT,MAAM,GAAG0B,SAAUjD,KAAKkP,gBAAkB,IAAE,UAGnDlP,KAAKoM,mBAAmBjJ,KAAIsM,GAC3BzN,EAAA,UAAQT,MAAOkO,EAAOV,GAAI9L,SAAUjD,KAAKkP,iBAAmBO,EAAOV,IAChE/O,KAAK2O,4BAA4Bc,EAAOV,S,CAgBvD,aAAAW,GACE,OACE1N,EAAA,YAAUE,MAAM,+BACdF,EAAA,SAAOE,MAAM,MAAI,WACjBF,EAAA,OAAKE,MAAM,kBACTF,EAAA,UAAQE,MAAM,wBAAwBnB,GAAG,eAAeiC,SAAUyB,GAAOzE,KAAKqO,qBAAqB5J,IAChGzE,KAAK2I,cAAcxF,KAAIsM,GACtBzN,EAAA,UAAQT,MAAOkO,EAAO1O,GAAIkC,SAAUjD,KAAKqK,aAAarB,OAASyG,EAAO1O,IACnE0O,EAAOlO,W,CAStB,0BAAAoO,CAA2BC,G,MACzB,IAAIpF,GAAWuB,EAAA/L,KAAKwJ,YAAYgC,aAAS,MAAAO,SAAA,SAAAA,EAAEvK,MAAKgJ,GAAYA,EAASzJ,KAAO6O,IAC5E,OAAQpF,GAAYA,EAASyB,eAAkB,E,CAGjD,eAAA4D,GACE,OACE7N,EAAA,OAAKE,MAAM,iBACTF,EAAA,OAAKE,MAAM,gBACTF,EAAA,OAAKE,MAAM,2BACTF,EAAA,UAAQE,MAAM,6BAA6B4N,QAAS,IAAM9P,KAAKyO,SAASzO,KAAKuI,WAAS,uBAIvFvI,KAAKoM,mBAAmBoB,OACvBxL,EAAA,OAAKE,MAAM,2BACTF,EAAA,UAAQE,MAAM,6BAA6B4N,QAAS,IAAM9P,KAAK0O,oBAAkB,iCAIjF,KACJ1M,EAAA,OAAKE,MAAM,2BACTF,EAAA,UAAQE,MAAM,6BAA6B4N,QAAS,IAAM9P,KAAKyO,SAASzO,KAAKyI,mBAAiB,gBAIhGzG,EAAA,OAAKE,MAAM,2BACTF,EAAA,UAAQE,MAAM,+BAA+B4N,QAAS,IAAM9P,KAAKqJ,eAAa,Y,CASxF,cAAA0G,G,MACE,OACE/N,EAAA,OAAKE,MAAM,iBACRlC,KAAK0I,uBAAyB1I,KAAKwP,sBAAwBxP,KAAKgK,YAAY,iBAAmBhK,KAAKgK,YAAY,YAAc,KAAOhK,KAAK0P,gBAE3I1N,EAAA,YAAUE,MAAM,yBACdF,EAAA,kBAAgBO,QAASvC,KAAKuC,QAAS4B,YAAanE,KAAKwJ,YAAYC,iBAAkBuG,kBAAmBvL,GAAOzE,KAAKyN,kBAAkBhJ,MAG1IzC,EAAA,OAAKE,MAAM,kBACR6J,EAAA/L,KAAKwJ,YAAYgC,aAAS,MAAAO,SAAA,SAAAA,EAAE5I,KAAI8M,GAC/BjO,EAAA,qBACE4J,SAAU5L,KAAK4L,SACf9C,gBAAiB9I,KAAK8I,gBACtBoH,eAAgBlQ,KAAK0J,cAAcwG,eACnC/N,YAAanC,KAAKwJ,YAAY0C,WAC9BiE,aAAcF,EACd/N,MAAM,YACNiC,YAAanE,KAAK4I,cAAc,KAAOqH,EAASlP,IAChDqP,kBAAmB3L,GAAOzE,KAAKyM,kBAAkBhI,QAKtDzE,KAAKgK,YAAY,gBAChBhI,EAAA,OAAKE,MAAM,qBACTF,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQE,MAAM,+BAA+B4N,QAAS,IAAM9P,KAAKqJ,eAAa,WAIhFrH,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQE,MAAM,6BAA6B4N,QAAS,IAAM9P,KAAKyO,SAASzO,KAAKwI,WAAS,aAM1FxG,EAAA,OAAKE,MAAM,qBACTF,EAAA,OAAKE,MAAOlC,KAAKwJ,YAAY0C,aAAe,gBAAkBlM,KAAKgK,YAAY,YAAc,QAAU,UACrGhI,EAAA,UAAQE,MAAM,+BAA+B4N,QAAS,IAAM9P,KAAKqJ,eAAa,WAI/ErJ,KAAKwJ,YAAY0C,aAAe,gBAAkBlM,KAAKgK,YAAY,YAClEhI,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQE,MAAM,6BAA6BmO,SAAUlQ,OAAOoN,KAAKvN,KAAK4I,eAAe4E,SAAW,EAAGsC,QAAS,IAAM9P,KAAKyO,SAASzO,KAAKwI,WAAS,YAI9I,M,CAOd,qBAAA8H,GACE,OACEtO,EAAA,OAAKE,MAAM,gCACTF,EAAA,wBACE6D,SAAU7F,KAAK0J,cAAc6G,YAC7BzK,OAAQ9F,KAAK0J,cAAc8G,UAC3B9L,UAAW1E,KAAKwJ,YAAYiH,WAC5BL,kBAAmBxO,GAAS5B,KAAK4N,sBAAsBhM,KAEzDI,EAAA,OAAKE,MAAM,qBACTF,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQE,MAAM,+BAA+B4N,QAAS,IAAM9P,KAAKqJ,eAAa,WAIhFrH,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQE,MAAM,6BAA6B4N,QAAS,IAAM9P,KAAK0Q,mBAAiB,iB,CAS1F,mBAAAC,CACE/O,GAKAA,EAAMiM,2BACNjM,EAAMkM,kBACN,OAAQlM,EAAM+K,OAAOxL,KACnB,IAAK,OACHnB,KAAK4Q,SAAS,OACd,MACF,IAAK,SACH5Q,KAAKqJ,cACL,MACF,IAAK,OACHrJ,KAAKyO,SAASzO,KAAKuI,UACnB,MACF,IAAK,OACHvI,KAAK4Q,SAAS,OACd,MACF,IAAK,iBACH5Q,KAAK4Q,SAAS,MACd,M,CAKN,4BAAAC,CAA6BjP,GAC3BA,EAAMiM,2BACNjM,EAAMkM,kBACN,GAAIlM,EAAM+K,OAAOxL,MAAQ,mBAAoB,CAC3CnB,KAAKkO,yBAAyBtM,E,KACzB,CACL5B,KAAKiO,sBAAsBrM,E,EAG/B,qBAAM8O,GACJ,MAAMnJ,EAAc1C,GAAuB7E,KAAK2D,eAAeC,qBAC/D,MAAMkN,QAAe9Q,KAAKgE,eAAewD,UAASrH,OAAAC,OAAA,CAChDiG,UAAWsH,EAAsB3N,KAAKwJ,YAAYC,iBAAiB5D,UACnES,QAASqH,EAAsB3N,KAAKwJ,YAAYC,iBAAiB3D,QACjEkC,MAAOhI,KAAK2D,eAAeE,iBAAmB,GAC9C+D,MAAO5H,KAAKwJ,YAAY3B,MAAM0G,WAC9BzG,iBAAkB9H,KAAK2D,eAAeG,eAAiB,MAAQ9D,KAAK2D,eAAeC,sBAAwB,EAAI,MAAQ,MACvHmE,YAAa/H,KAAK2D,eAAeC,qBAAuB,IACrD2D,IAEL,MAAMwJ,QAAoBC,EAAyBF,GACnD9Q,KAAKiR,eAAe/P,KAAK6P,GACzB/Q,KAAKqJ,a,CAIP,cAAMuH,CAASM,GACblR,KAAKmR,gBAAgBD,GAErB,IACE,GAAI,CAAC,MAAO,MAAO,OAAOpQ,SAASd,KAAKwJ,YAAY4H,aAAc,CAChEpR,KAAK+I,cAAc7B,YAAYlH,KAAKwJ,YAAYrC,K,CAGlD,MAAMoD,EAAcvK,KAAKgK,YAAY,gBAAkBhK,KAAKqR,2BAA6B,GACzF,MAAMzJ,EAAQ5H,KAAKgK,YAAY,eAAiBhK,KAAKwJ,YAAY3B,MAAQlD,UACzE,MAAM2M,EAActR,KAAKgK,YAAY,gBAAkBhK,KAAKwJ,YAAY+H,eAAiB5M,UACzF,MAAMmM,QAAe9Q,KAAKgE,eAAe4M,SACvC5Q,KAAK6I,iBACLqI,EACAlR,KAAKwJ,YAAYC,iBAAiB5D,SAClC7F,KAAKwJ,YAAYC,iBAAiB3D,OAClC9F,KAAKC,UACLD,KAAK0J,cAAcwG,eACnBlQ,KAAKqK,aACLrK,KAAK0L,WACL1L,KAAK4L,SACL0F,EACAtR,KAAKwJ,YAAYgI,MACjBjH,EACA3C,GAEF,GAAIsJ,EAAU,CACZ,MAAMO,EAAoCC,EAAoBZ,GAC9D9Q,KAAK2R,eAAezQ,KAAKuQ,E,EAI3B,MAAOnN,G,SAGPtE,KAAK4R,mB,EAIT,eAAAT,CAAgBU,GACd,GAAI7R,KAAKgK,YAAY,gBAAiB,CACpChK,KAAK8R,UAAY,M,KACZ,CACL9R,KAAK8R,UAAYD,EAAe,iBAAmB,M,EAIvD,wBAAAR,GACE,OAAOrR,KAAK6I,iBAAiB0B,YAAY/I,MAAKX,GAAKA,EAAE0C,gBAAkBvD,KAAKwJ,YAAYuI,eAAczO,S,CAGxG,iBAAAsO,GACE5R,KAAK8R,UAAY,GACjBE,YAAW,KACThS,KAAKqJ,aAAa,GACjB,I,CAEL,MAAAtH,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,qBAAqB4N,QAAS,IAAM9P,KAAKqJ,gBACpDrH,EAAA,OAAKE,MAAO,eAAiBlC,KAAKuP,mBAAqB,uCAAyC,0CAC9FvN,EAAA,OAAKE,MAAM,6BACTF,EAAA,OAAKE,MAAM,eACTF,EAAA,MAAIE,MAAM,2CAA2ClC,KAAKuP,mBAAqBvP,KAAKwJ,YAAYyI,kBAAoBjS,KAAKwJ,YAAY0I,OACrIlQ,EAAA,UAAQY,KAAK,SAASV,MAAM,mBAAmB4N,QAAS,IAAM9P,KAAKqJ,eACjErH,EAAA,KAAGE,MAAM,YAKdlC,KAAKoP,cAAgBpP,KAAK6P,kBAE1B7P,KAAKqP,aAAerP,KAAK+P,iBAEzB/P,KAAKsP,aACJtN,EAAA,eACEmQ,mBAAoBnS,KAAKmS,mBACzBC,kBAAmBpS,KAAKC,UACxBoS,gBAAiBrS,KAAKqS,gBACtBP,UAAW9R,KAAK8R,UAChBlJ,cAAe5I,KAAK4I,cACpBvF,kBAAmBrD,KAAKqD,kBACxBqG,cAAe1J,KAAK0J,cACpBF,YAAaxJ,KAAKwJ,YAClBd,uBAAwB1I,KAAK0I,uBAC7BiD,SAAU3L,KAAK2L,SACf9C,iBAAkB7I,KAAK6I,iBACvByJ,qBAAsBtS,KAAKgK,YAAY,iBAAmBhK,KAAKgK,YAAY,YAC3EoG,kBAAmBxO,GAAS5B,KAAK6Q,6BAA6BjP,GAC9D2Q,gBAAiB3Q,GAAS5B,KAAK2Q,oBAAoB/O,KAItD5B,KAAKuP,mBAAqBvP,KAAKsQ,wBAA0B,M,aCpqBpE,MAAMkC,EAAqB,wtmJ,MCQdC,EAAe,M,8KAgB1BzS,KAAA0S,SAAmB,EACnB1S,KAAA2S,WAAqB,EACrB3S,KAAA4S,UAAoB,GAGZ5S,KAAA6S,cAAyB,MACzB7S,KAAA8S,kBAA6B,MAC7B9S,KAAA+I,cAAgB,IAAI/C,EAE5BhG,KAAA+S,WAAqB,GACrB/S,KAAAgT,WAAsB,MAetBhT,KAAAiT,oBAAsBjT,KAAKkT,gBAAgBC,KAAKnT,MAChDA,KAAAoT,kBAAoBpT,KAAKqT,cAAcF,KAAKnT,MAC5CA,KAAAsT,uBAAyBtT,KAAKuT,mBAAmBJ,KAAKnT,M,gDAxChB,M,kDAOa,G,kDAGjB,M,wBAgClC,iBAAAD,GACEyT,OAAOpK,iBAAiB,QAASpJ,KAAKsT,uB,CAGxC,gBAAApK,GACE,GAAIlJ,KAAKyT,aAAc,CACrB,IAAKzT,KAAKsH,aAAaoM,WAAY,CAEjC1B,YAAW,KACThS,KAAK2T,cAAc,MACnB3T,KAAK2F,aAAa,GACjB,E,GAKT,oBAAA2D,GACEkK,OAAOjK,oBAAoB,QAASvJ,KAAKsT,uB,CAI3C,kBAAAC,CAAmB3R,GACjB,MAAMgS,EAAiBhS,EAAME,OAE7B,IAAK9B,KAAK6T,QAAQC,SAASF,GAAiB,CAE1C5T,KAAK2T,cAAc,M,EAKvB,mBAAAI,CAAoBnS,GAClB,GAAIA,EAAM+K,OAAOqH,qBAAuBhU,KAAKiU,gBAAmBrS,EAAM+K,OAAOxL,MAAQ,cAAgBS,EAAM+K,OAAOqH,sBAAwBhU,KAAKiU,eAAiB,CAC9JjU,KAAK6S,cAAgB,MACrB7S,KAAK2F,a,EAKT,0BAAMuO,CAAqBtS,GACzB,IACE,GAAIA,EAAM+K,OAAOiC,YAAc5O,KAAKiU,eAAgB,CAClDjU,KAAK2T,cAAc,OACnB,M,CAGF,GAAI/R,EAAM+K,OAAOwH,YAAc,UAAYvS,EAAM+K,OAAOyH,WAAa,SAAU,CAC7ExS,EAAM+K,OAAOwH,UAAYnU,KAAKsH,aAAaI,UAC3C9F,EAAM+K,OAAOyH,SAAWxS,EAAM+K,OAAO0H,WACrC,GAAIrU,KAAKsU,cAAgBtU,KAAKuU,gBAAkB,GAAKvU,KAAKwU,gBAAkB,EAAG,CAC7ExU,KAAK2T,cAAc,K,MAEhB,CACL,GAAI3T,KAAKsU,cAAgBtU,KAAKuU,gBAAkB,GAAKvU,KAAKwU,gBAAkB,EAAG,CAC7ExU,KAAK2T,cAAc,K,KACd,CACL,MAAMxN,KAAEA,EAAIE,UAAEA,EAASC,QAAEA,EAAO8N,SAAEA,GAAaxS,EAAM+K,OACrD/F,QAAQC,IAAIV,EAAME,EAAWC,EAAS8N,GACtC,MAAMtD,QAAe9Q,KAAK+I,cAAc7C,gBAAgBC,EAAMiO,EAAU/N,EAAWC,GACnFtG,KAAKsH,aAAaH,KAAO2J,EAAO1J,UAAUD,KAC1CP,QAAQC,IAAIjF,EAAM+K,QAClB/F,QAAQC,IAAI,oB,EAIhB,GAAIjF,EAAM+K,OAAO0H,aAAerU,KAAKyU,kBAAmB,CAMtDzU,KAAK0U,oBAAoB9S,EAAM+K,QAC/B3M,KAAK2F,a,EAEP,MAAOrB,G,EAKX,WAAAqB,GACE3F,KAAK2U,eAAiB3U,KAAK2U,a,CAG7B,WAAAC,GACE,OAAO,IAAI7P,MAAO8P,S,CAGpB,mBAAAH,CAAoBrT,GAClBrB,KAAKsH,aAAaO,MAAQxG,EAAK+S,SAC/BpU,KAAKsH,aAAaI,UAAYrG,EAAK8S,UAAUjM,MAAM,KAAK4M,UAAU3M,KAAK,KACvE,IAAI4M,EAAW,IAAIhQ,KAAK/E,KAAKsH,aAAaI,WAC1CqN,EAASC,QAAQD,EAASxP,UAAYvF,KAAKiV,eAC3CjV,KAAKsH,aAAaK,QAAUoN,EAASG,cAAgB,KAAOH,EAASI,WAAa,GAAK,IAAMJ,EAASxP,S,CAIxG,cAAA6P,GACE,QAASpV,KAAKsH,aAAa+N,a,CAG7B,UAAA5B,GACE,OAAOzT,KAAKiU,iBAAmB,gB,CAGjC,oBAAAqB,GACE,OAAOtV,KAAKuV,iBAAmB,Y,CAGjC,YAAAtB,GACE,OAAOjU,KAAKsH,aAAayH,E,CAG3B,gBAAAyG,GACE,OAAOxV,KAAKsH,aAAamO,M,CAG3B,WAAAC,GACE,OAAO1V,KAAKsH,aAAa+D,I,CAG3B,eAAAoJ,GACE,OAAOzU,KAAKsH,aAAaO,K,CAG3B,oBAAA8N,GACE,OAAO,IAAI5Q,KAAK/E,KAAKsH,aAAaI,U,CAGpC,kBAAAkO,GACE,OAAO,IAAI7Q,KAAK/E,KAAKsH,aAAaK,Q,CAGpC,YAAA4N,GACE,OAAOvV,KAAKsH,aAAa4E,U,CAG3B,cAAA2J,G,QAEE,IAAIC,GAAS/J,EAAA/L,KAAKsH,gBAAY,MAAAyE,SAAA,SAAAA,EAAEgK,WAAWC,SAAShW,KAAKwV,oBACzD,IAAIS,EAAYjW,KAAKyT,aAAe,CAAEyC,MAAO,WAAc,GAC3D,OAAA/V,OAAAC,OAAAD,OAAAC,OAAAD,OAAAC,OAAA,IACK+V,EAAAnW,KAAKsH,gBAAY,MAAA6O,SAAA,SAAAA,EAAEJ,WAAWD,EAAO/U,KACrC+U,GACAG,E,CAIP,iBAAAG,CAAkBC,G,MAEhB,IAAIP,GAAS/J,EAAA/L,KAAKsH,gBAAY,MAAAyE,SAAA,SAAAA,EAAEgK,WAAWC,SAASK,GACpD,OAAAlW,OAAAC,OAAAD,OAAAC,OAAA,GAAYJ,KAAKsH,aAAayO,WAAWD,EAAO/U,KAAQ+U,E,CAG1D,WAAAQ,GACE,GAAItW,KAAKsH,aAAaU,OAAShI,KAAKsH,aAAaiP,cAAe,CAC9D,OAAOvW,KAAKoW,kBAAkB,Q,CAEhC,OAAO,I,CAGT,cAAAI,GACE,GAAIxW,KAAKsH,aAAamP,QAAS,CAC7B,OAAOzW,KAAKoW,kBAAkB,sB,CAEhC,OAAO,I,CAGT,WAAAM,CAAYC,GACV3W,KAAKsH,aAAasP,WAAaD,EAC/B3W,KAAK2F,a,CAIP,WAAAsP,GACE,OAAOjV,KAAKsH,aAAasP,U,CAG3B,WAAAC,GACE,IAAIC,EAAe9W,KAAK2V,uBACxB,IAAIoB,EAAoB,SAAW/W,KAAKyU,kBAAoB,IAAMqC,EAAavR,UAAY,KAAOuR,EAAa3B,WAAa,GAAK,IAAM2B,EAAa5B,cACpJ,IAAI8B,EAAgB7N,SAAS8N,cAAc,kBAC3C,IAAIC,EAAe/N,SAAS8N,cAAcF,GAC1C,IAAII,EAAM,CAAEC,IAAK,IAAKC,KAAM,IAAKC,MAAO,IAAKC,OAAQ,QACrD,GAAIL,GAAgBF,GAAiBE,EAAaM,yBAA2BR,EAAcQ,wBAAyB,CAClH,IAAIC,EAAoBT,EAAcQ,wBACtC,IAAIE,EAAeR,EAAaM,wBAChCxX,KAAK0S,SAAW1S,KAAK0S,UAAYgF,EAAaJ,MAC9CH,EAAIC,IAAMM,EAAaN,IAAMM,EAAaH,OAAS,EAAIvX,KAAK4S,UAAY6E,EAAkBL,IAAM,KAChGD,EAAIE,KAAOK,EAAaL,KAAOrX,KAAK0S,SAAW,EAAI1S,KAAK2S,WAAa,EAAI8E,EAAkBJ,KAAO,KAClGF,EAAIG,MAAQtX,KAAKiV,cAAgBjV,KAAK0S,SAAW1S,KAAK2S,WAAa,I,KAC9D,CACL/L,QAAQC,IAAI,8BAA+BkQ,E,CAG7C,OAAOI,C,CAGT,SAAAQ,CAAUC,GACR,OAAOA,EAAQC,WAAWD,GAAS,C,CAGrC,aAAAE,CAAclW,EAAYmW,GACxBnW,EAAMoM,iBACNpM,EAAMkM,kBACNlM,EAAMiM,2BAEN,GAAI7N,KAAKyT,cAAgBzT,KAAKsV,uBAAwB,CACpD,OAAO,I,CAGTtV,KAAK+S,WAAagF,EAClB/X,KAAKgT,WAAa,KAElBhT,KAAK2T,cAAc,OAEnB,GAAIoE,IAAS,OAAQ,CACnB/X,KAAKgY,SAAWpW,EAAMqW,SAAWrW,EAAMsW,QAAQ,GAAGD,QAClDjY,KAAKmY,SAAWvW,EAAMwW,SAAWxW,EAAMsW,QAAQ,GAAGE,QAClDpY,KAAKqY,YAAcrY,KAAK6T,QAAQ2D,wBAChC,MAAMc,EAAU,EAChB,MAAMC,EAAU,EAChBvY,KAAKwY,YAAc,CACjBzX,GAAIf,KAAKiU,eACTI,WAAYrU,KAAKyU,kBACjB2C,IAAKpX,KAAK2X,UAAU3X,KAAK6T,QAAQ4E,MAAMrB,KAAOmB,EAC9ClB,KAAMrX,KAAK2X,UAAU3X,KAAK6T,QAAQ4E,MAAMpB,MAAQiB,GAElDtY,KAAKwY,YAAYE,EAAI1Y,KAAKwY,YAAYnB,KACtCrX,KAAKwY,YAAYG,EAAI3Y,KAAKwY,YAAYpB,IACtCpX,KAAK4Y,WAAUzY,OAAAC,OAAA,GAAQJ,KAAKwY,aAC5BxY,KAAK6T,QAAQ4E,MAAMrB,IAAM,GAAGpX,KAAKwY,YAAYpB,QAC7CpX,KAAK6T,QAAQ4E,MAAMpB,KAAO,GAAGrX,KAAKwY,YAAYnB,SAC9CrX,KAAKsU,aAAe,KACpBtU,KAAK6Y,kBAAkB3X,KAAK,CAC1BH,GAAI,6BACJM,KAAMrB,KAAKwY,a,KAER,CACLxY,KAAK8Y,aAAe9Y,KAAK6T,QAAQkF,YACjC/Y,KAAKgZ,YAAchZ,KAAK6T,QAAQoF,WAChCjZ,KAAKgY,SAAWpW,EAAMqW,SAAWrW,EAAMsW,QAAQ,GAAGD,QAClDjY,KAAK6Y,kBAAkB3X,KAAK,CAC1BH,GAAI,6BACJM,KAAM,CACJN,GAAIf,KAAKiU,eACTI,WAAYrU,KAAKyU,kBACjB2C,IAAKpX,KAAK2X,UAAU3X,KAAK6T,QAAQ4E,MAAMrB,KACvCC,KAAMrX,KAAKgZ,YACXN,EAAG1Y,KAAKgY,SACRW,EAAG/W,EAAMwW,SAAWxW,EAAMsW,QAAQ,GAAGE,U,CAK3CjP,SAASC,iBAAiB,YAAapJ,KAAKiT,qBAC5C9J,SAASC,iBAAiB,YAAapJ,KAAKiT,qBAC5C9J,SAASC,iBAAiB,cAAepJ,KAAKiT,qBAE9C9J,SAASC,iBAAiB,UAAWpJ,KAAKoT,mBAC1CjK,SAASC,iBAAiB,UAAWpJ,KAAKoT,mBAC1CjK,SAASC,iBAAiB,YAAapJ,KAAKoT,kB,CAG9C,eAAAF,CAAgBtR,GACd,GAAI5B,KAAKgT,WAAY,CACnBhT,KAAKkZ,SAAWtX,EAAMqW,SAAWrW,EAAMsW,QAAQ,GAAGD,QAClD,IAAIkB,EAAYnZ,KAAKkZ,SAAWlZ,KAAKgY,SACrC,GAAIhY,KAAK+S,aAAe,OAAQ,CAC9B/S,KAAKoZ,SAAWxX,EAAMwW,SAAWxW,EAAMsW,QAAQ,GAAGE,QAClD,IAAIiB,EAAYrZ,KAAKoZ,SAAWpZ,KAAKmY,SACrCnY,KAAK6T,QAAQ4E,MAAMrB,IAAM,GAAGpX,KAAKwY,YAAYpB,IAAMiC,MACnDrZ,KAAK6T,QAAQ4E,MAAMpB,KAAO,GAAGrX,KAAKwY,YAAYnB,KAAO8B,MACrDnZ,KAAK4Y,WAAa,CAChB7X,GAAIf,KAAKiU,eACTI,WAAYrU,KAAKyU,kBACjB2C,IAAKpX,KAAKwY,YAAYpB,IAAMiC,EAC5BhC,KAAMrX,KAAKwY,YAAYnB,KAAO8B,GAEhCnZ,KAAK4Y,WAAWF,EAAI1Y,KAAK4Y,WAAWvB,KACpCrX,KAAK4Y,WAAWD,EAAI3Y,KAAK4Y,WAAWxB,IACpCpX,KAAK6Y,kBAAkB3X,KAAK,CAAEH,GAAI,YAAaM,KAAMrB,KAAK4Y,Y,KACrD,CACL,IAAIU,EAAWtZ,KAAK8Y,aACpB,GAAI9Y,KAAK+S,YAAc,YAAa,CAClCuG,EAAWtZ,KAAK8Y,aAAeK,EAC/BG,EAAWC,KAAKC,IAAIF,EAAUtZ,KAAKgY,SAAWhY,KAAK6T,QAAQkF,aAC3DO,EAAWC,KAAKE,IAAIzZ,KAAK0S,SAAW1S,KAAK2S,WAAY2G,GACrDtZ,KAAK6T,QAAQ4E,MAAMnB,MAAQ,GAAGgC,K,MACzB,GAAItZ,KAAK+S,YAAc,WAAY,CACxCuG,EAAWC,KAAKE,IAAIzZ,KAAK0S,SAAW1S,KAAK2S,WAAY3S,KAAK8Y,aAAeK,GACzE,IAAIO,EAAU1Z,KAAKgZ,aAAehZ,KAAK8Y,aAAeQ,GACtDtZ,KAAK6T,QAAQ4E,MAAMpB,KAAO,GAAGqC,MAC7B1Z,KAAK6T,QAAQ4E,MAAMnB,MAAQ,GAAGgC,K,CAEhCtZ,KAAK2Z,WAAaL,C,MAEf,CACL1S,QAAQC,IAAI,gC,EAIhB,aAAAwM,GACE,GAAIrT,KAAKgT,WAAY,CACnB,GAAIhT,KAAK+S,aAAe,OAAQ,CAK9B,GAAI/S,KAAKsU,aAAc,CACrBtU,KAAKuU,eAAiBgF,KAAKK,IAAI5Z,KAAK4Y,WAAWF,EAAI1Y,KAAKwY,YAAYE,GACpE1Y,KAAKwU,eAAiB+E,KAAKK,IAAI5Z,KAAK4Y,WAAWD,EAAI3Y,KAAKwY,YAAYG,E,CAEtE3Y,KAAK6Y,kBAAkB3X,KAAK,CAC1BH,GAAI,gBACJM,KAAIlB,OAAAC,OAAAD,OAAAC,OAAA,GACCJ,KAAK4Y,YAAU,CAClBzS,KAAMnG,KAAKsH,aAAaH,KACxB0S,SAAU7Z,KAAKsH,aAAasP,c,KAG3B,CACL,IAAIkD,EAAeP,KAAKQ,MAAM/Z,KAAK2Z,WAAa3Z,KAAK0S,UACrD,IAAIsH,EAAkBha,KAAKiV,cAC3B,GAAI+E,GAAmBF,EAAc,CACnC9Z,KAAK0W,YAAYoD,GACjB,GAAI9Z,KAAK+S,YAAc,WAAY,CACjC/S,KAAK6T,QAAQ4E,MAAMpB,KAAO,GAAGrX,KAAKgZ,aAAegB,EAAkBF,GAAgB9Z,KAAK0S,Y,CAK1F1S,KAAK6Y,kBAAkB3X,KAAK,CAC1BH,GAAI,mBACJM,KAAM,CACJN,GAAIf,KAAKiU,eACTI,YAAarU,KAAKyU,kBAClBiE,GAAI1Y,KAAK6T,QAAQ4E,MAAMpB,KAAK/U,QAAQ,KAAM,IAC1CqW,GAAI3Y,KAAK6T,QAAQ4E,MAAMrB,IAAI9U,QAAQ,KAAM,IACzC6D,KAAMnG,KAAKsH,aAAaH,KACxB0S,SAAU7Z,KAAKsH,aAAasP,cAGhC5W,KAAK6T,QAAQ4E,MAAMnB,MAAQ,GAAGwC,EAAe9Z,KAAK0S,SAAW1S,KAAK2S,c,KAC7D,CACL3S,KAAK6T,QAAQ4E,MAAMpB,KAAO,GAAGrX,KAAKgZ,gBAClChZ,KAAK6T,QAAQ4E,MAAMnB,MAAQ,GAAGwC,EAAe9Z,KAAK0S,SAAW1S,KAAK2S,c,OAGjE,CACL/L,QAAQC,IAAI,8B,CAEd7G,KAAKgT,WAAa,MAClB7J,SAASI,oBAAoB,YAAavJ,KAAKiT,qBAC/C9J,SAASI,oBAAoB,YAAavJ,KAAKiT,qBAC/C9J,SAASI,oBAAoB,cAAevJ,KAAKiT,qBAEjD9J,SAASI,oBAAoB,UAAWvJ,KAAKoT,mBAC7CjK,SAASI,oBAAoB,UAAWvJ,KAAKoT,mBAC7CjK,SAASI,oBAAoB,YAAavJ,KAAKoT,kB,CAGjD,UAAApS,CAAWK,GACTrB,KAAKia,gBAAgB/Y,KAAKG,E,CAG5B,aAAAsS,CAAcuG,GACZ,GAAIla,KAAKsV,wBAA0BtV,KAAKsH,aAAaoM,WAAY,CAC/D,OAAO,I,CAGT,GAAIwG,EAAU,CAEZ,IAAIlD,EAAgB7N,SAAS8N,cAAc,4BAC3C,IAAIQ,EAA4CT,EAAcQ,wBAC9D,IAAIa,EAAsCrY,KAAK6T,QAAQ2D,wBACvD,IAAI2C,EAAW1C,EAAkBF,OAAS,EAAIE,EAAkBL,IAIhE,GAAIiB,EAAYjB,IAAM+C,EAAU,CAC9Bna,KAAK8S,kBAAoB,K,KACpB,CACL9S,KAAK8S,kBAAoB,I,EAK7B,GAAIoH,EAAU,CACZla,KAAKoa,eAAelZ,KAAK,CACvBC,IAAK,YACL6S,oBAAqBhU,KAAKiU,gB,CAG9BjU,KAAK6S,cAAgBqH,EACrBla,KAAK2F,a,CAGP,MAAA5D,GAEE,IAAIsY,EAASra,KAAK6V,iBAClB,IAAIyE,EAAWta,KAAKsW,cACpB,IAAIiE,EAAcva,KAAKwW,iBAEvB,OACExU,EAACC,EAAI,CACHC,MAAO,gBAAgBlC,KAAKyT,cAAgBzT,KAAKsV,uBAAyB,WAAa,MAAM+E,EAAOG,UACpG/B,MAAOzY,KAAK6W,cACZ9V,GAAI,SAAWf,KAAKiU,gBAGpBjS,EAAA,OACEE,MAAO,qBAAqBlC,KAAKoV,iBAAmB,eAAiB,KACrEqD,MAAO,CAAEgC,gBAAiBJ,EAAOnE,OACjCwE,aAAc9Y,GAAS5B,KAAK8X,cAAclW,EAAO,QACjD+Y,YAAa/Y,GAAS5B,KAAK8X,cAAclW,EAAO,UAEjD0Y,EAAWtY,EAAA,OAAKE,MAAM,yBAAyBuW,MAAO,CAAEgC,gBAAiBH,EAASpE,SAAkB,KACpGqE,EAAcvY,EAAA,OAAKE,MAAM,4BAA4BuW,MAAO,CAAEgC,gBAAiBF,EAAYrE,SAAkB,KAE9GlU,EAAA,OAAKE,MAAM,oBAAoBwY,aAAc9Y,GAAS5B,KAAK8X,cAAclW,EAAO,QAAS+Y,YAAa/Y,GAAS5B,KAAK8X,cAAclW,EAAO,SACtI5B,KAAK0V,eAER1T,EAAA,OACEE,MAAM,kCACNwY,aAAc9Y,GAAS5B,KAAK8X,cAAclW,EAAO,YACjD+Y,YAAa/Y,GAAS5B,KAAK8X,cAAclW,EAAO,cAElDI,EAAA,OACEE,MAAM,mCACNwY,aAAc9Y,GAAS5B,KAAK8X,cAAclW,EAAO,aACjD+Y,YAAa/Y,GAAS5B,KAAK8X,cAAclW,EAAO,eAEjD5B,KAAK6S,cACJ7Q,EAAA,2BACE4Y,mBAAoB5a,KAAK4a,mBACzBvI,gBAAiBrS,KAAKqS,gBACtBzG,SAAU5L,KAAK4L,SACf1J,MAAM,MACNoF,aAActH,KAAKsH,aACnBuT,cAAe7a,KAAK8S,oBAEpB,K,0CC9eZ,MAAMgI,EAA0B,kujK,MCUnBC,EAAoB,M,sKAYvB/a,KAAAgb,gBAAyB,IAAIjW,MAAOG,SAAS,EAAG,EAAG,EAAG,GACtDlF,KAAAib,aAAe,IAAIjV,E,+CAXM,M,+EAGK,M,yBAStC,YAAAiO,GACE,OAAOjU,KAAKsH,aAAayH,E,CAG3B,iBAAAmM,GACE,OAAOlb,KAAKsH,aAAauD,Y,CAG3B,cAAAsQ,GACE,OAAOnb,KAAKsH,aAAa8T,K,CAG3B,UAAAC,GACE,OAAOC,EAAYtb,KAAKsH,aAAaiU,QAASvb,KAAKqS,iBAAiB3Q,I,CAEtE,YAAA8Z,GACE,OAAOF,EAAYtb,KAAKsH,aAAaiU,QAASvb,KAAKqS,iBAAiBoJ,Y,CAEtE,WAAAC,GACE,OAAO1b,KAAKsH,aAAaiU,QAAU,GAAGvb,KAAKsH,aAAaqU,UAAU3b,KAAKwb,eAAe,IAAI,KAAKxb,KAAKmb,sBAAsBnb,KAAKqb,eAAiBrb,KAAKmb,gB,CAGvJ,YAAAS,GACE,OAAO5b,KAAKsH,aAAaU,K,CAG3B,eAAA6T,GACE,OAAO7b,KAAKsH,aAAaiP,a,CAG3B,aAAAuF,GACE,OAAO9b,KAAKsH,aAAayU,W,CAG3B,cAAAC,GACE,OAAOhc,KAAKsH,aAAa2U,a,CAG3B,eAAAC,GACE,OAAOlc,KAAKsH,aAAa6U,W,CAG3B,cAAAC,GACE,OAAOpc,KAAKsH,aAAayK,Y,CAG3B,WAAAsK,GACE,OAAOrc,KAAKsH,aAAa8D,S,CAG3B,YAAAkR,GACE,OAAOtc,KAAKsH,aAAamJ,U,CAG3B,oBAAA8L,GACE,OAAOvc,KAAKsH,aAAa1D,mB,CAG3B,YAAA4Y,GACE,OAAOxc,KAAKiU,iBAAmB,gB,CAGjC,WAAAwI,GACE,OAAOzc,KAAKsH,aAAamO,SAAW,Y,CAGtC,YAAAiH,GACE,OAAO1c,KAAKsH,aAAamO,SAAW,a,CAGtC,kBAAAkH,GACE,OAAO3c,KAAKsH,aAAamO,SAAW,WAAazV,KAAKsH,aAAamO,SAAW,oB,CAGhF,SAAAmH,GACE,OAAO5c,KAAKsH,aAAaO,K,CAG3B,mBAAAgV,CAAoB3Z,GAGlB,OAAOlD,KAAKsH,aAAakE,UAAUhK,MAAKwK,GAAgBA,EAAaC,cAAczK,MAAKC,GAAQA,EAAKV,KAAOmC,K,CAG9G,eAAA4Z,GACE,OAAO9c,KAAKsH,aAAa6E,eAAe,uBAAyBnM,KAAKsH,aAAa+E,mBAAmBmB,M,CAGxG,UAAAuP,GACE,IAAK/c,KAAKgd,cAAe,CACvB,IAAIlY,EAAK,IAAIC,KAAK/E,KAAKgc,kBACvBlX,EAAGI,SAAS,EAAG,EAAG,EAAG,GACrBlF,KAAKgd,cAAgBlY,EAAG+P,S,CAE1B,IAAK7U,KAAKid,YAAa,CACrB,IAAInY,EAAK,IAAIC,KAAK/E,KAAKkc,mBACvBpX,EAAGI,SAAS,EAAG,EAAG,EAAG,GACrBlF,KAAKid,YAAcnY,EAAG+P,S,CAExB,GAAI7U,KAAKyc,eAAiBzc,KAAK0c,eAAgB,CAC7C,OAAO,K,CAET,GAAI1c,KAAKgd,eAAiBhd,KAAKgb,gBAAkBhb,KAAKgb,gBAAkBhb,KAAKid,YAAa,CACxF,OAAO,I,KACF,CACL,OAAO,K,EAIX,WAAAC,GACE,GAAIld,KAAKyc,eAAiBzc,KAAKgb,gBAAkBhb,KAAKid,YAAa,CACjE,OAAO,I,KACF,CACL,OAAO,K,EAIX,qBAAArP,CAAsBhM,GACpBA,EAAMiM,2BACNjM,EAAMkM,kBACN,MAAMJ,EAA8B9L,EAAM+K,OAC1C3M,KAAKsH,aAAYnH,OAAAC,OAAAD,OAAAC,OAAA,GAAQJ,KAAKsH,cAAiBoG,EAAIrM,K,CAIrD,iBAAA8b,GAEEnd,KAAKsH,aAAa4K,MAAQ,YAC1BlS,KAAKod,oBAAoB,e,CAG3B,mBAAAC,CAAoBvY,GAClB,OAAOA,EAAGoQ,cAAgB,KAAOpQ,EAAGqQ,WAAa,EAAI,IAAM,KAAOrQ,EAAGqQ,WAAa,GAAK,KAAOrQ,EAAGS,WAAa,EAAI,IAAM,IAAMT,EAAGS,S,CAGnI,aAAA+X,GACE,IAAIzX,EAAW,IAAId,KACnBc,EAASX,SAAS,EAAG,EAAG,EAAG,GAC3B,IAAIqY,EAAgBvd,KAAKqd,oBAAoBxX,GAE7C,IAAIC,EAAS,IAAIf,KACjBe,EAAOkP,QAAQlP,EAAOP,UAAY,GAClCO,EAAOZ,SAAS,EAAG,EAAG,EAAG,GACzB,IAAIsY,EAAcxd,KAAKqd,oBAAoBvX,GAE3C,IAAI2X,EAAY,CACd1O,GAAI,GACJ1D,KAAM,GACN3D,UAAW6V,EACX5V,QAAS6V,EACThS,UAAWxL,KAAKsH,aAAakE,UAC7BkS,oBAAqB1d,KAAKsH,aAAayH,GACvCmD,MAAO,gBAAkBlS,KAAKsH,aAAayH,GAAK,MAAQ/O,KAAKsH,aAAa+D,KAC1Ea,WAAY,WACZzC,iBAAkB,CAChB5D,SAAUA,EACV0K,YAAa,GACbzK,OAAQA,EACR0K,UAAW,GACXN,eAAgB,EAChByN,UAAW,KACXpb,QAAS,oDAIbvC,KAAKod,oBAAoB,WAAYK,E,CAGvC,qBAAAG,GACEhX,QAAQC,IAAI,2B,CAGd,sBAAAgX,GACEjX,QAAQC,IAAI,4B,CAEd,iBAAAiX,GACE9d,KAAK+d,aAAa7c,KAAKlB,KAAKsH,aAAaH,MACzCP,QAAQC,IAAI,e,CAGd,8BAAMmX,GACJ,IACEhe,KAAK8R,UAAY,eACX9R,KAAKib,aAAa5T,mBAAmBrH,KAAKsH,cAChDtH,KAAKoa,eAAelZ,KAAK,CACvBC,IAAK,aACL6S,oBAAqBhU,KAAKiU,iBAE5BjU,KAAK8R,UAAY,GACjBlL,QAAQC,IAAI,wB,CACZ,MAAOvC,G,EAKX,iCAAA2Z,GACEje,KAAKod,oBAAoB,c,CAG3B,WAAAc,GACE,MAAMC,GAAgBne,KAAKsH,aAAaO,MACxC,IAAIuW,EAAoB,GAExB,IAAK,MAAM3c,KAAQzB,KAAKsH,aAAakE,UAAW,CAC9C,IAAK,MAAM6S,KAAgB5c,EAAKwK,cAAe,CAC7C,GAAIkS,IAAiBE,EAAatd,GAAI,CACpCqd,EAAaE,SAAW7c,EAAKC,KAC7B0c,EAAaG,UAAYF,EAAa3c,KACtC0c,EAAaI,WAAa/c,EAC1B,OAAO2c,C,GAKb,OAAOA,C,CAET,mBAAAhB,CAAoBqB,EAAWC,EAAW,MACxC,MAAMzO,EAAWjQ,KAAKke,cACtB,IAAI7c,EAAOqd,EAAWA,EAAW1e,KAAKsH,aACtCjG,EAAK6K,WAAauS,EAClB,GAAI,CAAC,MAAO,MAAO,OAAO3d,SAASd,KAAKsH,aAAa8J,aAAc,CACjE/P,EAAKmK,UAAY,CAACyE,EAASuO,W,CAE7Bxe,KAAK2e,iBAAiBzd,KAAK,CACzBC,IAAK,MACLE,KAAIlB,OAAAC,OAAAD,OAAAC,OAAA,GACCiB,GAAI,CACP6Q,MAAO,mBAAmBjC,EAASqO,YAAYrO,EAASsO,gBAI5Dve,KAAKoa,eAAelZ,KAAK,CACvBC,IAAK,aACL6S,oBAAqBhU,KAAKiU,gB,CAI9B,cAAA2K,GACE,OACE5c,EAAA,OAAKE,MAAO,yBAAyBlC,KAAK6a,cAAgB,kBAAoB,gBAC5E7Y,EAAA,OAAKE,MAAM,oBACTF,EAAA,OAAKE,MAAM,uEACTF,EAAA,OAAK6c,IAAK7e,KAAKsH,aAAawX,OAAOC,KAAMC,IAAI,OAAO9c,MAAO,eAC3DF,EAAA,KAAGE,MAAO,YAAalC,KAAKsH,aAAaqU,UAAY3b,KAAKsH,aAAa2X,oBAAsBjf,KAAKsH,aAAaiK,iBAEjHvP,EAAA,OAAKE,MAAM,yBACRgd,EAAkBlf,KAAK4L,SAAS5C,MAChChJ,KAAK8b,kBAGV9Z,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,oBACTF,EAAA,QAAME,MAAM,oBAAkB,QAC7BlC,KAAKgc,iBAAgB,MAAIha,EAAA,QAAME,MAAM,oBAAkB,SACvDlC,KAAKkc,oBAGTlc,KAAKoc,kBACJpa,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,oBACTF,EAAA,QAAME,MAAM,oBAAkB,kBAC7BlC,KAAKoc,mBAIXpc,KAAKkb,qBACJlZ,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,oBACTF,EAAA,QAAME,MAAM,oBAAkB,eAC7BlC,KAAKkb,sBAIXlb,KAAKmb,kBACJnZ,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,8BACTF,EAAA,QAAME,MAAM,oBAAkB,WAC7BlC,KAAK0b,gBAIX1b,KAAKqc,eACJra,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,oBACTF,EAAA,QAAME,MAAM,oBAAkB,eAC7BlC,KAAKqc,gBAIXrc,KAAK4b,eACJ5Z,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,8BACTF,EAAA,QAAME,MAAM,oBAAkB,UAC7BlC,KAAK4b,iBAGR,KACH5b,KAAK6b,kBACJ7Z,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,8BACTF,EAAA,QAAME,MAAM,oBAAkB,qBAC7BlC,KAAK6b,oBAGR,KAEJ7Z,EAAA,OAAKE,MAAM,oBACTF,EAAA,OAAKE,MAAM,iDAAiDid,KAAK,SAC/Dnd,EAAA,UACEY,KAAK,SACLV,MAAM,uBACN4N,QAASsP,IACPpf,KAAKmd,mBAAmB,EAE1B9M,UAAWrQ,KAAKsH,aAAa+X,aAE7Brd,EAAA,KAAGE,MAAM,4BAA8B,SAEzCF,EAAA,UACEY,KAAK,SACLV,MAAM,uBACN4N,QAASsP,IACPpf,KAAKsd,eAAe,EAEtBjN,UAAWrQ,KAAKsH,aAAa+X,aAE7Brd,EAAA,KAAGE,MAAM,mCAAqC,aAE/ClC,KAAK+c,aACJ/a,EAAA,UACEY,KAAK,SACLV,MAAM,2BACN4N,QAASsP,IACPpf,KAAK4d,uBAAuB,EAE9BvN,UAAWrQ,KAAKsH,aAAa+X,aAE7Brd,EAAA,KAAGE,MAAM,4BAA8B,aAEvC,KACHlC,KAAKkd,cACJlb,EAAA,UACEY,KAAK,SACLV,MAAM,2BACN4N,QAASsP,IACPpf,KAAK6d,wBAAwB,EAE/BxN,UAAWrQ,KAAKsH,aAAa+X,aAE7Brd,EAAA,KAAGE,MAAM,+BAAiC,cAE1C,KACJF,EAAA,UACEY,KAAK,SACLV,MAAM,qBACN4N,QAASsP,IACPpf,KAAK8d,mBAAmB,EAE1BzN,UAAWrQ,KAAKsH,aAAa+X,aAAerf,KAAK4a,oBAEjD5Y,EAAA,KAAGE,MAAM,+BAAiC,a,CAQtD,oBAAAod,GACE,OACEtd,EAAA,OAAKE,MAAO,gCAAgClC,KAAK6a,cAAgB,kBAAoB,gBACnF7Y,EAAA,UACEY,KAAK,SACLV,MAAM,qEACN4N,QAASsP,IACPpf,KAAKod,oBAAoB,cAAc,GACxC,sBAIFpd,KAAK8c,kBACJ9a,EAAA,UACEY,KAAK,SACLV,MAAM,qEACN4N,QAASsP,IACPpf,KAAKod,oBAAoB,gBAAgB,GAC1C,mCAID,KACJpb,EAAA,UACEY,KAAK,SACLV,MAAM,gEACN4N,QAASsP,IACPpf,KAAKod,oBAAoB,cAAc,GACxC,e,CAQT,cAAAmC,GAEE,OACEvd,EAAA,OAAKE,MAAO,0BAA0BlC,KAAK6a,cAAgB,kBAAoB,gBAC7E7Y,EAAA,wBACE4D,aAAc,KACdZ,UAAWhF,KAAKsH,aAAakY,WAC7Bva,YAAajF,KAAKsH,aAAamY,aAC/Btb,YAAanE,KAAKsH,aAClBzB,SAAU7F,KAAKgc,iBACflW,OAAQ9F,KAAKkc,kBACbxX,UAAW1E,KAAKsc,eAChBlM,kBAAmBxO,GAAS5B,KAAK4N,sBAAsBhM,KAEzDI,EAAA,OAAKE,MAAM,oBACTF,EAAA,OAAKE,MAAM,iDAAiDid,KAAK,SAC/Dnd,EAAA,UACEqO,SAAUrQ,KAAK8R,YAAc,SAC7BlP,KAAK,SACLV,MAAM,uBACN4N,QAASsP,IACPpf,KAAKge,0BAA0B,GAGhChe,KAAK8R,YAAc,SAAW9P,EAAA,KAAGE,MAAM,sCAA2CF,EAAA,KAAGE,MAAM,0CAA4C,UAG1IF,EAAA,UACEY,KAAK,SACLV,MAAM,kBACN4N,QAASsP,IACPpf,KAAKie,mCAAmC,GACzC,sBAIHjc,EAAA,UACEY,KAAK,SACLV,MAAM,sBACN4N,QAASsP,IACPpf,KAAK8d,mBAAmB,GAG1B9b,EAAA,KAAGE,MAAM,+BAAiC,a,CAQtD,MAAAH,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAO,oBAAoBlC,KAAK6a,cAAgB,sBAAwB,MAC3E7Y,EAAA,OAAKE,MAAO,iBAAiBlC,KAAK6a,cAAgB,iBAAmB,yBAEtE7a,KAAK2c,qBAAuB3c,KAAKuf,iBAAmB,KACpDvf,KAAKwc,eAAiBxc,KAAKsf,uBAAyB,MACnDtf,KAAK2c,uBAAyB3c,KAAKwc,eAAiBxc,KAAK4e,iBAAmB,K,aCvetF,MAAMc,EAA4B,+vvK,MCQrBC,EAAsB,M,sPAIP,G,uEAGI,e,4EAM9B,iBAAA5f,GACEC,KAAK4f,aAAe,CAClB3U,WAAYjL,KAAK6f,aAAa9e,GAC9B2B,qBAAsB1C,KAAK6f,aAAaC,WAAW,GAAGpd,qBACtDqI,SAAU,EACVI,WAAY,EACZ3H,KAAMxD,KAAK6f,aAAaC,WAAW,GAAGC,OACtC1d,aAAcrC,KAAK6f,aAAane,KAChCkJ,WAAY5K,KAAK6f,aAAaC,WAAW,GAAGE,UAC5CC,cAAejgB,KAAK6f,aAAaC,WAAW,GAAGI,UAC/C1d,YAAaxC,KAAK6f,aAAard,YAC/BC,UAAWzC,KAAK6f,aAAapd,UAC7B0d,eAAgB,MAChBC,oBAAqB,GAEvB,GAAIpgB,KAAKmE,YAAa,CACpB,IAAK,MAAOhD,EAAKI,KAAUpB,OAAOkgB,QAAQrgB,KAAKmE,aAAc,CAC3DnE,KAAK4f,aAAaze,GAAOI,C,GAK/B,mBAAA+e,CAAoB/e,GAClB,OAAOvB,KAAK6f,aAAaC,WAAWte,MAAK+e,GAAaA,EAAU7d,uBAAyBnB,G,CAG3F,yBAAMif,GACJxgB,KAAK4f,aAAYzf,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAK4f,cAAY,CACpBpc,KAAMxD,KAAKygB,yBAEbzgB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,qBACLuL,WAAY,OACZrL,KAAMrB,KAAK4f,c,CAIf,oBAAAa,GACE,IAAIjd,EAAOxD,KAAK4f,aAAaQ,oBAC7B,GAAIpgB,KAAK4f,aAAaO,eAAgB,CACpC,OAAOngB,KAAK4f,aAAa7U,WAAa,EAAIvH,EAAOxD,KAAKkQ,eAAiB1M,C,CAEzE,OAAOxD,KAAKsgB,oBAAoBtgB,KAAK4f,aAAald,sBAAsBqd,M,CAG1E,WAAAW,CAAY9e,GACV5B,KAAK4f,aAAaO,eAAiB,KACnC,MAAMQ,EAAe/e,EAAME,OAC3B,IAAI8e,EAAaD,EAAapf,MAC9B,MAAMsf,EAAe,WACrB,IAAKA,EAAaC,KAAKF,GAAa,CAClCA,EAAaA,EAAWte,QAAQ,UAAW,IAC3Cqe,EAAapf,MAAQqf,C,CAEvB,GAAIA,IAAeD,EAAapf,MAAO,CACrCvB,KAAKsB,iBAAiB,OAAQM,E,EAIlC,gBAAAN,CAAiBH,EAAKsD,GACpB,GAAItD,IAAQ,uBAAwB,CAClC,MAAM4f,EAAW/gB,KAAKsgB,oBAAoB7b,EAAI3C,OAAOP,OACrDvB,KAAK4f,aAAYzf,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAK4f,cAAY,CACpBze,CAACA,GAAMsD,EAAI3C,OAAOP,MAClBqJ,WAAYmW,EAASf,UACrBC,cAAec,EAASb,UACxB1c,KAAMud,EAAShB,Q,KAEZ,CACL/f,KAAK4f,aAAYzf,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAK4f,cAAY,CACpBze,CAACA,GAAMsD,EAAI3C,OAAOP,QAAU,GAAK,EAAI6C,SAASK,EAAI3C,OAAOP,Q,CAG7D,GAAIJ,IAAQ,QAAUsD,EAAI3C,OAAOP,QAAU,GAAI,CAC7CvB,KAAK4f,aAAYzf,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAK4f,cAAY,CACpBzU,WAAY,G,CAGhB,GAAIhK,IAAQ,OAAQ,CAClBnB,KAAK4f,aAAaQ,oBAAsBpgB,KAAK4f,aAAa7U,WAAa,EAAI3G,SAASK,EAAI3C,OAAOP,OAASvB,KAAKkQ,eAAiB9L,SAASK,EAAI3C,OAAOP,M,CAEpJvB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,qBACLuL,WAAYvL,EACZE,KAAMrB,KAAK4f,c,CAIf,YAAAoB,GACEhhB,KAAKiB,gBAAgBC,KAAK,CAAEC,IAAK,YAAaE,KAAMrB,KAAK4f,eACzD5f,KAAKsB,iBAAiB,aAAc,CAAEQ,OAAQ,CAAEP,MAAO,OACvDvB,KAAKihB,sBAAsB/f,KAAK,CAAEC,IAAK,gBAAiBE,KAAM,I,CAGhE,MAAAU,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,4CACTF,EAAA,YAAOhC,KAAK6f,aAAane,MACzBM,EAAA,cAAYO,QAASvC,KAAK6f,aAAard,YAAcxC,KAAK6f,aAAapd,aAEzET,EAAA,OAAKE,MAAM,+BACTF,EAAA,OAAKE,MAAM,SACTF,EAAA,YAAUE,MAAM,qBACdF,EAAA,UAAQE,MAAM,wBAAwBnB,GAAI4B,IAAMK,SAAUyB,GAAOzE,KAAKsB,iBAAiB,uBAAwBmD,IAC5GzE,KAAK6f,aAAaC,WAAW3c,KAAIod,GAChCve,EAAA,UAAQT,MAAOgf,EAAU7d,qBAAsBO,SAAUjD,KAAK4f,aAAald,uBAAyB6d,EAAU7d,sBAC3G6d,EAAU7d,2BAMrBV,EAAA,OAAKE,MAAM,qBACTF,EAAA,YAAUE,MAAM,iDACdF,EAAA,SACEY,KAAK,OACLV,MAAM,wBACNX,MAAOvB,KAAK4f,aAAa7U,WAAa,EAAI/K,KAAK4f,aAAapc,KAAOxD,KAAK4f,aAAapc,KAAOxD,KAAKkQ,eACjGnP,GAAI4B,IACJE,YAAY,OACZC,QAAUlB,GAAsB5B,KAAK0gB,YAAY9e,KAEnDI,EAAA,QAAME,MAAM,yBAAyBgd,EAAkBlf,KAAK4L,SAAS5C,QAEvEhH,EAAA,YAAUE,MAAM,6BACdF,EAAA,UAAQE,MAAM,wBAAwBnB,GAAI4B,IAAMK,SAAUyB,GAAOzE,KAAKsB,iBAAiB,WAAYmD,IAChGzE,KAAK8I,gBAAgB3F,KAAI9B,GACxBW,EAAA,UAAQT,MAAOF,EAAKiC,UAAWL,SAAUjD,KAAK4f,aAAa7U,YAAc1J,EAAKiC,WAC3EjC,EAAKkC,oBAOfvD,KAAKmC,cAAgB,gBAAkBnC,KAAKmC,cAAgB,WAC3DH,EAAA,OAAKE,MAAM,iBACTF,EAAA,YAAUE,MAAM,qBACdF,EAAA,UAAQqO,SAAUrQ,KAAK4f,aAAapc,OAAS,EAAGtB,MAAM,wBAAwBnB,GAAI4B,IAAMK,SAAUyB,GAAOzE,KAAKsB,iBAAiB,aAAcmD,IAC1Iyc,MAAMC,KAAK,CAAE3T,OAAQxN,KAAKohB,oBAAsB,IAAK,CAAChC,EAAGiC,IAAMA,IAAGle,KAAIke,GACrErf,EAAA,UAAQT,MAAO8f,EAAGpe,SAAUjD,KAAK4f,aAAazU,aAAekW,GAC1DA,QAMT,KAEHrhB,KAAKmC,cAAgB,eACpBH,EAAA,OAAKE,MAAM,mCACTF,EAAA,YAAUE,MAAM,qBACdF,EAAA,SAAOY,KAAK,QAAQlB,KAAK,gBAAgBH,MAAM,IAAIyB,SAAUyB,GAAOzE,KAAKsB,iBAAiB,aAAcmD,GAAMiB,QAAS1F,KAAK4f,aAAazU,aAAe,MAG1J,KAEHnL,KAAKmC,cAAgB,eAAiBnC,KAAKmC,cAAgB,gBAC1DH,EAAA,UAAQqO,SAAUrQ,KAAK4f,aAAapc,OAAS,EAAGZ,KAAK,SAASV,MAAM,8BAA8B4N,QAAS,IAAM9P,KAAKghB,gBAAc,QAGlI,O,gFC5LhB,MAAMM,EAAqB,ohkJ,MCedC,EAAe,M,0EAUlBvhB,KAAAwhB,kBAAoB,CAAC,eAAgB,WAAY,gB,wEAP3B,e,mDAEJ,G,2CAGS,G,wBACK,E,CAGxC,iBAAAzhB,GACEC,KAAKmL,WAAanL,KAAKmQ,aAAalE,cAAcuB,OAClDxN,KAAK4I,cAAgB,IAAIsY,MAAMlhB,KAAKmL,YAAYsW,KAAK,GACrDzhB,KAAK0hB,mBAAqB,IAAIR,MAAMlhB,KAAKmL,YAAYsW,KAAKzhB,KAAKmL,W,CAGjE,gBAAAwW,CAAiB/f,EAA4CnB,GAC3DmB,EAAMiM,2BACNjM,EAAMkM,kBACN,MAAMJ,EAA8B9L,EAAM+K,OAC1C,IAAItL,EAAIlB,OAAAC,OAAA,GAAQsN,EAAIrM,MACpB,GAAIqM,EAAIhB,aAAe,aAAc,CACnC,IAAIkV,EAAWvgB,EAAK8J,WACpBnL,KAAK4I,cAAcnI,GAASmhB,EAC5B5hB,KAAK6hB,yBAAyBphB,E,CAEhCY,EAAK6J,eAAiBlL,KAAKmQ,aAAapP,GACxCM,EAAKe,iBAAmBpC,KAAKmQ,aAAazO,KAC1CL,EAAKygB,UAAY9hB,KAAKmQ,aAAa2R,UACnC9hB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAKuM,EAAIvM,IACTE,KAAMA,EACNqL,WAAYgB,EAAIhB,Y,CAGpB,wBAAAmV,CAAyBE,GACvB,MAAMC,EAA6CC,GAC1CjiB,KAAK4I,cAAcsZ,QACxB,CAACC,EAAKC,EAAOC,IAASA,IAAQJ,EAAgBE,EAAMC,EAAQD,GAC5D,GAGJniB,KAAK0hB,mBAAqB1hB,KAAK0hB,mBAAmBve,KAAI,CAACmf,EAAU7hB,KAC/D,GAAIA,IAAUshB,EAAe,CAC3B,OAAOO,C,CAET,MAAMC,EACJP,EAA0CvhB,GAC5C,MAAM+hB,EACJxiB,KAAKmL,WAAaoX,EAEpB,OAAOC,EAAiB,EAAIA,EAAiB,CAAC,G,CAGlD,MAAAzgB,GACE,OACEC,EAACC,EAAI,KACFjC,KAAKwhB,kBAAkB1gB,SAASd,KAAKmC,cACpCH,EAAA,OAAKE,MAAM,kCACRlC,KAAKmQ,aAAazO,MAGtB1B,KAAKmQ,aAAasS,UAAUtf,KAAI,CAACmf,EAAU7hB,KAC1C,GAAI6hB,EAASxC,aAAe,KAAM,CAChC,OACE9d,EAAA,8BACE8G,gBAAiB9I,KAAK8I,gBACtB5G,MACElC,KAAKwhB,kBAAkB1gB,SAASd,KAAKmC,aACjC,OACA,GAENyJ,SAAU5L,KAAK4L,SACfsE,eAAgBlQ,KAAKkQ,eACrB2P,aAAcyC,EACdlB,oBAAqBphB,KAAK0hB,mBAAmBjhB,GAC7C0B,YAAanC,KAAKmC,YAClBgC,YACGnE,KAAKmE,aAAenE,KAAKmE,YAAY,KAAOme,EAASvhB,KACtD,KAEFqP,kBAAoB3L,GAAQzE,KAAK2hB,iBAAiBld,EAAKhE,I,KAGtD,CACL,OAAO,I,kBCtGnB,MAAMiiB,EAAgB,o3uI,MCOTC,EAAU,M,+HAWb3iB,KAAA4I,cAAwC,GACxC5I,KAAAqU,YAAsB,EAEtBrU,KAAA4iB,YAAc,IAAI7d,K,iKANS,G,iBACH,K,CAOhC,iBAAAhF,GACEC,KAAK4iB,YAAY1d,SAAS,EAAG,EAAG,EAAG,E,CAIrC,+BAAA2d,CAAgCjhB,GAC9B5B,KAAK8iB,gBAAkBlhB,EAAM+K,OAAOmW,e,CAItC,QAAAC,CAASnhB,GACP,IAAIsB,EAAStB,EAAM+K,OAAOzJ,OAC1B,IAAIsH,EAAWxK,KAAKyK,wBAAwBvH,GAC5C,IAAKsH,EAASwY,SAAU,CACtBhjB,KAAKijB,eAAezY,GACpBwH,YAAW,KACThS,KAAKkjB,aAAahgB,EAAO,GACxB,G,KACE,CACLlD,KAAKkjB,aAAahgB,E,EAKtB,qBAAAigB,CAAsBvhB,GAEpB5B,KAAKojB,gBAAgBxhB,EAAM+K,OAAOtL,MAClCrB,KAAK2U,e,CAGP,YAAAuO,CAAahgB,GACXlD,KAAKqjB,iBAAiBniB,KAAK,CACzBC,IAAK,mBACLJ,GAAImC,EACJogB,SAAU,QAAUpgB,G,CAIxB,uBAAAuH,CAAwBvH,GACtB,OAAOlD,KAAKujB,aAAa/X,UAAUhK,MAAKwK,GAC/BhM,KAAKwjB,iBAAiBxX,GAAcxK,MAAKC,GAAQzB,KAAK4c,UAAUnb,KAAUyB,K,CAIrF,eAAAugB,CAAgBzX,GACd,OAAOA,EAAatK,I,CAGtB,aAAAgiB,CAAc1X,GACZ,OAAOA,EAAajL,E,CAGtB,qBAAA4iB,CAAsB3X,GACpB,OAAOhM,KAAKwjB,iBAAiBxX,GAAcwB,M,CAG7C,gBAAAgW,CAAiBxX,GACf,OAAQA,GAAgBA,EAAaC,eAAkB,E,CAGzD,WAAA2X,CAAY3T,GACV,OAAOA,EAASvO,I,CAGlB,SAAAkb,CAAU3M,GACR,OAAOA,EAASlP,E,CAGlB,WAAA8iB,CAAYC,EAAe5gB,GACzB,OAAO4gB,EAActiB,MAAKuiB,GAAiB/jB,KAAK4c,UAAUmH,KAAmB7gB,G,CAG/E,cAAA8gB,GACE,OAAOhkB,KAAKujB,aAAaU,a,CAG3B,eAAAb,CAAgBxL,GACd5X,KAAKujB,aAAaU,cAAgBjkB,KAAKujB,aAAaU,cAAcrjB,QAAO0G,GAAgBA,EAAayH,KAAO,mBAC7G/O,KAAKujB,aAAaU,cAAgBjkB,KAAKujB,aAAaU,cAAcC,OAAOtM,E,CAG3E,sBAAAuM,CAAuBjhB,EAAQkhB,GAC7B,MAAO,QAAUlhB,EAAS,IAAMkhB,EAAYxB,W,CAG9C,qBAAAyB,CAAsBC,GACpB,OAAOtkB,KAAKgkB,iBAAiBpjB,QAAO0G,GAAgBgd,EAAS5c,YAAcJ,EAAaK,S,CAI1F,WAAA0B,GACE,IAAIkb,EAAMvkB,KAAKgkB,iBAAiBQ,WAAUC,GAAMA,EAAG1V,KAAO,mBAC1D,GAAIwV,KAAS,EAAG,CACdvkB,KAAKgkB,iBAAiBU,OAAOH,EAAK,GAClC3d,QAAQC,IAAI,kBACZ7G,KAAK2U,e,EAIT,WAAAgQ,CAAY3Y,GACV,IAAIuB,EAAOpN,OAAOoN,KAAKvN,KAAK4I,eAC5B,IAAIgc,EAAWC,EAEf,GAAI7kB,KAAK4I,cAAc2E,EAAK,IAAIqV,YAAc5iB,KAAK4I,cAAc2E,EAAK,IAAIqV,YAAa,CACrFgC,EAAY,IAAI7f,KAAK/E,KAAK4I,cAAc2E,EAAK,IAAIqV,aACjDiC,EAAU,IAAI9f,KAAK/E,KAAK4I,cAAc2E,EAAK,IAAIqV,Y,KAC1C,CACLgC,EAAY,IAAI7f,KAAK/E,KAAK4I,cAAc2E,EAAK,IAAIqV,aACjDiC,EAAU,IAAI9f,KAAK/E,KAAK4I,cAAc2E,EAAK,IAAIqV,Y,CAGjD5iB,KAAKskB,SAAW,CACdvV,GAAI,iBACJ1D,KAAMrJ,EAAA,iBACN8iB,MAAO,GACP1J,MAAO,GACP2J,eAAgB,MAChBC,eAAgB,QAChBtd,UAAWkd,EAAU1P,cAAgB,IAAMlV,KAAKilB,kBAAkBL,EAAUzP,WAAa,GAAK,IAAMnV,KAAKilB,kBAAkBL,EAAUrf,WACrIoC,QAASkd,EAAQ3P,cAAgB,IAAMlV,KAAKilB,kBAAkBJ,EAAQ1P,WAAa,GAAK,IAAMnV,KAAKilB,kBAAkBJ,EAAQtf,WAC7HkR,QAAS,GACTzO,MAAO,GACPpE,oBAAqB,EACrBiE,MAAO7H,KAAK4I,cAAc2E,EAAK,IAAIrK,OACnCuN,WAAY,GACZmG,YAAaiO,EAAUD,GAAa,MACpC/Z,aAAc,EACd0Q,QAAS,GACThF,cAAe,GACfzL,KAAM,GACNiR,YAAa,GACb3Q,UAAW,GACX2G,aAAc,GACdG,MAAO,mBACP1G,UAAW,CAACQ,GACZsS,SAAUtS,EAAatK,KACvBwK,WAAY,cACZuJ,OAAQ,uBACRhM,iBAAkB,CAChB5D,SAAU,KACV0K,YAAa,GACbzK,OAAQ,KACR0K,UAAW,GACXN,gBAAiB2U,EAAUD,GAAa,MACxCM,SAAU,MACV3iB,QAAS,oDAIb,IAAI4iB,EAAanZ,EAAatK,KAAO,IAAM1B,KAAK4jB,YAAY5jB,KAAK6jB,YAAY7jB,KAAKwjB,iBAAiBxX,GAAehM,KAAK4I,cAAc2E,EAAK,IAAIrK,SAC9IlD,KAAKskB,SAASrS,kBAAoB,mBAAqBkT,EACvDnlB,KAAKskB,SAASpS,OAASiT,EACvBnlB,KAAKskB,SAAS7a,iBAAiB3D,OAAS,IAAIf,KAAK/E,KAAKskB,SAAS3c,QAAU,aACzE3H,KAAKskB,SAAS7a,iBAAiB5D,SAAW,IAAId,KAAK/E,KAAKskB,SAAS5c,UAAY,aAC7E1H,KAAKskB,SAAS7a,iBAAiB8G,YAAcvQ,KAAKolB,WAAWplB,KAAKskB,SAAS7a,iBAAiB5D,UAC5F7F,KAAKskB,SAAS7a,iBAAiB+G,UAAYxQ,KAAKolB,WAAWplB,KAAKskB,SAAS7a,iBAAiB3D,QAC1F9F,KAAKskB,SAAS7T,YAAa,IAAI1L,MAAOsgB,cACtCrlB,KAAKskB,SAASvO,WAAa/V,KAAKujB,aAAa+B,oBAE7C,IAAIjZ,EAAqBrM,KAAKqkB,sBAAsBrkB,KAAKskB,UACzD,GAAIjY,EAAmBmB,OAAQ,CAC7BxN,KAAKskB,SAASjY,mBAAqBA,C,CAGrCrM,KAAKgkB,iBAAiBuB,KAAKvlB,KAAKskB,UAChC,OAAOtkB,KAAKskB,Q,CAGd,iBAAAW,CAAkBO,GAChB,OAAOA,GAAO,EAAI,IAAMA,EAAMA,C,CAGhC,UAAAJ,CAAWnd,EAAMwd,EAAS,WACxB,OAAOxd,EAAK1C,UAAY,IAAM0C,EAAK5C,eAAeogB,EAAQ,CAAEngB,MAAO,UAAa,IAAM2C,EAAKiN,a,CAG7F,cAAAwQ,GACE1lB,KAAKujB,aAAaU,cAAgBjkB,KAAKujB,aAAaU,cAAcrjB,QAAO+kB,GAAUA,EAAO5W,KAAO,mBACjG/O,KAAKskB,SAAW,I,CAGlB,SAAAsB,CAAU1iB,EAAQkhB,EAAapY,GAC7B,IAAKhM,KAAK6lB,sBAAwBzB,EAAYxB,aAAe5iB,KAAK4iB,YAAY/N,UAAW,CACvF,IAAIiR,EAAS9lB,KAAKmkB,uBAAuBjhB,EAAQkhB,GACjD,GAAIpkB,KAAK4I,cAAcuD,eAAe2Z,GAAS,CAC7C9lB,KAAK0lB,wBACE1lB,KAAK4I,cAAckd,GAC1B9lB,KAAK2U,gBACL,M,MACK,GAAIxU,OAAOoN,KAAKvN,KAAK4I,eAAe4E,QAAU,GAAKxN,KAAKqU,YAAcnR,EAAQ,CACnFlD,KAAK0lB,iBACL1lB,KAAK4I,cAAgB,GACrB5I,KAAK4I,cAAckd,GAAO3lB,OAAAC,OAAAD,OAAAC,OAAA,GAAQgkB,GAAW,CAAElhB,WAC/ClD,KAAKqU,WAAanR,EAClBlD,KAAK2U,e,KACA,CAEL3U,KAAK4I,cAAckd,GAAO3lB,OAAAC,OAAAD,OAAAC,OAAA,GAAQgkB,GAAW,CAAElhB,WAC/ClD,KAAK2kB,YAAY3Y,GACjBhM,KAAK4I,cAAgB,GACrB5I,KAAK2U,gBACL3U,KAAK+lB,oBAAoB/lB,KAAKskB,S,GAKpC,mBAAAyB,CAAoB1kB,GAClBuF,QAAQC,IAAIxF,E,CAId,aAAAsT,GACE3U,KAAK2F,aAAe3F,KAAK2F,W,CAG3B,4BAAAqgB,CAA6BC,EAAkBC,EAAsB,MAAOzlB,GAC1E,OAAOT,KAAKujB,aAAa4C,KAAKhjB,KAAIijB,GAChCpkB,EAAA,OAAKE,MAAO,qCAAqC+jB,EAAW,IAAMG,EAAQC,OAAOD,EAAQC,MAAQrmB,KAAKsmB,MAAQ,aAAe,MAC1HJ,EACClkB,EAAA,YACGokB,EAAQ5iB,KAAK/C,GAAOqhB,UACrB9f,EAAA,WACAA,EAAA,cAAMokB,EAAQ5iB,KAAK/C,GAAO+C,OACrB,K,CAQf,wBAAA+iB,CAAyBrjB,EAAgB8I,GAEvC,OAAOhM,KAAKujB,aAAa4C,KAAKhjB,KAAIijB,GAChCpkB,EAAA,OACEE,MAAO,iBAAiB,QAAUgB,EAAS,IAAMkjB,EAAQC,OAAOD,EAAQC,MAAQrmB,KAAKsmB,MAAQ,aAAe,MAC1GtmB,KAAK8iB,kBAAoB5f,EAAS,IAAMkjB,EAAQC,IAAM,oBAAsB,MAC1ErmB,KAAK4I,cAAcuD,eAAenM,KAAKmkB,uBAAuBjhB,EAAQkjB,IAAY,cAAgB,KACtGtW,QAAS,IAAM9P,KAAK4lB,UAAU1iB,EAAQkjB,EAASpa,M,CAKrD,cAAAiX,CAAejX,GACbA,EAAagX,UAAYhX,EAAagX,SACtChjB,KAAK2U,e,CAGP,kBAAA6R,CAAmBxa,EAAcvL,GAC/B,GAAIT,KAAK2jB,sBAAsB3X,IAAiB,EAAG,CACjD,OAAO,I,CAET,OACEhK,EAAA,OAAKE,MAAM,WACTF,EAAA,OACEE,MAAO,sEAAsE,YAAclC,KAAK0jB,cAAc1X,KAC9G8D,QAAS,IAAM9P,KAAKijB,eAAejX,IAEnChK,EAAA,OAAKE,MAAO,gBAAiBlC,KAAKyjB,gBAAgBzX,IAAoB,IAAChK,EAAA,KAAGE,MAAO,eAAe8J,EAAagX,SAAW,OAAS,aAElIhjB,KAAKgmB,6BAA6B,YAAchmB,KAAK0jB,cAAc1X,GAAe,KAAMvL,G,CAK/F,kBAAAgmB,CAAmBza,G,MAEjB,IAAKA,EAAagX,SAAU,CAC1B,MAAO,E,CAGT,OAAOjX,EAAA/L,KAAKwjB,iBAAiBxX,MAAa,MAAAD,SAAA,SAAAA,EAAE5I,KAAI1B,GAC9CO,EAAA,OAAKE,MAAM,WACTF,EAAA,OACEE,MAAO,mEAAmElC,KAAK2jB,sBAAsB3X,IAAiB,EAAI,OAAS,MAAM,QAAUhM,KAAK4c,UAAUnb,KAAO,YAC9JzB,KAAK4c,UAAUnb,IAE1BO,EAAA,WAAMhC,KAAK2jB,sBAAsB3X,IAAiB,EAAIhM,KAAKyjB,gBAAgBzX,GAAgBhM,KAAK4jB,YAAYniB,KAE7GzB,KAAKumB,yBAAyBvmB,KAAK4c,UAAUnb,GAAOuK,K,CAK3D,WAAA0a,GACE,OAAO1mB,KAAKujB,aAAa/X,UAAUrI,KAAI,CAAC6I,EAAcvL,IAAU,CAACT,KAAKwmB,mBAAmBxa,EAAcvL,GAAQT,KAAKymB,mBAAmBza,K,CAGzI,MAAAjK,G,MAEE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,iBACRlC,KAAK0mB,cACN1kB,EAAA,OAAKE,MAAM,6CACR6J,EAAA/L,KAAKgkB,oBAAgB,MAAAjY,SAAA,SAAAA,EAAE5I,KAAImE,GAC1BtF,EAAA,qBACE4Y,mBAAoB5a,KAAKujB,aAAa3I,mBACtCvI,gBAAiBrS,KAAKqS,gBACtBzG,SAAU5L,KAAK4L,SAAQ,oBACJtE,EAAayH,GAChCzH,aAAcA,EACdqf,iBAAkB3mB,KAAKgkB,uB,aCrUvC,MAAM4C,EAAkB,k13I,MCOXC,EAAY,M,mHAMvB,iBAAAC,CAAkB3lB,EAAKE,EAAO,IAC5BrB,KAAK+mB,YAAY7lB,KAAK,CAAEC,MAAKE,Q,CAG/B,MAAAU,GACE,OACEC,EAACC,EAAI,CAACC,MAAM,mBACVF,EAAA,OAAKE,MAAM,kEACTF,EAAA,OACEE,MAAM,YACN4N,QAAS,IAAM9P,KAAK8mB,kBAAkB,eAEtC9kB,EAAA,KAAGE,MAAM,iBACTF,EAAA,qBAMHhC,KAAKujB,aAAa4C,KAAKhjB,KAAKijB,GAC3BpkB,EAAA,OAAKE,MAAM,iCACTF,EAAA,OACEE,MAAO,2CACLkkB,EAAQC,MAAQrmB,KAAKsmB,MAAQ,aAAe,MAG7CF,EAAQY,mB,mBCnCVC,EACJ,wBAAMC,CAAmBxb,EAAoBrF,EAAmBC,GACrE,IACE,MAAMC,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,EAAO,CACT,MAAMlF,KAAEA,SAAeyF,EAAMC,KAAK,gCAAgCR,IAAS,CACzEmF,aACArF,YACAC,YAEF,GAAIjF,EAAK2F,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAM5F,EAAK2F,a,CAEvB,OAAOhH,KAAKmnB,uBAAuB9lB,EAAK+F,U,KACnC,CACL,MAAM,IAAIH,MAAM,gB,EAElB,MAAO3C,GACPsC,QAAQtC,MAAMA,GACd,MAAM,IAAI2C,MAAM3C,E,EAGb,wBAAM8iB,CAAmB1b,EAAoB2b,EAAuBpX,EAAeqV,GACxF,IACE,MAAM/e,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,EAAO,CACT,MAAMlF,KAAEA,SAAeyF,EAAMC,KAAK,2CAA2CR,IAAS,CACpFmF,aACA2b,kBAEF,GAAIhmB,EAAK2F,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAM5F,EAAK2F,a,CAEvB,OAAOhH,KAAKsnB,sBAAsBjmB,EAAM4O,EAAUqV,E,KAC7C,CACL,MAAM,IAAIre,MAAM,gB,EAElB,MAAO3C,GACPsC,QAAQtC,MAAMA,GACd,MAAM,IAAI2C,MAAM3C,E,EAGb,gBAAMijB,CAAWjW,EAAqBkW,EAAoB5f,GAC/D,IACE,MAAMrB,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,EAAO,CACT,MAAMlF,KAAEA,SAAeyF,EAAMC,KAAK,+BAA+BR,IAAS,CACxE+K,cACAkW,aACA5f,UAEF,GAAIvG,EAAK2F,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAM5F,EAAK2F,a,CAEvBJ,QAAQC,IAAIxF,GACZ,OAAOA,C,KACF,CACL,MAAM,IAAI4F,MAAM,gB,EAElB,MAAO3C,GACPsC,QAAQtC,MAAMA,GACd,MAAM,IAAI2C,MAAM3C,E,EAGZ,0BAAAmjB,CAA2BC,GACjC,MAAMC,EAAQ,iBACd,OAAOD,EAAIplB,QAAQqlB,EAAO,G,CAGpB,qBAAAL,CAAsBjmB,EAAW4O,EAAUqV,GACjD,MAAMxU,EAA0B,GAChCzP,EAAK+F,UAAUwgB,SAASC,IACtBA,EAASC,iBAAiBF,SAASnmB,IACjC,IAAIuK,EAA8B,CAChC+b,aAActmB,EAAKumB,eACnBjZ,GAAItN,EAAK+lB,WACTnc,KAAM5J,EAAKwmB,WACXT,WAAY/lB,EAAK+lB,WACjB9f,UAAWjG,EAAKymB,gBAChBvgB,QAASlG,EAAKymB,gBACd3W,eAAgB9P,EAAK0mB,SACrB1S,OAAQ,WACRhM,iBAAkB,CAChB5D,SAAUlB,UACVmB,OAAQnB,UACRyjB,kBAAmB,EACnBC,gBAAiB,EACjB9X,YAAa,GACbC,UAAW,GACXN,eAAgB,GAElB0G,WAAY,EACZpL,UAAWyE,EACX8F,WAAYuP,EACZ9C,eAAgB,GAChB8F,MAAOtoB,KAAKuoB,cAAc9mB,EAAKumB,eAAgB/X,IAEjDjQ,KAAKwoB,qBAAqB/mB,EAAMuK,EAAcsZ,EAAqBrV,GACnEjQ,KAAKyoB,oBAAoBzc,GACzB8E,EAAOyU,KAAKvZ,EAAa,GACzB,IAEJ,OAAO8E,C,CAET,mBAAA2X,CAAoBzc,GAClBA,EAAavC,iBAAiB5D,SAAW,IAAId,KAAKiH,EAAatE,UAAY,aAC3EsE,EAAavC,iBAAiB8G,YAAc5C,EAAsB3B,EAAavC,iBAAiB5D,UAChGmG,EAAavC,iBAAiB2e,kBAAoBpc,EAAavC,iBAAiB5D,SAASgP,UAEzF7I,EAAavC,iBAAiB3D,OAAS,IAAIf,KAAKiH,EAAarE,QAAU,aACvEqE,EAAavC,iBAAiB+G,UAAY7C,EAAsB3B,EAAavC,iBAAiB3D,QAC9FkG,EAAavC,iBAAiB4e,gBAAkBrc,EAAavC,iBAAiB3D,OAAO+O,UAErF7I,EAAavC,iBAAiByG,eAAiBlE,EAAa4K,U,CAEtD,aAAA2R,CAAcG,EAAkBzY,GACtC,OAAOA,EAASzO,MAAKC,GAAQzB,KAAKynB,2BAA2BhmB,EAAKC,QAAU1B,KAAKynB,2BAA2BiB,KAAW3nB,IAAM,I,CAEvH,oBAAAynB,CAAqB/mB,EAAWuK,EAA6BsZ,EAAqB9Z,GACxF,MAAM4W,EAA0B,GAChC3gB,EAAKknB,iBAAiBf,SAASgB,IAC7B,GAAIA,EAAKC,qBAAuBD,EAAKE,iBAAkB,CACrD,MAAM3C,EAAOjW,EAAe0Y,EAAKviB,UAAWuiB,EAAKtiB,SACjD8b,EAAMmD,KAAK,CACT+C,MAAOtc,EAAasc,MACpB7S,OAAQ,uBACR/N,UAAWkhB,EAAKviB,UAChBqiB,SAAUE,EAAKlnB,KACfmG,MAAO+gB,EAAKhhB,MACZD,QAASihB,EAAKtiB,QACdsQ,WAAYuP,EACZpX,GAAI,iBACJ1D,KAAM,GACNrD,MAAO,GACPyO,QAAS,GACTF,cAAe,GACf7C,WAAY,KACZqC,WAAYuP,EACZ9Z,cAEFQ,EAAarE,QAAUihB,EAAKtiB,QAC5B0F,EAAa4K,WAAauP,C,KAG9Bna,EAAawW,eAAiBJ,C,CAGxB,sBAAA+E,CAAuB4B,GAC7B,IAAIC,EAA8C,GAClDD,EAAMnB,SAAQ3f,IACZ,IAAIghB,EAAU,IAAIlkB,KAAKkD,EAAKA,MAC5BghB,EAAQ/jB,SAAS,EAAG,EAAG,EAAG,GAC1B8jB,EAAeC,EAAQpU,WAAa,CAClCqU,WAAY,GACZC,QAASlhB,EAAKgB,YACf,IAEH,OAAO+f,C,WC5IKI,EAA8BD,GAC5C,IAAIE,EAAUC,EAAOH,EAAS,oBAC9B,OAAOE,EAAQE,OAAO,WACxB,CCxBA,MAAMC,EAAkB,445I,MCUXC,EAAY,M,0KAefzpB,KAAA0pB,YAAsB,GACtB1pB,KAAA2pB,WAAuC,GACvC3pB,KAAAW,UAAsC,GACtCX,KAAA4pB,oBAAsB,IAAI3C,E,mHALF,M,2BACM,E,CAKtC,iBAAAlnB,GACE,IACEC,KAAK6pB,sBACL,IAAK7pB,KAAKujB,aAAa3I,mBAAoB,CACzC5a,KAAK8pB,+B,EAEP,MAAOxlB,GACPsC,QAAQtC,MAAM,8BAA+BA,E,EAGzC,mBAAAulB,GACN7pB,KAAKW,UAAY,GACjBX,KAAKujB,aAAa/X,UAAUoc,SAAQpd,IAClCxK,KAAKW,UAAYX,KAAKW,UAAUujB,UAAU1Z,EAASyB,cAAc,G,CAI7D,mCAAM6d,GAEZ,MAAM3D,EAAOnmB,KAAKujB,aAAawG,sBACzB/pB,KAAKgqB,kBAAkB7D,E,CAGvB,uBAAM6D,CAAkB7D,GAC9B,IAAK,MAAME,KAAOlmB,OAAOoN,KAAK4Y,GAAO,CACnC,MAAMrV,QAAe9Q,KAAK4pB,oBAAoBxC,mBAC5CpnB,KAAK0L,WACLiC,EAAsB,IAAI5I,MAAMshB,IAChCrmB,KAAKujB,aAAa/X,UAClBxL,KAAKujB,aAAa+B,qBAEpBtlB,KAAKiqB,sBAAqB9pB,OAAAC,OAAAD,OAAAC,OAAA,GAAQJ,KAAKiqB,uBAAqB,CAAE,CAACb,EAA8BjD,EAAKE,GAAK8C,UAAWrY,EAAOtD,Q,CAE3H5G,QAAQC,IAAI7G,KAAKiqB,sB,CAInB,8BAAAC,CAA+BtoB,GAC7B,MAAM8L,EAA8B9L,EAAM+K,OAC1C,MAAMtL,EAAOqM,EAAIrM,KACjBO,EAAMiM,2BACNjM,EAAMkM,kBAGN,GAAIJ,EAAIvM,MAAQ,sBAAuB,CACrCnB,KAAKujB,aAAa4C,KAAK3kB,MAAK6kB,IAC1B,GAAIA,EAAIzD,cAAgBxe,SAAS/C,EAAK8oB,cAAe,CACnD9D,EAAI+D,oBACJ,OAAO,I,KAGXpqB,KAAKqqB,Y,EAIT,gBAAAC,CAAiBlE,GACf,GAAIpmB,KAAKiqB,sBAAsB7D,EAAQC,MAAQ,EAAG,CAChDrmB,KAAK8mB,kBAAkB,gBACvB9U,YAAW,KACThS,KAAKuqB,qBAAqBrpB,KAAK,CAC7BC,IAAK,uBACLE,KAAM+kB,EAAQxD,aACd,GACD,I,EAMP,iBAAAkE,CAAkB3lB,EAAKE,EAAY,IACjCrB,KAAK+mB,YAAY7lB,KAAK,CAAEC,MAAKE,Q,CAG/B,gBAAAmpB,CAAiB5oB,GACf,MAAM+e,EAAe/e,EAAME,OAC3B,IAAIqoB,EAAexJ,EAAapf,MAGhC,MAAMkpB,EAASzqB,KAAK6T,QAAQoD,cAAc,qBAC1CwT,EAAOC,OACP,GAAIP,EAAc,CAChBnqB,KAAK8mB,kBAAkB,WAAYqD,E,EAIvC,iBAAAQ,GACE3qB,KAAK0pB,YAAc,GACnB1pB,KAAK2pB,WAAa,GAClB3pB,KAAKqqB,Y,CAGP,iBAAAO,CAAkBhpB,GAChB,MAAM+e,EAAe/e,EAAME,OAC3B,IAAIP,EAAQof,EAAapf,MAAMspB,OAC/B7qB,KAAK0pB,YAAcnoB,EACnBA,EAAQA,EAAMupB,cACd,GAAIvpB,IAAU,GAAI,CAChBvB,KAAK2qB,mB,KACA,CACL3qB,KAAK2pB,WAAa3pB,KAAKW,UAAUC,QAAOa,GAAQA,EAAKC,KAAKqpB,oBAAoBC,QAAQzpB,KAAW,G,CAEnGvB,KAAKqqB,Y,CAGP,kBAAAY,CAAmB/nB,GACjBlD,KAAK2qB,oBACL3qB,KAAKkrB,cAAchqB,KAAK,CAAEC,IAAK,WAAY+B,U,CAG7C,mBAAAma,CAAoBvY,GAClB,OAAOA,EAAGoQ,cAAgB,KAAOpQ,EAAGqQ,WAAa,EAAI,IAAM,KAAOrQ,EAAGqQ,WAAa,GAAK,KAAOrQ,EAAGS,WAAa,EAAI,IAAM,IAAMT,EAAGS,S,CAGnI,kBAAA4lB,GACE,IAAI7E,EAAQ,IAAIvhB,KAChBuhB,EAAMphB,SAAS,EAAG,EAAG,EAAG,GACxB,IAAImB,EAAYrG,KAAKqd,oBAAoBiJ,GACzCA,EAAMtR,QAAQsR,EAAM/gB,UAAY,GAChC+gB,EAAMphB,SAAS,EAAG,EAAG,EAAG,GACxB,IAAIoB,EAAUtG,KAAKqd,oBAAoBiJ,GACvC,MAAO,CACLvX,GAAI,GACJ1D,KAAM,GACNyZ,MAAO,GACP1J,MAAO,GACP4J,eAAgB,QAChBtd,UAAWrB,EACXsB,QAASrB,EACTkF,UAAWxL,KAAKujB,aAAa/X,UAC7B0G,MAAO,cACPhG,WAAY,eACZ6J,WAAY/V,KAAKujB,aAAa+B,oBAC9B7b,iBAAkB,CAChB5D,SAAU,IAAId,KAAKsB,GACnBkK,YAAa,GACbzK,OAAQ,IAAIf,KAAKuB,GACjBkK,UAAW,GACXN,eAAgB,EAChByN,UAAW,KACXpb,QAAS,I,CAKf,UAAA8nB,GACErqB,KAAK2F,aAAe3F,KAAK2F,W,CAG3B,MAAA5D,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,+DACTF,EAAA,OAAKE,MAAM,0CACPlC,KAAKujB,aAAa3I,oBAClB5Y,EAAA,OAAKE,MAAM,cAAc4N,QAAS,IAAM9P,KAAK8mB,kBAAkB,gBAAe,cAAc,UAAS,iBAAgB,SAASsE,MAAM,oBAClIppB,EAAA,KAAGE,MAAM,iBAGbF,EAAA,OAAKE,MAAM,cAAc4N,QAAS,IAAM9P,KAAK8mB,kBAAkB,YAAW,cAAc,UAAS,iBAAgB,SAASsE,MAAM,YAC9HppB,EAAA,KAAGE,MAAM,qBACTF,EAAA,SAAOE,MAAM,mBAAmBU,KAAK,OAAOI,SAAUhD,KAAKwqB,iBAAiBrX,KAAKnT,MAAOorB,MAAM,MAEhGppB,EAAA,OAAKE,MAAM,cAAc4N,QAAS,IAAM9P,KAAK8mB,kBAAkB,aAAY,cAAc,UAAS,iBAAgB,SAASsE,MAAM,SAC/HppB,EAAA,KAAGE,MAAM,mBAEXF,EAAA,OACEE,MAAM,cACN4N,QAAS,IAAM9P,KAAK8mB,kBAAkB,MAAO9mB,KAAKmrB,sBAAqB,cAC3D,UAAS,iBACN,SACfC,MAAM,sBAENppB,EAAA,KAAGE,MAAM,iBAGbF,EAAA,OAAKE,MAAM,wDACTF,EAAA,YAAUE,MAAO,gCAAgClC,KAAK0pB,aAAe,GAAK,OAAS,MACjF1nB,EAAA,SACEY,KAAK,OACLV,MAAM,wCACNnB,GAAG,YACHQ,MAAOvB,KAAK0pB,YACZ7mB,YAAY,YACZC,QAASlB,GAAS5B,KAAK4qB,kBAAkBhpB,KAE1C5B,KAAK0pB,cAAgB,GACpB1nB,EAAA,OACEE,MAAM,gCACN4N,QAAS,IAAM9P,KAAK2qB,oBAAmB,cAC3B,UAAS,iBACN,MAAK,sBACA,mBAEpB3oB,EAAA,KAAGE,MAAM,8BAET,KAEHlC,KAAK2pB,WAAWnc,OACfxL,EAAA,OAAKE,MAAM,yFACRlC,KAAK2pB,WAAWxmB,KAAI1B,GACnBO,EAAA,OAAKE,MAAM,uDAAuD4N,QAAS,IAAM9P,KAAKirB,mBAAmBxpB,EAAKV,KAC3GU,EAAKC,SAIV,QAIVM,EAAA,OAAKE,MAAM,+BACTF,EAAA,OAAKE,MAAM,mBACRlC,KAAKujB,aAAa8H,WAAWloB,KAAImoB,GAChCtpB,EAAA,OAAKE,MAAM,YAAYuW,MAAO,CAAEnB,MAAOgU,EAAUC,UAAY,GAAK,OAChEvpB,EAAA,OAAKE,MAAM,cAAcopB,EAAUE,eAIxCxrB,KAAKujB,aAAa4C,KAAKhjB,KAAIijB,GAC1BpkB,EAAA,OAAKE,MAAO,iCAAiC,OAASkkB,EAAQC,OAAOD,EAAQC,MAAQrmB,KAAKsmB,MAAQ,aAAe,KAAI,WAAYF,EAAQC,MACrIrmB,KAAKujB,aAAa3I,oBAClB5Y,EAAA,OAAKE,MAAM,qBACTF,EAAA,QACEE,MAAO,eAAelC,KAAKiqB,sBAAsB7D,EAAQC,MAAQD,EAAQqF,uBAAyB,EAAI,eAAiB,qBACvH3b,QAAS,IAAM9P,KAAKsqB,iBAAiBlE,IAEpCpmB,KAAKiqB,sBAAsB7D,EAAQC,MAAQD,EAAQqF,uBAI1DzpB,EAAA,OAAKE,MAAM,YAAYkkB,EAAQY,gBAC/BhlB,EAAA,OAAKE,MAAM,sBAAsBkkB,EAAQsF,UAAS,S,0CCnQhE,MAAMC,EAAkB,yi3I,MCeXC,EAAY,M,0EAMf5rB,KAAA6rB,YAAsB,EAGtB7rB,KAAAuQ,YAAsB,OACtBvQ,KAAAwQ,UAAoB,K,aATe,G,4CAGX,K,CAShC,mBAAA6M,CAAoBvY,GAClB,OACEA,EAAGoQ,cACH,KACCpQ,EAAGqQ,WAAa,EAAI,IAAM,KAC1BrQ,EAAGqQ,WAAa,GACjB,KACCrQ,EAAGS,WAAa,EAAI,IAAM,IAC3BT,EAAGS,S,CAIP,iBAAAxF,GACE,IAAI+E,EAAK,IAAIC,KACbD,EAAGI,SAAS,EAAG,EAAG,EAAG,GACrBJ,EAAGkQ,QAAQlQ,EAAGS,UAAY,GAC1B,GAAIvF,KAAKmE,YAAa,CACpB,GAAInE,KAAKmE,YAAY0B,SAAU,CAC7B7F,KAAK6F,SAAW,IAAId,KAAK/E,KAAKmE,YAAY0B,UAC1C7F,KAAK6F,SAASX,SAAS,EAAG,EAAG,EAAG,GAChClF,KAAKuQ,YAAcvQ,KAAK8rB,uBAAuB9rB,KAAK6F,S,CAEtD,GAAI7F,KAAKmE,YAAY2B,OAAQ,CAC3B9F,KAAK8F,OAAS,IAAIf,KAAK/E,KAAKmE,YAAY2B,QACxC9F,KAAK8F,OAAOZ,SAAS,EAAG,EAAG,EAAG,GAC9BlF,KAAKwQ,UAAYxQ,KAAK8rB,uBAAuB9rB,KAAK8F,O,EAGtD,GAAI9F,KAAK6F,UAAY7F,KAAK8F,OAAQ,CAChC9F,KAAK+rB,uBACL/rB,KAAKgsB,sBAAsB,oBAAqB,CAC9CnmB,SAAU7F,KAAK6F,SAASgP,UACxB/O,OAAQ9F,KAAK8F,OAAO+O,UACpBtE,YAAavQ,KAAKuQ,YAClBC,UAAWxQ,KAAKwQ,UAChBN,eAAgBlQ,KAAK6rB,a,EAK3B,oBAAAE,GACE/rB,KAAK6rB,YAActS,KAAK0S,OACrBjsB,KAAK8F,OAAO+O,UAAY7U,KAAK6F,SAASgP,WAAa,M,CAGxD,sBAAAiX,CAAuBhnB,GACrB,OACEA,EAAGS,UACH,IACAT,EAAGO,eAAe,UAAW,CAAEC,MAAO,UAAWwlB,cACjD,IACAhmB,EAAGoQ,a,CAIP,qBAAA8W,CAAsB7qB,EAAKE,EAAY,IACrCrB,KAAKksB,gBAAgBhrB,KAAK,CAAEC,MAAKE,Q,CAEnC,gBAAA8qB,CAAiB1nB,GACf,MAAM2nB,MAAEA,EAAKC,IAAEA,GAAQ5nB,EAAIkI,OAC3B3M,KAAK6F,SAAWumB,EAAMtmB,SACtB9F,KAAK8F,OAASumB,EAAIvmB,SAClB9F,KAAK+rB,uBACL/rB,KAAKgsB,sBAAsB,oBAAqB,CAC9CnmB,SAAU7F,KAAK6F,SAASgP,UACxB/O,OAAQ9F,KAAK8F,OAAO+O,UACpBtE,YAAa6b,EAAM7C,OAAO,eAC1B/Y,UAAW6b,EAAI9C,OAAO,eACtBrZ,eAAgBlQ,KAAK6rB,cAEvB7rB,KAAK2F,aAAe3F,KAAK2F,W,CAE3B,MAAA5D,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,gCACTF,EAAA,MAAIE,MAAM,kBAAgB,SAC1BF,EAAA,OAAKE,MAAM,kBACTF,EAAA,kBACE6D,SAAU7F,KAAK6F,SACfC,OAAQ9F,KAAK8F,OACbwmB,UAAS,KACTC,cAAgB9nB,IACdzE,KAAKmsB,iBAAiB1nB,EAAI,IAI7BzE,KAAK6rB,YACJ7pB,EAAA,QAAME,MAAM,kBACTlC,KAAK6rB,aACH7rB,KAAK6rB,YAAc,EAAI,UAAY,WACjC,KAMb7pB,EAAA,OAAKE,MAAM,6BAA6BlC,KAAKuC,S,aC7HrD,MAAMiqB,EAAgB,0urI,MCOTC,EAAU,M,4FAGrB,iBAAA3F,CAAkB3lB,EAAKE,EAAO,IAC5BrB,KAAK+mB,YAAY7lB,KAAK,CAAEC,MAAKE,Q,CAG/B,MAAAU,GACE,OACEC,EAACC,EAAI,CAACC,MAAM,kCACVF,EAAA,WACEA,EAAA,WACEA,EAAA,OAAKE,MAAM,gBACTF,EAAA,OAAKE,MAAM,qBAAmB,UAC9BF,EAAA,OAAKE,MAAM,sBAAsB4N,QAAS,IAAM9P,KAAK8mB,kBAAkB,kBACrE9kB,EAAA,KAAGE,MAAM,sBAEXF,EAAA,YAEFA,EAAA,OAAKE,MAAM,aACRlC,KAAK+V,WAAW5S,KAAIupB,GACnB1qB,EAAA,OAAKE,MAAM,cACTF,EAAA,OAAKE,MAAO,UAAUwqB,EAAWC,cAAelU,MAAO,CAAEgC,gBAAiBiS,EAAWxW,SACrFlU,EAAA,QAAME,MAAM,gBAAgBwqB,EAAWhrB,UAI7CM,EAAA,WACAA,EAAA,OAAKE,MAAM,QACTF,EAAA,OAAKE,MAAM,kBACTF,EAAA,OAAKE,MAAM,gCACTF,EAAA,OAAKE,MAAM,6BACTF,EAAA,2BAEFA,EAAA,OAAKE,MAAM,kBAAgB,mBAE7BF,EAAA,OAAKE,MAAM,aACTF,EAAA,OAAKE,MAAM,4BACTF,EAAA,QAAME,MAAM,kCAAgC,MAE9CF,EAAA,OAAKE,MAAM,kBACTF,EAAA,mDAGJA,EAAA,OAAKE,MAAM,aACTF,EAAA,OAAKE,MAAM,kBAAgB,UAC3BF,EAAA,OAAKE,MAAM,kBAAgB,SAE7BF,EAAA,OAAKE,MAAM,aACTF,EAAA,OAAKE,MAAM,qCAAmC,OAC9CF,EAAA,OAAKE,MAAM,kBAAgB,cAE7BF,EAAA,OAAKE,MAAM,aACTF,EAAA,OAAKE,MAAM,+BAA6B,MACxCF,EAAA,OAAKE,MAAM,kBAAgB,cAE7BF,EAAA,OAAKE,MAAM,gCACTF,EAAA,OAAKE,MAAM,qCACTF,EAAA,sBAEFA,EAAA,OAAKE,MAAM,kBACTF,EAAA,2C,aCpEpB,MAAM4qB,EAAgB,28oI,MCOTC,EAAU,M,0jBAqB4B,E,CAEjD,iBAAA9sB,GACEC,KAAK8sB,qB,CAEP,mBAAAA,GACE,IAAIC,EAAQ,EACZ,MAAMC,EAAgB7sB,OAAAC,OAAA,GAAQJ,KAAKQ,eAEnC,IAAK,MAAMW,KAAOnB,KAAK4I,cAAe,CACpC,IAAK,MAAMqkB,KAAQjtB,KAAK4I,cAAczH,GAAM,CAC1C,MAAMgK,EAAanL,KAAK4I,cAAczH,GAAK8rB,GAAM9hB,WACjD6hB,EAAiB7rB,GAAO+f,MAAM/V,GAAYsW,MAAM,E,EAIpDzhB,KAAKQ,cAAgBwsB,EACrBhtB,KAAKC,UAAY,GACjB,IAAK,MAAMkB,KAAOhB,OAAOoN,KAAKvN,KAAK4I,eAAgB,CACjD,IAAK,MAAMqkB,KAAQ9sB,OAAOoN,KAAKvN,KAAK4I,cAAczH,IAAO,CACvD,IAAK,IAAIkgB,EAAI,EAAGA,GAAKrhB,KAAK4I,cAAczH,GAAK8rB,GAAM9hB,WAAYkW,IAAK,CAClErhB,KAAKC,UAAUslB,KAAIplB,OAAAC,OAAA,CACjByB,UAAW,GACXqB,OAAQ,GACRE,WAAY,IACTpD,KAAK4I,cAAczH,GAAK8rB,I,CAG/BF,GAAS/sB,KAAK4I,cAAczH,GAAK8rB,GAAM9hB,WAAanL,KAAK4I,cAAczH,GAAK8rB,GAAMzpB,I,EAGtFxD,KAAKwJ,YAAYuS,YAAcgR,C,CAGjC,0BAAApd,CAA2BC,G,MACzB,IAAIpF,GAAWuB,EAAA/L,KAAKwJ,YAAYgC,aAAS,MAAAO,SAAA,SAAAA,EAAEvK,MAAKgJ,GAAYA,EAASzJ,KAAO6O,IAC5E,OAAQpF,GAAYA,EAASyB,eAAkB,E,CAEjD,sCAAAihB,CAAuCtrB,EAAoBnB,GACzD,MAAMiN,EAAM9L,EAAM+K,OAClB,MAAMwgB,EAAgB,KAAKzf,EAAIrM,KAAK6J,iBACpC,MAAMkiB,EAAe,IAAKptB,KAAKQ,cAAc2sB,IAAkB,IAC/DC,EAAa3sB,GAASiN,EAAIrM,KAAK6B,OAC/BlD,KAAKQ,cAAaL,OAAAC,OAAAD,OAAAC,OAAA,GACbJ,KAAKQ,eAAa,CACrB2sB,CAACA,GAAgBC,IAEnBptB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,6BACLI,MAAOK,EAAM+K,Q,CAIjB,eAAA0gB,CAAgBzrB,EAAYT,EAAaV,GACvC,GAAIU,IAAQ,mBAAoB,CAC9BnB,KAAKktB,uCAAuCtrB,EAAOnB,E,KAC9C,CACLT,KAAKstB,qBAAuB1rB,EAAM+K,OAAOtL,KACzCrB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,mBACLI,MAAOK,EAAM+K,Q,EAInB,qBAAA4gB,GACE,GAAIvtB,KAAKoS,kBAAkB5E,SAAWxN,KAAKC,UAAUuN,OAAQ,CAC3D,OAAO,I,CAET,IAAK,MAAMnM,KAAQrB,KAAKoS,kBAAmB,CACzC,GAAI/Q,EAAKQ,YAAc,IAAMR,EAAK+B,aAAe,IAAM/B,EAAK6B,SAAW,GAAI,CACzE,OAAO,I,EAGX,OAAO,K,CAET,gBAAAsqB,CAAiBrsB,GACf,MAAMssB,EAAkB,CAACC,EAAUvsB,EAAKwsB,KACtC,IAAKD,EAAU,CACb,OAAO,I,CAET,GAAIA,IAAa1tB,KAAKoS,kBAAmB,CACvC,OAAOpS,KAAKutB,uB,CAEd,MAAMK,EAAgB,CAAC,aAAc,iBAAkB,cAAe,cAAc9sB,SAASK,GAC7F,IAAKnB,KAAKmS,oBAAsByb,EAAe,CAC7C,OAAO,K,CAET,OAAOF,EAASvsB,KAASwsB,GAAcD,EAASvsB,KAASwD,SAAS,EAGpE,OACE3E,KAAK8R,YAAc3Q,GACnBssB,EAAgBztB,KAAKoS,kBAAmB,YAAa,KACrDqb,EAAgBztB,KAAKstB,qBAAsB,UAAW,KACtDG,EAAgBztB,KAAKstB,qBAAsB,gBAAiB,KAC5DG,EAAgBztB,KAAKstB,qBAAsB,YAAa,KACxDG,EAAgBztB,KAAKstB,qBAAsB,WAAY,KACvDG,EAAgBztB,KAAKstB,qBAAsB,aAAc,IACzDG,EAAgBztB,KAAKstB,qBAAsB,sBAAuB,KAClEG,EAAgBztB,KAAKstB,qBAAsB,QAAS,KACpDG,EAAgBztB,KAAKstB,qBAAsB,aAAc,KACzDG,EAAgBztB,KAAKstB,qBAAsB,iBAAkB,KAC7DG,EAAgBztB,KAAKstB,qBAAsB,cAAe,KAC1DG,EAAgBztB,KAAKstB,qBAAsB,aAAc,G,CAI7D,MAAAvrB,GACE,OACEC,EAACC,EAAI,CAACC,MAAM,iBACVF,EAAA,OAAKE,MAAM,OACTF,EAAA,OAAKE,MAAM,uBACTF,EAAA,QAAME,MAAM,uCACTlC,KAAK0J,cAAc6G,YAAW,MAAKvQ,KAAK0J,cAAc8G,WAExDxQ,KAAK0J,cAAcwG,eAAc,WAEpClO,EAAA,OAAKE,MAAM,oBAAkB,eACfF,EAAA,QAAME,MAAM,kCAAkC,IAAMlC,KAAKwJ,YAAYuS,aAAe,WAInG/b,KAAKC,UAAUkD,KAAI,CAAC8M,EAAUxP,IAC7BuB,EAAA,wBACEqB,kBAAmBrD,KAAKqD,kBACxB5C,MAAOA,EACPD,cAAeR,KAAKQ,cAAc,KAAKyP,EAAS/E,kBAChDhL,UAAW+P,EACX7O,YAAaX,EACb0B,YAAanC,KAAKwJ,YAAY0C,WAC9BvL,UAAWX,KAAK2P,2BAA2BM,EAAS/E,gBACpDkF,kBAAmBxO,GAEjB5B,KAAKqtB,gBAAgBzrB,EAAO,mBAAoBnB,OAKrDT,KAAKsS,sBAAwBtS,KAAK0I,uBAAyB,KAC1D1G,EAAA,0BACEqQ,gBAAiBrS,KAAKqS,gBACtB1G,SAAU3L,KAAK2L,SACfwG,mBAAoBnS,KAAKmS,mBACzBhO,YAAanE,KAAK6I,iBAClBuH,kBAAmBxO,GAKjB5B,KAAKqtB,gBAAgBzrB,EAAO,mBAAoB,KAKrD5B,KAAKsS,qBACJtQ,EAAA,OAAKE,MAAM,qBACTF,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQY,KAAK,SAASV,MAAM,+BAA+B4N,QAAS,IAAM9P,KAAK6tB,cAAc3sB,KAAK,CAAEC,IAAK,YAAW,WAItHa,EAAA,OAAKE,MAAM,SACTF,EAAA,UACEqO,SAAUrQ,KAAK8R,YAAc,QAAU9R,KAAKutB,wBAC5C3qB,KAAK,SACLV,MAAM,6BACN4N,QAAS,IAAM9P,KAAK6tB,cAAc3sB,KAAK,CAAEC,IAAK,UAE7CnB,KAAK8R,YAAc,QAAU9P,EAAA,KAAGE,MAAM,sCAAwC,UAMrFF,EAAA,OAAKE,MAAM,qBACTF,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQY,KAAK,SAASV,MAAM,+BAA+B4N,QAAS,IAAM9P,KAAK6tB,cAAc3sB,KAAK,CAAEC,IAAK,UAAS,YAIpHa,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQqO,SAAUrQ,KAAKwtB,iBAAiB,QAAS5qB,KAAK,SAASV,MAAM,6BAA6B4N,QAAS,IAAM9P,KAAK6tB,cAAc3sB,KAAK,CAAEC,IAAK,UAC7InB,KAAK8R,YAAc,QAAU9P,EAAA,KAAGE,MAAM,sCAAwC,SAInFF,EAAA,OAAKE,MAAM,SACTF,EAAA,UACEqO,SAAUrQ,KAAKwtB,iBAAiB,kBAChC5qB,KAAK,SACLV,MAAM,6BACN4N,QAAS,IAAM9P,KAAK6tB,cAAc3sB,KAAK,CAAEC,IAAK,oBAE7CnB,KAAK8R,YAAc,kBAAoB9P,EAAA,KAAGE,MAAM,sCAAwC,qB,aC7NzG,MAAM4rB,EAAyB,us9J,MCUlBC,EAAmB,M,0EAMtB/tB,KAAAgE,eAAiC,IAAIC,EACrCjE,KAAAguB,gBAA8B,GAC9BhuB,KAAAiuB,aAAyB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5FjuB,KAAAkuB,YAAwB,GACxBluB,KAAAmuB,aAAuB,K,gDARO,M,gDAGA,G,kBAMU,CAC9CptB,GAAI4D,UACJypB,MAAO,GACPC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,cAAe,GACfC,oBAAqB,CACnB1lB,KAAM,GACNC,YAAa,IAEf0lB,WAAY,MACZpsB,QAAS,GACTqsB,WAAY,GACZC,eAAgB,GAChBC,YAAa,GACbC,WAAY,G,CAGd,uBAAMhvB,GACJC,KAAKgvB,oBACLhvB,KAAKivB,wBACLjvB,KAAKkvB,qBACLlvB,KAAKmvB,sB,CAGC,qBAAAF,GACN,MAAMG,GAAc,IAAIrqB,MAAOmQ,cAC/BlV,KAAKkuB,YAAchN,MAAMC,KAAK,CAAE3T,OAAQ,IAAK,CAAC4R,EAAG3e,KAAW2uB,EAAc3uB,GAAO8N,Y,CAE3E,uBAAMygB,GACZ,MAAMK,QAAgBrvB,KAAKgE,eAAesrB,wBAC1C1oB,QAAQC,IAAIwoB,GACZ,MAAMd,EAAYc,EAAQ,cAC1BzoB,QAAQC,IAAI0nB,GACZvuB,KAAKuvB,aAAYpvB,OAAAC,OAAAD,OAAAC,OAAA,GAAQJ,KAAKuvB,cAAY,CAAEf,QAASD,EAAUhgB,WAAYggB,a,CAErE,kBAAAW,GACN,MAAMpqB,EAAK,IAAIC,KACf,MAAMO,EAAQR,EAAGqQ,WAAa,EAC9BnV,KAAKmuB,aAAe7oB,EAAQ,GAAK,IAAIA,IAAUA,EAAMiJ,U,CAG/C,oBAAA4gB,G,MACNnvB,KAAKuvB,aAAevvB,KAAKmE,YAAWhE,OAAAC,OAAA,GAAQJ,KAAKmE,aAAgB,GACjEnE,KAAKguB,kBAAkBjiB,EAAA/L,KAAKmE,eAAW,MAAA4H,SAAA,SAAAA,EAAExB,cAAe,GAExD,IAAKvK,KAAKuvB,aAAaT,YAAa,CAClC9uB,KAAKuvB,aAAaT,YAAc9uB,KAAKmuB,Y,CAEvC,IAAKnuB,KAAKuvB,aAAaR,WAAY,CACjC/uB,KAAKuvB,aAAaR,YAAa,IAAIhqB,MAAOmQ,a,EAI9C,gBAAA5T,CAAiBH,EAAKS,GACpB,MAAM4tB,EAAYxvB,KAAKguB,gBAAgBxsB,MAAKiuB,GAAQA,EAAKnsB,YAAc1B,EAAME,OAAOP,QAEpFvB,KAAKuvB,aAAapuB,GAChBA,IAAQ,aACJS,EAAME,OAAO4D,QACbvE,IAAQ,cACR,CACE6H,KAAMpH,EAAME,OAAOP,MACnB0H,YAAcumB,GAAaA,EAAUjsB,eAAkB,IAEzD3B,EAAME,OAAOP,MACnBvB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,sBACLE,KAAIlB,OAAAC,OAAA,GAAOJ,KAAKuvB,gBAElB,GAAIpuB,IAAQ,YAAa,CACvBnB,KAAKuvB,aAAYpvB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAKuvB,cAAY,CACpBf,QAAS5sB,EAAME,OAAOP,O,EAK5B,iBAAAmuB,CAAkBvuB,EAAKS,GACrB,MAAM+e,EAAe/e,EAAME,OAC3B,MAAM8e,EAAaD,EAAapf,MAGhC,MAAMsf,EAAe,WAErB,IAAKA,EAAaC,KAAKF,GAAa,CAElCD,EAAapf,MAAQqf,EAAWte,QAAQ,UAAW,G,CAErD,GAAIse,IAAeD,EAAapf,MAAO,CACrCvB,KAAKsB,iBAAiBH,EAAKS,E,EAI/B,sBAAM+tB,CAAiBxuB,EAAKS,GAC1B,MAAM+e,EAAe/e,EAAME,OAC3B,MAAM8e,EAAaD,EAAapf,MAChC,GAAIvB,KAAK4vB,aAAahP,GAAa,CACjC5gB,KAAKsB,iBAAiBH,EAAKS,E,EAG/B,eAAMiuB,GACJ,IACE,MAAMzB,EAAQpuB,KAAKuvB,aAAanB,MAChC,GAAIpuB,KAAK4vB,aAAaxB,GAAQ,CAC5B,MAAM9jB,QAAYtK,KAAKgE,eAAe8rB,YAAY1B,GAClD,GAAI9jB,IAAQ,KAAM,CAChBtK,KAAKuvB,aAAYpvB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAKuvB,cAAY,CACpBxuB,GAAIuJ,EAAIvJ,GACRstB,UAAW/jB,EAAIylB,WACfzB,SAAUhkB,EAAI0lB,UACdvB,cAAenkB,EAAI2lB,OACnB1B,UAAWjkB,EAAI4lB,WACf1B,QAASlkB,EAAI4lB,WAAW3hB,Y,KAErB,CACLvO,KAAKuvB,aAAYpvB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAKuvB,cAAY,CACpBxuB,GAAI4D,UACJ0pB,UAAW,GACXC,SAAU,GACVG,cAAe,GACfF,UAAW,GACXC,QAAS,I,CAGbxuB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,sBACLE,KAAIlB,OAAAC,OAAA,GAAOJ,KAAKuvB,e,EAGpB,MAAOjrB,G,EAIX,YAAAsrB,CAAaO,GACX,MAAMC,EAAe,mDACrB,OAAOA,EAAatP,KAAKqP,E,CAG3B,MAAApuB,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,kBACTF,EAAA,OAAKE,MAAM,+CACTF,EAAA,SAAOE,MAAM,+CAA6C,aAC1DF,EAAA,OAAKE,MAAM,0BACTF,EAAA,SACEjB,GAAI4B,IACJC,KAAK,QACLV,MAAM,eACNW,YAAY,gBACZnB,KAAK,gBACLH,MAAOvB,KAAKuvB,aAAanB,MACzBtrB,QAASlB,GAAS5B,KAAK2vB,iBAAiB,QAAS/tB,GACjDmB,SAAQ,KACRstB,OAAQ,IAAMrwB,KAAK6vB,iBAK3B7tB,EAAA,OAAKE,MAAM,iDACTF,EAAA,OAAKE,MAAM,OACTF,EAAA,OAAKE,MAAM,gBACTF,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,cACtBF,EAAA,OAAKE,MAAM,iCACTF,EAAA,SACEE,MAAM,eACNU,KAAK,OACLC,YAAY,aACZ9B,GAAI4B,IACJpB,MAAOvB,KAAKuvB,aAAalB,UACzBvrB,QAASlB,GAAS5B,KAAKsB,iBAAiB,YAAaM,GACrDmB,SAAQ,SAKdf,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,aACtBF,EAAA,OAAKE,MAAM,iCACTF,EAAA,SACEE,MAAM,eACNU,KAAK,OACLC,YAAY,YACZ9B,GAAI4B,IACJpB,MAAOvB,KAAKuvB,aAAajB,SACzBxrB,QAASlB,GAAS5B,KAAKsB,iBAAiB,WAAYM,OAK1DI,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,WACtBF,EAAA,OAAKE,MAAM,iCACTF,EAAA,UAAQE,MAAM,6BAA6BnB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,YAAaM,IACzGI,EAAA,UAAQT,MAAM,GAAG0B,SAAUjD,KAAKuvB,aAAahB,YAAc,IAAE,UAG5DvuB,KAAKqS,gBAAgBlP,KAAImtB,GACxBtuB,EAAA,UAAQT,MAAO+uB,EAAYvvB,GAAIkC,SAAUjD,KAAKuvB,aAAahB,YAAc+B,EAAYvvB,IAClFuvB,EAAY5uB,WAOvBM,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,gBACtBF,EAAA,OAAKE,MAAM,qCACTF,EAAA,OAAKE,MAAM,iBACTF,EAAA,UAAQE,MAAM,6BAA6BnB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,UAAWM,IACvGI,EAAA,UAAQT,MAAM,GAAG0B,SAAUjD,KAAKuvB,aAAaf,UAAY,IAAE,OAG1DxuB,KAAKqS,gBAAgBlP,KAAIksB,GACxBrtB,EAAA,UAAQT,MAAO8tB,EAAQtuB,GAAIkC,SAAUjD,KAAKuvB,aAAaf,UAAYa,EAAQtuB,GAAGwN,YAC3E8gB,EAAQ5T,kBAKjBzZ,EAAA,OAAKE,MAAM,iBACTF,EAAA,SACEE,MAAM,eACNU,KAAK,MACLC,YAAY,iBACZ9B,GAAI4B,IACJpB,MAAOvB,KAAKuvB,aAAad,cACzB3rB,QAASlB,GAAS5B,KAAK0vB,kBAAkB,gBAAiB9tB,QAMlEI,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,qBACtBF,EAAA,OAAKE,MAAM,iCACTF,EAAA,UAAQE,MAAM,6BAA6BnB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,sBAAuBM,IACnHI,EAAA,UAAQT,MAAM,GAAG0B,SAAUjD,KAAKuvB,aAAab,sBAAwB,IAAE,KAGtE1uB,KAAKguB,gBAAgB7qB,KAAIssB,GACxBztB,EAAA,UAAQT,MAAOkuB,EAAKnsB,UAAWL,SAAUjD,KAAKuvB,aAAab,sBAAwBe,EAAKnsB,WACrFmsB,EAAKlsB,oBAOhBvB,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,mBACtBF,EAAA,OAAKE,MAAM,mDACTF,EAAA,SAAOE,MAAM,eAAeU,KAAK,WAAW8C,QAAS1F,KAAKuvB,aAAaZ,WAAY5tB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,aAAcM,QAI1JI,EAAA,OAAKE,MAAM,gBACTF,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,uBACtBF,EAAA,OAAKE,MAAM,iCACTF,EAAA,YACEjB,GAAI4B,IACJ4tB,KAAM,EACNruB,MAAM,eACNR,KAAK,UACLH,MAAOvB,KAAKuvB,aAAahtB,QACzBO,QAASlB,GAAS5B,KAAKsB,iBAAiB,UAAWM,OAIxD5B,KAAKmS,oBACJnQ,EAACwuB,EAAQ,KACPxuB,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,eACtBF,EAAA,OAAKE,MAAM,iCACTF,EAAA,SACEE,MAAM,eACNU,KAAK,OACLC,YAAY,GACZ4tB,QAAQ,OACR1vB,GAAI4B,IACJpB,MAAOvB,KAAKuvB,aAAaX,WACzB9rB,QAASlB,GAAS5B,KAAK0vB,kBAAkB,aAAc9tB,OAI7DI,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,oBACtBF,EAAA,OAAKE,MAAM,iCACTF,EAAA,SACEE,MAAM,eACNU,KAAK,OACLC,YAAY,GACZ4tB,QAAQ,OACR1vB,GAAI4B,IACJpB,MAAOvB,KAAKuvB,aAAaV,eACzB/rB,QAASlB,GAAS5B,KAAKsB,iBAAiB,iBAAkBM,OAIhEI,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,eACtBF,EAAA,OAAKE,MAAM,qCACTF,EAAA,OAAKE,MAAM,WACTF,EAAA,UAAQE,MAAM,6BAA6BnB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,cAAeM,IAC1G5B,KAAKiuB,aAAa9qB,KAAImC,GACrBtD,EAAA,UAAQT,MAAO+D,EAAOrC,SAAUqC,IAAUtF,KAAKuvB,aAAaT,aACzDxpB,OAKTtD,EAAA,OAAKE,MAAM,gBACTF,EAAA,UAAQE,MAAM,6BAA6BnB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,aAAcM,IACzG5B,KAAKkuB,YAAY/qB,KAAI,CAACutB,EAAMjwB,IAC3BuB,EAAA,UAAQT,MAAOmvB,EAAMztB,SAAUxC,IAAUT,KAAKuvB,aAAaR,YACxD2B,a,aCxV/B,MAAMC,EAAuB,28zJ,MCYhBC,EAAiB,M,6QAiBpB5wB,KAAA6wB,iBAA4B,MAC5B7wB,KAAA8wB,aAAyC,GACzC9wB,KAAA4pB,oBAAsB,IAAI3C,EAC1BjnB,KAAAgE,eAAiB,IAAIC,E,uEAXe,G,oBACK,G,kGAIjB,M,mBAEC,C,CAKjC,YAAA8sB,CAAatsB,GACX,GAAIA,EAAIoJ,yBAA0B,CAChCpJ,EAAIoJ,2BACJpJ,EAAIqJ,iB,CAEN9N,KAAKoe,aAAeha,SAASK,EAAI3C,OAAOP,M,CAO1C,qBAAAyvB,CAAsBpP,EAAkBqP,EAAkBC,GACxD,GAAIA,IAAa,gBAAkBtP,IAAaqP,EAAU,CACxDjxB,KAAK6wB,iBAAmB,MACxB7wB,KAAKoe,cAAgB,EACrB,OAAO,I,MACF,GAAI8S,IAAa,aAAetP,IAAaqP,EAAU,CAC5DjxB,KAAKoe,cAAgB,EACrB,OAAO,I,CAET,OAAO,I,CAGT,iBAAAre,GACE,GAAIC,KAAKmxB,gBAAkB,GAAKnxB,KAAKoxB,aAAe,EAAG,CACrDpf,YAAW,KACThS,KAAKqxB,6BAA6B,GACjC,I,EAcP,sBAAMC,CAAiB1vB,GACrB,IACEA,EAAMiM,2BACNjM,EAAMkM,kBACN,GAAI9N,KAAKoe,aAAc,OACfpe,KAAK4pB,oBAAoBrC,WAAWvnB,KAAKyd,UAAUlM,eAAgBvR,KAAKyd,UAAU1O,GAAI/O,KAAKoe,cACjG,MAAMtP,QAAgB9O,KAAKgE,eAAeutB,mBAAmBvxB,KAAKyd,UAAUlM,eAAgB,MAC5F,IAAIigB,EAAc9f,EAAoB5C,GACtC,MAAMwV,EAAQnkB,OAAAC,OAAAD,OAAAC,OAAA,GAAQJ,KAAKyd,WAAc+T,EAAY,IACrDxxB,KAAKujB,aAAaU,cAAcsB,KAAKjB,GAErCtkB,KAAKyxB,qBAAqBvwB,KAAK,CAC7BC,IAAK,qBACLE,KAAM,CAACijB,KAETtkB,KAAK0xB,gBAAgBxwB,KAAK,CAAEC,IAAK,aAAcE,KAAMijB,G,EAEvD,MAAOhgB,G,EAKX,2BAAA+sB,GACErxB,KAAK2xB,kCAAkCzwB,KAAK,CAC1CC,IAAK,qBACLE,KAAM,CAAEuN,UAAW5O,KAAKyd,UAAU1O,MAEpC,IAAK/O,KAAKmqB,aAAc,CACtB,M,CAEF,IAAIyH,EAAiB,GACrB,IAAId,EAAe,GACnBc,EAAiB5xB,KAAKyd,UAAU+E,eAAerf,KAAI1B,IACjDqvB,EAAavL,KAAK,CAChBsM,cAAe,KACf9wB,GAAIU,EAAKoG,MACTnG,KAAMD,EAAKinB,WAEb,OAAAvoB,OAAAC,OAAAD,OAAAC,OAAA,GACKqB,GAAI,CACPgI,iBAAkBzJ,KAAKyd,UAAUhU,iBACjC+d,WAAYxnB,KAAKyd,UAAU+J,YAAU,IAKzCxnB,KAAK8wB,aAAeA,EACpB9wB,KAAKyxB,qBAAqBvwB,KAAK,CAC7BC,IAAK,qBACLE,KAAMuwB,IAGR5xB,KAAKqjB,iBAAiBniB,KAAK,CACzBC,IAAK,mBACLJ,GAAIf,KAAK4P,WACT0T,SAAU,YAActjB,KAAK4P,aAI/B5P,KAAKqqB,Y,CAGP,qBAAAyH,CAAsBlwB,GACpBA,EAAMiM,2BACNjM,EAAMkM,kBACN9N,KAAK6wB,iBAAmB,MACxB7wB,KAAK2xB,kCAAkCzwB,KAAK,CAC1CC,IAAK,qBACLE,KAAM,CAAEuN,UAAW,UAErB5O,KAAK+wB,aAAa,CAAEjvB,OAAQ,CAAEP,MAAO,MACrCvB,KAAKyxB,qBAAqBvwB,KAAK,CAAEC,IAAK,qBAAsBE,KAAM,KAClErB,KAAKqqB,Y,CAIP,qBAAA0H,CAAsBnwB,GACpB,IAAIP,EAAOO,EAAM+K,OAAOtL,KACxB,GAAIA,EAAKuN,WAAa5O,KAAKyd,UAAU1O,GAAI,CACvC/O,KAAK6wB,iBAAmB,MACxB7wB,KAAKoe,cAAgB,EACrBpe,KAAKqqB,Y,KACA,CACLrqB,KAAK6wB,iBAAmB,KACxB7wB,KAAKqqB,Y,EAIT,UAAAA,GACErqB,KAAK2F,aAAe3F,KAAK2F,W,CAI3B,MAAA5D,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,mBAAmB4N,QAAS,IAAM9P,KAAKqxB,+BAChDrvB,EAAA,OACEE,MAAO,cAAclC,KAAK6wB,iBAAmB,gBAAkB,0BAAyB,cAC5E,UAAS,iBACN,MAAK,sBACA,wBAEnB,SAAS7wB,KAAKyd,UAAUlM,oBAAoBvR,KAAKyd,UAAUpS,QAE9DrJ,EAAA,OAAKE,MAAM,gCACTF,EAAA,OAAKE,MAAM,sCACTF,EAAA,UAAQE,MAAM,wBAAwBnB,GAAI4B,IAAMK,SAAUyB,GAAOzE,KAAK+wB,aAAatsB,IACjFzC,EAAA,UAAQT,MAAM,GAAG0B,SAAUjD,KAAKoe,eAAiB,GAAC,eAGjDpe,KAAK8wB,aAAa3tB,KAAI1B,GACrBO,EAAA,UAAQT,MAAOE,EAAKV,GAAIkC,SAAUjD,KAAKoe,cAAgB3c,EAAKV,IACzDU,EAAKC,UAKb1B,KAAK6wB,iBACJ7uB,EAAA,OAAKE,MAAM,8CACTF,EAAA,UAAQY,KAAK,SAASV,MAAM,2BAA2B4N,QAASrL,GAAOzE,KAAK8xB,sBAAsBrtB,IAAI,KAGtGzC,EAAA,UAAQY,KAAK,SAASV,MAAM,yBAAyB4N,QAASrL,GAAOzE,KAAKsxB,iBAAiB7sB,GAAM4L,SAAUrQ,KAAKoe,gBAAkB,GAAC,WAInI,MAENpc,EAAA,Y,aC5MV,MAAMgwB,GAAwB,4q3J,MCejBC,GAAkB,M,sJAIoB,G,kGAIjB,K,CAIhC,iBAAAlyB,G,CAIA,qBAAAmyB,CAAsBtwB,GACpBA,EAAMiM,2BACNjM,EAAMkM,kBAEN,MAAMJ,EAA8B9L,EAAM+K,OAC1C3M,KAAKmyB,WAAanyB,KAAKmyB,WAAWvxB,QAC/B6c,GAAcA,EAAU1O,IAAMrB,EAAIrM,KAAK0N,KAE1C/O,KAAKujB,aAAaU,cAAcsB,KAAK7X,EAAIrM,MACzCrB,KAAKoyB,gBAAgBlxB,KAAK,CACxBC,IAAK,aACLE,KAAM,CACJinB,MAAOtoB,KAAK4P,WACZua,aAAcnqB,KAAKmqB,aACnBqH,YAAa9jB,EAAIrM,KACjBkiB,aAAcvjB,KAAKujB,gBAIvBvjB,KAAKqqB,Y,CAIP,YAAAgI,CAAaziB,EAAYuiB,GACvB,OAAOA,EAAWhvB,KAAI,CAACsa,EAAW8G,IAChCviB,EAAA,wBACEuhB,aAAcvjB,KAAKujB,aACnB4G,aAAcnqB,KAAKmqB,aACnB1M,UAAWA,EACX6U,eAAgBtyB,KAAKsyB,eACrB1iB,WAAYA,EACZuhB,cAAenxB,KAAKmxB,cACpBC,WAAY7M,EACZgO,kBAAoB9tB,GAAQzE,KAAKkyB,sBAAsBztB,M,CAK7D,UAAA4lB,GACErqB,KAAK2F,aAAe3F,KAAK2F,W,CAG3B,MAAA5D,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,oBACTF,EAAA,OAAKE,MAAM,sCACRlC,KAAKsyB,eAAetyB,KAAK4P,YAAYlO,MAEvC1B,KAAKqyB,aAAaryB,KAAK4P,WAAY5P,KAAKmyB,a,eChFnD,MAAMK,GAAqB,i6pJ,MCUdC,GAAe,M,wUAkBlBzyB,KAAAmqB,aAAe,KACfnqB,KAAAqB,KAA+B,GAC/BrB,KAAAsmB,MAAQ,IAAIvhB,KACZ/E,KAAAsyB,eAAyC,GACzCtyB,KAAA4pB,oBAA2C,IAAI3C,E,8FAlBtB,4B,+CASC,M,iBACF,M,sBACG,G,qDAEL,I,CAO9B,iBAAAlnB,GACEC,KAAK0yB,e,CAEP,sBAAMC,CAAiBxxB,EAAKoiB,GAC1B,IACE,IAAIqP,EAAmB,GACvB,MAAM9hB,QAAe9Q,KAAK4pB,oBAAoBxC,mBAC5CpnB,KAAK0L,WACLiC,EAAsB,IAAI5I,MAAM5D,IAChCoiB,EAAa/X,UACb+X,EAAa+B,qBAEfxU,EAAO8W,SAAQnmB,IACb,IAAKmxB,EAAiBzmB,eAAe1K,EAAK6mB,OAAQ,CAChDsK,EAAiBnxB,EAAK6mB,OAAS,CAAC7mB,E,KAC3B,CACLmxB,EAAiBnxB,EAAK6mB,OAAO/C,KAAK9jB,E,KAGtCzB,KAAK+pB,gBAAgB5oB,GAAK+nB,WAAa0J,C,CACvC,MAAOtuB,G,EAKX,mBAAMouB,GACJ,IACE1yB,KAAKsmB,MAAMphB,SAAS,EAAG,EAAG,EAAG,GAC7BlF,KAAKujB,aAAa/X,UAAUoc,SAAQpd,IAClCxK,KAAKsyB,eAAe9nB,EAASzJ,IAAM,CACjCW,KAAM8I,EAAS9I,KACff,UAAW6J,EAASyB,cACpB4mB,QAASroB,EAASyB,cAAc9I,KAAI1B,GAC3BA,EAAKV,KAEf,IAGHf,KAAKmqB,aAAe,KAEpBnqB,KAAK+pB,gBAAkB/pB,KAAKujB,aAAawG,gBAEzC/pB,KAAKqB,KAAOrB,KAAK+pB,gBACjB/pB,KAAK8yB,iBAAmB3yB,OAAOoN,KAAKvN,KAAKqB,MAAM0xB,MAAK,CAACC,EAAGC,IAAM7uB,SAAS4uB,GAAK5uB,SAAS6uB,KAErF,IAAKjzB,KAAKmqB,cAAgBnqB,KAAK8yB,iBAAiBtlB,OAAQ,CACtDxN,KAAKmqB,aAAenqB,KAAK8yB,iBAAiB,E,EAE5C,MAAOxuB,GACPsC,QAAQtC,MAAM,mCAAoCA,E,EAItD,sBAAM4E,GACJ,IAAKlJ,KAAKkzB,wBAA0B/yB,OAAOoN,KAAKvN,KAAK+pB,iBAAiBvc,OAAS,EAAG,CAChF,MAAM2lB,EAAWhzB,OAAOoN,KAAKvN,KAAK+pB,iBAAiB,GACnD/pB,KAAKozB,YAAYD,E,EAIrB,cAAME,CAASzxB,GACb5B,KAAKkzB,uBAAyB,KAC9BlzB,KAAKozB,YAAYxxB,EAAM+K,OAAOtL,MAC9BrB,KAAKszB,cAAgB,MACrBtzB,KAAKqqB,Y,CAGP,iBAAM+I,CAAYG,GAChB,IACEvzB,KAAK8R,UAAY,KACjB,GAAI9R,KAAKszB,cAAe,CACtBtzB,KAAKwzB,oB,OAEDxzB,KAAK2yB,iBAAiBY,EAAWvzB,KAAKujB,cAC5CvjB,KAAKyxB,qBAAqBvwB,KAAK,CAAEC,IAAK,qBAAsBE,KAAM,KAClErB,KAAK2e,iBAAiBzd,KAAK,CACzBC,IAAK,WACLE,KAAM+C,SAASmvB,GAAa,QAE9B,GAAIvzB,KAAKkzB,uBAAwB,CAC/BlzB,KAAKkzB,uBAAyB,K,CAEhClzB,KAAK8R,UAAY,MACjB9R,KAAKmqB,aAAeoJ,C,CACpB,MAAOjvB,G,EAKX,MAAAmvB,CAAO3uB,GACL,MAAM8d,EAAc,IAAI7d,KAAKD,GAC7B,MAAM2gB,EAAS,UACf,MAAMiO,EAAY1zB,KAAK2zB,sBAAsB/Q,EAAa6C,GAE1D,OAAOiO,EAAY,IAAM9Q,EAAYrd,UAAY,KAAOqd,EAAY1N,a,CAGtE,qBAAAye,CAAsB1rB,EAAMwd,GAC1B,MAAMmO,EAAU,CAAEC,QAAS,SAC3B,OAAO5rB,EAAK6rB,mBAAmBrO,EAAQmO,E,CAGzC,iBAAA9M,CAAkB3lB,EAAKE,EAAO,IAC5BrB,KAAK2xB,kCAAkCzwB,KAAK,CAC1CC,IAAK,qBACLE,KAAM,CAAEuN,UAAW,UAErB5O,KAAKyxB,qBAAqBvwB,KAAK,CAAEC,IAAK,qBAAsBE,KAAM,KAClErB,KAAK+mB,YAAY7lB,KAAK,CAAEC,MAAKE,Q,CAG/B,kBAAAmyB,GACExzB,KAAKszB,eAAiBtzB,KAAKszB,a,CAG7B,uBAAAS,G,CAIA,eAAAC,GACE,GAAIh0B,KAAK8yB,iBAAiBtlB,QAAUxN,KAAKmqB,cAAgBnqB,KAAKqB,KAAKrB,KAAKmqB,cAAe,CACrF,OAAOhqB,OAAOkgB,QAAQrgB,KAAKqB,KAAKrB,KAAKmqB,cAAcjB,YAAY/lB,KAAI,EAAEpC,EAAIoxB,GAAa5N,IACpFviB,EAAA,yBACEuhB,aAAcvjB,KAAKujB,aACnB4G,aAAcnqB,KAAKmqB,aACnBva,WAAY7O,EACZowB,cAAe5M,EACf+N,eAAgBtyB,KAAKsyB,eACrBH,WAAYA,EACZ8B,kBAAmBxvB,GAAOzE,KAAKsxB,iBAAiB7sB,M,KAG/C,CACL,OAAO,I,EAIX,gBAAA6sB,CAAiB1vB,GACf,MAAM8L,EAA8B9L,EAAM+K,OAC1C,MAAMtL,EAAOqM,EAAIrM,KACjBO,EAAMiM,2BACNjM,EAAMkM,kBAEN,GAAIJ,EAAIvM,MAAQ,aAAc,CAe5BnB,KAAKk0B,yBAAyBhzB,KAAK,CACjCC,IAAK,sBACLE,KAAM,CAAE8oB,aAAc9oB,EAAK8oB,gBAE7BnqB,KAAKqqB,Y,EAIT,UAAAA,GACErqB,KAAK2F,aAAe3F,KAAK2F,W,CAG3B,MAAA5D,GACE,OACEC,EAACC,EAAI,CAACC,MAAM,wCACVF,EAAA,WACEA,EAAA,WACEA,EAAA,OAAKE,MAAM,gBACTF,EAAA,OAAKE,MAAM,2BAAyB,eACpCF,EAAA,OAAKE,MAAM,gBAAgB4N,QAAS,IAAM9P,KAAK8mB,kBAAkB,kBAC/D9kB,EAAA,KAAGE,MAAM,sBAEXF,EAAA,WACChC,KAAK8R,UACJ9P,EAAA,SAAIhC,KAAKm0B,gBAETnyB,EAACwuB,EAAQ,KACNxwB,KAAK8yB,iBAAiBtlB,OACrBxL,EAAA,OAAKE,MAAO,gBAAkBlC,KAAKszB,cAAgB,OAAS,KAC1DtxB,EAAA,OAAK8N,QAAS,IAAM9P,KAAKwzB,sBACvBxxB,EAAA,QAAME,MAAM,oBAAoBlC,KAAKqB,KAAKrB,KAAKmqB,cAAchB,SAC7DnnB,EAAA,KAAGE,MAAM,2BAEVlC,KAAKszB,cACJtxB,EAAA,OAAKE,MAAM,gDACRlC,KAAK8yB,iBAAiB3vB,KAAIixB,GACzBpyB,EAAA,OAAKE,MAAM,gCAAgC4N,QAAS,IAAM9P,KAAKozB,YAAYgB,IACxEp0B,KAAKqB,KAAK+yB,GAASjL,YAIxB,MACA,2BAOZnpB,KAAK8R,WACL9P,EAAA,OAAKE,MAAM,mBACRlC,KAAK8yB,iBAAiBtlB,OACrBrN,OAAOoN,KAAKvN,KAAKqB,KAAKrB,KAAKmqB,cAAcjB,YAAY1b,OACnDxN,KAAKg0B,kBAELhyB,EAAA,OAAKE,MAAM,QAAM,8BAEjB,Q,qBCvPPmyB,GACJ,eAAMC,CACXvzB,EACA4K,GAEA,IACE,MAAMpF,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,IAAU,KAAM,CAClB,MAAMlF,KAAEA,SAAeyF,EAAMC,KAC3B,gCAAgCR,IAChC,CAAExF,KAAI4K,aAER,GAAItK,EAAK2F,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAM5F,EAAK2F,a,CAEvB,OAAO3F,C,EAET,MAAOiD,GACPsC,QAAQC,IAAIvC,GACZ,MAAM,IAAI2C,MAAM3C,E,GCrBtB,MAAMiwB,GAAmB,+w3I,MCgBZC,GAAa,M,yIAsBhBx0B,KAAAgE,eAAiC,IAAIC,EACrCjE,KAAAqS,gBAA8B,GAC9BrS,KAAAy0B,qBAA+C,CAAE/b,EAAG,GAAIC,EAAG,IAE3D3Y,KAAAsmB,MAAgB,GAChBtmB,KAAA00B,YAA2B,IAAIL,GAC/Br0B,KAAA+I,cAAgB,IAAI/C,EACpBhG,KAAA4pB,oBAAsB,IAAI3C,EAiPlCjnB,KAAA20B,kBAAoB,CAAEvd,IAAK,EAAGC,KAAM,EAAGqB,EAAG,EAAGC,EAAG,GAkBhD3Y,KAAA40B,2BAA6ChzB,IAE3C,MAAMizB,EAAKjzB,EAAMqW,QAAUjY,KAAK20B,kBAAkBjc,EAClD,MAAMoc,EAAKlzB,EAAMwW,QAAUpY,KAAK20B,kBAAkBhc,EAGlD3Y,KAAK+0B,gBAAgBC,UAAYh1B,KAAK20B,kBAAkBvd,IAAM0d,EAC9D90B,KAAK+0B,gBAAgBE,WAAaj1B,KAAK20B,kBAAkBtd,KAAOwd,EAChE,GAAItb,KAAKK,IAAIib,GAAM,GAAKtb,KAAKK,IAAIkb,GAAM,EAAG,CACxC90B,KAAKk1B,mBAAqB,I,GAI9Bl1B,KAAAm1B,8BAA+C,KAC7ChsB,SAASI,oBAAoB,YAAavJ,KAAK40B,4BAC/CzrB,SAASI,oBAAoB,UAAWvJ,KAAKm1B,8BAA8B,E,+LAvSnC,G,kBAMM,IAAIh1B,O,UACV,IAAI+gB,M,wBACP,M,iBAEQ,K,gBAChB,M,wBACQ,M,sBACF,K,CAUrC,mBAAMkU,GACJ1uB,eAAe2uB,QAAQ,QAAS7uB,KAAK8uB,UAAUt1B,KAAKu1B,SACpDv1B,KAAKw1B,e,CAGP,uBAAMz1B,GACJ,GAAIC,KAAKy1B,QAAS,CAChB3uB,EAAM4uB,SAASC,QAAU31B,KAAKy1B,O,CAEhC,GAAIz1B,KAAKu1B,SAAW,GAAI,CACtBv1B,KAAKw1B,e,EAGT,aAAAA,GACE,IACEx1B,KAAK00B,YAAYJ,UAAUt0B,KAAK0L,WAAY1L,KAAK2L,UAAUiqB,MAAKC,IAC9D71B,KAAK81B,aAAaD,GAClB71B,KAAKgE,eAAe+xB,gBAAgB/1B,KAAK0L,WAAY1L,KAAKqG,UAAWrG,KAAKsG,SAASsvB,MAAKI,MAAMC,IAC5Fj2B,KAAKqS,sBAAwBrS,KAAKgE,eAAekyB,aAAal2B,KAAK2L,UACnE3L,KAAKujB,aAAa3X,SAAWiqB,EAAS,aAAajqB,SACnD5L,KAAKujB,aAAaxN,WAAa/V,KAAKm2B,cAAcN,GAClD71B,KAAKujB,aAAa3I,mBAAqBib,EAAS,aAAajb,mBAC7D,IAAK5a,KAAKujB,aAAa3I,mBAAoB,CACzC5a,KAAKujB,aAAawG,sBAAwB/pB,KAAK4pB,oBAAoB1C,mBAAmBlnB,KAAK0L,WAAYiC,EAAsB,IAAI5I,MAAS/E,KAAKsG,Q,CAEjJtG,KAAKujB,aAAazM,aAAe,IAAI/R,KAAKkxB,EAAYG,2BAA2BC,MAAMxhB,UACvF7U,KAAKujB,aAAa+S,WAAa,IAAIvxB,KAAKkxB,EAAYG,2BAA2BG,IAAI1hB,UACnF7U,KAAKujB,aAAa+B,oBAAsBkR,EAAmBx2B,KAAKujB,aAAaxN,YAC7E/V,KAAKujB,aAAaU,cAAgBgS,EAAYQ,YAAc,GAC5Dz2B,KAAKujB,aAAamT,mBAAqB,GACvC,IAAIC,EAAiBd,EAAS,aAAa,2BAC3C71B,KAAKmS,mBAAqBwkB,EAAeC,MAAKC,GAAQA,EAAK7tB,OAAS,OAAS6tB,EAAK7tB,OAAS,QAC3FhJ,KAAK82B,6BAA6B92B,KAAKujB,aAAaU,eACpDjkB,KAAK82B,6BAA6B92B,KAAKujB,aAAamT,oBACpD12B,KAAKsmB,MAAQtmB,KAAK+2B,uBAAuB,IAAIhyB,MAC7C,IAAIiyB,EAAoB,IAAIjyB,KAAK/E,KAAKi3B,6BACtCD,EAAY9xB,SAAS,EAAG,EAAG,EAAG,GAC9BlF,KAAKmmB,KAAO8P,EAAY9P,KACxBnmB,KAAKujB,aAAa4C,KAAOnmB,KAAKmmB,KAC9BnmB,KAAKujB,aAAa8H,WAAa4K,EAAYiB,OAC3CllB,YAAW,KACThS,KAAKm3B,gBAAgBn3B,KAAKsmB,MAAM,GAC/B,IAAI,GACP,G,CAEJ,MAAOhiB,GAAO,C,CAElB,gBAAA4E,GACElJ,KAAKm3B,gBAAgBn3B,KAAKsmB,M,CAG5B,uBAAM8Q,CAAkB3S,GACtB,IACEA,EAAG5W,2BACH4W,EAAGzW,iBACH,MAAM1G,EAAe,IAAItH,KAAKujB,aAAaU,qBACrCjkB,KAAK+I,cAAc7B,YAAYud,EAAG9X,QAExC3M,KAAKujB,aAAYpjB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAKujB,cAAY,CACpBU,cAAe3c,EAAa1G,QAAOC,GAAKA,EAAEsG,OAASsd,EAAG9X,U,CAExD,MAAOrI,G,EAKX,4BAAAwyB,CAA6BrZ,GAC3BA,EAAUmK,SAAQtgB,IAChBA,EAAayO,WAAa/V,KAAKujB,aAAa+B,oBAC5Che,EAAamC,iBAAmB,GAChCnC,EAAamC,iBAAiB5D,SAAW,IAAId,KAAKuC,EAAaI,UAAY,aAC3EJ,EAAamC,iBAAiB8G,YAAcvQ,KAAKolB,WAAW9d,EAAamC,iBAAiB5D,UAC1FyB,EAAamC,iBAAiB2e,kBAAoB9gB,EAAamC,iBAAiB5D,SAASgP,UAEzFvN,EAAamC,iBAAiB3D,OAAS,IAAIf,KAAKuC,EAAaK,QAAU,aACvEL,EAAamC,iBAAiB+G,UAAYxQ,KAAKolB,WAAW9d,EAAamC,iBAAiB3D,QACxFwB,EAAamC,iBAAiB4e,gBAAkB/gB,EAAamC,iBAAiB3D,OAAO+O,UAErFvN,EAAamC,iBAAiByG,eAAiB5I,EAAasP,WAC5DtP,EAAakE,UAAY,IAAIxL,KAAKujB,aAAa/X,UAAU,G,CAG7D,YAAAsqB,CAAauB,G,QACX,IAAIC,EAAsC,IAAIpW,MAC9C,IAAI/K,GAAApK,EAAAsrB,EAAgBjwB,aAAS,MAAA2E,SAAA,SAAAA,EAAEF,aAAS,MAAAsK,SAAA,SAAAA,EAAE3I,OAAQ,CAChD8pB,EAAYD,EAAgBjwB,UAAUyE,UACtCwrB,EAAgBjwB,UAAUyE,UAAU+b,SAAQ5b,IAC1CA,EAAagX,SAAW,IAAI,G,CAGhChjB,KAAKujB,aAAa/X,UAAY8rB,C,CAGhC,aAAAnB,CAAcve,GACZ,OAAOA,EAAM,aAAa2f,gB,CAG5B,yBAAAN,GACE,OAAOj3B,KAAKujB,aAAazM,Y,CAG3B,uBAAA0gB,GACE,OAAOx3B,KAAKujB,aAAa+S,U,CAG3B,MAAA7C,CAAO3uB,GACL,MAAM8d,EAAc,IAAI7d,KAAKD,GAC7B,MAAM2gB,EAAS,QACf,MAAMiO,EAAY1zB,KAAK2zB,sBAAsB/Q,EAAa6C,GAC1D,OAAOiO,EAAY,IAAM9Q,EAAYrd,S,CAGvC,qBAAAouB,CAAsB1rB,EAAMwd,GAC1B,MAAMmO,EAAU,CAAEC,QAAS,SAC3B,OAAO5rB,EAAK6rB,mBAAmBrO,EAAQmO,E,CAGzC,iBAAA6D,CAAkBxvB,EAAMwd,EAAS,WAC/B,OAAOxd,EAAK5C,eAAeogB,EAAQ,CAAEngB,MAAO,UAAa,IAAM2C,EAAKiN,a,CAGtE,UAAAkQ,CAAWnd,EAAMwd,EAAS,WACxB,OAAOxd,EAAK1C,UAAY,IAAM0C,EAAK5C,eAAeogB,EAAQ,CAAEngB,MAAO,UAAa,IAAM2C,EAAKiN,a,CAG7F,eAAAiiB,CAAgBO,GACd9wB,QAAQC,IAAI6wB,GACZ13B,KAAK+0B,gBAAkB/0B,KAAK+0B,iBAAmB/0B,KAAK6T,QAAQoD,cAAc,4BAC1E,MAAM0gB,EAAc33B,KAAK6T,QAAQoD,cAAc,gBAC/C,MAAM2gB,EAAU53B,KAAK6T,QAAQoD,cAAc,QAAUygB,GACrD,GAAIE,EAAS,CACX53B,KAAK+0B,gBAAgB8C,SAAS,CAAExgB,KAAM,IACtC,MAAMygB,EAAWF,EAAQpgB,wBACzB,MAAMugB,EAAgB/3B,KAAK+0B,gBAAgBvd,wBAC3C,MAAMwgB,EAAkBL,EAAYngB,wBACpCxX,KAAK+0B,gBAAgB8C,SAAS,CAC5BxgB,KAAMygB,EAASzgB,KAAO0gB,EAAc1gB,KAAO2gB,EAAgB1gB,MAAQwgB,EAASxgB,O,EAKlF,iBAAA2gB,CAAkBr2B,GAChBA,EAAMkM,kBACNlM,EAAMiM,2BACN7N,KAAK82B,6BAA6Bl1B,EAAM+K,QACxC3M,KAAKujB,aAAYpjB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAKujB,cAAY,CACpBU,cAAe,IAAIjkB,KAAKujB,aAAaU,iBAAkBriB,EAAM+K,UAE/DqF,YAAW,KACThS,KAAKm3B,gBAAgBn3B,KAAK+2B,uBAAuB,IAAIhyB,KAAKnD,EAAM+K,OAAO,GAAGjF,YAAY,GACrF,I,CAGL,eAAAwwB,CAAgBt2B,GACdA,EAAMkM,kBACNlM,EAAMiM,2BACN7N,KAAK82B,6BAA6B,CAACl1B,EAAM+K,SACzC3M,KAAKujB,aAAYpjB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAKujB,cAAY,CACpBU,cAAe,IAAIjkB,KAAKujB,aAAaU,cAAeriB,EAAM+K,S,CAMtD,sBAAAoqB,CAAuB9uB,GAC7B,OAAOqhB,EAAOrhB,GAAMshB,OAAO,W,CAG7B,gBAAAlG,CAAiBzhB,GACf,IAAIu2B,EAAoBv2B,EAAM+K,OAAO2W,SACrCtjB,KAAK+0B,gBAAkB/0B,KAAK+0B,iBAAmB/0B,KAAK6T,QAAQoD,cAAc,4BAC1E,MAAM0gB,EAAc33B,KAAK6T,QAAQoD,cAAc,gBAC/C,MAAM8L,EAAW/iB,KAAK6T,QAAQoD,cAAc,IAAMkhB,GAClD,GAAIpV,EAAU,CACZ/iB,KAAK+0B,gBAAgB8C,SAAS,CAAEzgB,IAAK,IACrC,MAAM0gB,EAAW/U,EAASvL,wBAC1B,MAAMugB,EAAgB/3B,KAAK+0B,gBAAgBvd,wBAC3C,MAAMwgB,EAAkBL,EAAYngB,wBACpCxX,KAAK+0B,gBAAgB8C,SAAS,CAC5BzgB,IAAK0gB,EAAS1gB,IAAM2gB,EAAc3gB,IAAM4gB,EAAgBzgB,OAASugB,EAASvgB,Q,EAKhF,wBAAA6gB,GAEE,OAAOp4B,KAAKujB,cAAgBvjB,KAAKujB,aAAa4C,MAAQnmB,KAAKujB,aAAa4C,KAAK3Y,M,CAG/E,cAAA6qB,CAAez2B,GACb,MAAM8L,EAA8B9L,EAAM+K,OAC1C,MAAM2rB,EAAkBt4B,KAAK6T,QAAQoD,cAAc,kBACnD,OAAQvJ,EAAIvM,KACV,IAAK,eACHm3B,EAAgBC,UAAUC,OAAO,cACjCF,EAAgBC,UAAUC,OAAO,oBACjCF,EAAgBC,UAAUE,OAAO,oBAEjCz4B,KAAK04B,WAAa,MAClB14B,KAAKsqB,iBAAmB,KACxB,MACF,IAAK,aACHgO,EAAgBC,UAAUC,OAAO,oBACjCF,EAAgBC,UAAUC,OAAO,cACjCF,EAAgBC,UAAUE,OAAO,cAEjCz4B,KAAK04B,WAAa,KAClB14B,KAAKsqB,iBAAmB,MACxB,MACF,IAAK,WACH,IAAIxlB,EAAK,IAAIC,KAAK2I,EAAIrM,MACtBrB,KAAKm3B,gBAAgBryB,EAAGS,UAAY,KAAOT,EAAGqQ,WAAa,GAAK,IAAMrQ,EAAGoQ,eACzE,MACF,IAAK,SACH,MACF,IAAK,MACHlV,KAAK24B,YAAcjrB,EAAIrM,KACvB,MACF,IAAK,YACHrB,KAAKm3B,gBAAgBn3B,KAAKsmB,OAC1B,MACF,IAAK,gBACHtmB,KAAK44B,gBACL,M,CAIN,aAAAA,GACE,MAAMN,EAAkBt4B,KAAK6T,QAAQoD,cAAc,kBACnDqhB,EAAgBC,UAAUC,OAAO,oBACjCF,EAAgBC,UAAUC,OAAO,cAEjCx4B,KAAK04B,WAAa,MAClB14B,KAAKsqB,iBAAmB,K,CAI1B,iBAAAuO,CAAkBj3B,GAChB5B,KAAKk1B,mBAAqB,MAC1B,IAAI4D,EAAsBl3B,GAASA,EAAME,OAAS9B,KAAK+4B,qBAAqBn3B,EAAME,OAAuB,qBAAuB,MAChI,IAAKg3B,EAAqB,CACxB94B,KAAK20B,kBAAoB,CAEvBtd,KAAMrX,KAAK+0B,gBAAgBE,WAC3B7d,IAAKpX,KAAK+0B,gBAAgBC,UAE1Btc,EAAG9W,EAAMqW,QACTU,EAAG/W,EAAMwW,SAEXjP,SAASC,iBAAiB,YAAapJ,KAAK40B,4BAC5CzrB,SAASC,iBAAiB,UAAWpJ,KAAKm1B,8B,EAsB9C,iBAAA6D,GACE,MAAMjB,EAAgB/3B,KAAK+0B,gBAAgBvd,wBAC3C,IAAIyhB,EAAmB,IACvB,IAAIC,EAAWnB,EAAczgB,MAAQ2hB,EACrC,IAAIE,EAAQpB,EAAcrf,EAAIugB,EAC9B,IAAIG,EAASrB,EAAcrf,EAAIqf,EAAczgB,MAE7C,IAAI+hB,EAAQnY,MAAMC,KAAKnhB,KAAK6T,QAAQylB,iBAAiB,eAErD,GAAID,EAAM7rB,OAAQ,CAChB6rB,EAAMl2B,KAAKo2B,IACT,IAAIC,EAAYD,EAAe/hB,wBAC/B,GAAIgiB,EAAU9gB,EAAI8gB,EAAUliB,MAAQ6hB,QAE7B,GAAIK,EAAU9gB,EAAI0gB,OAElB,CACL,IAAIK,EAAeF,EAAetiB,cAAc,eAChD,IAAIyiB,EAAa,EACjB,IAAIC,EAAaH,EAAUliB,MAC3B,GAAIkiB,EAAU9gB,EAAIygB,EAAO,CACvBO,EAAangB,KAAKK,IAAI4f,EAAU9gB,GAAKygB,EACrCO,EAAaF,EAAU9gB,EAAI,EAAIa,KAAKK,IAAI4f,EAAU9gB,GAAKygB,EAAQ5f,KAAKK,IAAI8f,GACxEC,EAAaH,EAAU9gB,EAAI8gB,EAAUliB,MAAQ8hB,EAASF,EAAWM,EAAU9gB,EAAI8gB,EAAUliB,MAAQ6hB,C,KAC5F,CACLQ,EAAaT,EAAWS,EAAaA,EAAaA,EAAaT,EAAWM,EAAU9gB,EAAIygB,C,CAE1FM,EAAahhB,MAAMihB,WAAaA,EAAa,KAC7CD,EAAahhB,MAAMnB,MAAQqiB,EAAa,I,MAMhD,oBAAAZ,CAAqBllB,EAAsB+lB,GACzC,IAAIC,EAAiBhmB,EACrB,MAAOgmB,IAAmB,KAAM,CAC9B,GAAIA,EAAeC,QAAQ,IAAIF,KAAc,CAC3C,OAAO,I,CAETC,EAAiBA,EAAeE,a,CAElC,OAAO,K,CAIT,gCAAAC,CAAiCp4B,GAC/BA,EAAMoM,iBACNpM,EAAMiM,2BACN7N,KAAKq4B,eAAez2B,E,CAKtB,sBAAAq4B,CAAuBr4B,GACrB,IAAIs4B,EAAal6B,KAAKujB,aAAaU,cAAcziB,MAAK24B,GAAeA,EAAYp5B,KAAOa,EAAM+K,OAAO5L,KACrG,GAAIm5B,GAAct4B,EAAM+K,QAAU/K,EAAM+K,OAAOtL,KAAM,CACnDlB,OAAOkgB,QAAQze,EAAM+K,OAAOtL,MAAMumB,SAAQ,EAAEzmB,EAAKI,MAC/C24B,EAAW/4B,GAAOI,CAAK,G,EAM7B,wBAAA64B,CAAyBx4B,GACvB,GAAIA,EAAM+K,OAAO5L,KAAO,6BAA8B,CACpD,IAAI42B,EAAcxuB,SAAS8N,cAAc,+BACzC,IAAIojB,EAAgBlxB,SAASmwB,iBAAiB,iCAC9C,IAAIgB,EAAiBnxB,SAASmwB,iBAAiB,sCAC/Ct5B,KAAKy0B,qBAAuB,CAAE/b,EAAG,GAAIC,EAAG,IAExC0hB,EAAczS,SAAQ/T,IACpB,MAAM0mB,EAAc1mB,EACpB7T,KAAKy0B,qBAAqB/b,EAAE6M,KAAK,CAC/BlO,KAAMkjB,EAAYthB,WAAa0e,EAAY5e,YAC3CzB,MAAOijB,EAAYxhB,YACnBhY,GAAIw5B,EAAYC,aAAa,aAC7B,IAGJF,EAAe1S,SAAQ/T,IACrB,MAAM0mB,EAAc1mB,EACpB7T,KAAKy0B,qBAAqB9b,EAAE4M,KAAK,CAC/BnO,IAAKmjB,EAAYE,UACjBljB,OAAQgjB,EAAYG,aACpB35B,GAAIw5B,EAAYC,aAAa,cAC7B,IAEJx6B,KAAK26B,kBAAkB,KAAM/4B,EAAM+K,OAAOtL,K,MACrC,GAAIO,EAAM+K,OAAO5L,KAAO,YAAa,CAC1Cf,KAAK26B,kBAAkB,KAAM/4B,EAAM+K,OAAOtL,K,MACrC,GAAIO,EAAM+K,OAAO5L,KAAO,gBAAiB,CAC9Cf,KAAK26B,kBAAkB,MAAO/4B,EAAM+K,OAAOtL,K,MACtC,GAAIO,EAAM+K,OAAO5L,KAAO,mBAAoB,CACjDf,KAAK26B,kBAAkB,MAAO/4B,EAAM+K,OAAOtL,K,EAI/C,uBAAMs5B,CAAkBC,EAAmBC,GACzC,IAAIC,EAAUC,EACd,GAAIF,EAAiB,CACnBC,EAAW96B,KAAKy0B,qBAAqB/b,EAAElX,MAAK2V,GAAOA,EAAIE,KAAOwjB,EAAgBniB,GAAKmiB,EAAgBniB,GAAKvB,EAAIE,KAAOF,EAAIG,QACvHyjB,EAAW/6B,KAAKy0B,qBAAqB9b,EAAEnX,MAAK2V,GAAOA,EAAIC,IAAMyjB,EAAgBliB,GAAKkiB,EAAgBliB,GAAKxB,EAAIC,IAAMD,EAAII,Q,CAGvH,GAAIqjB,GAAqBE,GAAYC,EAAU,CAC7C/6B,KAAKg7B,yBAAyB95B,KAAK,CACjC4hB,gBAAiBiY,EAASh6B,GAAK,IAAM+5B,EAAS/5B,I,KAE3C,CACLf,KAAKg7B,yBAAyB95B,KAAK,CAAE4hB,gBAAiB,I,CAExD,IAAK8X,EAAmB,CACtB56B,KAAKi7B,cAAc/5B,KAAK,CACtB0N,UAAWisB,EAAgB95B,GAC3BsT,WAAYwmB,EAAgBxmB,WAC5BD,SAAW2mB,GAAYA,EAASh6B,IAAO,SACvCoT,UAAY2mB,GAAYA,EAAS/5B,IAAO,SACxCoF,KAAM00B,EAAgB10B,KACtBE,UAAW60B,EAAgBJ,GAAYA,EAAS/5B,IAChDuF,QAAS60B,EAAeL,GAAYA,EAAS/5B,GAAI85B,EAAgBhhB,W,EAKvE,MAAA9X,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,uBACAA,EAAA,kBACAA,EAAA,OAAKjB,GAAG,gBAAgBmB,MAAM,gBAC3BlC,KAAKo4B,2BAA0B,CAE5Bp4B,KAAKsqB,iBACHtoB,EAAA,sBACEmyB,eAAgB,4BAChB7tB,QAAStG,KAAKsG,QACdD,UAAWrG,KAAKqG,UAChBqF,WAAY1L,KAAK0L,WACjBxJ,MAAM,wBACNqhB,aAAcvjB,KAAKujB,aACnB6X,cAAe32B,GAAOzE,KAAKq4B,eAAe5zB,KAE1C,KACJzE,KAAK04B,WACH12B,EAAA,eAAaE,MAAM,kBAAkB6T,WAAY/V,KAAKujB,aAAaxN,WAAYqlB,cAAe32B,GAAOzE,KAAKq4B,eAAe5zB,KACvH,KACJzC,EAAA,OAAKE,MAAM,0BAA0ByY,YAAa/Y,GAAS5B,KAAK64B,kBAAkBj3B,GAAQy5B,SAAU,IAAMr7B,KAAKg5B,qBAC7Gh3B,EAAA,OAAKjB,GAAG,qBACNiB,EAAA,kBACEsE,QAAStG,KAAKsG,QACdoF,WAAY1L,KAAK0L,WACjB4a,MAAOtmB,KAAKsmB,MACZ/C,aAAcvjB,KAAKujB,aACnB6X,cAAe32B,GAAOzE,KAAKq4B,eAAe5zB,KAE5CzC,EAAA,gBACEqQ,gBAAiBrS,KAAKqS,gBACtBzG,SAAU5L,KAAKujB,aAAa3X,SAC5B0a,MAAOtmB,KAAKsmB,MACZT,qBAAsB7lB,KAAKk1B,mBAC3B3R,aAAcvjB,KAAKujB,eAErBvhB,EAAA,kBAAgBskB,MAAOtmB,KAAKsmB,MAAO/C,aAAcvjB,KAAKujB,aAAc6X,cAAe32B,GAAOzE,KAAKq4B,eAAe5zB,QAKpHzC,EAAA,qBAAmBO,QAAQ,4BAE5BvC,KAAK24B,aACJ32B,EAAA,qBACEmQ,mBAAoBnS,KAAKmS,mBACzBE,gBAAiBrS,KAAKqS,gBACtBzG,SAAU5L,KAAKujB,aAAa3X,SAC5BD,SAAU3L,KAAK2L,SACfD,WAAY1L,KAAK0L,WACjBlC,YAAaxJ,KAAK24B,YAClB2C,qBAAsBlc,GAAMpf,KAAK24B,YAAc,Q,mGCnftD,MAAM4C,GAAsC,CAKjD,CACEC,MAAO,KACPC,KAAM,qHAER,CACED,MAAO,KACPC,KAAM,yDAER,CACED,MAAO,KACPC,KAAM,kEAER,CAAED,MAAO,KAAMC,KAAM,sDACrB,CACED,MAAO,KACPC,KAAM,oFAER,CACED,MAAO,KACPC,KAAM,4EAER,CACED,MAAO,KACPC,KAAM,0DAER,CAAED,MAAO,KAAMC,KAAM,iDACrB,CACED,MAAO,KACPC,KAAM,2EAER,CACED,MAAO,KACPC,KAAM,2EAER,CACED,MAAO,KACPC,KAAM,oEAER,CACED,MAAO,KACPC,KAAM,iH,MCvCGC,GAAQ,M,6CAC+B,G,eACTH,E,CACzC,iBAAAx7B,GACEC,KAAK27B,W,CAGP,gBAAAzyB,GACElJ,KAAK47B,kB,CAIP,YAAAC,GACE77B,KAAK27B,YACL37B,KAAK47B,kB,CAGC,SAAAD,GACN,GAAI37B,KAAK87B,iBAAmB,GAAI97B,KAAK+7B,UAAUxW,KAAK/e,KAAKC,MAAMzG,KAAK87B,gB,CAG9D,SAAAE,CAAUC,EAAiBC,GACjC,MAAMC,EAAMhzB,SAASizB,cAAcH,GACnC,MAAMI,EAAgB,GAEtBl8B,OAAOoN,KAAK2uB,GAAYtU,SAAQ0U,IAC9BH,EAAII,aAAaD,EAAMJ,EAAWI,IAClCD,EAAc9W,KAAK,IAAI+W,MAASJ,EAAWI,OAAU,IAGvD,MAAME,EAAW,GAAGP,IAAUI,EAAcl0B,KAAK,MACjD,MAAMs0B,EAActzB,SAAS8N,cAAculB,GAE3C,IAAKC,EAAa,CAChBtzB,SAASuzB,KAAKC,YAAYR,E,EAItB,gBAAAP,GACN57B,KAAK+7B,UAAUnU,SAAQtd,IACrB,GAAIA,EAAIkxB,MAAO,CACbx7B,KAAKg8B,UAAU,OAAQ,CACrBY,KAAMtyB,EAAImxB,KACVoB,IAAK,aACLj6B,KAAM,Y,CAGV,GAAI0H,EAAIwyB,KAAM,CACZ98B,KAAKg8B,UAAU,SAAU,CACvBnd,IAAKvU,EAAImxB,M,KAMjB,MAAA15B,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,a,iECjER,MAAM+6B,GAAkB,uI,MCeXC,GAAY,M,4KAOqB,E,gBACI,CAC9C,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,Y,gBAE8C,CAC9C,KACA,KACA,KACA,KACA,KACA,KACA,M,YAEwC,c,eACG,I,gBACC,Q,iBACC,S,eACF,O,aACF,K,sBACS,S,eACP,I,aACgB,CAC3D7W,KAAM,I,CAQR,gBAAAjd,GACElJ,KAAKi9B,eAAiBj9B,KAAK6T,QAAQoD,cAAc,qBACjDimB,EAAEl9B,KAAKi9B,gBAAgBE,gBACrB,CACEC,MAAOp9B,KAAKo9B,MACZxY,UAAW0E,EAAOtpB,KAAK6F,UACvBgf,QAASyE,EAAOtpB,KAAK8F,QACrBu3B,QAASr9B,KAAKq9B,QACd/Q,UAAWtsB,KAAKssB,UAChB7G,OAAQ,CACN8D,OAAQvpB,KAAKupB,OACb+T,UAAWt9B,KAAKs9B,UAChBC,WAAYv9B,KAAKu9B,WACjBC,YAAax9B,KAAKw9B,YAClBC,UAAWz9B,KAAKy9B,UAChBC,QAAS19B,KAAK09B,QACdC,iBAAkB39B,KAAK29B,iBACvBC,UAAW59B,KAAK49B,UAChBC,WAAY79B,KAAK69B,WACjBC,WAAY99B,KAAK89B,WACjBC,SAAU/9B,KAAK+9B,YAGnB,CAAC3R,EAAOC,KACNrsB,KAAKg+B,YAAY98B,KAAK,CAAEkrB,QAAOC,OAAM,G,CAK3C,MAAAtqB,GACE,OAAOC,EAAA,SAAOE,MAAM,mBAAmBU,KAAK,Q,4CC7FhD,MAAMq7B,GAAmB,8wD,MCQZC,GAAa,M,sCACL,M,eACE,M,eACA,M,sBACO,M,oBAE6B,CACvD/J,eAAgB,gBAChBgK,eAAgB,UAChBC,aAAc,wB,sBAG4B,CAAC,oCAAqC,2B,CAElF,iBAAAr+B,GACEC,KAAKq+B,wB,CAGP,sBAAAA,GACEv3B,EAAMw3B,aAAaC,QAAQC,IAAIx+B,KAAKy+B,cAActrB,KAAKnT,MAAOA,KAAK0+B,YAAYvrB,KAAKnT,OACpF8G,EAAMw3B,aAAaK,SAASH,IAAIx+B,KAAK4+B,eAAezrB,KAAKnT,MAAOA,KAAK0+B,YAAYvrB,KAAKnT,M,CAGxF,eAAA6+B,CAAgBC,GACd,OAAOA,EAAI52B,MAAM,KAAK,E,CAGxB,iBAAA62B,CAAkBD,GAChB,OAAO9+B,KAAKg/B,iBAAiBl+B,SAASd,KAAK6+B,gBAAgBC,G,CAG7D,aAAAL,CAAcQ,GACZ,GAAIj/B,KAAK++B,kBAAkBE,EAAOH,KAAM,CACtC9+B,KAAK8R,UAAY,KACjB,GAAI9R,KAAK6+B,gBAAgBI,EAAOH,OAAS,2BAA4B,CACnE9+B,KAAKk/B,eAAe/K,eAAiB,gB,MAChC,GAAIn0B,KAAK6+B,gBAAgBI,EAAOH,OAAS,mCAAoC,CAClF9+B,KAAKm/B,iBAAmB,I,KACnB,CACLn/B,KAAKk/B,eAAe/K,eAAiB,e,CAEvCn0B,KAAKo/B,W,CAEP,OAAOH,C,CAGT,cAAAL,CAAeD,G,MACb3+B,KAAK8R,UAAY,MAEjB,IAAI/F,EAAA4yB,EAASt9B,KAAK2F,gBAAY,MAAA+E,SAAA,SAAAA,EAAE8e,OAAQ,CACtC7qB,KAAK0+B,YAAYC,EAASt9B,KAAK2F,cAE/B,MAAM,IAAIC,MAAM03B,EAASt9B,KAAK2F,a,CAGhC,GAAIhH,KAAK++B,kBAAkBJ,EAASM,OAAOH,KAAM,CAC/C9+B,KAAKq/B,iBAAiB,UAAW,K,CAGnC,OAAOV,C,CAGT,WAAAD,CAAYp6B,GACV,GAAItE,KAAKm/B,iBAAkB,CACzBn/B,KAAKm/B,iBAAmB,K,CAE1B,IAAKn/B,KAAKs/B,QAAS,CACjBt/B,KAAKo/B,W,CAEPp/B,KAAKq/B,iBAAiB/6B,EAAO,OAC7B,OAAOi7B,QAAQC,OAAOl7B,E,CAGxB,SAAA86B,GACEp/B,KAAKs/B,QAAU,I,CAGjB,mBAAAG,CAAoBC,GAClB,GAAI1/B,KAAKm/B,iBAAkB,CACzBn/B,KAAKs/B,QAAU,MACft/B,KAAKm/B,iBAAmB,K,KACnB,CACL,MAAMQ,EAAQD,EAAY,EAAI,IAE9B1tB,YAAW,KACThS,KAAKs/B,QAAU,KAAK,GACnBK,E,EAIP,gBAAAN,CAAiB98B,EAAiBq9B,GAChC5/B,KAAK0/B,UAAYE,EACjB5/B,KAAKk/B,eAAc/+B,OAAAC,OAAAD,OAAAC,OAAA,GACdJ,KAAKk/B,gBAAc,CACtB,CAACU,EAAU,iBAAmB,gBAAiBr9B,IAEjDvC,KAAKy/B,oBAAoBG,E,CAG3B,aAAAC,GACE,GAAI7/B,KAAK8R,UAAW,OAAO9R,KAAKk/B,eAAe/K,eAC/C,OAAOn0B,KAAK0/B,UAAY1/B,KAAKk/B,eAAef,eAAiBn+B,KAAKk/B,eAAed,Y,CAEnF,MAAAr8B,GACE,OACEC,EAACC,EAAI,KACFjC,KAAK8R,WAAa9R,KAAKs/B,SACtBt9B,EAAA,OAAKE,MAAM,0BACTF,EAAA,OAAKE,MAAM,oBACTF,EAAA,4BAKNA,EAAA,OAAKE,MAAM,kBAAiB,cAAclC,KAAK8R,WAAa9R,KAAKs/B,UAAYt/B,KAAK0/B,UAAY,OAAS,WACnG1/B,KAAK8R,WAAa9R,KAAKs/B,UAAYt/B,KAAK0/B,WACxC19B,EAACwuB,EAAQ,KACPxuB,EAAA,OAAKE,MAAM,oBACTF,EAAA,OAAKsV,MAAM,KAAKC,OAAO,KAAKuoB,QAAQ,YAAYre,KAAK,OAAOse,MAAM,8BAChE/9B,EAAA,QACEg+B,EAAE,0gBACFve,KAAK,QAAO,YACF,UAAS,YACT,cAIhBzf,EAAA,SAAIhC,KAAK6/B,mB,eCvIvB,MAAMI,GAAqB,4zB,MCOdC,GAAe,M,sCACA,E,CAC1B,MAAAn+B,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,mBACTF,EAAA,QAAME,MAAM,WACXlC,KAAKuC,SAAWP,EAAA,KAAGE,MAAO,OAAQlC,KAAKuC,U,eCdlD,MAAM49B,GAAe,8oiI,MCORC,GAAS,M,oEAIpB,UAAAC,CAAWC,GACT,GAAItgC,KAAKugC,eAAgB,CACvBC,aAAaxgC,KAAKugC,e,CAGpB,GAAID,EAAY,CACdtgC,KAAKugC,eAAiBvuB,YAAW,KAC/BhS,KAAKygC,KAAO,IAAI,GACf,I,KACE,CACLzgC,KAAKygC,KAAO,K,EAGhB,MAAA1+B,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,QACE0+B,aAAc,IAAM1gC,KAAKqgC,WAAW,MACpCM,aAAc,IAAM3gC,KAAKqgC,WAAW,QAEpCr+B,EAAA,KACEE,MAAM,eAAc,cACR,UAAS,iBACN,MAAK,sBACA,gBAGvBlC,KAAKygC,MACJz+B,EAAA,OAAKE,MAAM,wCAAwCid,KAAK,WACtDnd,EAAA,OAAKE,MAAM,kBACXF,EAAA,OAAKE,MAAM,qBACTF,EAAA,KAAGE,MAAM,qBACTF,EAAA,QAAM4+B,UAAW5gC,KAAKuC,Y"}
{"version":3,"names":["irHkTasksCss","IrHkTasks","this","roomService","RoomService","houseKeepingService","HouseKeepingService","componentWillLoad","baseurl","axios","defaults","baseURL","ticket","setToken","updateHKStore","token","property_id","propertyid","language","initializeApp","handleResetData","e","stopImmediatePropagation","stopPropagation","arrival","arrival_time","housekeeper","unit","status","selectedRoom","executeHKAction","id","code","getExposedHKSetup","ticketChanged","newValue","oldValue","handleCheckChange","action","detail","modalOpenTimeOut","setTimeout","modal","el","querySelector","openModal","handleCloseSidebar","archiveOpened","disconnectedCallback","clearTimeout","getPendingActions","getHKPendingActions","bracket","selectedDuration","selectedHouseKeeper","isLoading","Promise","all","getExposedHKStatusCriteria","fetchData","fetchLanguage","housekeeping_store","hk_tasks","brackets","error","console","handleConfirm","preventDefault","render","h","Host","class","label","locales","entries","Lcz_HousekeepingTasks","justifyContent","slot","text","Lcz_Archive","size","onClickHanlder","selectedValue","onSelectChange","data","map","description","value","showFirstOption","LabelAvailable","housekeepers","name","toString","Lcz_Unit","Lcz_Status","Lcz_Arrivaldate","Lcz_ArrivalTime","Lcz_Housekeeper","Lcz_Done","_a","pending_housekeepers","key","onCheckChange","checked","leftBtnText","Lcz_No","rightBtnText","Lcz_Yes","onConfirmModal","bind","onCancelModal","modalBody"],"sources":["src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.css?tag=ir-hk-tasks&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n.checkbox-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.table-container {\r\n  overflow-x: auto;\r\n  max-width: 100%;\r\n  width: max-content;\r\n}\r\n.table,\r\nth,\r\ntd {\r\n  border-color: white !important;\r\n}\r\n\r\n.select-container {\r\n  max-width: 500px;\r\n}\r\n\r\n@media only screen and (min-width: 900px) {\r\n  td {\r\n    min-width: 140px !important;\r\n    width: max-content !important;\r\n  }\r\n}\r\n@media only screen and (max-width: 900px) {\r\n  td {\r\n    min-width: 100px !important;\r\n  }\r\n  .table-container {\r\n    width: max-content !important;\r\n  }\r\n}\r\n","import { IPendingActions } from '@/models/housekeeping';\r\nimport { HouseKeepingService } from '@/services/housekeeping.service';\r\nimport { RoomService } from '@/services/room.service';\r\nimport housekeeping_store, { updateHKStore } from '@/stores/housekeeping.store';\r\nimport locales from '@/stores/locales.store';\r\nimport { Component, Host, Listen, Prop, State, Watch, h, Element } from '@stencil/core';\r\nimport axios from 'axios';\r\n\r\n@Component({\r\n  tag: 'ir-hk-tasks',\r\n  styleUrl: 'ir-hk-tasks.css',\r\n  scoped: true,\r\n})\r\nexport class IrHkTasks {\r\n  @Element() el: HTMLElement;\r\n\r\n  @Prop() language: string = '';\r\n  @Prop() ticket: string = '';\r\n  @Prop() baseurl: string = '';\r\n  @Prop() propertyid: number;\r\n\r\n  @State() isLoading = false;\r\n  @State() selectedDuration = '';\r\n  @State() selectedHouseKeeper = '0';\r\n  @State() selectedRoom: IPendingActions | null = null;\r\n  @State() archiveOpened = false;\r\n\r\n  private modalOpenTimeOut: NodeJS.Timeout;\r\n  private roomService = new RoomService();\r\n  private houseKeepingService = new HouseKeepingService();\r\n\r\n  componentWillLoad() {\r\n    if (this.baseurl) {\r\n      axios.defaults.baseURL = this.baseurl;\r\n    }\r\n    if (this.ticket !== '') {\r\n      this.roomService.setToken(this.ticket);\r\n      this.houseKeepingService.setToken(this.ticket);\r\n      updateHKStore('default_properties', { token: this.ticket, property_id: this.propertyid, language: this.language });\r\n      this.initializeApp();\r\n    }\r\n  }\r\n\r\n  @Listen('resetData')\r\n  async handleResetData(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { arrival, arrival_time, housekeeper, unit, status } = this.selectedRoom;\r\n    this.houseKeepingService.executeHKAction({\r\n      property_id: this.propertyid,\r\n      arrival,\r\n      arrival_time,\r\n      housekeeper: {\r\n        id: housekeeper.id,\r\n      },\r\n      status: {\r\n        code: status.code,\r\n      },\r\n      unit: {\r\n        id: unit.id,\r\n      },\r\n    });\r\n    await this.houseKeepingService.getExposedHKSetup(this.propertyid);\r\n  }\r\n\r\n  @Watch('ticket')\r\n  async ticketChanged(newValue: string, oldValue: string) {\r\n    if (newValue !== oldValue) {\r\n      this.roomService.setToken(this.ticket);\r\n      this.houseKeepingService.setToken(this.ticket);\r\n      updateHKStore('default_properties', { token: this.ticket, property_id: this.propertyid, language: this.language });\r\n      this.initializeApp();\r\n    }\r\n  }\r\n  handleCheckChange(e: CustomEvent, action: IPendingActions) {\r\n    if (e.detail) {\r\n      this.selectedRoom = action;\r\n      this.modalOpenTimeOut = setTimeout(() => {\r\n        const modal = this.el.querySelector('ir-modal');\r\n        if (modal) {\r\n          (modal as HTMLIrModalElement).openModal();\r\n        }\r\n      }, 50);\r\n    }\r\n  }\r\n  @Listen('closeSideBar')\r\n  handleCloseSidebar(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.archiveOpened = false;\r\n  }\r\n  disconnectedCallback() {\r\n    if (this.modalOpenTimeOut) {\r\n      clearTimeout(this.modalOpenTimeOut);\r\n    }\r\n  }\r\n  async getPendingActions() {\r\n    await this.houseKeepingService.getHKPendingActions({\r\n      property_id: this.propertyid,\r\n      bracket: {\r\n        code: this.selectedDuration,\r\n      },\r\n      housekeeper: {\r\n        id: +this.selectedHouseKeeper,\r\n      },\r\n    });\r\n  }\r\n  async initializeApp() {\r\n    try {\r\n      this.isLoading = true;\r\n      await Promise.all([\r\n        this.houseKeepingService.getExposedHKStatusCriteria(this.propertyid),\r\n        this.roomService.fetchData(this.propertyid, this.language),\r\n        this.roomService.fetchLanguage(this.language, ['_HK_FRONT']),\r\n      ]);\r\n      this.selectedDuration = housekeeping_store.hk_tasks.brackets[0].code;\r\n      await this.getPendingActions();\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n  async handleConfirm(e: CustomEvent) {\r\n    e.preventDefault();\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    try {\r\n      await this.getPendingActions();\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.selectedRoom = null;\r\n    }\r\n  }\r\n  render() {\r\n    if (this.isLoading) {\r\n      return <ir-loading-screen></ir-loading-screen>;\r\n    }\r\n    return (\r\n      <Host>\r\n        <ir-toast></ir-toast>\r\n        <ir-interceptor></ir-interceptor>\r\n        <section class=\"p-2\">\r\n          <ir-title class=\"d-none d-md-flex\" label={locales.entries.Lcz_HousekeepingTasks} justifyContent=\"space-between\">\r\n            <ir-button slot=\"title-body\" text={locales.entries.Lcz_Archive} size=\"sm\"></ir-button>\r\n          </ir-title>\r\n          <div class=\"d-flex align-items-center mb-2 justify-content-between d-md-none\">\r\n            <ir-title class=\"mb-0\" label={locales.entries.Lcz_HousekeepingTasks} justifyContent=\"space-between\"></ir-title>\r\n            <ir-button slot=\"title-body\" text={locales.entries.Lcz_Archive} size=\"sm\" onClickHanlder={() => (this.archiveOpened = true)}></ir-button>\r\n          </div>\r\n          <div class=\"d-flex flex-column flex-sm-row align-items-center mb-1  select-container\">\r\n            <ir-select\r\n              selectedValue={this.selectedDuration}\r\n              onSelectChange={e => {\r\n                this.selectedDuration = e.detail;\r\n                this.getPendingActions();\r\n              }}\r\n              data={housekeeping_store.hk_tasks.brackets.map(bracket => ({\r\n                text: bracket.description,\r\n                value: bracket.code,\r\n              }))}\r\n              class=\"mb-1 w-100 mb-sm-0\"\r\n              showFirstOption={false}\r\n              LabelAvailable={false}\r\n            ></ir-select>\r\n            <ir-select\r\n              onSelectChange={e => {\r\n                this.selectedHouseKeeper = e.detail;\r\n                this.getPendingActions();\r\n              }}\r\n              selectedValue={this.selectedHouseKeeper}\r\n              data={[\r\n                { text: 'All housekeepers', value: '0' },\r\n                ...housekeeping_store.hk_tasks.housekeepers.map(bracket => ({\r\n                  text: bracket.name,\r\n                  value: bracket.id.toString(),\r\n                })),\r\n              ]}\r\n              showFirstOption={false}\r\n              LabelAvailable={false}\r\n              class=\"ml-sm-2 w-100\"\r\n            ></ir-select>\r\n          </div>\r\n          <div class=\"card p-1\">\r\n            <div class=\"table-container\">\r\n              <table class=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th class=\"text-left\">{locales.entries.Lcz_Unit}</th>\r\n                    <th class=\"text-left\">{locales.entries.Lcz_Status}</th>\r\n                    <th class=\"text-left\">{locales.entries.Lcz_Arrivaldate}</th>\r\n                    <th class=\"text-left\">{locales.entries.Lcz_ArrivalTime}</th>\r\n                    <th class=\"text-left\">{locales.entries.Lcz_Housekeeper}</th>\r\n                    <th class=\"text-center\">{locales.entries.Lcz_Done}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {housekeeping_store.pending_housekeepers?.map(action => (\r\n                    <tr key={action.housekeeper.id}>\r\n                      <td class=\"text-left\">{action.unit.name}</td>\r\n                      <td class=\"text-left\">{action.status.description}</td>\r\n                      <td class=\"text-left\">{action.arrival}</td>\r\n                      <td class=\"text-left\">{action.arrival_time}</td>\r\n                      <td class=\"text-left\">{action.housekeeper.name}</td>\r\n                      <td>\r\n                        <div class=\"checkbox-container\">\r\n                          <ir-checkbox onCheckChange={e => this.handleCheckChange(e, action)} checked={this.selectedRoom?.unit.id === action.unit.id}></ir-checkbox>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {this.selectedRoom && (\r\n          <ir-modal\r\n            leftBtnText={locales.entries.Lcz_No}\r\n            rightBtnText={locales.entries.Lcz_Yes}\r\n            onConfirmModal={this.handleConfirm.bind(this)}\r\n            onCancelModal={() => (this.selectedRoom = null)}\r\n            modalBody={`Is ${this.selectedRoom.unit.name} cleaned?`}\r\n          ></ir-modal>\r\n        )}\r\n        {/* <ir-sidebar open={this.archiveOpened} showCloseButton={false} onIrSidebarToggle={() => (this.archiveOpened = false)}>\r\n          {this.archiveOpened && <ir-hk-archive slot=\"sidebar-body\"></ir-hk-archive>}\r\n        </ir-sidebar> */}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}
{"version":3,"names":["irCheckboxCss","IrCheckbox","v4","handleCheckedChange","newValue","this","currentChecked","checked","componentWillLoad","componentDidLoad","checkboxRef","setAttribute","JSON","stringify","handleCheckChange","checkChange","emit","render","h","Host","disabled","name","onClick","bind","id","checkboxId","value","ref","type","role","class","xmlns","height","width","viewBox","fill","d","tabindex","label","htmlFor"],"sources":["src/components/ir-checkbox/ir-checkbox.css?tag=ir-checkbox&encapsulation=scoped","src/components/ir-checkbox/ir-checkbox.tsx"],"sourcesContent":[":host {\r\n  display: flex;\r\n  align-items: center;\r\n  width: fit-content;\r\n}\r\nbutton {\r\n  all: unset;\r\n}\r\n.CheckboxRoot {\r\n  background-color: white;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 1px solid #cacfe7;\r\n  border-radius: 4px;\r\n  transition: all 0.3s ease;\r\n}\r\n.CheckboxRoot:disabled {\r\n  background-color: #eceff1;\r\n  border-color: rgba(118, 118, 118, 0.3);\r\n  pointer-events: none;\r\n}\r\n\r\n.CheckboxRoot[data-state='checked'] {\r\n  background-color: #1e9ff2;\r\n  color: white;\r\n  border-color: #1e9ff2;\r\n}\r\ninput[type='checkbox'] {\r\n  background-color: initial;\r\n  cursor: default;\r\n  appearance: auto;\r\n  box-sizing: border-box;\r\n  margin: 3px 3px 3px 4px;\r\n  padding: initial;\r\n  border: initial;\r\n}\r\n.checkbox {\r\n  transform: translateX(-100%);\r\n  position: absolute;\r\n  pointer-events: none;\r\n  opacity: 0;\r\n  margin: 0px;\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\n\r\n@Component({\r\n  tag: 'ir-checkbox',\r\n  styleUrl: 'ir-checkbox.css',\r\n  scoped: true,\r\n})\r\nexport class IrCheckbox {\r\n  @Prop() checked: boolean = false;\r\n  @Prop() label: string;\r\n  @Prop() checkboxId = v4();\r\n  @Prop() name: string;\r\n  @Prop() disabled: boolean;\r\n\r\n  @State() currentChecked = false;\r\n\r\n  @Event() checkChange: EventEmitter<boolean>;\r\n\r\n  @Watch('checked')\r\n  handleCheckedChange(newValue: boolean) {\r\n    if (newValue === this.currentChecked) {\r\n      return;\r\n    }\r\n    this.currentChecked = this.checked;\r\n  }\r\n\r\n  private checkboxRef: HTMLButtonElement;\r\n\r\n  componentWillLoad() {\r\n    this.currentChecked = this.checked;\r\n  }\r\n  componentDidLoad() {\r\n    if (this.checkboxRef) {\r\n      this.checkboxRef.setAttribute('aria-checked', JSON.stringify(this.checked));\r\n    }\r\n  }\r\n  handleCheckChange() {\r\n    this.currentChecked = !this.currentChecked;\r\n    if (this.checkboxRef) {\r\n      this.checkboxRef.setAttribute('aria-checked', JSON.stringify(this.currentChecked));\r\n    }\r\n    this.checkChange.emit(this.currentChecked);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <button\r\n          disabled={this.disabled}\r\n          name={this.name}\r\n          onClick={this.handleCheckChange.bind(this)}\r\n          id={this.checkboxId}\r\n          data-state={this.currentChecked ? 'checked' : 'unchecked'}\r\n          value={'on'}\r\n          ref={ref => (this.checkboxRef = ref)}\r\n          type=\"button\"\r\n          role=\"checkbox\"\r\n          class=\"CheckboxRoot\"\r\n        >\r\n          {this.currentChecked && (\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"\r\n              />\r\n            </svg>\r\n          )}\r\n        </button>\r\n        <input type=\"checkbox\" aria-hidden=\"true\" tabindex=\"-1\" value=\"on\" checked={this.currentChecked} class=\"checkbox\" />\r\n        {this.label && <label htmlFor={this.checkboxId}>{this.label}</label>}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"6FAAA,MAAMA,EAAgB,s1B,MCQTC,EAAU,M,+EACM,M,qCAENC,I,gEAIK,K,CAK1B,mBAAAC,CAAoBC,GAClB,GAAIA,IAAaC,KAAKC,eAAgB,CACpC,M,CAEFD,KAAKC,eAAiBD,KAAKE,O,CAK7B,iBAAAC,GACEH,KAAKC,eAAiBD,KAAKE,O,CAE7B,gBAAAE,GACE,GAAIJ,KAAKK,YAAa,CACpBL,KAAKK,YAAYC,aAAa,eAAgBC,KAAKC,UAAUR,KAAKE,S,EAGtE,iBAAAO,GACET,KAAKC,gBAAkBD,KAAKC,eAC5B,GAAID,KAAKK,YAAa,CACpBL,KAAKK,YAAYC,aAAa,eAAgBC,KAAKC,UAAUR,KAAKC,gB,CAEpED,KAAKU,YAAYC,KAAKX,KAAKC,e,CAE7B,MAAAW,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,UACEE,SAAUf,KAAKe,SACfC,KAAMhB,KAAKgB,KACXC,QAASjB,KAAKS,kBAAkBS,KAAKlB,MACrCmB,GAAInB,KAAKoB,WAAU,aACPpB,KAAKC,eAAiB,UAAY,YAC9CoB,MAAO,KACPC,IAAKA,GAAQtB,KAAKK,YAAciB,EAChCC,KAAK,SACLC,KAAK,WACLC,MAAM,gBAELzB,KAAKC,gBACJY,EAAA,OAAKa,MAAM,6BAA6BC,OAAO,KAAKC,MAAM,QAAQC,QAAQ,eACxEhB,EAAA,QACEiB,KAAK,eACLC,EAAE,2LAKVlB,EAAA,SAAOU,KAAK,WAAU,cAAa,OAAOS,SAAS,KAAKX,MAAM,KAAKnB,QAASF,KAAKC,eAAgBwB,MAAM,aACtGzB,KAAKiC,OAASpB,EAAA,SAAOqB,QAASlC,KAAKoB,YAAapB,KAAKiC,O"}
{"version":3,"names":["iglApplicationInfoCss","IglApplicationInfo","this","userRate","componentWillLoad","console","log","guestInfo","isRateModified","rateType","rate","dateDifference","guestData","Object","assign","roomId","defaultGuestRoomId","roomsList","filter","e","id","toString","length","preference","defaultGuestPreference","updateRoomList","handleSelctedUnits","units","selectedUnits","index","filterdRoomList","includes","updateData","dataUpdateEvent","emit","key","guestRefKey","data","handleDataChange","value","find","room","name","handleGuestNameChange","event","guestName","target","handleButtonClicked","detail","isButtonPressed","render","h","Host","class","bookingType","roomCategoryName","ratePlanName","replace","message","cancelation","guarantee","adult_child_offering","v4","type","placeholder","locales","entries","Lcz_GuestFirstnameAndLastname","onInput","required","calendar_data","is_frontdesk_enabled","onChange","selected","Lcz_Assignunits","map","Lcz_BedConfiguration","bedPreferenceType","CODE_NAME","CODE_VALUE_EN","getCurrencySymbol","currency","code","Number","toFixed","Lcz_Stay","iglBookPropertyFooterCss","IglBookPropertyFooter","isEventType","eventType","editNext","label","renderButton","disabled","shouldRenderTwoButtons","onClick","buttonClicked","Fragment","Lcz_Cancel","Lcz_Next","iglBookPropertyHeaderCss","IglBookPropertyHeader","sourceOption","description","tag","getSplitBookingList","Lcz_Tobooking","keys","bookedByInfoData","bookingNumber","firstName","lastName","from_date","moment","bookingDataDefaultDateRange","fromDate","format","to_date","toDate","propertyId","Lcz_BookingNumber","onComboboxValue","stopImmediatePropagation","spiltBookingSelected","isSplitBooking","getSourceNode","Lcz_Source","evt","sourceDropDownChange","sourceOptions","option","handleAdultChildChange","obj","adultChildCount","adultChild","getAdultChildConstraints","Lcz_NumberOfGuests","Lcz_AdultsCaption","Array","from","adultChildConstraints","adult_max_nbr","_","i","child_max_nbr","renderChildCaption","isLoading","interceptor_requests","status","icon","size","text","Lcz_Check","onClickHanlder","maxAge","child_max_age","years","Lcz_Years","Lcz_Year","Lcz_ChildCaption","toast","title","Lcz_ChooseBookingNumber","position","initialToDate","Date","defaultDaterange","initialFromDate","selectedFromDate","dateRangeData","selectedToDate","isBefore","isAfter","Lcz_CheckInDateShouldBeMAx","adult","Lcz_PlzSelectNumberOfGuests","minDate","getTime","bookingData","event_type","showSourceNode","showSplitBookingOption","dateLabel","Lcz_Dates","defaultData","iglBookingOverviewPageCss","IglBookingOverviewPage","getSplitBookings","hasOwnProperty","splitBookingEvents","splitBookingId","defaultDateRange","splitBookings","_b","_a","roomsInfo","roomInfo","selectedRooms","initialRoomIds","isBookDisabled","ratePricingMode","roomTypeData","roomInfoId","has","get","onDataUpdateEvent","roomsDataUpdate","iglBookingRoomRatePlanCss","IglBookingRoomRatePlan","initialRateValue","getAvailableRooms","assignable_units","result","forEach","unit","Is_Fully_Available","push","pr_id","updateSelectedRatePlan","ratePlanData","disableForm","shouldBeDisabled","selectedData","is_closed","totalAvailableRooms","physicalRooms","setAvailableRooms","availableRooms","selectedRoom","roomName","sort","a","b","getSelectedOffering","variations","variation","ratePlanId","totalRooms","amount","adultCount","adult_nbr","childrenCount","child_nbr","defaultSelectedRate","changedKey","ratePlanDataChanged","newData","handleRateDaysUpdate","selectedOffering","handleInput","inputElement","inputValue","validDecimalNumber","test","substring","updateOffering","updateRate","updateGenericData","offering","numericValue","parseInt","bookProperty","gotoSplitPageTwoEvent","renderRate","split","isInputFocused","onFocus","onBlur","Lcz_Rate","checked","Lcz_Current","Lcz_Select","Lcz_Book","iglBookingRoomsCss","IglBookingRooms","validBookingTypes","initializeRoomData","inventory","rateplans","fill","roomsDistributions","calculateInitialDistributions","handleRoomTypeData","distributions","selectedIndexes","sum","category","onRoomDataUpdate","updatedData","handleTotalRoomsUpdate","roomCategoryId","newValue","updateRatePlanTotalRooms","ratePlanIndex","calculateTotalSelectedRoomsExcludingIndex","excludedIndex","reduce","acc","rooms","idx","newRoomsDistributions","totalSelectedRoomsExcludingCurrent","JSON","stringify","isValidBookingType","ratePlan","physicalrooms","defaultRoomId","iglDateRangeCss","IglDateRange","totalNights","fromDateStr","toDateStr","getStringDateFormat","dt","getFullYear","getMonth","getDate","setHours","setDate","getFormattedDateString","calculateTotalNights","handleDateSelectEvent","Math","floor","toLocaleString","month","toLowerCase","dateSelectEvent","handleDateChange","start","end","renderAgain","maxDate","autoApply","onDateChanged","Lcz_Nights","Lcz_Night","iglPagetwoCss","IglPagetwo","initializeGuestData","selectedBookedByData","total","newSelectedUnits","getRate","rate_plan","TOTAL_PRICE","handleOnApplicationInfoDataUpdateEvent","opt","categoryIdKey","updatedUnits","handleEventData","isGuestDataIncomplete","selectedGuestData","isButtonDisabled","isValidProperty","property","comparedBy","undefined","formatDate","Lcz_TotalPrice","defaultGuestData","bed_preference","PR_ID","isEditOrAddRoomEvent","countryNodeList","language","showPaymentDetails","Lcz_Back","btn_color","btn_styles","Lcz_Save","iglPropertyBookedByCss","IglPropertyBookedBy","bookingService","BookingService","arrivalTimeList","expiryMonths","expiryYears","currentMonth","email","countryId","isdCode","contactNumber","selectedArrivalTime","emailGuest","cardNumber","cardHolderName","expiryMonth","expiryYear","assignCountryCode","initializeExpiryYears","initializeDateData","populateBookedByData","currentYear","country","getUserDefaultCountry","bookedByData","arrivalTime","foundTime","time","handleNumberInput","numericRegex","handleEmailInput","isValidEmail","checkUser","res","getUserInfo","first_name","last_name","mobile","country_id","error","emailId","emailPattern","handleComboboxChange","stopPropagation","clearEvent","Lcz_BookedBy","danger_border","bind","Lcz_EmailAddress","onInputCleared","Lcz_FirstName","Lcz_LastName","Lcz_Country","countryNode","Lcz_MobilePhone","Lcz_Isd","phone_prefix","Lcz_ContactNumber","Lcz_YourArrivalTime","Lcz_AnyMessageForUs","rows","Lcz_CardNumber","pattern","Lcz_CardHolderName","Lcz_ExpiryDate","year","htmlFor","Lcz_EmailTheGuest","irLoadingScreenCss","IrLoadingScreen"],"sources":["src/components/igloo-calendar/igl-application-info/igl-application-info.css?tag=igl-application-info&encapsulation=scoped","src/components/igloo-calendar/igl-application-info/igl-application-info.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.css?tag=igl-book-property-footer&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.css?tag=igl-book-property-header&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.css?tag=igl-booking-overview-page&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.tsx","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.css?tag=igl-booking-room-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.tsx","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.css?tag=igl-booking-rooms&encapsulation=scoped","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.tsx","src/components/igloo-calendar/igl-date-range/igl-date-range.css?tag=igl-date-range&encapsulation=scoped","src/components/igloo-calendar/igl-date-range/igl-date-range.tsx","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.css?tag=igl-pagetwo&encapsulation=scoped","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.tsx","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.css?tag=igl-property-booked-by&encapsulation=scoped","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.tsx","src/components/ir-loading-screen/ir-loading-screen.css?tag=ir-loading-screen&encapsulation=scoped","src/components/ir-loading-screen/ir-loading-screen.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n@media only screen and (min-width: 908px) {\r\n  .aplicationInfoContainer {\r\n    max-width: 80%;\r\n  }\r\n  .guest-info-container {\r\n    max-width: 300px;\r\n  }\r\n\r\n  .preference-select-container {\r\n    max-width: 250px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, Watch, State, Listen } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { getCurrencySymbol } from '../../../utils/utils';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-application-info',\r\n  styleUrl: 'igl-application-info.css',\r\n  scoped: true,\r\n})\r\nexport class IglApplicationInfo {\r\n  @Prop() guestInfo: { [key: string]: any };\r\n  @Prop() currency;\r\n  @Prop({ reflect: true, mutable: true }) roomsList: { [key: string]: any }[] = [];\r\n  @Prop() guestRefKey: string;\r\n  @Prop() bedPreferenceType = [];\r\n  @Prop() selectedUnits: number[] = [];\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() defaultGuestPreference: number | null;\r\n  @Prop() index: number;\r\n  @Prop() defaultGuestRoomId: number;\r\n  @Prop() dateDifference: number;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() filterdRoomList = [];\r\n  @State() isButtonPressed = false;\r\n  @State() guestData: { [key: string]: any };\r\n  private userRate = 0;\r\n\r\n  componentWillLoad() {\r\n    console.log(this.guestInfo);\r\n    if (this.guestInfo.isRateModified && this.guestInfo.rateType === 2) {\r\n      this.userRate = this.guestInfo.rate * this.dateDifference;\r\n    } else {\r\n      this.userRate = this.guestInfo.rate;\r\n    }\r\n    this.guestData = this.guestInfo ? { ...this.guestInfo } : {};\r\n    this.guestData.roomId = '';\r\n    if (this.defaultGuestRoomId && this.roomsList.filter(e => e.id.toString() === this.defaultGuestRoomId.toString()).length > 0) {\r\n      this.guestData.roomId = this.defaultGuestRoomId;\r\n    }\r\n    this.guestData.preference = +this.defaultGuestPreference || '';\r\n    this.updateRoomList();\r\n  }\r\n\r\n  @Watch('selectedUnits')\r\n  async handleSelctedUnits() {\r\n    this.updateRoomList();\r\n  }\r\n  updateRoomList() {\r\n    const units = [...this.selectedUnits];\r\n    units[this.index] = -1;\r\n    this.filterdRoomList = this.roomsList.filter(e => !units.includes(e.id));\r\n  }\r\n  updateData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      guestRefKey: this.guestRefKey,\r\n      data: { ...this.guestData },\r\n    });\r\n  }\r\n\r\n  handleDataChange(key, value) {\r\n    this.guestData[key] = +value;\r\n    if (value === '') {\r\n      this.guestData['roomName'] = value;\r\n    }\r\n    if (key === 'roomId' && value !== '') {\r\n      this.guestData['roomName'] = this.filterdRoomList.find(room => room.id === +value).name || '';\r\n    }\r\n    console.log('guest data', this.guestData);\r\n    this.updateData();\r\n  }\r\n\r\n  handleGuestNameChange(event) {\r\n    // console.log(\"On Guest name Change::\", event.target.value);\r\n    this.guestData.guestName = event.target.value;\r\n    this.updateData();\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n      case 'save':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    //console.log(this.guestInfo, this.roomsList);\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-1 \">\r\n          <div class=\" mb-1 \">\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING' ? (\r\n              <span class=\"h5 mr-1\">{this.guestInfo.roomCategoryName}</span>\r\n            ) : null}\r\n            <span class=\" font-weight-bold\">\r\n              {this.guestInfo.ratePlanName.replace(this.guestInfo.roomCategoryName + '/', '')}\r\n              <ir-tooltip class=\" mr-1\" message={this.guestInfo.cancelation + this.guestInfo.guarantee}></ir-tooltip>\r\n            </span>\r\n            <span>{this.guestInfo.adult_child_offering}</span>\r\n          </div>\r\n\r\n          <div class=\"d-flex flex-column flex-md-row m-0 p-0 align-items-md-center aplicationInfoContainer \">\r\n            <div class=\"mr-1 flex-fill guest-info-container\">\r\n              <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class={`form-control ${this.isButtonPressed && this.guestData.guestName === '' && 'border-danger'}`}\r\n                placeholder={locales.entries.Lcz_GuestFirstnameAndLastname}\r\n                name=\"guestName\"\r\n                onInput={event => this.handleGuestNameChange(event)}\r\n                required\r\n                value={this.guestData.guestName}\r\n              />\r\n            </div>\r\n            <div class={'mt-1 mt-md-0 d-flex align-items-center flex-fill'}>\r\n              {calendar_data.is_frontdesk_enabled && (this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') ? (\r\n                <div class=\"mr-1 p-0 flex-fill  preference-select-container\">\r\n                  <select class={`form-control  input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('roomId', (event.target as HTMLInputElement).value)}>\r\n                    <option value=\"\" selected={this.guestData.roomId === ''}>\r\n                      {locales.entries.Lcz_Assignunits}\r\n                    </option>\r\n                    {this.filterdRoomList.map(room => (\r\n                      <option value={room.id} selected={+this.guestData.roomId === room.id}>\r\n                        {room.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              ) : null}\r\n\r\n              <div class=\"mr-1 flex-fill\">\r\n                <select\r\n                  class={`form-control input-sm ${this.isButtonPressed && (this.guestData.preference === '' || this.guestData.preference === 0) && 'border-danger'}`}\r\n                  id={v4()}\r\n                  onChange={event => this.handleDataChange('preference', (event.target as HTMLInputElement).value)}\r\n                >\r\n                  <option value=\"\" selected={this.guestData.preference === ''}>\r\n                    {locales.entries.Lcz_BedConfiguration}\r\n                  </option>\r\n                  {this.bedPreferenceType.map(data => (\r\n                    <option value={+data.CODE_NAME} selected={this.guestData.preference === +data.CODE_NAME}>\r\n                      {data.CODE_VALUE_EN}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div class=\"\">\r\n                {getCurrencySymbol(this.currency.code) + Number(this.userRate).toFixed(2)}/{locales.entries.Lcz_Stay}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n:host > * {\r\n  margin: auto;\r\n  padding: auto;\r\n}\r\n\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { FooterButtonType, TPropertyButtonsTypes } from '../../../../models/igl-book-property';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-footer',\r\n  styleUrl: 'igl-book-property-footer.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyFooter {\r\n  @Prop() eventType: string;\r\n  @Prop() disabled: boolean = true;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  private isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  editNext(label) {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      if (label === 'Cancel') {\r\n        return 'flex-fill';\r\n      } else {\r\n        return 'd-none d-md-block  flex-fill';\r\n      }\r\n    }\r\n    return 'flex-fill';\r\n  }\r\n\r\n  private renderButton(type: FooterButtonType, label: string, disabled = false) {\r\n    return (\r\n      <div class={this.shouldRenderTwoButtons() ? ` ${this.editNext(label)}` : 'flex-fill'}>\r\n        <button class={`btn btn-${type === 'cancel' ? 'secondary' : 'primary'} full-width`} onClick={() => this.buttonClicked.emit({ key: type })} disabled={disabled}>\r\n          {label}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private shouldRenderTwoButtons() {\r\n    return this.isEventType('PLUS_BOOKING') || this.isEventType('ADD_ROOM') || this.isEventType('EDIT_BOOKING');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex justify-content-between gap-30 align-items-center\">\r\n          {this.isEventType('EDIT_BOOKING') ? (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next} >>`)}\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next} >>`, this.disabled)}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n.sourceContainer {\r\n  max-width: 350px;\r\n}\r\n.message-label {\r\n  font-size: 80%;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../../models/igl-book-property';\r\nimport { IToast } from '../../../ir-toast/toast';\r\nimport moment from 'moment';\r\nimport locales from '@/stores/locales.store';\r\nimport interceptor_requests from '@/stores/ir-interceptor.store';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-header',\r\n  styleUrl: 'igl-book-property-header.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyHeader {\r\n  @Prop() splitBookingId: any = '';\r\n  @Prop() bookingData: any = '';\r\n  @Prop() minDate: string;\r\n  @Prop() sourceOptions: TSourceOptions[] = [];\r\n  @Prop() message: string;\r\n  @Prop() bookingDataDefaultDateRange: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean = false;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() splitBookings: any[];\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() dateRangeData: any;\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() propertyId: number;\r\n  @Event() splitBookingDropDownChange: EventEmitter<any>;\r\n  @Event() sourceDropDownChange: EventEmitter<string>;\r\n  @Event() adultChild: EventEmitter<any>;\r\n  @Event() checkClicked: EventEmitter<any>;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  @Event() toast: EventEmitter<IToast>;\r\n  @Event() spiltBookingSelected: EventEmitter<{ key: string; data: unknown }>;\r\n  private sourceOption: TSourceOption = {\r\n    code: '',\r\n    description: '',\r\n    tag: '',\r\n  };\r\n\r\n  getSplitBookingList() {\r\n    return (\r\n      <fieldset class=\"form-group  text-left\">\r\n        <label class=\"h5\">{locales.entries.Lcz_Tobooking}# </label>\r\n        <div class=\"btn-group ml-1\">\r\n          <ir-autocomplete\r\n            value={\r\n              Object.keys(this.bookedByInfoData).length > 1 ? `${this.bookedByInfoData.bookingNumber} ${this.bookedByInfoData.firstName} ${this.bookedByInfoData.lastName}` : ''\r\n            }\r\n            from_date={moment(this.bookingDataDefaultDateRange.fromDate).format('YYYY-MM-DD')}\r\n            to_date={moment(this.bookingDataDefaultDateRange.toDate).format('YYYY-MM-DD')}\r\n            propertyId={this.propertyId}\r\n            placeholder={locales.entries.Lcz_BookingNumber}\r\n            onComboboxValue={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation;\r\n              this.spiltBookingSelected.emit(e.detail);\r\n            }}\r\n            isSplitBooking\r\n          ></ir-autocomplete>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  getSourceNode() {\r\n    return (\r\n      <fieldset class=\"d-flex flex-column text-left flex-lg-row align-items-lg-center\">\r\n        <label class=\"mr-lg-1\">{locales.entries.Lcz_Source} </label>\r\n        <div class=\"btn-group mt-1 mt-lg-0 sourceContainer\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.sourceDropDownChange.emit((evt.target as HTMLSelectElement).value)}>\r\n            {this.sourceOptions.map(option => {\r\n              if (option.type === 'LABEL') {\r\n                return <optgroup label={option.value}></optgroup>;\r\n              }\r\n              return (\r\n                <option value={option.id} selected={this.sourceOption.code === option.id}>\r\n                  {option.value}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  handleAdultChildChange(key: string, event: Event) {\r\n    const value = (event.target as HTMLSelectElement).value;\r\n    let obj = {};\r\n    if (value === '') {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: 0,\r\n      };\r\n    } else {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: value,\r\n      };\r\n    }\r\n    this.adultChild.emit(obj);\r\n  }\r\n\r\n  getAdultChildConstraints() {\r\n    return (\r\n      <div class={'mt-1 mt-lg-0 d-flex flex-column text-left'}>\r\n        <label class=\"mb-1 d-lg-none\">{locales.entries.Lcz_NumberOfGuests} </label>\r\n        <div class=\"form-group my-lg-0 text-left d-flex align-items-center justify-content-between justify-content-sm-start\">\r\n          <fieldset>\r\n            <div class=\"btn-group \">\r\n              <select class=\"form-control input-sm\" id=\"xAdultSmallSelect\" onChange={evt => this.handleAdultChildChange('adult', evt)}>\r\n                <option value=\"\">{locales.entries.Lcz_AdultsCaption}</option>\r\n                {Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => (\r\n                  <option value={option}>{option}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </fieldset>\r\n          {this.adultChildConstraints.child_max_nbr > 0 && (\r\n            <fieldset>\r\n              <div class=\"btn-group ml-1\">\r\n                <select class=\"form-control input-sm\" id=\"xChildrenSmallSelect\" onChange={evt => this.handleAdultChildChange('child', evt)}>\r\n                  <option value={''}>{this.renderChildCaption()}</option>\r\n                  {Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => (\r\n                    <option value={option}>{option}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </fieldset>\r\n          )}\r\n          <ir-button\r\n            isLoading={interceptor_requests.status === 'pending'}\r\n            icon=\"\"\r\n            size=\"sm\"\r\n            class=\"ml-2\"\r\n            text={locales.entries.Lcz_Check}\r\n            onClickHanlder={() => this.handleButtonClicked()}\r\n          ></ir-button>\r\n          {/* <button class={'btn btn-primary btn-sm  ml-2'} onClick={() => this.handleButtonClicked()}>\r\n            {locales.entries.Lcz_Check}\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderChildCaption() {\r\n    const maxAge = this.adultChildConstraints.child_max_age;\r\n    let years = locales.entries.Lcz_Years;\r\n\r\n    if (maxAge === 1) {\r\n      years = locales.entries.Lcz_Year;\r\n    }\r\n    return `${locales.entries.Lcz_ChildCaption} < ${this.adultChildConstraints.child_max_age} ${years}`;\r\n  }\r\n  handleButtonClicked() {\r\n    if (this.isEventType('SPLIT_BOOKING') && Object.keys(this.bookedByInfoData).length <= 1) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: locales.entries.Lcz_ChooseBookingNumber,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      const initialToDate = moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date));\r\n      const initialFromDate = moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date));\r\n      const selectedFromDate = moment(new Date(this.dateRangeData.fromDate));\r\n      const selectedToDate = moment(new Date(this.dateRangeData.toDate));\r\n      if (selectedToDate.isBefore(initialFromDate) || selectedFromDate.isAfter(initialToDate)) {\r\n        this.toast.emit({\r\n          type: 'error',\r\n          title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n            '%1',\r\n            moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n          ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n          description: '',\r\n          position: 'top-right',\r\n        });\r\n        return;\r\n      } else if (this.adultChildCount.adult === 0) {\r\n        this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n      } else {\r\n        this.buttonClicked.emit({ key: 'check' });\r\n      }\r\n    } else if (this.minDate && new Date(this.dateRangeData.fromDate).getTime() > new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date).getTime()) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n          '%1',\r\n          moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n        ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.adultChildCount.adult === 0) {\r\n      this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n    } else {\r\n      this.buttonClicked.emit({ key: 'check' });\r\n    }\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n\r\n  render() {\r\n    const showSourceNode = this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? false : true;\r\n    return (\r\n      <Host>\r\n        {showSourceNode && this.getSourceNode()}\r\n        <div class={`d-flex flex-column flex-lg-row align-items-lg-center ${showSourceNode ? 'mt-1' : ''}`}>\r\n          <fieldset class=\"mt-lg-0  \">\r\n            <igl-date-range\r\n              dateLabel={locales.entries.Lcz_Dates}\r\n              minDate={this.minDate}\r\n              disabled={this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')}\r\n              defaultData={this.bookingDataDefaultDateRange}\r\n            ></igl-date-range>\r\n          </fieldset>\r\n          {!this.isEventType('EDIT_BOOKING') && this.getAdultChildConstraints()}\r\n        </div>\r\n        <p class=\"text-right mt-1 message-label\">{this.message}</p>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n:host > * {\r\n  margin: 0;\r\n  padding: auto;\r\n}\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\r\nimport { TAdultChildConstraints, TSourceOptions } from '../../../../models/igl-book-property';\r\n@Component({\r\n  tag: 'igl-booking-overview-page',\r\n  styleUrl: 'igl-booking-overview-page.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingOverviewPage {\r\n  @Prop() bookingData: any;\r\n  @Prop() propertyId: number;\r\n  @Prop() message: string;\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() eventType: string;\r\n  @Prop() currency: any;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() ratePricingMode: any;\r\n  @Prop() dateRangeData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() sourceOptions: TSourceOptions[];\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() initialRoomIds: any;\r\n\r\n  @Event() roomsDataUpdate: EventEmitter;\r\n\r\n  getSplitBookings() {\r\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\r\n  }\r\n  isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  render() {\r\n    //console.log(this.bookingData);\r\n    return (\r\n      <Host>\r\n        <igl-book-property-header\r\n          bookedByInfoData={this.bookedByInfoData}\r\n          defaultDaterange={this.defaultDaterange}\r\n          dateRangeData={this.dateRangeData}\r\n          // minDate={this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING') ? this.bookedByInfoData.from_date || this.bookingData.FROM_DATE : undefined}\r\n          adultChildCount={this.adultChildCount}\r\n          splitBookingId={this.showSplitBookingOption}\r\n          bookingData={this.bookingData}\r\n          sourceOptions={this.sourceOptions}\r\n          message={this.message}\r\n          bookingDataDefaultDateRange={this.bookingData.defaultDateRange}\r\n          showSplitBookingOption={this.showSplitBookingOption}\r\n          adultChildConstraints={this.adultChildConstraints}\r\n          splitBookings={this.getSplitBookings()}\r\n          propertyId={this.propertyId}\r\n        ></igl-book-property-header>\r\n        {/* {this.adultChildCount.adult === 0 && <p class={'col text-left'}>Please select the number of guests</p>} */}\r\n        <div class=\" text-left\">\r\n          {this.bookingData?.roomsInfo?.map(roomInfo => {\r\n            console.log(this.selectedRooms);\r\n            return (\r\n              <igl-booking-rooms\r\n                initialRoomIds={this.initialRoomIds}\r\n                isBookDisabled={Object.keys(this.bookedByInfoData).length <= 1}\r\n                key={`room-info-${roomInfo.id}`}\r\n                currency={this.currency}\r\n                ratePricingMode={this.ratePricingMode}\r\n                dateDifference={this.dateRangeData.dateDifference}\r\n                bookingType={this.bookingData.event_type}\r\n                roomTypeData={roomInfo}\r\n                class=\"mt-2 mb-1 p-0\"\r\n                roomInfoId={this.selectedRooms.has(`c_${roomInfo.id}`) ? roomInfo.id : null}\r\n                defaultData={this.selectedRooms.get(`c_${roomInfo.id}`)}\r\n                onDataUpdateEvent={evt => this.roomsDataUpdate.emit(evt.detail)}\r\n              ></igl-booking-rooms>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <igl-book-property-footer class={'p-0 mb-1 mt-3'} eventType={this.bookingData.event_type} disabled={this.selectedRooms.size === 0}></igl-book-property-footer>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.currency {\r\n  display: block;\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: auto;\r\n  left: 10px;\r\n}\r\n.rate-input {\r\n  font-size: 14px;\r\n  line-height: 0;\r\n  padding: 0;\r\n  height: 0;\r\n  border-left: 0;\r\n}\r\n.rate-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-sizing: border-box;\r\n  flex: 1;\r\n}\r\n.new-currency {\r\n  color: #3b4781;\r\n  border: 1px solid #cacfe7;\r\n  font-size: 0.975rem;\r\n  height: 2rem;\r\n  background: white;\r\n  border-right: 0;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.input-group-prepend span[data-state='focus'] {\r\n  border-color: var(--blue);\r\n}\r\n.input-group-prepend span[data-disabled] {\r\n  background-color: #eceff1;\r\n  border-color: rgba(118, 118, 118, 0.3);\r\n}\r\n@media only screen and (min-width: 1200px) {\r\n  .rateplan-name-container {\r\n    width: 40%;\r\n  }\r\n  .rateplan-container {\r\n    width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) {\r\n  .max-w-300 {\r\n    max-width: 200px;\r\n  }\r\n  .rate-input-container {\r\n    max-width: 100px;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) and (max-width: 1300px) {\r\n  .rateplan-name-container {\r\n    width: 35%;\r\n  }\r\n}\r\n@media only screen and (max-width: 768px) {\r\n  .booking-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.total-nights-container {\r\n  width: max-content;\r\n}\r\n.nightBorder {\r\n  border-left-width: 0;\r\n  border-top-right-radius: 3px !important;\r\n  border-bottom-right-radius: 3px !important;\r\n}\r\n","import { Component, Host, Prop, h, State, Event, EventEmitter, Watch, Fragment } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { getCurrencySymbol } from '../../../utils/utils';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n@Component({\r\n  tag: 'igl-booking-room-rate-plan',\r\n  styleUrl: 'igl-booking-room-rate-plan.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRoomRatePlan {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() ratePlanData: { [key: string]: any };\r\n  @Prop() totalAvailableRooms: number;\r\n  @Prop() index: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() currency: any;\r\n  @Prop() physicalrooms;\r\n  @Prop() shouldBeDisabled: boolean;\r\n  @Prop() dateDifference: number;\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() fullyBlocked: boolean;\r\n  @Prop() isBookDisabled: boolean = false;\r\n  @Prop() defaultRoomId;\r\n  @Prop() selectedRoom;\r\n  @State() isInputFocused = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() gotoSplitPageTwoEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() selectedData: { [key: string]: any };\r\n  @State() ratePlanChangedState: boolean = false;\r\n  private initialRateValue: number = 0;\r\n  getAvailableRooms(assignable_units: any[]) {\r\n    let result = [];\r\n    assignable_units.forEach(unit => {\r\n      if (unit.Is_Fully_Available) {\r\n        result.push({ name: unit.name, id: unit.pr_id });\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  componentWillLoad() {\r\n    console.log('default data', this.defaultData);\r\n    this.updateSelectedRatePlan(this.ratePlanData);\r\n  }\r\n  disableForm() {\r\n    if (this.bookingType === 'EDIT_BOOKING' && this.shouldBeDisabled) {\r\n      return false;\r\n    } else {\r\n      return this.selectedData.is_closed || this.totalAvailableRooms === 0 || (calendar_data.is_frontdesk_enabled && this.selectedData.physicalRooms.length === 0);\r\n    }\r\n  }\r\n\r\n  setAvailableRooms(data) {\r\n    let availableRooms = this.getAvailableRooms(data);\r\n    if (this.bookingType === 'EDIT_BOOKING' && this.shouldBeDisabled) {\r\n      if (this.selectedRoom) {\r\n        availableRooms.push({\r\n          id: this.selectedRoom.roomId,\r\n          name: this.selectedRoom.roomName,\r\n        });\r\n        availableRooms.sort((a, b) => {\r\n          if (a.name < b.name) {\r\n            return -1;\r\n          }\r\n          if (a.name > b.name) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    return availableRooms;\r\n  }\r\n  getSelectedOffering(value: any) {\r\n    return this.ratePlanData.variations.find(variation => variation.adult_child_offering === value);\r\n  }\r\n\r\n  updateSelectedRatePlan(data) {\r\n    this.selectedData = {\r\n      ratePlanId: data.id,\r\n      adult_child_offering: data.variations[data.variations.length - 1].adult_child_offering,\r\n      rateType: 1,\r\n      totalRooms: 0,\r\n      rate: data.variations[data.variations.length - 1].amount ?? 0,\r\n      ratePlanName: data.name,\r\n      adultCount: data.variations[data.variations.length - 1].adult_nbr,\r\n      childrenCount: data.variations[data.variations.length - 1].child_nbr,\r\n      cancelation: data.cancelation,\r\n      guarantee: data.guarantee,\r\n      isRateModified: false,\r\n      defaultSelectedRate: 0,\r\n      index: this.index,\r\n      is_closed: data.is_closed,\r\n      physicalRooms: this.setAvailableRooms(this.ratePlanData.assignable_units),\r\n      dateDifference: this.dateDifference,\r\n    };\r\n\r\n    if (this.defaultData) {\r\n      for (const [key, value] of Object.entries(this.defaultData)) {\r\n        this.selectedData[key] = value;\r\n      }\r\n      this.dataUpdateEvent.emit({\r\n        key: 'roomRatePlanUpdate',\r\n        changedKey: 'physicalRooms',\r\n        data: this.selectedData,\r\n      });\r\n    }\r\n    if (this.defaultData && this.defaultData.isRateModified) {\r\n      console.log('object');\r\n      if (this.selectedData.rateType === 1) {\r\n        console.log('object1');\r\n        this.initialRateValue = this.selectedData.rate;\r\n      } else {\r\n        console.log('object2');\r\n        this.initialRateValue = this.selectedData.rate * this.dateDifference;\r\n      }\r\n    } else {\r\n      this.initialRateValue = this.selectedData.rate / this.dateDifference;\r\n    }\r\n  }\r\n  @Watch('ratePlanData')\r\n  async ratePlanDataChanged(newData) {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      adult_child_offering: newData.variations[newData.variations.length - 1].adult_child_offering,\r\n      adultCount: newData.variations[newData.variations.length - 1].adult_nbr,\r\n      childrenCount: newData.variations[newData.variations.length - 1].child_nbr,\r\n      rate: this.handleRateDaysUpdate(),\r\n      physicalRooms: this.setAvailableRooms(newData.assignable_units),\r\n    };\r\n    this.initialRateValue = this.selectedData.rateType === 2 ? this.selectedData.rate / this.dateDifference : this.selectedData.rate;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: 'rate',\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  handleRateDaysUpdate() {\r\n    if (this.selectedData.isRateModified) {\r\n      return this.selectedData.defaultSelectedRate;\r\n    }\r\n    const selectedOffering = this.getSelectedOffering(this.selectedData.adult_child_offering);\r\n    return selectedOffering ? selectedOffering.amount : 0;\r\n  }\r\n\r\n  handleInput(event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let inputValue = inputElement.value.replace(/[^0-9.]/g, '');\r\n\r\n    const validDecimalNumber = /^\\d*\\.?\\d*$/;\r\n    if (!validDecimalNumber.test(inputValue)) {\r\n      inputValue = inputValue.substring(0, inputValue.length - 1);\r\n    }\r\n\r\n    inputElement.value = inputValue;\r\n    if (inputValue) {\r\n      this.selectedData.isRateModified = true;\r\n      this.handleDataChange('rate', event);\r\n    } else {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        rate: -1,\r\n        totalRooms: 0,\r\n      };\r\n      this.dataUpdateEvent.emit({\r\n        key: 'roomRatePlanUpdate',\r\n        changedKey: 'rate',\r\n        data: this.selectedData,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, evt) {\r\n    const value = evt.target.value;\r\n    switch (key) {\r\n      case 'adult_child_offering':\r\n        this.updateOffering(value);\r\n        break;\r\n      case 'rate':\r\n        this.updateRate(value);\r\n        break;\r\n      default:\r\n        this.updateGenericData(key, value);\r\n        break;\r\n    }\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: key,\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  updateOffering(value) {\r\n    const offering = this.getSelectedOffering(value);\r\n    if (offering) {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        adult_child_offering: value,\r\n        adultCount: offering.adult_nbr,\r\n        childrenCount: offering.child_nbr,\r\n        rate: offering.amount,\r\n        isRateModified: false,\r\n      };\r\n    }\r\n  }\r\n\r\n  updateRate(value) {\r\n    const numericValue = value === '' ? 0 : Number(value);\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      rate: numericValue,\r\n      totalRooms: value === '' ? 0 : this.selectedData.totalRooms,\r\n      defaultSelectedRate: this.selectedData.rateType === 2 ? numericValue / this.dateDifference : numericValue,\r\n    };\r\n  }\r\n\r\n  updateGenericData(key, value) {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      [key]: value === '' ? 0 : parseInt(value),\r\n    };\r\n  }\r\n  bookProperty() {\r\n    this.dataUpdateEvent.emit({ key: 'clearData', data: this.selectedData });\r\n    this.handleDataChange('totalRooms', { target: { value: '1' } });\r\n    this.gotoSplitPageTwoEvent.emit({ key: 'gotoSplitPage', data: '' });\r\n  }\r\n\r\n  renderRate(): string | number | string[] {\r\n    if (this.selectedData.isRateModified) {\r\n      console.log('selectedData.rate', this.selectedData.rate);\r\n      return this.selectedData.rate === -1 ? '' : this.selectedData.rate;\r\n    }\r\n    return this.selectedData.rateType === 1 ? Number(this.selectedData.rate).toFixed(2) : Number(this.initialRateValue).toFixed(2);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-column m-0 p-0 flex-lg-row align-items-lg-center justify-content-lg-between \">\r\n          <div class=\"rateplan-name-container\">\r\n            {this.bookingType === 'BAR_BOOKING' ? (\r\n              <Fragment>\r\n                <span class=\"font-weight-bold\t\">{this.ratePlanData.name.split('/')[0]}</span>\r\n                <span>/{this.ratePlanData.name.split('/')[1]}</span>\r\n              </Fragment>\r\n            ) : (\r\n              <span>{this.ratePlanData.name}</span>\r\n            )}\r\n            <ir-tooltip message={this.ratePlanData.cancelation + this.ratePlanData.guarantee}></ir-tooltip>\r\n          </div>\r\n\r\n          <div class={'d-md-flex justify-content-md-end  align-items-md-center  flex-fill rateplan-container'}>\r\n            <div class=\"mt-1 mt-lg-0 flex-fill max-w-300\">\r\n              <fieldset class=\"position-relative\">\r\n                <select disabled={this.disableForm()} class=\"form-control  input-sm\" id={v4()} onChange={evt => this.handleDataChange('adult_child_offering', evt)}>\r\n                  {this.ratePlanData.variations.map(variation => (\r\n                    <option value={variation.adult_child_offering} selected={this.selectedData.adult_child_offering === variation.adult_child_offering}>\r\n                      {variation.adult_child_offering}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </fieldset>\r\n            </div>\r\n            <div class={'m-0 p-0 d-md-flex justify-content-between ml-md-1 '}>\r\n              <div class=\" d-flex mt-1  mt-lg-0 m-0 p-0 rate-total-night-view   \">\r\n                <fieldset class=\"position-relative has-icon-left m-0 p-0 rate-input-container  \">\r\n                  <div class=\"input-group-prepend\">\r\n                    <span data-disabled={this.disableForm()} data-state={this.isInputFocused ? 'focus' : ''} class=\"input-group-text new-currency\" id=\"basic-addon1\">\r\n                      {getCurrencySymbol(this.currency.code)}\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    onFocus={() => (this.isInputFocused = true)}\r\n                    onBlur={() => (this.isInputFocused = false)}\r\n                    disabled={this.disableForm()}\r\n                    type=\"text\"\r\n                    class=\"form-control pl-0 input-sm rate-input py-0 m-0 rounded-0 rateInputBorder\"\r\n                    value={this.renderRate()}\r\n                    id={v4()}\r\n                    placeholder={locales.entries.Lcz_Rate || 'Rate'}\r\n                    onInput={(event: InputEvent) => this.handleInput(event)}\r\n                  />\r\n                  {/* <span class=\"currency\">{getCurrencySymbol(this.currency.code)}</span> */}\r\n                </fieldset>\r\n                <fieldset class=\"position-relative m-0 total-nights-container p-0 \">\r\n                  <select\r\n                    disabled={this.disableForm()}\r\n                    class=\"form-control input-sm m-0 nightBorder rounded-0  py-0\"\r\n                    id={v4()}\r\n                    onChange={evt => this.handleDataChange('rateType', evt)}\r\n                  >\r\n                    {this.ratePricingMode.map(data => (\r\n                      <option value={data.CODE_NAME} selected={this.selectedData.rateType === +data.CODE_NAME}>\r\n                        {data.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </fieldset>\r\n              </div>\r\n\r\n              {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' ? (\r\n                <div class=\"flex-lg-fill  mt-lg-0 ml-md-2 m-0 mt-1 p-0\">\r\n                  <fieldset class=\"position-relative\">\r\n                    <select\r\n                      disabled={this.selectedData.rate === 0 || this.disableForm()}\r\n                      class=\"form-control input-sm\"\r\n                      id={v4()}\r\n                      onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                    >\r\n                      {Array.from({ length: this.totalAvailableRooms + 1 }, (_, i) => i).map(i => (\r\n                        <option value={i} selected={this.selectedData.totalRooms === i}>\r\n                          {i}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </fieldset>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            {this.bookingType === 'EDIT_BOOKING' ? (\r\n              <Fragment>\r\n                <div class=\" m-0 p-0  mt-lg-0  ml-md-1 mt-md-1 d-none d-md-block\">\r\n                  <fieldset class=\"position-relative\">\r\n                    <input\r\n                      disabled={this.disableForm()}\r\n                      type=\"radio\"\r\n                      name=\"ratePlanGroup\"\r\n                      value=\"1\"\r\n                      onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                      checked={this.selectedData.totalRooms === 1}\r\n                    />\r\n                  </fieldset>\r\n                </div>\r\n                <button\r\n                  disabled={this.selectedData.rate === -1 || this.disableForm()}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1  mt-1 d-md-none \"\r\n                  onClick={() => this.bookProperty()}\r\n                >\r\n                  {this.selectedData.totalRooms === 1 ? locales.entries.Lcz_Current : locales.entries.Lcz_Select}\r\n                </button>\r\n              </Fragment>\r\n            ) : null}\r\n\r\n            {this.bookingType === 'BAR_BOOKING' || this.bookingType === 'SPLIT_BOOKING' ? (\r\n              <button\r\n                disabled={this.selectedData.rate === -1 || this.disableForm() || (this.bookingType === 'SPLIT_BOOKING' && this.isBookDisabled)}\r\n                type=\"button\"\r\n                class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1  mt-1 \"\r\n                onClick={() => this.bookProperty()}\r\n              >\r\n                {locales.entries.Lcz_Book}\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-booking-rooms',\r\n  styleUrl: 'igl-booking-rooms.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRooms {\r\n  @Prop() roomTypeData: { [key: string]: any };\r\n  @Prop() defaultData: Map<string, any>;\r\n  @Prop() bookingType = 'PLUS_BOOKING';\r\n  @Prop() dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() roomInfoId: number | null = null;\r\n  @Prop() currency;\r\n  @State() selectedRooms: number[] = [];\r\n  @State() totalRooms: number;\r\n  @Prop() isBookDisabled: boolean;\r\n  @Prop() initialRoomIds: any;\r\n  @State() roomsDistributions: number[] = [];\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  private validBookingTypes = ['PLUS_BOOKING', 'ADD_ROOM', 'EDIT_BOOKING', 'SPLIT_BOOKING'];\r\n\r\n  componentWillLoad() {\r\n    this.initializeRoomData();\r\n  }\r\n\r\n  private initializeRoomData() {\r\n    const { inventory, rateplans } = this.roomTypeData;\r\n    this.totalRooms = inventory || 0;\r\n    this.selectedRooms = new Array(rateplans.length).fill(0);\r\n    this.roomsDistributions = this.calculateInitialDistributions(rateplans, inventory);\r\n  }\r\n  @Watch('roomTypeData')\r\n  handleRoomTypeData() {\r\n    this.initializeRoomData();\r\n  }\r\n\r\n  private calculateInitialDistributions(rateplans, inventory) {\r\n    let distributions = new Array(rateplans.length).fill(inventory);\r\n    if (this.defaultData && this.bookingType !== 'EDIT_BOOKING' && inventory > 0) {\r\n      let selectedIndexes = [];\r\n      let sum = 0;\r\n      this.defaultData.forEach(category => {\r\n        this.selectedRooms[category.index] = category.totalRooms;\r\n        distributions[category.index] = category.totalRooms;\r\n        sum += category.totalRooms;\r\n        selectedIndexes.push(category.index);\r\n      });\r\n      if (selectedIndexes.length < distributions.length) {\r\n        distributions.forEach((_, index) => {\r\n          if (!selectedIndexes.includes(index)) {\r\n            if (sum === this.totalRooms) {\r\n              distributions[index] = 0;\r\n            } else {\r\n              distributions[index] = distributions[index] - sum;\r\n            }\r\n          } else {\r\n            if (sum < this.totalRooms) {\r\n              distributions[index] = this.totalRooms - sum + distributions[index];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      distributions.fill(inventory);\r\n    }\r\n    return distributions;\r\n  }\r\n\r\n  onRoomDataUpdate(event: CustomEvent<{ [key: string]: any }>, index: number) {\r\n    event.stopImmediatePropagation();\r\n    const {\r\n      detail: { data, changedKey },\r\n    } = event;\r\n    let updatedData = { ...data };\r\n\r\n    if (changedKey === 'totalRooms') {\r\n      this.handleTotalRoomsUpdate(index, updatedData.totalRooms);\r\n    }\r\n\r\n    updatedData = {\r\n      ...updatedData,\r\n      roomCategoryId: this.roomTypeData.id,\r\n      roomCategoryName: this.roomTypeData.name,\r\n      inventory: this.roomTypeData.inventory,\r\n    };\r\n\r\n    this.dataUpdateEvent.emit({ key: data.key, data: updatedData, changedKey });\r\n  }\r\n\r\n  private handleTotalRoomsUpdate(index: number, newValue: number) {\r\n    if (this.selectedRooms[index] !== newValue) {\r\n      this.selectedRooms[index] = newValue;\r\n      this.updateRatePlanTotalRooms(index);\r\n    }\r\n  }\r\n\r\n  updateRatePlanTotalRooms(ratePlanIndex: number) {\r\n    const calculateTotalSelectedRoomsExcludingIndex = excludedIndex => {\r\n      return this.selectedRooms.reduce((acc, rooms, idx) => (idx !== excludedIndex ? acc + rooms : acc), 0);\r\n    };\r\n    const newRoomsDistributions = this.selectedRooms.map((_, index) => {\r\n      if (index === ratePlanIndex) {\r\n        return this.roomsDistributions[index];\r\n      }\r\n      const totalSelectedRoomsExcludingCurrent = calculateTotalSelectedRoomsExcludingIndex(index);\r\n      const availableRooms = this.totalRooms - totalSelectedRoomsExcludingCurrent;\r\n\r\n      return availableRooms > 0 ? availableRooms : 0;\r\n    });\r\n\r\n    if (JSON.stringify(this.roomsDistributions) !== JSON.stringify(newRoomsDistributions)) {\r\n      this.roomsDistributions = [...newRoomsDistributions];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const isValidBookingType = this.validBookingTypes.includes(this.bookingType);\r\n    return (\r\n      <Host>\r\n        {isValidBookingType && <div class=\"font-weight-bold font-medium-1 mb-1\">{this.roomTypeData.name}</div>}\r\n        {this.roomTypeData.rateplans.map((ratePlan, index) => {\r\n          if (ratePlan.variations !== null) {\r\n            let shouldBeDisabled = this.roomInfoId && this.roomInfoId === this.roomTypeData.id;\r\n            let roomId = -1;\r\n            if (shouldBeDisabled && this.initialRoomIds) {\r\n              roomId = this.initialRoomIds.roomId;\r\n            }\r\n            return (\r\n              <igl-booking-room-rate-plan\r\n                index={index}\r\n                isBookDisabled={this.isBookDisabled}\r\n                key={`rate-plan-${ratePlan.id}`}\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={isValidBookingType ? '' : ''}\r\n                currency={this.currency}\r\n                dateDifference={this.dateDifference}\r\n                ratePlanData={ratePlan}\r\n                totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                defaultData={(this.defaultData && this.defaultData.get(`p_${ratePlan.id}`)) || null}\r\n                shouldBeDisabled={shouldBeDisabled}\r\n                onDataUpdateEvent={evt => this.onRoomDataUpdate(evt, index)}\r\n                physicalrooms={this.roomTypeData.physicalrooms}\r\n                defaultRoomId={roomId}\r\n                selectedRoom={this.initialRoomIds}\r\n              ></igl-booking-room-rate-plan>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: flex;\r\n  text-align: left;\r\n  align-items: center;\r\n}\r\n\r\n.date-range-input {\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex: 1;\r\n}\r\n.iglRangeNights {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.iglRangePicker[data-state='disabled'] {\r\n  border: 0;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n  width: 180px;\r\n  margin-right: 0;\r\n}\r\n.iglRangePicker {\r\n  margin: 0;\r\n  border: 1px solid #379ff2;\r\n  box-sizing: border-box;\r\n  width: 220px;\r\n  /* margin-right: 5px; */\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.calendarPickerContainer {\r\n  display: flex;\r\n}\r\n","import { Component, Host, h, State, Event, EventEmitter, Prop } from '@stencil/core';\r\nimport { IToast } from '../../ir-toast/toast';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'igl-date-range',\r\n  styleUrl: 'igl-date-range.css',\r\n  scoped: true,\r\n})\r\nexport class IglDateRange {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n  @Prop() minDate: string;\r\n  @Prop() dateLabel;\r\n  @Prop() maxDate: string;\r\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() toast: EventEmitter<IToast>;\r\n\r\n  private totalNights: number = 0;\r\n  private fromDate: Date;\r\n  private toDate: Date;\r\n  private fromDateStr: string = 'from';\r\n  private toDateStr: string = 'to';\r\n  dateRangeInput: HTMLElement;\r\n\r\n  getStringDateFormat(dt) {\r\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\r\n  }\r\n\r\n  componentWillLoad() {\r\n    let dt = new Date();\r\n    dt.setHours(0, 0, 0, 0);\r\n    dt.setDate(dt.getDate() + 1);\r\n    if (this.defaultData) {\r\n      if (this.defaultData.fromDate) {\r\n        this.fromDate = new Date(this.defaultData.fromDate);\r\n        this.fromDate.setHours(0, 0, 0, 0);\r\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\r\n      }\r\n      if (this.defaultData.toDate) {\r\n        this.toDate = new Date(this.defaultData.toDate);\r\n        this.toDate.setHours(0, 0, 0, 0);\r\n        this.toDateStr = this.getFormattedDateString(this.toDate);\r\n      }\r\n    }\r\n    if (this.fromDate && this.toDate) {\r\n      this.calculateTotalNights();\r\n      this.handleDateSelectEvent('selectedDateRange', {\r\n        fromDate: this.fromDate.getTime(),\r\n        toDate: this.toDate.getTime(),\r\n        fromDateStr: this.fromDateStr,\r\n        toDateStr: this.toDateStr,\r\n        dateDifference: this.totalNights,\r\n      });\r\n    }\r\n  }\r\n\r\n  calculateTotalNights() {\r\n    this.totalNights = Math.floor((this.toDate.getTime() - this.fromDate.getTime()) / 86400000);\r\n  }\r\n  getFormattedDateString(dt) {\r\n    return dt.getDate() + ' ' + dt.toLocaleString('default', { month: 'short' }).toLowerCase() + ' ' + dt.getFullYear();\r\n  }\r\n\r\n  handleDateSelectEvent(key, data: any = '') {\r\n    this.dateSelectEvent.emit({ key, data });\r\n  }\r\n  handleDateChange(evt) {\r\n    const { start, end } = evt.detail;\r\n    this.fromDate = start.toDate();\r\n    this.toDate = end.toDate();\r\n    this.calculateTotalNights();\r\n\r\n    this.handleDateSelectEvent('selectedDateRange', {\r\n      fromDate: this.fromDate.getTime(),\r\n      toDate: this.toDate.getTime(),\r\n      fromDateStr: start.format('DD MMM YYYY'),\r\n      toDateStr: end.format('DD MMM YYYY'),\r\n      dateDifference: this.totalNights,\r\n    });\r\n\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"calendarPickerContainer ml-0 d-flex flex-column flex-lg-row align-items-lg-center \">\r\n          <span class=\"mt-0 mb-1 mb-lg-0 mr-lg-1 text-left\">{this.dateLabel}:</span>\r\n          <div class={'d-flex align-items-center mr-lg-1'}>\r\n            <div class=\"iglRangePicker form-control input-sm \" data-state={this.disabled ? 'disabled' : 'active'}>\r\n              <ir-date-picker\r\n                maxDate={this.maxDate}\r\n                class={'date-range-input'}\r\n                disabled={this.disabled}\r\n                fromDate={this.fromDate}\r\n                toDate={this.toDate}\r\n                minDate={this.minDate}\r\n                autoApply\r\n                onDateChanged={evt => {\r\n                  this.handleDateChange(evt);\r\n                }}\r\n              ></ir-date-picker>\r\n            </div>\r\n            {this.totalNights ? (\r\n              <span class=\"iglRangeNights ml-1\">({this.totalNights + (this.totalNights > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`)})</span>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, Host, State } from '@stencil/core';\r\nimport { IPageTwoDataUpdateProps } from '../../../models/models';\r\nimport { IglBookPropertyPayloadEditBooking, TPropertyButtonsTypes } from '../../../models/igl-book-property';\r\nimport { formatDate, getCurrencySymbol } from '../../../utils/utils';\r\nimport locales from '@/stores/locales.store';\r\n@Component({\r\n  tag: 'igl-pagetwo',\r\n  styleUrl: 'igl-pagetwo.css',\r\n  scoped: true,\r\n})\r\nexport class IglPagetwo {\r\n  @Prop() showPaymentDetails: boolean;\r\n  @Prop() currency;\r\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\r\n  @Prop() dateRangeData: { [key: string]: any };\r\n  @Prop() bookingData: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() language: string;\r\n  @Prop() bookedByInfoData: { [key: string]: any };\r\n  @Prop() propertyId: number;\r\n  @Prop() bedPreferenceType: any;\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop({ reflect: true }) isLoading: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() selectedGuestData;\r\n  @Prop() defaultGuestData: IglBookPropertyPayloadEditBooking;\r\n  @Event() dataUpdateEvent: EventEmitter<IPageTwoDataUpdateProps>;\r\n  @Event() buttonClicked: EventEmitter<{\r\n    key: TPropertyButtonsTypes;\r\n    data?: CustomEvent;\r\n  }>;\r\n  @State() selectedBookedByData;\r\n  @State() guestData: any;\r\n\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n\r\n  componentWillLoad() {\r\n    this.initializeGuestData();\r\n    this.selectedBookedByData = this.bookedByInfoData;\r\n  }\r\n\r\n  initializeGuestData() {\r\n    let total = 0;\r\n    const newSelectedUnits = { ...this.selectedUnits };\r\n    const getRate = (rate: number, totalNights: number, isRateModified: boolean, preference: number) => {\r\n      if (isRateModified && preference === 2) {\r\n        return rate * totalNights;\r\n      }\r\n      return rate;\r\n    };\r\n    this.selectedUnits = newSelectedUnits;\r\n    this.guestData = [];\r\n    this.selectedRooms.forEach((room, key) => {\r\n      room.forEach(rate_plan => {\r\n        newSelectedUnits[key] = rate_plan.selectedUnits;\r\n        total += rate_plan.totalRooms * getRate(rate_plan.rate, this.dateRangeData.dateDifference, rate_plan.isRateModified, rate_plan.rateType);\r\n        for (let i = 1; i <= rate_plan.totalRooms; i++) {\r\n          this.guestData.push({\r\n            guestName: '',\r\n            roomId: '',\r\n            preference: '',\r\n            ...rate_plan,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.bookingData.TOTAL_PRICE = total;\r\n  }\r\n  handleOnApplicationInfoDataUpdateEvent(event: CustomEvent, index: number) {\r\n    const opt = event.detail;\r\n    const categoryIdKey = `c_${opt.data.roomCategoryId}`;\r\n    const updatedUnits = [...(this.selectedUnits[categoryIdKey] || [])];\r\n    updatedUnits[index] = opt.data.roomId;\r\n    this.selectedUnits = {\r\n      ...this.selectedUnits,\r\n      [categoryIdKey]: updatedUnits,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'applicationInfoUpdateEvent',\r\n      value: event.detail,\r\n    });\r\n  }\r\n\r\n  handleEventData(event: any, key: string, index: number) {\r\n    if (key === 'application-info') {\r\n      this.handleOnApplicationInfoDataUpdateEvent(event, index);\r\n    } else {\r\n      this.selectedBookedByData = event.detail.data;\r\n      this.dataUpdateEvent.emit({\r\n        key: 'propertyBookedBy',\r\n        value: event.detail,\r\n      });\r\n    }\r\n  }\r\n  isGuestDataIncomplete() {\r\n    if (this.selectedGuestData.length !== this.guestData.length) {\r\n      return true;\r\n    }\r\n    for (const data of this.selectedGuestData) {\r\n      if (data.guestName === '' || data.preference === '' || data.roomId === '') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled(key: string) {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.selectedGuestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      // const isCardDetails = ['cardNumber', 'cardHolderName', 'expiryMonth', 'expiryYear'].includes(key);\r\n      // if (!this.showPaymentDetails && isCardDetails) {\r\n      //   return false;\r\n      // }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      this.isLoading === key ||\r\n      isValidProperty(this.selectedGuestData, 'guestName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'isdCode', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'contactNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'firstName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'lastName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'countryId', -1) ||\r\n      isValidProperty(this.selectedBookedByData, 'selectedArrivalTime', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'email', '')\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-wrap\">\r\n          <div class=\"flex-fill text-left p-0\">\r\n            <span class=\"mr-1 font-weight-bold font-medium-1\">\r\n              {formatDate(this.dateRangeData.fromDateStr)} - {formatDate(this.dateRangeData.toDateStr)}\r\n            </span>\r\n            {this.dateRangeData.dateDifference} {+this.dateRangeData.dateDifference > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`}\r\n          </div>\r\n          {this.guestData.length > 1 && (\r\n            <div class=\"mt-1 mt-md-0 text-right\">\r\n              {locales.entries.Lcz_TotalPrice} <span class=\"font-weight-bold font-medium-1\">{getCurrencySymbol(this.currency.code) + this.bookingData.TOTAL_PRICE || '$0.00'}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {this.guestData.map((roomInfo, index) => {\r\n          return (\r\n            <igl-application-info\r\n              dateDifference={this.dateRangeData.dateDifference}\r\n              defaultGuestPreference={this.defaultGuestData.bed_preference}\r\n              defaultGuestRoomId={this.defaultGuestData.PR_ID}\r\n              currency={this.currency}\r\n              bedPreferenceType={this.bedPreferenceType}\r\n              index={index}\r\n              selectedUnits={this.selectedUnits[`c_${roomInfo.roomCategoryId}`]}\r\n              guestInfo={roomInfo}\r\n              guestRefKey={index}\r\n              bookingType={this.bookingData.event_type}\r\n              roomsList={roomInfo.physicalRooms}\r\n              onDataUpdateEvent={event => this.handleEventData(event, 'application-info', index)}\r\n            ></igl-application-info>\r\n          );\r\n        })}\r\n\r\n        {this.isEditOrAddRoomEvent || this.showSplitBookingOption ? null : (\r\n          <igl-property-booked-by\r\n            propertyId={this.propertyId}\r\n            countryNodeList={this.countryNodeList}\r\n            language={this.language}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            defaultData={this.bookedByInfoData}\r\n            onDataUpdateEvent={event =>\r\n              // this.dataUpdateEvent.emit({\r\n              //   key: \"propertyBookedBy\",\r\n              //   value: event.detail,\r\n              // })\r\n              this.handleEventData(event, 'propertyBookedBy', 0)\r\n            }\r\n          ></igl-property-booked-by>\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent ? (\r\n          <div class=\"d-flex p-0 mb-1 mt-2\">\r\n            <div class=\"flex-fill mr-2\">\r\n              {/* <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'cancel' })}>\r\n                {locales.entries.Lcz_Cancel}\r\n              </button> */}\r\n              <ir-button\r\n                icon=\"\"\r\n                text={locales.entries.Lcz_Back}\r\n                class=\"full-width\"\r\n                btn_color=\"secondary\"\r\n                btn_styles=\"justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'back' })}\r\n              ></ir-button>\r\n            </div>\r\n            <div class=\"flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'save'}\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'save' })}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                text={locales.entries.Lcz_Save}\r\n              ></ir-button>\r\n              {/* <button\r\n                disabled={this.isLoading === 'save'}\r\n                type=\"button\"\r\n                class=\"btn btn-primary full-width\"\r\n                onClick={() => {\r\n                  console.log('save button clicked');\r\n                  this.buttonClicked.emit({ key: 'save' });\r\n                }}\r\n              >\r\n                {this.isLoading === 'save' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                {locales.entries.Lcz_Save}\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"d-flex flex-column flex-md-row p-0 mb-1 mt-2 justify-content-md-between align-items-md-center\">\r\n            <div class=\"flex-fill mr-md-1\">\r\n              <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'back' })}>\r\n                <span class={'d-none d-md-inline-flex'}> &lt;&lt;</span> {locales.entries.Lcz_Back}\r\n              </button>\r\n            </div>\r\n            <div class=\"mt-1 mt-md-0 flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'book'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'book' })}\r\n                text={locales.entries.Lcz_Book}\r\n              ></ir-button>\r\n              {/* <button disabled={this.isLoading === 'book'} type=\"button\" class=\"btn btn-primary full-width\" onClick={() => this.buttonClicked.emit({ key: 'book' })}>\r\n                {this.isLoading === 'book' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                {locales.entries.Lcz_Book}\r\n              </button> */}\r\n            </div>\r\n            {/* <div class=\"mt-1 mt-md-0 flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'bookAndChekcIn'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n                text={locales.entries.Lcz_BookAndChekcIn}\r\n              ></ir-button>\r\n              // <button\r\n              //   //disabled={this.isButtonDisabled('bookAndCheckIn')}\r\n              //   type=\"button\"\r\n              //   class=\"btn btn-primary full-width\"\r\n              //   onClick={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n              // >\r\n              //   {this.isLoading === 'bookAndCheckIn' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n              //   {locales.entries.Lcz_BookAndChekcIn}\r\n              // </button>\r\n            </div> */}\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n\r\n.bookedByEmailContainer {\r\n  flex: auto;\r\n  max-width: 350px;\r\n}\r\n\r\n.bookedDetailsForm label {\r\n  min-width: 125px;\r\n  max-width: 125px;\r\n}\r\n\r\n.bookedDetailsForm .controlContainer {\r\n  /* width: calc(100% - 127px); */\r\n}\r\n\r\n.bookedDetailsForm .form-group {\r\n  margin-bottom: 10px !important;\r\n}\r\n\r\n.bookedDetailsForm .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n/* .controlContainer1 .textarea-container {\r\n  border: 1px solid #ced4da; \r\n  border-radius: 0.25rem; \r\n  height: 60px; \r\n  width: 100%;\r\n} */\r\n.controlContainer textarea {\r\n  height: 60px !important;\r\n}\r\n.margin3 {\r\n  margin-bottom: 5px !important;\r\n}\r\n@media (min-width: 768px) {\r\n  .bookedByEmailContainer {\r\n    margin-left: 37px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Fragment, Listen } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries, ICountry } from '../../../models/IBooking';\r\nimport { v4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\n\r\n@Component({\r\n  tag: 'igl-property-booked-by',\r\n  styleUrl: 'igl-property-booked-by.css',\r\n  scoped: true,\r\n})\r\nexport class IglPropertyBookedBy {\r\n  @Prop() language: string;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() countryNodeList: ICountry[] = [];\r\n  @Prop() propertyId: number;\r\n  @State() isButtonPressed: boolean = false;\r\n  private bookingService: BookingService = new BookingService();\r\n  private arrivalTimeList: IEntries[] = [];\r\n  private expiryMonths: string[] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\n  private expiryYears: string[] = [];\r\n  private currentMonth: string = '01';\r\n  private country;\r\n  @State() bookedByData: { [key: string]: any } = {\r\n    id: undefined,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    countryId: '',\r\n    isdCode: '',\r\n    contactNumber: '',\r\n    selectedArrivalTime: {\r\n      code: '',\r\n      description: '',\r\n    },\r\n    emailGuest: true,\r\n    message: '',\r\n    cardNumber: '',\r\n    cardHolderName: '',\r\n    expiryMonth: '',\r\n    expiryYear: '',\r\n  };\r\n\r\n  async componentWillLoad() {\r\n    this.assignCountryCode();\r\n    this.initializeExpiryYears();\r\n    this.initializeDateData();\r\n    this.populateBookedByData();\r\n  }\r\n\r\n  private initializeExpiryYears() {\r\n    const currentYear = new Date().getFullYear();\r\n    this.expiryYears = Array.from({ length: 4 }, (_, index) => (currentYear + index).toString());\r\n  }\r\n  private async assignCountryCode() {\r\n    const country = await this.bookingService.getUserDefaultCountry();\r\n\r\n    const countryId = country['COUNTRY_ID'];\r\n    this.country = countryId;\r\n    this.bookedByData = { ...this.bookedByData, isdCode: countryId.toString(), countryId };\r\n  }\r\n  private initializeDateData() {\r\n    const dt = new Date();\r\n    const month = dt.getMonth() + 1;\r\n    this.currentMonth = month < 10 ? `0${month}` : month.toString();\r\n  }\r\n\r\n  private populateBookedByData() {\r\n    this.bookedByData = this.defaultData ? { ...this.bookedByData, ...this.defaultData } : {};\r\n    this.arrivalTimeList = this.defaultData?.arrivalTime || [];\r\n    this.bookedByData = { ...this.bookedByData, selectedArrivalTime: { code: this.arrivalTimeList[0].CODE_NAME, description: this.arrivalTimeList[0].CODE_VALUE_EN } };\r\n    if (!this.bookedByData.expiryMonth) {\r\n      this.bookedByData.expiryMonth = this.currentMonth;\r\n    }\r\n    if (!this.bookedByData.expiryYear) {\r\n      this.bookedByData.expiryYear = new Date().getFullYear();\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, event) {\r\n    const foundTime = this.arrivalTimeList.find(time => time.CODE_NAME === event.target.value);\r\n\r\n    this.bookedByData[key] =\r\n      key === 'emailGuest'\r\n        ? event.target.checked\r\n        : key === 'arrivalTime'\r\n        ? {\r\n            code: event.target.value,\r\n            description: (foundTime && foundTime.CODE_VALUE_EN) || '',\r\n          }\r\n        : event.target.value;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    if (key === 'countryId') {\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        isdCode: event.target.value,\r\n      };\r\n    }\r\n  }\r\n\r\n  handleNumberInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n\r\n    // Regular expression to match only numeric characters (0-9)\r\n    const numericRegex = /^[0-9]+$/;\r\n\r\n    if (!numericRegex.test(inputValue)) {\r\n      // If the input is not numeric, prevent it from being entered\r\n      inputElement.value = inputValue.replace(/[^0-9]/g, '');\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n\r\n  async handleEmailInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n    if (this.isValidEmail(inputValue)) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n  async checkUser() {\r\n    try {\r\n      const email = this.bookedByData.email;\r\n      if (this.isValidEmail(email)) {\r\n        const res = await this.bookingService.getUserInfo(email);\r\n        if (res !== null) {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: res.id,\r\n            firstName: res.first_name,\r\n            lastName: res.last_name,\r\n            contactNumber: res.mobile,\r\n            countryId: res.country_id,\r\n            isdCode: res.country_id.toString(),\r\n          };\r\n        } else {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: undefined,\r\n            firstName: '',\r\n            lastName: '',\r\n            contactNumber: '',\r\n            countryId: '',\r\n            isdCode: '',\r\n          };\r\n        }\r\n        this.dataUpdateEvent.emit({\r\n          key: 'bookedByInfoUpdated',\r\n          data: { ...this.bookedByData },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n  isValidEmail(emailId) {\r\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    return emailPattern.test(emailId);\r\n  }\r\n  handleComboboxChange(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    switch (key) {\r\n      case 'blur':\r\n        if (data !== '') {\r\n          this.bookedByData.email = data;\r\n          this.checkUser();\r\n        }\r\n        break;\r\n      case 'select':\r\n        this.bookedByData.email = data.email;\r\n        this.bookedByData = {\r\n          ...this.bookedByData,\r\n          id: data.id,\r\n          firstName: data.first_name,\r\n          lastName: data.last_name,\r\n          contactNumber: data.mobile,\r\n          countryId: data.country_id,\r\n          isdCode: data.country_id.toString(),\r\n        };\r\n        this.dataUpdateEvent.emit({\r\n          key: 'bookedByInfoUpdated',\r\n          data: this.bookedByData,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  clearEvent() {\r\n    this.bookedByData.email = '';\r\n    this.bookedByData = {\r\n      ...this.bookedByData,\r\n      id: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      contactNumber: '',\r\n      isdCode: this.country.toString(),\r\n      countryId: this.country,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-3\">\r\n          <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center text-left \">\r\n            <label class=\"p-0 m-0 label-control mr-1 font-weight-bold\">{locales.entries.Lcz_BookedBy}</label>\r\n            <div class=\"bookedByEmailContainer mt-1 mt-md-0\">\r\n              {/* <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Email address\"\r\n                name=\"bookeyByEmail\"\r\n                value={this.bookedByData.email}\r\n                onInput={event => this.handleEmailInput('email', event)}\r\n                required\r\n                onBlur={() => this.checkUser()}\r\n              /> */}\r\n              <ir-autocomplete\r\n                danger_border={this.isButtonPressed && this.bookedByData.email === ''}\r\n                onComboboxValue={this.handleComboboxChange.bind(this)}\r\n                propertyId={this.propertyId}\r\n                type=\"email\"\r\n                value={this.bookedByData.email}\r\n                required\r\n                placeholder={locales.entries.Lcz_EmailAddress}\r\n                onInputCleared={() => this.clearEvent()}\r\n              ></ir-autocomplete>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bookedDetailsForm text-left mt-2 font-small-3 \">\r\n          <div class=\"d-flex flex-column flex-md-row  justify-content-md-between \">\r\n            <div class=\"p-0 flex-fill \">\r\n              <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center p-0 flex-fill \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_FirstName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill  \">\r\n                  <input\r\n                    class={`form-control flex-fill ${this.isButtonPressed && this.bookedByData.firstName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_FirstName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.firstName}\r\n                    onInput={event => this.handleDataChange('firstName', event)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_LastName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <input\r\n                    class={`form-control ${this.isButtonPressed && this.bookedByData.lastName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_LastName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.lastName}\r\n                    onInput={event => this.handleDataChange('lastName', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_Country}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select\r\n                    class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.countryId === '' && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('countryId', event)}\r\n                  >\r\n                    <option value=\"\" selected={this.bookedByData.countryId === ''}>\r\n                      {locales.entries.Lcz_Select}\r\n                    </option>\r\n                    {this.countryNodeList.map(countryNode => (\r\n                      <option value={countryNode.id} selected={this.bookedByData.countryId === countryNode.id}>\r\n                        {countryNode.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\r\n                <div class=\"p-0 m-0  d-flex  controlContainer flex-fill\">\r\n                  <div class=\" p-0 m-0\">\r\n                    <select\r\n                      class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.isdCode === '' && 'border-danger'}`}\r\n                      id={v4()}\r\n                      onChange={event => this.handleDataChange('isdCode', event)}\r\n                    >\r\n                      <option value=\"\" selected={this.bookedByData.isdCode === ''}>\r\n                        {locales.entries.Lcz_Isd}\r\n                      </option>\r\n                      {this.countryNodeList.map(country => (\r\n                        <option value={country.id} selected={this.bookedByData.isdCode === country.id.toString()}>\r\n                          {country.phone_prefix}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"flex-fill p-0 m-0\">\r\n                    <input\r\n                      class={`form-control ${this.isButtonPressed && this.bookedByData.contactNumber === '' && 'border-danger'}`}\r\n                      type=\"tel\"\r\n                      placeholder={locales.entries.Lcz_ContactNumber}\r\n                      id={v4()}\r\n                      value={this.bookedByData.contactNumber}\r\n                      onInput={event => this.handleNumberInput('contactNumber', event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_YourArrivalTime}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select\r\n                    class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.selectedArrivalTime.code === '' && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('selectedArrivalTime', event)}\r\n                  >\r\n                    {/* <option value=\"\" selected={this.bookedByData.selectedArrivalTime.code === ''}>\r\n                      -\r\n                    </option> */}\r\n                    {this.arrivalTimeList.map(time => (\r\n                      <option value={time.CODE_NAME} selected={this.bookedByData.selectedArrivalTime.code === time.CODE_NAME}>\r\n                        {time.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-0 flex-fill  ml-md-3\">\r\n              <div class=\"  p-0 d-flex flex-column flex-md-row align-items-md-center \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_AnyMessageForUs}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill \">\r\n                  <textarea\r\n                    id={v4()}\r\n                    rows={4}\r\n                    class=\"form-control \"\r\n                    name=\"message\"\r\n                    value={this.bookedByData.message}\r\n                    onInput={event => this.handleDataChange('message', event)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              {this.showPaymentDetails && (\r\n                <Fragment>\r\n                  <div class=\"form-group mt-md-1  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardNumber}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardNumber}\r\n                        onInput={event => this.handleNumberInput('cardNumber', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardHolderName}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardHolderName}\r\n                        onInput={event => this.handleDataChange('cardHolderName', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_ExpiryDate}</label>\r\n                    <div class=\"p-0 m-0 row  controlContainer flex-fill\">\r\n                      <div class=\"p-0 m-0\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryMonth', event)}>\r\n                          {this.expiryMonths.map(month => (\r\n                            <option value={month} selected={month === this.bookedByData.expiryMonth}>\r\n                              {month}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"p-0 m-0 ml-1\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryYear', event)}>\r\n                          {this.expiryYears.map((year, index) => (\r\n                            <option value={year} selected={index === this.bookedByData.expiryYear}>\r\n                              {year}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n              <div class=\"form-group mt-1 p-0 d-flex flex-row align-items-center\">\r\n                <label class=\"p-0 m-0\" htmlFor={'emailTheGuestId'}>\r\n                  {locales.entries.Lcz_EmailTheGuest}\r\n                </label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill checkBoxContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"checkbox\"\r\n                    checked={this.bookedByData.emailGuest}\r\n                    id={'emailTheGuestId'}\r\n                    onChange={event => this.handleDataChange('emailGuest', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: fix;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 1000;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\n.loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n.backdrop {\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n.loaderContainer {\r\n  position: absolute;\r\n  z-index: 100001;\r\n  padding: 20px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  border-radius: 5px;\r\n  /* box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px; */\r\n}\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","import { Component, Host, Prop, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-loading-screen',\r\n  styleUrl: 'ir-loading-screen.css',\r\n  scoped: true,\r\n})\r\nexport class IrLoadingScreen {\r\n  @Prop() message: string = '';\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"loaderContainer\">\r\n          <span class=\"loader\"></span>\r\n          {/* {this.message && <p class={'m-0'}>{this.message}</p>} */}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}
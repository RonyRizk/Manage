{"version":3,"names":["RoomService","fetchData","id","language","token","JSON","parse","sessionStorage","getItem","data","axios","post","ExceptionMsg","Error","results","My_Result","calendar_data","adultChildConstraints","adult_child_constraints","allowedBookingSources","allowed_booking_sources","allowed_payment_methods","allowed_booking_methods","currency","is_vacation_rental","pickup_service","max_nights","roomsInfo","roomtypes","taxes","is_frontdesk_enabled","error","console","log","getExposedChannels","channels_data","channels","fetchLanguage","code","entries","this","transformArrayToObject","locales","direction","getExposedConnectedChannels","property_id","connected_channels","object","d","description"],"sources":["src/services/room.service.ts"],"sourcesContent":["import calendar_data from '@/stores/calendar-data';\r\nimport channels_data from '@/stores/channel.store';\r\nimport { locales } from '@/stores/locales.store';\r\nimport axios from 'axios';\r\n\r\nexport class RoomService {\r\n  public async fetchData(id: number, language: string) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Get_Exposed_Property?Ticket=${token}`, { id, language });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        const results = data.My_Result;\r\n        calendar_data.adultChildConstraints = results.adult_child_constraints;\r\n        calendar_data.allowedBookingSources = results.allowed_booking_sources;\r\n        calendar_data.allowed_payment_methods = results.allowed_booking_methods;\r\n        calendar_data.currency = results.currency;\r\n        calendar_data.is_vacation_rental = results.is_vacation_rental;\r\n        calendar_data.pickup_service = results.pickup_service;\r\n        calendar_data.max_nights = results.max_nights;\r\n        calendar_data.roomsInfo = results.roomtypes;\r\n        calendar_data.taxes = results.taxes;\r\n        calendar_data.is_frontdesk_enabled = results.is_frontdesk_enabled;\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getExposedChannels() {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Get_Exposed_Channels?Ticket=${token}`, {});\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        const results = data.My_Result;\r\n        channels_data.channels = results;\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async fetchLanguage(code: string) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Get_Exposed_Language?Ticket=${token}`, { code });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        let entries = this.transformArrayToObject(data.My_Result.entries);\r\n        locales.entries = entries;\r\n        locales.direction = data.My_Result.direction;\r\n        return { entries, direction: data.My_Result.direction };\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getExposedConnectedChannels(property_id: number) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Get_Exposed_Connected_Channels?Ticket=${token}`, { property_id });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        channels_data.connected_channels = data.My_Result;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  private transformArrayToObject(data: any) {\r\n    let object: any = {};\r\n    for (const d of data) {\r\n      object[d.code] = d.description;\r\n    }\r\n    return object;\r\n  }\r\n}\r\n"],"mappings":"sJAKaA,EACJ,eAAMC,CAAUC,EAAYC,GACjC,IACE,MAAMC,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,IAAU,KAAM,CAClB,MAAMK,KAAEA,SAAeC,EAAMC,KAAK,gCAAgCP,IAAS,CAAEF,KAAIC,aACjF,GAAIM,EAAKG,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMJ,EAAKG,a,CAEvB,MAAME,EAAUL,EAAKM,UACrBC,EAAcC,sBAAwBH,EAAQI,wBAC9CF,EAAcG,sBAAwBL,EAAQM,wBAC9CJ,EAAcK,wBAA0BP,EAAQQ,wBAChDN,EAAcO,SAAWT,EAAQS,SACjCP,EAAcQ,mBAAqBV,EAAQU,mBAC3CR,EAAcS,eAAiBX,EAAQW,eACvCT,EAAcU,WAAaZ,EAAQY,WACnCV,EAAcW,UAAYb,EAAQc,UAClCZ,EAAca,MAAQf,EAAQe,MAC9Bb,EAAcc,qBAAuBhB,EAAQgB,qBAC7C,OAAOrB,C,EAET,MAAOsB,GACPC,QAAQC,IAAIF,GACZ,MAAM,IAAIlB,MAAMkB,E,EAGb,wBAAMG,GACX,IACE,MAAM9B,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,IAAU,KAAM,CAClB,MAAMK,KAAEA,SAAeC,EAAMC,KAAK,gCAAgCP,IAAS,IAC3E,GAAIK,EAAKG,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMJ,EAAKG,a,CAEvB,MAAME,EAAUL,EAAKM,UACrBoB,EAAcC,SAAWtB,EACzB,OAAOL,C,EAET,MAAOsB,GACPC,QAAQC,IAAIF,GACZ,MAAM,IAAIlB,MAAMkB,E,EAGb,mBAAMM,CAAcC,GACzB,IACE,MAAMlC,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,IAAU,KAAM,CAClB,MAAMK,KAAEA,SAAeC,EAAMC,KAAK,gCAAgCP,IAAS,CAAEkC,SAC7E,GAAI7B,EAAKG,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMJ,EAAKG,a,CAEvB,IAAI2B,EAAUC,KAAKC,uBAAuBhC,EAAKM,UAAUwB,SACzDG,EAAQH,QAAUA,EAClBG,EAAQC,UAAYlC,EAAKM,UAAU4B,UACnC,MAAO,CAAEJ,UAASI,UAAWlC,EAAKM,UAAU4B,U,EAE9C,MAAOZ,GACPC,QAAQC,IAAIF,GACZ,MAAM,IAAIlB,MAAMkB,E,EAGb,iCAAMa,CAA4BC,GACvC,IACE,MAAMzC,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,IAAU,KAAM,CAClB,MAAMK,KAAEA,SAAeC,EAAMC,KAAK,0CAA0CP,IAAS,CAAEyC,gBACvF,GAAIpC,EAAKG,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMJ,EAAKG,a,CAEvBuB,EAAcW,mBAAqBrC,EAAKM,S,EAE1C,MAAOgB,GACPC,QAAQC,IAAIF,GACZ,MAAM,IAAIlB,MAAMkB,E,EAGZ,sBAAAU,CAAuBhC,GAC7B,IAAIsC,EAAc,GAClB,IAAK,MAAMC,KAAKvC,EAAM,CACpBsC,EAAOC,EAAEV,MAAQU,EAAEC,W,CAErB,OAAOF,C"}
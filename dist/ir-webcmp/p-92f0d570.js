import{a as t}from"./p-539b691e.js";import{l as e,i as o,h as n,j as r,k as s,d as a}from"./p-9501b0ae.js";import{h as i}from"./p-fe6c3d31.js";async function c(t){const e=[];const o=await T();for(const n of t){for(const t of n.days){for(const n of t.room_types){_(n.physicalrooms,e,o)}}}return e}function _(t,e,o){for(const n of t){for(const t in n.calendar_cell){if(n.calendar_cell[t].Is_Available===false){w(n.calendar_cell[t],e,o)}}}}const E={"004":"BLOCKED","003":"BLOCKED-WITH-DATES","002":"BLOCKED"};const l={"000":"IN-HOUSE","001":"PENDING-CONFIRMATION","002":"CONFIRMED","003":"CHECKED-OUT"};function u(t,e){if(t===null&&e===null)return"";if(e!==null){return`${t!==null&&t!==void 0?t:""} , ${e!==null&&e!==void 0?e:""}`}return t}async function T(){try{const e=JSON.parse(sessionStorage.getItem("token"));if(e){const{data:o}=await t.post(`/Get_Setup_Entries_By_TBL_NAME_Multi?Ticket=${e}`,{TBL_NAMES:["_STAY_STATUS"]});return o.My_Result.map((t=>({code:t.CODE_NAME,value:t.CODE_VALUE_EN})))}else{throw new Error("Invalid Token")}}catch(t){console.log(t)}}function d(t,o,n){const r=new Date(t);r.setHours(o);r.setMinutes(n);return`${e.entries.Lcz_BlockedTill} ${i(r).format("MMM DD, HH:mm")}`}function O(t,e){var n,r;if(o(t.STAY_STATUS_CODE)){return{ID:t.POOL,NOTES:"",BALANCE:"",NAME:t.My_Block_Info.NOTES!==""?t.My_Block_Info.NOTES:t.STAY_STATUS_CODE==="003"?d(t.My_Block_Info.BLOCKED_TILL_DATE,t.My_Block_Info.BLOCKED_TILL_HOUR,t.My_Block_Info.BLOCKED_TILL_MINUTE):e.find((e=>e.code===t.STAY_STATUS_CODE)).value||"",RELEASE_AFTER_HOURS:t.My_Block_Info.DESCRIPTION,PR_ID:t.My_Block_Info.pr_id,ENTRY_DATE:t.My_Block_Info.BLOCKED_TILL_DATE,ENTRY_HOUR:t.My_Block_Info.BLOCKED_TILL_HOUR,ENTRY_MINUTE:t.My_Block_Info.BLOCKED_TILL_MINUTE,OPTIONAL_REASON:t.My_Block_Info.NOTES,FROM_DATE:t.DATE,TO_DATE:t.DATE,NO_OF_DAYS:1,STATUS:E[t.STAY_STATUS_CODE],POOL:t.POOL,STATUS_CODE:t.STAY_STATUS_CODE,OUT_OF_SERVICE:t.STAY_STATUS_CODE==="004",FROM_DATE_STR:t.My_Block_Info.format.from_date,TO_DATE_STR:t.My_Block_Info.format.to_date}}return{ID:t.POOL,TO_DATE:t.DATE,FROM_DATE:t.DATE,NO_OF_DAYS:1,STATUS:l[(n=t.booking)===null||n===void 0?void 0:n.status.code],NAME:u(t.room.guest.first_name,t.room.guest.last_name),IDENTIFIER:t.room.identifier,PR_ID:t.pr_id,POOL:t.POOL,BOOKING_NUMBER:t.booking.booking_nbr,NOTES:t.booking.remark,is_direct:t.booking.is_direct,BALANCE:(r=t.booking.financial)===null||r===void 0?void 0:r.due_amount}}function f(t,e){t.NO_OF_DAYS=n(t.FROM_DATE,e.DATE);t.TO_DATE=e.DATE;if(e.booking){const{arrival:o}=e.booking;Object.assign(t,{ARRIVAL_TIME:o.description})}return t}function w(t,e,o){const n=e.findIndex((e=>e.POOL===t.POOL));if(n===-1){const n=O(t,o);e.push(n)}else{const o=f(e[n],t);e[n]=o}}function S(t){let e=[];const o=e=>{const o=i();const n=i(e.to_date,"YYYY-MM-DD");const r=i(e.from_date,"YYYY-MM-DD");if(r.isSame(o,"day")&&o.hour()>=12){return l["000"]}else if(o.isAfter(r,"day")&&o.isBefore(n,"day")){return l["000"]}else if(n.isSame(o,"day")&&o.hour()<12){return l["000"]}else if(n.isSame(o,"day")&&o.hour()>=12||n.isBefore(o,"day")){return l["003"]}else{return l[(t===null||t===void 0?void 0:t.status.code)||"001"]}};t.rooms.forEach((n=>{var r,s;e.push({ID:n["assigned_units_pool"],TO_DATE:n.to_date,FROM_DATE:n.from_date,NO_OF_DAYS:n.days.length,ARRIVAL:t.arrival,IS_EDITABLE:true,BALANCE:(r=t.financial)===null||r===void 0?void 0:r.due_amount,STATUS:o(n),NAME:u(n.guest.first_name,n.guest.last_name),PHONE:(s=t.guest.mobile)!==null&&s!==void 0?s:"",ENTRY_DATE:"12-12-2023",RATE:n.total,RATE_PLAN:n.rateplan.name,SPLIT_BOOKING:false,RATE_PLAN_ID:n.rateplan.id,IDENTIFIER:n.identifier,RATE_TYPE:n.roomtype.id,ADULTS_COUNT:n.occupancy.adult_nbr,CHILDREN_COUNT:n.occupancy.children_nbr,PR_ID:+n.unit.id,POOL:n["assigned_units_pool"],GUEST:t.guest,ROOMS:t.rooms,BOOKING_NUMBER:t.booking_nbr,cancelation:n.rateplan.cancelation,guarantee:n.rateplan.guarantee,TOTAL_PRICE:n.total,COUNTRY:t.guest.country_id,FROM_DATE_STR:t.format.from_date,TO_DATE_STR:t.format.to_date,adult_child_offering:n.rateplan.selected_variation.adult_child_offering,ARRIVAL_TIME:t.arrival.description,origin:t.origin,channel_booking_nbr:t.channel_booking_nbr,is_direct:t.is_direct,NOTES:t.remark,SOURCE:{code:t.source.code,description:t.source.description,tag:t.source.tag}})}));return e}async function A(t){const e=await T();return{ID:t.POOL,NOTES:"",BALANCE:"",NAME:t.NOTES!==""?t.NOTES:t.STAY_STATUS_CODE==="003"?d(t.BLOCKED_TILL_DATE,t.BLOCKED_TILL_HOUR,t.BLOCKED_TILL_MINUTE):e.find((e=>e.code===t.STAY_STATUS_CODE)).value||"",RELEASE_AFTER_HOURS:t.DESCRIPTION,PR_ID:t.pr_id,ENTRY_DATE:t.BLOCKED_TILL_DATE,ENTRY_HOUR:t.BLOCKED_TILL_HOUR,ENTRY_MINUTE:t.BLOCKED_TILL_MINUTE,OPTIONAL_REASON:t.NOTES,FROM_DATE:t.from_date,TO_DATE:t.to_date,NO_OF_DAYS:y(t.from_date,t.to_date),STATUS:E[t.STAY_STATUS_CODE],POOL:t.POOL,STATUS_CODE:t.STAY_STATUS_CODE,OUT_OF_SERVICE:t.STAY_STATUS_CODE==="004",FROM_DATE_STR:t.format.from_date,TO_DATE_STR:t.format.to_date}}function y(t,e){const o=i(t,"YYYY-MM-DD");const n=i(e,"YYYY-MM-DD");const r=n.diff(o,"days");return r}class N{async getCalendarData(e,o,n){try{const a=JSON.parse(sessionStorage.getItem("token"));if(a!==null){const{data:i}=await t.post(`/Get_Exposed_Calendar?Ticket=${a}`,{propertyid:e,from_date:o,to_date:n});if(i.ExceptionMsg!==""){throw new Error(i.ExceptionMsg)}const _=i.My_Result.months;const E=[];const l=await c(_);const u=_.map((t=>{E.push({daysCount:t.days.length,monthName:t.description});return t.days.map((e=>({day:r(e.description,t.description),currentDate:s(e.description,t.description),dayDisplayName:e.description,rate:e.room_types,unassigned_units_nbr:e.unassigned_units_nbr,occupancy:e.occupancy})))})).flat();return Promise.resolve({ExceptionCode:null,ExceptionMsg:"",My_Params_Get_Rooming_Data:{AC_ID:e,FROM:i.My_Params_Get_Exposed_Calendar.from_date,TO:i.My_Params_Get_Exposed_Calendar.to_date},days:u,months:E,myBookings:l,defaultMonths:_})}}catch(t){console.error(t)}}async fetchGuest(e){try{const o=JSON.parse(sessionStorage.getItem("token"));if(o!==null){const{data:n}=await t.post(`/Get_Exposed_Guest?Ticket=${o}`,{email:e});if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n.My_Result}}catch(t){console.log(t);throw new Error(t)}}async editExposedGuest(e,o){try{const n=JSON.parse(sessionStorage.getItem("token"));if(n!==null){const{data:r}=await t.post(`/Edit_Exposed_Guest?Ticket=${n}`,Object.assign(Object.assign({},e),{book_nbr:o}));if(r.ExceptionMsg!==""){throw new Error(r.ExceptionMsg)}return r.My_Result}}catch(t){console.log(t);throw new Error(t)}}async getBookingAvailability(e,o,n,r,s,a,i){try{const c=JSON.parse(sessionStorage.getItem("token"));if(c){const{data:_}=await t.post(`/Get_Exposed_Booking_Availability?Ticket=${c}`,{propertyid:n,from_date:e,to_date:o,adult_nbr:r.adult,child_nbr:r.child,language:s,currency_ref:i.code,room_type_ids:a});if(_.ExceptionMsg!==""){throw new Error(_.ExceptionMsg)}return _["My_Result"]}else{throw new Error("Token doesn't exist")}}catch(t){console.error(t);throw new Error(t)}}async getCountries(e){try{const o=JSON.parse(sessionStorage.getItem("token"));if(o){const{data:n}=await t.post(`/Get_Exposed_Countries?Ticket=${o}`,{language:e});if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n.My_Result}}catch(t){console.error(t);throw new Error(t)}}async fetchSetupEntries(){try{const e=JSON.parse(sessionStorage.getItem("token"));if(e){const{data:o}=await t.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI?Ticket=${e}`,{TBL_NAMES:["_ARRIVAL_TIME","_RATE_PRICING_MODE","_BED_PREFERENCE_TYPE"]});if(o.ExceptionMsg!==""){throw new Error(o.ExceptionMsg)}const n=o.My_Result;return{arrivalTime:n.filter((t=>t.TBL_NAME==="_ARRIVAL_TIME")),ratePricingMode:n.filter((t=>t.TBL_NAME==="_RATE_PRICING_MODE")),bedPreferenceType:n.filter((t=>t.TBL_NAME==="_BED_PREFERENCE_TYPE"))}}}catch(t){console.error(t);throw new Error(t)}}async getBlockedInfo(){try{const e=JSON.parse(sessionStorage.getItem("token"));if(e){const{data:o}=await t.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI?Ticket=${e}`,{TBL_NAMES:["_CALENDAR_BLOCKED_TILL"]});if(o.ExceptionMsg!==""){throw new Error(o.ExceptionMsg)}return o.My_Result}}catch(t){console.error(t);throw new Error(t)}}async getUserDefaultCountry(){try{const e=JSON.parse(sessionStorage.getItem("token"));if(e){const{data:o}=await t.post(`/Get_Country_By_IP?Ticket=${e}`,{IP:""});if(o.ExceptionMsg!==""){throw new Error(o.ExceptionMsg)}return o["My_Result"]}}catch(t){console.error(t);throw new Error(t)}}async blockUnit(e){try{const o=JSON.parse(sessionStorage.getItem("token"));if(o){const{data:n}=await t.post(`/Block_Exposed_Unit?Ticket=${o}`,e);if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}console.log(n);return n["My_Params_Block_Exposed_Unit"]}}catch(t){console.error(t);throw new Error(t)}}async getUserInfo(e){try{const o=JSON.parse(sessionStorage.getItem("token"));if(o){const{data:n}=await t.post(`/GET_EXPOSED_GUEST?Ticket=${o}`,{email:e});if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n.My_Result}else{throw new Error("Invalid Token")}}catch(t){console.error(t);throw new Error(t)}}async getExposedBooking(e,o){try{const n=JSON.parse(sessionStorage.getItem("token"));if(n){const{data:r}=await t.post(`/Get_Exposed_Booking?Ticket=${n}`,{booking_nbr:e,language:o});if(r.ExceptionMsg!==""){throw new Error(r.ExceptionMsg)}return r.My_Result}else{throw new Error("Invalid Token")}}catch(t){console.error(t)}}generateDays(t,e,o){const n=new Date(t);const r=new Date(e);const s=[];while(n<r){s.push({date:n.toISOString().split("T")[0],amount:o});n.setDate(n.getDate()+1)}return s}calculateTotalRate(t,e,o,n){if(o&&n===2){return+t}return+t/+e}async fetchExposedGuest(e,o){try{const n=JSON.parse(sessionStorage.getItem("token"));if(n){const{data:r}=await t.post(`/Fetch_Exposed_Guests?Ticket=${n}`,{email:e,property_id:o});if(r.ExceptionMsg!==""){throw new Error(r.ExceptionMsg)}return r["My_Result"]}else{throw new Error("Token doesn't exist")}}catch(t){console.error(t);throw new Error(t)}}async fetchExposedBookings(e,o,n,r){try{const s=JSON.parse(sessionStorage.getItem("token"));if(s){const{data:a}=await t.post(`/Fetch_Exposed_Bookings?Ticket=${s}`,{booking_nbr:e,property_id:o,from_date:n,to_date:r});if(a.ExceptionMsg!==""){throw new Error(a.ExceptionMsg)}return a["My_Result"]}else{throw new Error("Token doesn't exist")}}catch(t){console.error(t);throw new Error(t)}}async getPCICardInfoURL(e){try{const o=JSON.parse(sessionStorage.getItem("token"));if(o){const{data:n}=await t.post(`/Get_PCI_Card_Info_URL?Ticket=${o}`,{BOOK_NBR:e});if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n["My_Result"]}else{throw new Error("Token doesn't exist")}}catch(t){console.error(t);throw new Error(t)}}async bookUser(e,o,n,r,s,i,c,_,E,l,u,T,d,O,f){console.log(d);try{const w=JSON.parse(sessionStorage.getItem("token"));if(w){const S=a(n);const A=a(r);let y={email:e.email||null,first_name:e.firstName,last_name:e.lastName,country_id:e.countryId,city:null,mobile:e.contactNumber,address:"",dob:null,subscribe_to_news_letter:e.emailGuest||false,cci:e.cardNumber?{nbr:e.cardNumber,holder_name:e.cardHolderName,expiry_month:e.expiryMonth,expiry_year:e.expiryYear}:null};if(e.id){y=Object.assign(Object.assign({},y),{id:e.id})}const N={assign_units:true,check_in:o,is_pms:true,is_direct:true,booking:{booking_nbr:u||"",from_date:S,to_date:A,remark:e.message||null,property:{id:_},source:c,currency:l,arrival:d?{code:d}:Object.assign({},e.selectedArrivalTime),guest:T||y,rooms:[...s.map((t=>({identifier:f||null,roomtype:{id:t.roomCategoryId,name:t.roomCategoryName,physicalrooms:null,rateplans:null,availabilities:null,inventory:t.inventory,rate:t.rate/i},rateplan:{id:t.ratePlanId,name:t.ratePlanName,rate_restrictions:null,variations:null,cancelation:t.cancelation,guarantee:t.guarantee},unit:typeof O==="undefined"&&t.roomId===""?null:{id:+O||+t.roomId},occupancy:{adult_nbr:t.adultCount,children_nbr:t.childrenCount,infant_nbr:null},bed_preference:t.preference,from_date:S,to_date:A,notes:null,days:this.generateDays(S,A,this.calculateTotalRate(t.rate,i,t.isRateModified,t.rateType)),guest:{email:null,first_name:t.guestName,last_name:null,country_id:null,city:null,mobile:null,address:null,dob:null,subscribe_to_news_letter:null}}))),...E]}};console.log("book user payload",N);const{data:R}=await t.post(`/DoReservation?Ticket=${w}`,N);if(R.ExceptionMsg!==""){throw new Error(R.ExceptionMsg)}console.log(R["My_Result"]);return R["My_Result"]}else{throw new Error("Invalid token")}}catch(t){console.error(t);throw new Error(t)}}}export{N as B,S as a,l as b,y as c,u as f,c as g,A as t};
//# sourceMappingURL=p-92f0d570.js.map
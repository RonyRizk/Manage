{"version":3,"names":["iglTbaBookingViewCss","IglTbaBookingView","this","highlightSection","allRoomsList","toBeAssignedService","ToBeAssignedService","onSelectRoom","evt","stopImmediatePropagation","stopPropagation","selectedRoom","parseInt","target","value","componentShouldUpdate","newValue","oldValue","propName","componentWillLoad","setToken","calendar_data","token","categoryIndex","eventIndex","setTimeout","handleHighlightAvailability","handleAssignUnit","event","assignUnit","eventData","BOOKING_NUMBER","ID","assignEvent","Object","assign","PR_ID","addToBeAssignedEvent","emit","key","data","assignRoomEvent","error","highlightToBeAssignedBookingEvent","bookingId","fromDate","FROM_DATE","selectedDate","filteredEvents","availableRooms","map","room","push","calendar_cell","id","name","roomName","defaultDateRange","identifier","scrollPageToRoom","categoryId","refClass","renderView","handleCloseAssignment","highlightBookingEvent","detail","renderAgain","render","h","Host","class","onClick","NAME","v4","onChange","selected","locales","entries","Lcz_AssignUnit","type","xmlns","height","width","viewBox","fill","d","isLoading","isRequestPending","size","text","Lcz_Assign","onClickHanlder","btn_disabled","iglTbaCategoryViewCss","IglTbaCategoryView","handleAssignRoomEvent","opt","eventDatas","filter","calendarData","bookingEvents","assignUnitEvent","RT_ID","getEventView","ind","categoriesData","onAssignRoomEvent"],"sources":["src/components/igloo-calendar/igl-to-be-assigned/igl-tba-booking-view/igl-tba-booking-view.css?tag=igl-tba-booking-view&encapsulation=scoped","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-booking-view/igl-tba-booking-view.tsx","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-category-view/igl-tba-category-view.css?tag=igl-tba-category-view&encapsulation=scoped","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-category-view/igl-tba-category-view.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n\r\n.guestTitle {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  padding: 2px;\r\n  margin-bottom: 5px;\r\n  margin-top: 5px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  /* margin-bottom: 5px; */\r\n}\r\n\r\n.guestTitle.selectedOrder {\r\n  background-color: #f9f9c9;\r\n}\r\n\r\n.pointer {\r\n  cursor: pointer;\r\n}\r\n\r\nhr {\r\n  margin-top: 8px;\r\n  margin-bottom: 0px;\r\n}\r\n\r\n.bookingContainer {\r\n  background-color: #ececec;\r\n}\r\n\r\n.actionsContainer {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 5px !important;\r\n  width: 100%;\r\n  gap: 16px;\r\n}\r\n.room-select {\r\n  flex: 1;\r\n}\r\n.selectContainer {\r\n  width: 195px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.buttonsContainer {\r\n  box-sizing: border-box;\r\n}\r\n.btn-secondary {\r\n  margin-right: 8px !important;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter, Listen, State } from '@stencil/core';\r\nimport { ToBeAssignedService } from '../../../../services/toBeAssigned.service';\r\nimport { v4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\n\r\n@Component({\r\n  tag: 'igl-tba-booking-view',\r\n  styleUrl: 'igl-tba-booking-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglTbaBookingView {\r\n  // @Element() private element: HTMLElement;\r\n  @Event({ bubbles: true, composed: true })\r\n  highlightToBeAssignedBookingEvent: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) addToBeAssignedEvent: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) scrollPageToRoom: EventEmitter;\r\n  @Event() assignRoomEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() selectedDate;\r\n  @Prop() eventData: { [key: string]: any } = {};\r\n  @Prop() categoriesData: { [key: string]: any } = {};\r\n  @Prop() categoryId;\r\n  @Prop() categoryIndex;\r\n  @Prop() eventIndex;\r\n  @State() renderAgain: boolean = false;\r\n\r\n  @State() selectedRoom: number = -1;\r\n  private highlightSection: boolean = false;\r\n  private allRoomsList: { [key: string]: any }[] = [];\r\n  private toBeAssignedService = new ToBeAssignedService();\r\n\r\n  onSelectRoom(evt) {\r\n    if (evt.stopImmediatePropagation) {\r\n      evt.stopImmediatePropagation();\r\n      evt.stopPropagation();\r\n    }\r\n    this.selectedRoom = parseInt(evt.target.value);\r\n  }\r\n\r\n  // componentDidLoad(){\r\n  //   this.initializeToolTips();\r\n  // }\r\n\r\n  componentShouldUpdate(newValue: string, oldValue: string, propName: string): boolean {\r\n    if (propName === 'selectedDate' && newValue !== oldValue) {\r\n      this.highlightSection = false;\r\n      this.selectedRoom = -1;\r\n      return true; // Prevent update for a specific prop value\r\n    } else if (propName === 'eventData' && newValue !== oldValue) {\r\n      this.selectedRoom = -1;\r\n      return true;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentWillLoad() {\r\n    this.toBeAssignedService.setToken(calendar_data.token);\r\n    if (this.categoryIndex === 0 && this.eventIndex === 0) {\r\n      setTimeout(() => {\r\n        this.handleHighlightAvailability();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  async handleAssignUnit(event) {\r\n    try {\r\n      event.stopImmediatePropagation();\r\n      event.stopPropagation();\r\n      if (this.selectedRoom) {\r\n        await this.toBeAssignedService.assignUnit(this.eventData.BOOKING_NUMBER, this.eventData.ID, this.selectedRoom);\r\n        // //let assignEvent = transformNewBooking(result);\r\n        // const newEvent = { ...this.eventData, ID: this.eventData.ID };\r\n\r\n        // //this.calendarData.bookingEvents.push(newEvent);\r\n        // //console.log(newEvent);\r\n        // this.addToBeAssignedEvent.emit({\r\n        //   key: 'tobeAssignedEvents',\r\n        //   //data: [assignEvent[0]],\r\n        // });\r\n        //this.assignRoomEvent.emit({ key: 'assignRoom', data: newEvent });\r\n        let assignEvent = { ...this.eventData, PR_ID: this.selectedRoom };\r\n        this.addToBeAssignedEvent.emit({\r\n          key: 'tobeAssignedEvents',\r\n          data: [assignEvent],\r\n        });\r\n        this.assignRoomEvent.emit({ key: 'assignRoom', data: assignEvent });\r\n      }\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleHighlightAvailability() {\r\n    this.highlightToBeAssignedBookingEvent.emit({\r\n      key: 'highlightBookingId',\r\n      data: { bookingId: this.eventData.ID, fromDate: this.eventData.FROM_DATE },\r\n    });\r\n    if (!this.selectedDate) {\r\n      return;\r\n    }\r\n    let filteredEvents = [];\r\n    let allRoomsList = [];\r\n    filteredEvents = this.eventData.availableRooms.map(room => {\r\n      allRoomsList.push({\r\n        calendar_cell: null,\r\n        id: room.PR_ID,\r\n        name: room.roomName,\r\n      });\r\n      return {\r\n        ...room,\r\n        defaultDateRange: this.eventData.defaultDateRange,\r\n        identifier: this.eventData.identifier,\r\n        // roomsInfo: this.eventData.roomsInfo,\r\n        // legendData: this.eventData.legendData,\r\n      };\r\n    });\r\n    this.allRoomsList = allRoomsList;\r\n    this.addToBeAssignedEvent.emit({\r\n      key: 'tobeAssignedEvents',\r\n      data: filteredEvents,\r\n    });\r\n\r\n    this.scrollPageToRoom.emit({\r\n      key: 'scrollPageToRoom',\r\n      id: this.categoryId,\r\n      refClass: 'category_' + this.categoryId,\r\n    });\r\n    // ID: \"NEW_TEMP_EVENT\",\r\n    // STATUS: \"PENDING_CONFIRMATION\"\r\n    this.renderView();\r\n  }\r\n\r\n  handleCloseAssignment(event) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    this.highlightSection = false;\r\n    this.highlightToBeAssignedBookingEvent.emit({\r\n      key: 'highlightBookingId',\r\n      data: { bookingId: '----' },\r\n    });\r\n    this.onSelectRoom({ target: { value: '' } });\r\n    this.selectedRoom = -1;\r\n    this.addToBeAssignedEvent.emit({ key: 'tobeAssignedEvents', data: [] });\r\n    this.renderView();\r\n  }\r\n\r\n  @Listen('highlightToBeAssignedBookingEvent', { target: 'window' })\r\n  highlightBookingEvent(event: CustomEvent) {\r\n    let data = event.detail.data;\r\n    if (data.bookingId != this.eventData.ID) {\r\n      this.highlightSection = false;\r\n      this.selectedRoom = -1;\r\n      this.renderView();\r\n    } else {\r\n      this.highlightSection = true;\r\n      this.renderView();\r\n    }\r\n  }\r\n\r\n  renderView() {\r\n    this.renderAgain = !this.renderAgain;\r\n    // this.initializeToolTips();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"bookingContainer\" onClick={() => this.handleHighlightAvailability()}>\r\n          <div\r\n            class={`guestTitle ${this.highlightSection ? 'selectedOrder' : ''} pointer font-small-3`}\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            data-original-title=\"Click to assign unit\"\r\n          >\r\n            {`Book# ${this.eventData.BOOKING_NUMBER} - ${this.eventData.NAME}`}\r\n          </div>\r\n          <div class=\"row m-0 p-0 actionsContainer\">\r\n            <select class=\"form-control input-sm room-select\" id={v4()} onChange={evt => this.onSelectRoom(evt)}>\r\n              <option value=\"\" selected={this.selectedRoom == -1}>\r\n                {locales.entries.Lcz_AssignUnit}\r\n              </option>\r\n              {this.allRoomsList.map(room => (\r\n                <option value={room.id} selected={this.selectedRoom == room.id}>\r\n                  {room.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {this.highlightSection ? (\r\n              <div class=\"d-flex buttonsContainer\">\r\n                <button type=\"button\" class=\"btn btn-secondary btn-sm\" onClick={evt => this.handleCloseAssignment(evt)}>\r\n                  <svg class=\"m-0 p-0\" xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"9\" viewBox=\"0 0 384 512\">\r\n                    <path\r\n                      fill=\"currentColor\"\r\n                      d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n                <ir-button\r\n                  isLoading={isRequestPending('/Assign_Exposed_Room')}\r\n                  size=\"sm\"\r\n                  text={locales.entries.Lcz_Assign}\r\n                  onClickHanlder={evt => this.handleAssignUnit(evt)}\r\n                  btn_disabled={this.selectedRoom === -1}\r\n                ></ir-button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Prop,\r\n  State,\r\n  h,\r\n  Event,\r\n  EventEmitter,\r\n} from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"igl-tba-category-view\",\r\n  styleUrl: \"igl-tba-category-view.css\",\r\n  scoped: true,\r\n})\r\nexport class IglTbaCategoryView {\r\n  @Event() assignUnitEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() selectedDate;\r\n  @Prop() categoriesData: { [key: string]: any } = {};\r\n  @Prop() categoryId;\r\n  @Prop({ mutable: true }) eventDatas;\r\n  @Prop() categoryIndex;\r\n  @State() renderAgain: boolean = false;\r\n\r\n  // private localEventDatas;\r\n\r\n  componentWillLoad() {\r\n    // this.localEventDatas = this.eventDatas;\r\n  }\r\n\r\n  handleAssignRoomEvent(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.eventDatas = this.eventDatas.filter(\r\n      (eventData) => eventData.ID != opt.data.ID\r\n    );\r\n    this.calendarData.bookingEvents.push(opt.data);\r\n    this.assignUnitEvent.emit({\r\n      key: \"assignUnit\",\r\n      data: {\r\n        RT_ID: this.categoryId,\r\n        selectedDate: this.selectedDate,\r\n        assignEvent: opt.data,\r\n        calendarData: this.calendarData,\r\n      },\r\n    });\r\n    // if(this.localEventDatas.length){\r\n    this.renderView();\r\n    // }\r\n  }\r\n\r\n  getEventView(categoryId, eventDatas) {\r\n    return eventDatas.map((eventData, ind) => (\r\n      <igl-tba-booking-view\r\n        calendarData={this.calendarData}\r\n        selectedDate={this.selectedDate}\r\n        eventData={eventData}\r\n        categoriesData={this.categoriesData}\r\n        categoryId={categoryId}\r\n        categoryIndex={this.categoryIndex}\r\n        eventIndex={ind}\r\n        onAssignRoomEvent={(evt) => this.handleAssignRoomEvent(evt)}\r\n      ></igl-tba-booking-view>\r\n    ));\r\n  }\r\n\r\n  renderView() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"sectionContainer\">\r\n          <div class=\"font-weight-bold mt-1 font-small-3\">\r\n            {this.categoriesData[this.categoryId].name}\r\n          </div>\r\n          {this.getEventView(this.categoryId, this.eventDatas)}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}
{"version":3,"names":["irSelectCss","IrSelect","this","count","v4","watchHandler","newValue","required","valid","watchHandler2","initial","handleButtonAnimation","e","console","log","detail","select_id","selectEl","stopImmediatePropagation","stopPropagation","classList","add","componentwillload","disconnectedCallback","handleSelectChange","event","remove","target","checkValidity","selectedValue","value","selectChange","emit","render","className","label","h","class","labelWidth","labelColor","htmlFor","labelPosition","labelBackground","labelBorder","selectStyle","LabelAvailable","selectContainerStyle","ref","el","id","selectStyles","size","textSize","onInput","bind","showFirstOption","firstOption","data","map","item","selected","text"],"sources":["src/components/ir-select/ir-select.css?tag=ir-select&encapsulation=scoped","src/components/ir-select/ir-select.tsx"],"sourcesContent":[".border-theme {\r\n  border: 1px solid #cacfe7;\r\n}\r\n@keyframes bounce {\r\n  0%,\r\n  100% {\r\n    transform: scale(1);\r\n    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);\r\n  }\r\n  50% {\r\n    transform: scale(1.2);\r\n    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\r\n  }\r\n}\r\n.bounce-3 {\r\n  animation: bounce 1s 1;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, State, Watch, Listen } from '@stencil/core';\r\nimport { selectOption } from '../../common/models';\r\nimport { v4 } from 'uuid';\r\n\r\n@Component({\r\n  tag: 'ir-select',\r\n  styleUrl: 'ir-select.css',\r\n  scoped: true,\r\n})\r\nexport class IrSelect {\r\n  @Prop() name: string;\r\n  @Prop() data: selectOption[];\r\n  @Prop() label = '<label>';\r\n  @Prop() selectStyles: string;\r\n  @Prop() selectContainerStyle: string;\r\n  @Prop({ reflect: true, mutable: true }) selectedValue = null;\r\n  @Prop() required: boolean;\r\n  @Prop() LabelAvailable: boolean = true;\r\n  @Prop() firstOption: string = 'Select';\r\n  @Prop() selectStyle: boolean = true;\r\n  @Prop() showFirstOption: boolean = true;\r\n  @Prop() submited: boolean = false;\r\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() labelPosition: 'left' | 'right' | 'center' = 'left';\r\n  @Prop() labelBackground: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | null = null;\r\n  @Prop() labelColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'dark';\r\n  @Prop() labelBorder: 'theme' | 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | 'none' = 'theme';\r\n  @Prop() labelWidth: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 = 3;\r\n  @Prop() select_id: string = v4();\r\n\r\n  @State() initial: boolean = true;\r\n  @State() valid: boolean = false;\r\n  @Event({ bubbles: true, composed: true }) selectChange: EventEmitter;\r\n\r\n  private selectEl: HTMLSelectElement;\r\n\r\n  @Watch('selectedValue')\r\n  watchHandler(newValue: string) {\r\n    if (newValue !== null && this.required) {\r\n      this.valid = true;\r\n    }\r\n  }\r\n  @Watch('submited')\r\n  watchHandler2(newValue: boolean) {\r\n    if (newValue && this.required) {\r\n      this.initial = false;\r\n    }\r\n  }\r\n  @Listen('animateIrSelect', { target: 'body' })\r\n  handleButtonAnimation(e: CustomEvent) {\r\n    console.log(e.detail, this.select_id, e.detail === this.select_id);\r\n    if (!this.selectEl || e.detail !== this.select_id) {\r\n      return;\r\n    }\r\n    console.log('first1');\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.selectEl.classList.add('border-danger');\r\n  }\r\n  componentwillload() {}\r\n  disconnectedCallback() {}\r\n  handleSelectChange(event) {\r\n    this.selectEl.classList.remove('border-danger');\r\n    if (this.required) {\r\n      this.initial = false;\r\n      this.valid = event.target.checkValidity();\r\n      this.selectedValue = event.target.value;\r\n      this.selectChange.emit(this.selectedValue);\r\n    } else {\r\n      this.selectedValue = event.target.value;\r\n      this.selectChange.emit(this.selectedValue);\r\n    }\r\n  }\r\n  count = 0;\r\n\r\n  render() {\r\n    let className = 'form-control';\r\n    let label = (\r\n      <div class={`input-group-prepend col-${this.labelWidth} p-0 text-${this.labelColor}`}>\r\n        <label\r\n          htmlFor={this.select_id}\r\n          class={`input-group-text ${this.labelPosition === 'right' ? 'justify-content-end' : this.labelPosition === 'center' ? 'justify-content-center' : ''} ${\r\n            this.labelBackground ? 'bg-' + this.labelBackground : ''\r\n          } flex-grow-1 text-${this.labelColor} border-${this.labelBorder === 'none' ? 0 : this.labelBorder} `}\r\n        >\r\n          {this.label}\r\n          {this.required ? '*' : ''}\r\n        </label>\r\n      </div>\r\n    );\r\n    if (this.selectStyle === false) {\r\n      className = '';\r\n    }\r\n    if (this.required && !this.valid && !this.initial) {\r\n      className = `${className} border-danger`;\r\n    }\r\n\r\n    if (!this.LabelAvailable) {\r\n      label = '';\r\n    }\r\n\r\n    return (\r\n      <div class={`form-group m-0 ${this.selectContainerStyle}`}>\r\n        <div class=\"input-group row m-0\">\r\n          {label}\r\n          <select\r\n            ref={el => (this.selectEl = el)}\r\n            id={this.select_id}\r\n            class={`${this.selectStyles} ${className} form-control-${this.size} text-${this.textSize} col-${this.LabelAvailable ? 12 - this.labelWidth : 12}`}\r\n            onInput={this.handleSelectChange.bind(this)}\r\n            required={this.required}\r\n          >\r\n            {this.showFirstOption && <option value={''}>{this.firstOption}</option>}\r\n            {this.data.map(item => {\r\n              if (this.selectedValue === item.value) {\r\n                return (\r\n                  <option selected value={item.value}>\r\n                    {item.text}\r\n                  </option>\r\n                );\r\n              } else {\r\n                return <option value={item.value}>{item.text}</option>;\r\n              }\r\n            })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"sFAAA,MAAMA,EAAc,qR,MCSPC,EAAQ,M,oEAiEnBC,KAAAC,MAAQ,E,mDA9DQ,U,mFAGwC,K,4CAEtB,K,iBACJ,S,iBACC,K,qBACI,K,cACP,M,UACO,K,cACI,K,mBACc,O,qBACoE,K,gBACZ,O,iBACoB,Q,gBAC/D,E,eACtCC,I,aAEA,K,WACF,K,CAM1B,YAAAC,CAAaC,GACX,GAAIA,IAAa,MAAQJ,KAAKK,SAAU,CACtCL,KAAKM,MAAQ,I,EAIjB,aAAAC,CAAcH,GACZ,GAAIA,GAAYJ,KAAKK,SAAU,CAC7BL,KAAKQ,QAAU,K,EAInB,qBAAAC,CAAsBC,GACpBC,QAAQC,IAAIF,EAAEG,OAAQb,KAAKc,UAAWJ,EAAEG,SAAWb,KAAKc,WACxD,IAAKd,KAAKe,UAAYL,EAAEG,SAAWb,KAAKc,UAAW,CACjD,M,CAEFH,QAAQC,IAAI,UACZF,EAAEM,2BACFN,EAAEO,kBACFjB,KAAKe,SAASG,UAAUC,IAAI,gB,CAE9B,iBAAAC,GAAiB,CACjB,oBAAAC,GAAoB,CACpB,kBAAAC,CAAmBC,GACjBvB,KAAKe,SAASG,UAAUM,OAAO,iBAC/B,GAAIxB,KAAKK,SAAU,CACjBL,KAAKQ,QAAU,MACfR,KAAKM,MAAQiB,EAAME,OAAOC,gBAC1B1B,KAAK2B,cAAgBJ,EAAME,OAAOG,MAClC5B,KAAK6B,aAAaC,KAAK9B,KAAK2B,c,KACvB,CACL3B,KAAK2B,cAAgBJ,EAAME,OAAOG,MAClC5B,KAAK6B,aAAaC,KAAK9B,KAAK2B,c,EAKhC,MAAAI,GACE,IAAIC,EAAY,eAChB,IAAIC,EACFC,EAAA,OAAKC,MAAO,2BAA2BnC,KAAKoC,uBAAuBpC,KAAKqC,cACtEH,EAAA,SACEI,QAAStC,KAAKc,UACdqB,MAAO,oBAAoBnC,KAAKuC,gBAAkB,QAAU,sBAAwBvC,KAAKuC,gBAAkB,SAAW,yBAA2B,MAC/IvC,KAAKwC,gBAAkB,MAAQxC,KAAKwC,gBAAkB,uBACnCxC,KAAKqC,qBAAqBrC,KAAKyC,cAAgB,OAAS,EAAIzC,KAAKyC,gBAErFzC,KAAKiC,MACLjC,KAAKK,SAAW,IAAM,KAI7B,GAAIL,KAAK0C,cAAgB,MAAO,CAC9BV,EAAY,E,CAEd,GAAIhC,KAAKK,WAAaL,KAAKM,QAAUN,KAAKQ,QAAS,CACjDwB,EAAY,GAAGA,iB,CAGjB,IAAKhC,KAAK2C,eAAgB,CACxBV,EAAQ,E,CAGV,OACEC,EAAA,OAAKC,MAAO,kBAAkBnC,KAAK4C,wBACjCV,EAAA,OAAKC,MAAM,uBACRF,EACDC,EAAA,UACEW,IAAKC,GAAO9C,KAAKe,SAAW+B,EAC5BC,GAAI/C,KAAKc,UACTqB,MAAO,GAAGnC,KAAKgD,gBAAgBhB,kBAA0BhC,KAAKiD,aAAajD,KAAKkD,gBAAgBlD,KAAK2C,eAAiB,GAAK3C,KAAKoC,WAAa,KAC7Ie,QAASnD,KAAKsB,mBAAmB8B,KAAKpD,MACtCK,SAAUL,KAAKK,UAEdL,KAAKqD,iBAAmBnB,EAAA,UAAQN,MAAO,IAAK5B,KAAKsD,aACjDtD,KAAKuD,KAAKC,KAAIC,IACb,GAAIzD,KAAK2B,gBAAkB8B,EAAK7B,MAAO,CACrC,OACEM,EAAA,UAAQwB,SAAQ,KAAC9B,MAAO6B,EAAK7B,OAC1B6B,EAAKE,K,KAGL,CACL,OAAOzB,EAAA,UAAQN,MAAO6B,EAAK7B,OAAQ6B,EAAKE,K"}
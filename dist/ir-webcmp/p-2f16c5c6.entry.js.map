{"version":3,"names":["irComboboxCss","IrCombobox","handleKeyDown","event","dataSize","this","data","length","itemHeight","getHeightOfPElement","key","preventDefault","selectedIndex","adjustScrollPosition","selectItem","_a","inputRef","blur","isComboBoxVisible","combobox","el","querySelector","pItem","offsetHeight","visibleHeight","margin","itemTotalHeight","selectedPosition","newScrollTop","Math","max","min","scrollHeight","scrollTo","top","behavior","index","isItemSelected","inputValue","resetCombobox","debounceFetchData","clearTimeout","debounceTimer","setTimeout","fetchData","duration","handleFocus","clearInput","inputCleared","emit","withblur","isLoading","error","console","log","handleInputChange","target","value","handleDocumentClick","contains","handleBlur","comboboxValue","isDropdownItem","element","closest","disconnectedCallback","removeEventListener","_b","_c","_d","handleItemKeyDown","render","h","class","type"],"sources":["src/components/ir-combobox/ir-combobox.css?tag=ir-combobox&encapsulation=scoped","src/components/ir-combobox/ir-combobox.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n  position: relative;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\nul {\r\n  position: absolute;\r\n  background: #ffffff;\r\n  padding: 0 0.75rem;\r\n  margin: 0;\r\n  margin-top: 2px;\r\n  width: 100%;\r\n  max-height: 80px;\r\n  border-radius: 0.21rem;\r\n  border: 1px solid #cacfe7;\r\n}\r\n","import { IToast } from '@/components';\r\nimport { Component, Prop, State, h, Element, Event, EventEmitter, Listen } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-combobox',\r\n  styleUrl: 'ir-combobox.css',\r\n  scoped: true,\r\n})\r\nexport class IrCombobox {\r\n  @Prop({ mutable: true }) data: { id: number; name: string }[] = [];\r\n  @Prop() duration: number = 300;\r\n\r\n  @State() selectedIndex: number = -1;\r\n  @State() isComboBoxVisible: boolean = false;\r\n  @State() isLoading: boolean = true;\r\n  @State() isItemSelected: boolean;\r\n  @State() inputValue: string = '';\r\n\r\n  @Element() el: HTMLElement;\r\n  @Event({ bubbles: true, composed: true }) comboboxValue: EventEmitter<{ key: string; data: unknown }>;\r\n  @Event() inputCleared: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n  private inputRef: HTMLInputElement;\r\n  private debounceTimer: any;\r\n\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    const dataSize = this.data.length;\r\n    const itemHeight = this.getHeightOfPElement();\r\n    if (dataSize > 0) {\r\n      switch (event.key) {\r\n        case 'ArrowUp':\r\n          event.preventDefault();\r\n          this.selectedIndex = (this.selectedIndex - 1 + dataSize) % dataSize;\r\n          this.adjustScrollPosition(itemHeight);\r\n          break;\r\n        case 'ArrowDown':\r\n          event.preventDefault();\r\n          this.selectedIndex = (this.selectedIndex + 1) % dataSize;\r\n          this.adjustScrollPosition(itemHeight);\r\n          break;\r\n        case 'Enter':\r\n        case ' ':\r\n        case 'ArrowRight':\r\n          event.preventDefault();\r\n          this.selectItem(this.selectedIndex);\r\n          break;\r\n        case 'Escape':\r\n          this.inputRef?.blur();\r\n          this.isComboBoxVisible = false;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  getHeightOfPElement() {\r\n    const combobox = this.el.querySelector('.combobox');\r\n    if (combobox) {\r\n      const pItem = combobox.querySelector('p');\r\n      return pItem ? pItem.offsetHeight : 0;\r\n    }\r\n    return 0;\r\n  }\r\n  adjustScrollPosition(itemHeight, visibleHeight = 250) {\r\n    const combobox = this.el.querySelector('.combobox');\r\n    if (combobox) {\r\n      const margin = 2;\r\n      const itemTotalHeight = itemHeight + margin;\r\n      const selectedPosition = itemTotalHeight * this.selectedIndex;\r\n      let newScrollTop = selectedPosition - visibleHeight / 2 + itemHeight / 2;\r\n      newScrollTop = Math.max(0, Math.min(newScrollTop, combobox.scrollHeight - visibleHeight));\r\n      combobox.scrollTo({\r\n        top: newScrollTop,\r\n        behavior: 'auto',\r\n      });\r\n    }\r\n  }\r\n\r\n  selectItem(index) {\r\n    if (this.data[index]) {\r\n      this.isItemSelected = true;\r\n      // this.comboboxValue.emit({ key: 'select', data: this.data[index] });\r\n      this.inputValue = '';\r\n      this.resetCombobox();\r\n    }\r\n  }\r\n\r\n  debounceFetchData() {\r\n    clearTimeout(this.debounceTimer);\r\n    this.debounceTimer = setTimeout(() => {\r\n      this.fetchData();\r\n    }, this.duration);\r\n  }\r\n  handleFocus() {\r\n    this.isComboBoxVisible = true;\r\n  }\r\n  clearInput() {\r\n    this.inputValue = '';\r\n    this.resetCombobox();\r\n    this.inputCleared.emit(null);\r\n  }\r\n  resetCombobox(withblur: boolean = true) {\r\n    if (withblur) {\r\n      this.inputRef?.blur();\r\n    }\r\n    this.data = [];\r\n    this.selectedIndex = -1;\r\n    this.isComboBoxVisible = false;\r\n  }\r\n  async fetchData() {\r\n    try {\r\n      this.isLoading = true;\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  handleInputChange(event: Event) {\r\n    this.inputValue = (event.target as HTMLInputElement).value;\r\n    if (this.inputValue) {\r\n      this.debounceFetchData();\r\n    } else {\r\n      clearTimeout(this.debounceTimer);\r\n      this.resetCombobox(false);\r\n    }\r\n  }\r\n\r\n  @Listen('click', { target: 'document' })\r\n  handleDocumentClick(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (!this.el.contains(target)) {\r\n      this.isComboBoxVisible = false;\r\n    }\r\n  }\r\n\r\n  handleBlur() {\r\n    setTimeout(() => {\r\n      if (!this.isItemSelected) {\r\n        this.comboboxValue.emit({ key: 'blur', data: this.inputValue });\r\n        this.inputValue = '';\r\n        this.resetCombobox();\r\n      } else {\r\n        this.isItemSelected = false;\r\n      }\r\n    }, 200);\r\n  }\r\n  isDropdownItem(element) {\r\n    return element && element.closest('.combobox');\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    clearTimeout(this.debounceTimer);\r\n    this.inputRef?.removeEventListener('blur', this.handleBlur);\r\n    this.inputRef?.removeEventListener('click', this.selectItem);\r\n    this.inputRef?.removeEventListener('keydown', this.handleKeyDown);\r\n    this.inputRef?.removeEventListener('focus', this.handleFocus);\r\n  }\r\n  handleItemKeyDown(event: KeyboardEvent, index: number) {\r\n    if (event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowRight') {\r\n      this.selectItem(index);\r\n      event.preventDefault();\r\n    } else if (event.key === 'Escape') {\r\n      this.isComboBoxVisible = false;\r\n      this.inputRef?.blur();\r\n      event.preventDefault();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <fieldset class=\"m-0 p-0\">\r\n        <input type=\"text\" class=\"form-control\" />\r\n        <ul class=\"\">\r\n          <p>Room 1</p>\r\n        </ul>\r\n      </fieldset>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"yDAAA,MAAMA,EAAgB,mP,MCQTC,EAAU,M,wJAC2C,G,cACrC,I,oBAEO,E,uBACI,M,eACR,K,8CAEA,E,CAS9B,aAAAC,CAAcC,G,MACZ,MAAMC,EAAWC,KAAKC,KAAKC,OAC3B,MAAMC,EAAaH,KAAKI,sBACxB,GAAIL,EAAW,EAAG,CAChB,OAAQD,EAAMO,KACZ,IAAK,UACHP,EAAMQ,iBACNN,KAAKO,eAAiBP,KAAKO,cAAgB,EAAIR,GAAYA,EAC3DC,KAAKQ,qBAAqBL,GAC1B,MACF,IAAK,YACHL,EAAMQ,iBACNN,KAAKO,eAAiBP,KAAKO,cAAgB,GAAKR,EAChDC,KAAKQ,qBAAqBL,GAC1B,MACF,IAAK,QACL,IAAK,IACL,IAAK,aACHL,EAAMQ,iBACNN,KAAKS,WAAWT,KAAKO,eACrB,MACF,IAAK,UACHG,EAAAV,KAAKW,YAAQ,MAAAD,SAAA,SAAAA,EAAEE,OACfZ,KAAKa,kBAAoB,MACzB,M,EAIR,mBAAAT,GACE,MAAMU,EAAWd,KAAKe,GAAGC,cAAc,aACvC,GAAIF,EAAU,CACZ,MAAMG,EAAQH,EAASE,cAAc,KACrC,OAAOC,EAAQA,EAAMC,aAAe,C,CAEtC,OAAO,C,CAET,oBAAAV,CAAqBL,EAAYgB,EAAgB,KAC/C,MAAML,EAAWd,KAAKe,GAAGC,cAAc,aACvC,GAAIF,EAAU,CACZ,MAAMM,EAAS,EACf,MAAMC,EAAkBlB,EAAaiB,EACrC,MAAME,EAAmBD,EAAkBrB,KAAKO,cAChD,IAAIgB,EAAeD,EAAmBH,EAAgB,EAAIhB,EAAa,EACvEoB,EAAeC,KAAKC,IAAI,EAAGD,KAAKE,IAAIH,EAAcT,EAASa,aAAeR,IAC1EL,EAASc,SAAS,CAChBC,IAAKN,EACLO,SAAU,Q,EAKhB,UAAArB,CAAWsB,GACT,GAAI/B,KAAKC,KAAK8B,GAAQ,CACpB/B,KAAKgC,eAAiB,KAEtBhC,KAAKiC,WAAa,GAClBjC,KAAKkC,e,EAIT,iBAAAC,GACEC,aAAapC,KAAKqC,eAClBrC,KAAKqC,cAAgBC,YAAW,KAC9BtC,KAAKuC,WAAW,GACfvC,KAAKwC,S,CAEV,WAAAC,GACEzC,KAAKa,kBAAoB,I,CAE3B,UAAA6B,GACE1C,KAAKiC,WAAa,GAClBjC,KAAKkC,gBACLlC,KAAK2C,aAAaC,KAAK,K,CAEzB,aAAAV,CAAcW,EAAoB,M,MAChC,GAAIA,EAAU,EACZnC,EAAAV,KAAKW,YAAQ,MAAAD,SAAA,SAAAA,EAAEE,M,CAEjBZ,KAAKC,KAAO,GACZD,KAAKO,eAAiB,EACtBP,KAAKa,kBAAoB,K,CAE3B,eAAM0B,GACJ,IACEvC,KAAK8C,UAAY,I,CACjB,MAAOC,GACPC,QAAQC,IAAI,QAASF,E,SAErB/C,KAAK8C,UAAY,K,EAIrB,iBAAAI,CAAkBpD,GAChBE,KAAKiC,WAAcnC,EAAMqD,OAA4BC,MACrD,GAAIpD,KAAKiC,WAAY,CACnBjC,KAAKmC,mB,KACA,CACLC,aAAapC,KAAKqC,eAClBrC,KAAKkC,cAAc,M,EAKvB,mBAAAmB,CAAoBvD,GAClB,MAAMqD,EAASrD,EAAMqD,OACrB,IAAKnD,KAAKe,GAAGuC,SAASH,GAAS,CAC7BnD,KAAKa,kBAAoB,K,EAI7B,UAAA0C,GACEjB,YAAW,KACT,IAAKtC,KAAKgC,eAAgB,CACxBhC,KAAKwD,cAAcZ,KAAK,CAAEvC,IAAK,OAAQJ,KAAMD,KAAKiC,aAClDjC,KAAKiC,WAAa,GAClBjC,KAAKkC,e,KACA,CACLlC,KAAKgC,eAAiB,K,IAEvB,I,CAEL,cAAAyB,CAAeC,GACb,OAAOA,GAAWA,EAAQC,QAAQ,Y,CAGpC,oBAAAC,G,YACExB,aAAapC,KAAKqC,gBAClB3B,EAAAV,KAAKW,YAAQ,MAAAD,SAAA,SAAAA,EAAEmD,oBAAoB,OAAQ7D,KAAKuD,aAChDO,EAAA9D,KAAKW,YAAQ,MAAAmD,SAAA,SAAAA,EAAED,oBAAoB,QAAS7D,KAAKS,aACjDsD,EAAA/D,KAAKW,YAAQ,MAAAoD,SAAA,SAAAA,EAAEF,oBAAoB,UAAW7D,KAAKH,gBACnDmE,EAAAhE,KAAKW,YAAQ,MAAAqD,SAAA,SAAAA,EAAEH,oBAAoB,QAAS7D,KAAKyC,Y,CAEnD,iBAAAwB,CAAkBnE,EAAsBiC,G,MACtC,GAAIjC,EAAMO,MAAQ,SAAWP,EAAMO,MAAQ,KAAOP,EAAMO,MAAQ,aAAc,CAC5EL,KAAKS,WAAWsB,GAChBjC,EAAMQ,gB,MACD,GAAIR,EAAMO,MAAQ,SAAU,CACjCL,KAAKa,kBAAoB,OACzBH,EAAAV,KAAKW,YAAQ,MAAAD,SAAA,SAAAA,EAAEE,OACfd,EAAMQ,gB,KACD,CACL,M,EAGJ,MAAA4D,GACE,OACEC,EAAA,YAAUC,MAAM,WACdD,EAAA,SAAOE,KAAK,OAAOD,MAAM,iBACzBD,EAAA,MAAIC,MAAM,IACRD,EAAA,oB"}
import{T as n,a as t}from"./p-d0086f2b.js";import{c as e}from"./p-ac2141fd.js";import{c as o}from"./p-df42748b.js";class a extends n{async getExposedChannels(){try{const n=this.getToken();if(n!==null){const{data:e}=await t.post(`/Get_Exposed_Channels?Ticket=${n}`,{});if(e.ExceptionMsg!==""){throw new Error(e.ExceptionMsg)}const a=e.My_Result;o.channels=[...a];return e}}catch(n){console.log(n);throw new Error(n)}}async getExposedConnectedChannels(n){try{const e=this.getToken();if(e!==null){const{data:a}=await t.post(`/Get_Exposed_Connected_Channels?Ticket=${e}`,{property_id:n});if(a.ExceptionMsg!==""){throw new Error(a.ExceptionMsg)}o.connected_channels=[...a.My_Result]}}catch(n){console.log(n);throw new Error(n)}}async saveConnectedChannel(n){try{const a={id:o.channel_id,title:o.channel_settings.hotel_title,is_active:o.is_active,channel:{id:o.selectedChannel.id,name:o.selectedChannel.name},property:{id:e.id,name:e.name},map:o.mappedChannels,is_remove:n};const r=this.getToken();if(!r){throw new Error("Invalid Token")}const{data:s}=await t.post(`/Handle_Connected_Channel?Ticket=${r}`,a);return s}catch(n){console.error(n)}}}export{a as C};
//# sourceMappingURL=p-94f2c005.js.map
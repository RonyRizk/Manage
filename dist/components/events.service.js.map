{"file":"events.service.js","mappings":"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","names":[],"sources":["src/services/events.service.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { BookingService } from \"./booking.service\";\r\nimport { getReleaseHoursString } from \"../utils/utils\";\r\n\r\nexport class EventsService {\r\n  private readonly bookingService: BookingService = new BookingService();\r\n\r\n  async reallocateEvent(\r\n    pool: string,\r\n    destination_pr_id: number,\r\n    from_date: string,\r\n    to_date: string\r\n  ) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem(\"token\"));\r\n      if (token) {\r\n        console.log(pool, destination_pr_id, from_date, to_date);\r\n        const { data } = await axios.post(\r\n          `/ReAllocate_Exposed_Room?Ticket=${token}`,\r\n          { pool, destination_pr_id, from_date, to_date }\r\n        );\r\n        if (data.ExceptionMsg !== \"\") {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        console.log(data);\r\n        return data;\r\n      } else {\r\n        throw new Error(\"Invalid Token\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async deleteEvent(POOL: string) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem(\"token\"));\r\n      if (token) {\r\n        const { data } = await axios.post(\r\n          `/UnBlock_Exposed_Unit?Ticket=${token}`,\r\n          {\r\n            POOL,\r\n          }\r\n        );\r\n        if (data.ExceptionMsg !== \"\") {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      } else {\r\n        throw new Error(\"Invalid Token\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async updateBlockedEvent(bookingEvent: any) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem(\"token\"));\r\n      if (token) {\r\n        const releaseData = getReleaseHoursString(\r\n          +bookingEvent.RELEASE_AFTER_HOURS\r\n        );\r\n        await this.deleteEvent(bookingEvent.POOL);\r\n        await this.bookingService.blockUnit({\r\n          from_date: this.formatDate(bookingEvent.FROM_DATE),\r\n          to_date: this.formatDate(bookingEvent.TO_DATE),\r\n          pr_id: bookingEvent.PR_ID,\r\n          STAY_STATUS_CODE: bookingEvent.OUT_OF_SERVICE\r\n            ? \"004\"\r\n            : bookingEvent.RELEASE_AFTER_HOURS === 0\r\n            ? \"002\"\r\n            : \"003\",\r\n          DESCRIPTION: bookingEvent.RELEASE_AFTER_HOURS || \"\",\r\n          NOTES: bookingEvent.OPTIONAL_REASON || \"\",\r\n          ...releaseData,\r\n        });\r\n      } else {\r\n        throw new Error(\"Invalid Token\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  private formatDate(date: string) {\r\n    return date.split(\"/\").join(\"-\");\r\n  }\r\n}\r\n"],"version":3}
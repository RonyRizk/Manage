{"file":"ir-mapping2.js","mappings":"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","names":[],"sources":["src/components/old-ir-channel/ir-mapping/ir-mapping.tsx"],"sourcesContent":["import { Component, h, Event, EventEmitter, Method, Prop } from '@stencil/core';\r\n//import { Map, MappingModal, RoomType, RatePlan } from '../../../sample/channel/data';\r\n//import { Map, RoomType, RatePlan } from '../../../sample/channel/data';\r\nimport { RoomType, RatePlan } from '../../../sample/channel/data';\r\n\r\n@Component({\r\n  tag: 'ir-mapping',\r\n})\r\nexport class IrMapping {\r\n  @Prop() mapReference: RoomType[];//Map;\r\n  @Prop() hostRoom: RoomType[] = [];//MappingModal;\r\n\r\n  @Event() sendMappingToParent: EventEmitter;\r\n  @Prop() map: RoomType[] = null;\r\n\r\n  @Method()\r\n  async _onSaveMapping() {\r\n    this.sendMappingToParent.emit(this.hostRoom);\r\n  }\r\n\r\n  componentWillLoad() {\r\n    if (this.map !== null) {\r\n      this.hostRoom = this.map;\r\n      this.hostRoom.forEach(room => {\r\n        if (room.value) {\r\n          this.mapReference = this.mapReference.filter(map => map.id !== room.value.id);\r\n          room.value.ratePlans.forEach(ratePlan => {\r\n            if (ratePlan.value) this.mapReference = this.mapReference.filter(map => map.id !== ratePlan.id);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  _onSelectMap(room: RoomType, value: RoomType, index: number) {\r\n    room = {\r\n      ...room,\r\n      value: value,\r\n      mapped: 'mapped',\r\n      mappedName: value.name,\r\n      mappedId: value.id,\r\n    };\r\n    this.hostRoom = [...this.hostRoom.slice(0, index), room, ...this.hostRoom.slice(index + 1)];\r\n    this.mapReference = this.mapReference.filter(map => map.id !== value.id);\r\n  }\r\n\r\n  _onSelectRatePlan(ratePlan: RatePlan, _index: number, value: RatePlan, room: RoomType, index: number) {\r\n    ratePlan = {\r\n      ...ratePlan,\r\n      value: value,\r\n      mapped: 'mapped',\r\n      mappedName: value.name,\r\n      mappedId: value.id,\r\n    };\r\n    this.hostRoom = [\r\n      ...this.hostRoom.slice(0, index),\r\n      {\r\n        ...room,\r\n        ratePlans: [...room.ratePlans.slice(0, _index), ratePlan, ...room.ratePlans.slice(_index + 1)],\r\n      },\r\n      ...this.hostRoom.slice(index + 1),\r\n    ];\r\n\r\n    let __index = room.value.ratePlans.findIndex(rate => rate.id === value.id);\r\n    room.value.ratePlans.splice(__index, 1);\r\n  }\r\n\r\n  _deselectRoom(room: RoomType, index: number) {\r\n    this.mapReference = [...this.mapReference, room.value];\r\n    this.mapReference = this.mapReference.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n\r\n    this.hostRoom = [\r\n      ...this.hostRoom.slice(0, index),\r\n      {\r\n        ...room,\r\n        value: null,\r\n        mapped: 'notMapped',\r\n        mappedName: '',\r\n        mappedId: '',\r\n        ratePlans: room.ratePlans.map(ratePlan => ({\r\n          ...ratePlan,\r\n          mapped: 'notMapped',\r\n          mappedName: '',\r\n          mappedId: '',\r\n        })),\r\n      },\r\n      ...this.hostRoom.slice(index + 1),\r\n    ];\r\n  }\r\n\r\n  _deselectRatePlan(ratePlan: RatePlan, _index: number, room: RoomType, index: number) {\r\n    console.log(ratePlan);\r\n    room.value.ratePlans = [...room.value.ratePlans, ratePlan.value];\r\n    room.value.ratePlans = room.value.ratePlans.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n    ratePlan = {\r\n      ...ratePlan,\r\n      value: null,\r\n      mapped: 'notMapped',\r\n      mappedName: '',\r\n      mappedId: '',\r\n    };\r\n    this.hostRoom = [\r\n      ...this.hostRoom.slice(0, index),\r\n      {\r\n        ...room,\r\n        ratePlans: [...room.ratePlans.slice(0, _index), ratePlan, ...room.ratePlans.slice(_index + 1)],\r\n      },\r\n      ...this.hostRoom.slice(index + 1),\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    return [\r\n      <div class=\"Mapping font-size-small\">\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n          <a class=\"text-primary\">Refresh</a>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12 mb-1\">\r\n              <div class=\"row \">\r\n                <div class=\"col-6 d-flex justify-content-between align-items-center font-weight-bold\">\r\n                  Iglooroom<ir-icon icon=\"la la-long-arrow-right\"></ir-icon>\r\n                </div>\r\n                <div class=\"col-6 font-weight-bold\">Channel Manager</div>\r\n              </div>\r\n            </div>\r\n            {this.hostRoom.map((room: RoomType, index) => {\r\n              return (\r\n                <div class=\"col-12 mb-1\">\r\n                  <div class=\"row mb-1\">\r\n                    <div class=\"col-6 d-flex justify-content-between align-items-center\">\r\n                      {room.name}\r\n                      <ir-icon icon=\"la la-long-arrow-right\"></ir-icon>\r\n                    </div>\r\n                    <div class={`col-6 `}>\r\n                      {room.mapped === 'notMapped' ? (\r\n                        <div\r\n                          class=\"text-danger\"\r\n                          onClick={() => {\r\n                            this.hostRoom = [\r\n                              ...this.hostRoom.slice(0, index),\r\n                              {\r\n                                ...room,\r\n                                value: '',\r\n                                mapped: 'mapping',\r\n                                mappedName: '',\r\n                                mappedId: '',\r\n                              },\r\n                              ...this.hostRoom.slice(index + 1),\r\n                            ];\r\n                          }}\r\n                        >\r\n                          Not mapped\r\n                        </div>\r\n                      ) : room.mapped === 'mapping' ? (\r\n                        <select\r\n                          id={`${index}`}\r\n                          class=\"form-control form-control-sm\"\r\n                          onChange={(event: any) => {\r\n                            let value = JSON.parse(event.target.value);\r\n                            this._onSelectMap(room, value, index);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select Room</option>\r\n                          {this.mapReference.length > 0 &&\r\n                            this.mapReference.map(ref => {\r\n                              return <option value={JSON.stringify(ref)}>{ref.name}</option>;\r\n                            })}\r\n                        </select>\r\n                      ) : (\r\n                        <div class=\"d-flex flex-grow-1 justify-content-between\">\r\n                          <div class=\"text-primary\">\r\n                            {room.mappedName}\r\n                            <ir-icon icon=\"ft-user\"></ir-icon> {room.roomCapacity}\r\n                          </div>\r\n                          <ir-icon\r\n                            icon=\"text-primary ft-trash\"\r\n                            onClick={() => {\r\n                              this._deselectRoom(room, index);\r\n                            }}\r\n                          ></ir-icon>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 mb-1\">\r\n                    {room.ratePlans &&\r\n                      room.ratePlans.length &&\r\n                      room.ratePlans.map((ratePlan: RatePlan, _index) => (\r\n                        <div class=\"row mb-1\">\r\n                          <div class=\"col-6 d-flex justify-content-between align-items-center\">\r\n                            <div>\r\n                              {ratePlan.name}\r\n                              <ir-icon icon=\"ft-user\"></ir-icon> {room.roomCapacity}\r\n                            </div>\r\n                            {room.mapped === 'mapped' && <ir-icon icon=\"la la-long-arrow-right\"></ir-icon>}\r\n                          </div>\r\n                          <div class=\"col-6 pr-0\">\r\n                            {room.mapped === 'mapped' &&\r\n                              (ratePlan.mapped === 'notMapped' ? (\r\n                                <div\r\n                                  class=\"text-danger\"\r\n                                  onClick={() => {\r\n                                    ratePlan = {\r\n                                      ...ratePlan,\r\n                                      value: '',\r\n                                      mapped: 'mapping',\r\n                                      mappedId: '',\r\n                                      mappedName: '',\r\n                                    };\r\n                                    this.hostRoom = [\r\n                                      ...this.hostRoom.slice(0, index),\r\n                                      {\r\n                                        ...room,\r\n                                        ratePlans: [...room.ratePlans.slice(0, _index), ratePlan, ...room.ratePlans.slice(_index + 1)],\r\n                                      },\r\n                                      ...this.hostRoom.slice(index + 1),\r\n                                    ];\r\n                                  }}\r\n                                >\r\n                                  Not mapped\r\n                                </div>\r\n                              ) : ratePlan.mapped === 'mapping' ? (\r\n                                <select\r\n                                  class=\"form-control form-control-sm\"\r\n                                  onChange={(event: any) => {\r\n                                    // mapped.selectedPlan = event.target.value;\r\n                                    let value = JSON.parse(event.target.value);\r\n                                    this._onSelectRatePlan(ratePlan, _index, value, room, index);\r\n                                  }}\r\n                                >\r\n                                  <option value=\"\">Select Plan</option>\r\n                                  {room.value.ratePlans.length > 0 ? room.value.ratePlans.map(ratePlan => <option value={JSON.stringify(ratePlan)}>{ratePlan.name}</option>) : null}\r\n                                </select>\r\n                              ) : (\r\n                                <div class=\"d-flex flex-grow-1 justify-content-between\">\r\n                                  <div class=\"text-primary\">\r\n                                    {ratePlan.mappedName}\r\n                                    <ir-icon icon=\"ft-user\"></ir-icon> {room.roomCapacity}\r\n                                  </div>\r\n                                  <ir-icon\r\n                                    icon=\"text-primary ft-trash\"\r\n                                    onClick={() => {\r\n                                      this._deselectRatePlan(ratePlan, _index, room, index);\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              ))}\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>,\r\n    ];\r\n  }\r\n}\r\n"],"version":3}
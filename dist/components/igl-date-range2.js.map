{"file":"igl-date-range2.js","mappings":";;;AAAA,MAAM,eAAe,GAAG,mmgJAAmmgJ;;MCO9mgJ,YAAY;;;;;IAOf,gBAAW,GAAW,CAAC,CAAC;IAGxB,gBAAW,GAAW,MAAM,CAAC;IAC7B,cAAS,GAAW,IAAI,CAAC;mBAVU,EAAE;;oBAEA,KAAK;uBAElB,KAAK;;EASrC,mBAAmB,CAAC,EAAE;IACpB,OAAO,EAAE,CAAC,WAAW,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC;GAC5I;EAED,iBAAiB;IACf,IAAI,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC;IACpB,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;IAC7B,IAAI,IAAI,CAAC,WAAW,EAAE;MACpB,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OAC/D;MACD,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;OAC3D;KACF;IACD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;MAChC,IAAI,CAAC,oBAAoB,EAAE,CAAC;MAC5B,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,EAAE;QAC9C,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;QACjC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;QAC7B,WAAW,EAAE,IAAI,CAAC,WAAW;QAC7B,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,cAAc,EAAE,IAAI,CAAC,WAAW;OACjC,CAAC,CAAC;KACJ;GACF;EAED,oBAAoB;IAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,QAAQ,CAAC,CAAC;GAC7F;EACD,sBAAsB,CAAC,EAAE;IACvB,OAAO,EAAE,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC;GACrH;EAED,qBAAqB,CAAC,GAAG,EAAE,OAAY,EAAE;IACvC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;GAC1C;EACD,gBAAgB,CAAC,GAAG;IAClB,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;IAC/B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;IAC3B,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC5B,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,EAAE;MAC9C,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;MACjC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;MAC7B,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC;MACxC,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC;MACpC,cAAc,EAAE,IAAI,CAAC,WAAW;KACjC,CAAC,CAAC;IACH,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;GACtC;EACD,MAAM;IACJ,QACE,EAAC,IAAI,QACH,WAAK,KAAK,EAAC,8BAA8B,IACvC,UAAI,KAAK,EAAC,gBAAgB,YAAW,EACrC,WAAK,KAAK,EAAC,gBAAgB,IACzB,sBACE,KAAK,EAAE,kBAAkB,EACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,SAAS,QACT,aAAa,EAAE,GAAG;QAChB,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;OAC5B,GACe,EAEjB,IAAI,CAAC,WAAW,GAAG,YAAM,KAAK,EAAC,gBAAgB,IAAE,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,SAAS,GAAG,QAAQ,CAAC,CAAQ,GAAG,EAAE,CAC3H,CACF,EACN,WAAK,KAAK,EAAC,2BAA2B,IAAE,IAAI,CAAC,OAAO,CAAO,CACtD,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/igloo-calendar/igl-date-range/igl-date-range.css?tag=igl-date-range&encapsulation=scoped","src/components/igloo-calendar/igl-date-range/igl-date-range.tsx"],"sourcesContent":["@import url('../../../assets/feather/style.min.css');\r\n@import url('../../../assets/fontawesome/css/all.css');\r\n@import url('../../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  display: flex;\r\n  text-align: left;\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n\r\n.date-range-input {\r\n  flex: 1;\r\n  margin-right: 1rem;\r\n}\r\n\r\n.iglRangePicker {\r\n  margin: 0;\r\n  border: 1px solid #379ff2;\r\n  border-radius: 6px;\r\n  min-width: 300px;\r\n  max-width: 320px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  text-align: center;\r\n  margin-right: 5px;\r\n  padding: 5px 2rem;\r\n}\r\n.calendarPickerContainer {\r\n  display: flex;\r\n  flex-direction: column;\r\n  /*align-items: center;*/\r\n}\r\n\r\n.dateRangeLabel {\r\n  margin-right: 5px;\r\n}\r\n\r\n.taxMessage {\r\n  padding: 5px;\r\n  display: inline-block;\r\n}\r\n@media only screen and (min-width: 600px) {\r\n  :host {\r\n    flex-direction: row;\r\n  }\r\n  .calendarPickerContainer {\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n}\r\n","import { Component, Host, h, State, Event, EventEmitter, Prop } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-date-range',\r\n  styleUrl: 'igl-date-range.css',\r\n  scoped: true,\r\n})\r\nexport class IglDateRange {\r\n  @Prop({ reflect: true }) message: string = '';\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() renderAgain: boolean = false;\r\n\r\n  private totalNights: number = 0;\r\n  private fromDate: Date;\r\n  private toDate: Date;\r\n  private fromDateStr: string = 'from';\r\n  private toDateStr: string = 'to';\r\n  dateRangeInput: HTMLElement;\r\n\r\n  getStringDateFormat(dt) {\r\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\r\n  }\r\n\r\n  componentWillLoad() {\r\n    let dt = new Date();\r\n    dt.setHours(0, 0, 0, 0);\r\n    dt.setDate(dt.getDate() + 1);\r\n    if (this.defaultData) {\r\n      if (this.defaultData.fromDate) {\r\n        this.fromDate = new Date(this.defaultData.fromDate);\r\n        this.fromDate.setHours(0, 0, 0, 0);\r\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\r\n      }\r\n      if (this.defaultData.toDate) {\r\n        this.toDate = new Date(this.defaultData.toDate);\r\n        this.toDate.setHours(0, 0, 0, 0);\r\n        this.toDateStr = this.getFormattedDateString(this.toDate);\r\n      }\r\n    }\r\n    if (this.fromDate && this.toDate) {\r\n      this.calculateTotalNights();\r\n      this.handleDateSelectEvent('selectedDateRange', {\r\n        fromDate: this.fromDate.getTime(),\r\n        toDate: this.toDate.getTime(),\r\n        fromDateStr: this.fromDateStr,\r\n        toDateStr: this.toDateStr,\r\n        dateDifference: this.totalNights,\r\n      });\r\n    }\r\n  }\r\n\r\n  calculateTotalNights() {\r\n    this.totalNights = Math.floor((this.toDate.getTime() - this.fromDate.getTime()) / 86400000);\r\n  }\r\n  getFormattedDateString(dt) {\r\n    return dt.getDate() + ' ' + dt.toLocaleString('default', { month: 'short' }).toLowerCase() + ' ' + dt.getFullYear();\r\n  }\r\n\r\n  handleDateSelectEvent(key, data: any = '') {\r\n    this.dateSelectEvent.emit({ key, data });\r\n  }\r\n  handleDateChange(evt) {\r\n    const { start, end } = evt.detail;\r\n    this.fromDate = start.toDate();\r\n    this.toDate = end.toDate();\r\n    this.calculateTotalNights();\r\n    this.handleDateSelectEvent('selectedDateRange', {\r\n      fromDate: this.fromDate.getTime(),\r\n      toDate: this.toDate.getTime(),\r\n      fromDateStr: start.format('DD MMM YYYY'),\r\n      toDateStr: end.format('DD MMM YYYY'),\r\n      dateDifference: this.totalNights,\r\n    });\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"calendarPickerContainer ml-0\">\r\n          <h5 class=\"dateRangeLabel\">Dates</h5>\r\n          <div class=\"iglRangePicker\">\r\n            <ir-date-picker\r\n              class={'date-range-input'}\r\n              disabled={this.disabled}\r\n              fromDate={this.fromDate}\r\n              toDate={this.toDate}\r\n              autoApply\r\n              onDateChanged={evt => {\r\n                this.handleDateChange(evt);\r\n              }}\r\n            ></ir-date-picker>\r\n\r\n            {this.totalNights ? <span class=\"iglRangeNights\">{this.totalNights + (this.totalNights > 1 ? ' nights' : ' night')}</span> : ''}\r\n          </div>\r\n        </div>\r\n        <div class=\"taxMessage display-inline\">{this.message}</div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}
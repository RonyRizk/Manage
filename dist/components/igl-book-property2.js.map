{"file":"igl-book-property2.js","mappings":"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","names":[],"sources":["src/components/igloo-calendar/igl-book-property/igl-book-property.service.ts","src/components/igloo-calendar/igl-book-property/igl-book-property.css?tag=igl-book-property&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property.tsx"],"sourcesContent":["import { BookUserParams } from '../../../models/igl-book-property';\r\n\r\nexport class IglBookPropertyService {\r\n  public onDataRoomUpdate(event: CustomEvent, selectedUnits: Map<string, Map<string, any>>, isEditBooking: boolean, name: string, pr_id: string, bookingData) {\r\n    let units = selectedUnits;\r\n    const { data, key, changedKey } = event.detail;\r\n    const roomCategoryKey = `c_${data.roomCategoryId}`;\r\n    const ratePlanKey = `p_${data.ratePlanId}`;\r\n\r\n    if (this.shouldClearData(key)) {\r\n      units = new Map();\r\n    }\r\n\r\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey, units);\r\n\r\n    if (isEditBooking) {\r\n      if (changedKey === 'rate') {\r\n        if (units.has(roomCategoryKey) && units.get(roomCategoryKey).has(ratePlanKey)) {\r\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, pr_id, bookingData);\r\n        }\r\n      } else {\r\n        if (changedKey !== 'rateType') {\r\n          if (changedKey === 'adult_child_offering') {\r\n            if (units.has(roomCategoryKey) && selectedUnits.get(roomCategoryKey).has(ratePlanKey)) {\r\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, pr_id, bookingData);\r\n            }\r\n          } else {\r\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, pr_id, bookingData);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data, units);\r\n    }\r\n    this.cleanupEmptyData(roomCategoryKey, units);\r\n    return units;\r\n  }\r\n\r\n  private shouldClearData(key: string | undefined): boolean {\r\n    return key === 'clearData' || key === 'EDIT_BOOKING';\r\n  }\r\n\r\n  private initializeRoomCategoryIfNeeded(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (!selectedUnits.has(roomCategoryKey)) {\r\n      selectedUnits.set(roomCategoryKey, new Map());\r\n    }\r\n  }\r\n  private getRoomsListFromCategoryId(bookingData, categoryId, pr_id) {\r\n    let category = bookingData.roomsInfo?.find(category => category.id === +categoryId);\r\n\r\n    if (category) {\r\n      return category.physicalrooms.find(room => room.id === +pr_id);\r\n    }\r\n  }\r\n  private setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any, selectedUnits: Map<string, Map<string, any>>) {\r\n    let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n    if (data.totalRooms === 0) {\r\n      selectedRatePlans.delete(ratePlanKey);\r\n    } else {\r\n      selectedUnits.set(roomCategoryKey, selectedRatePlans.set(ratePlanKey, { ...data, selectedUnits: Array(data.totalRooms).fill(-1) }));\r\n    }\r\n  }\r\n\r\n  private cleanupEmptyData(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (selectedUnits.has(roomCategoryKey)) {\r\n      let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n      if (selectedRatePlans.size === 0) {\r\n        selectedUnits.delete(roomCategoryKey);\r\n      }\r\n    }\r\n  }\r\n\r\n  private applyBookingEditToSelectedRoom(\r\n    roomCategoryKey: string,\r\n    ratePlanKey: string,\r\n    data,\r\n    selectedUnits: Map<string, Map<string, any>>,\r\n    name: string,\r\n    pr_id: string,\r\n    bookingData,\r\n  ) {\r\n    selectedUnits.clear();\r\n    const selectedRoom = this.getRoomsListFromCategoryId(bookingData, roomCategoryKey.substring(2, roomCategoryKey.length), pr_id);\r\n    if (selectedRoom) {\r\n      data.physicalRooms.push(selectedRoom);\r\n    }\r\n    selectedUnits.set(roomCategoryKey, new Map().set(ratePlanKey, { ...data, guestName: name, roomId: selectedRoom?pr_id:\"\" }));\r\n  }\r\n  prepareBookUserServiceParams(context, check_in): BookUserParams {\r\n    const arrivalTime = context.isEventType('EDIT_BOOKING') ? context.getArrivalTimeForBooking() : '';\r\n    const pr_id = context.isEventType('BAR_BOOKING') ? context.bookingData.PR_ID : undefined;\r\n    const bookingNumber = context.isEventType('EDIT_BOOKING') ? context.bookingData.BOOKING_NUMBER : undefined;\r\n\r\n    return [\r\n      context.bookedByInfoData,\r\n      check_in,\r\n      context.bookingData.defaultDateRange.fromDate,\r\n      context.bookingData.defaultDateRange.toDate,\r\n      context.guestData,\r\n      context.dateRangeData.dateDifference,\r\n      context.sourceOption,\r\n      context.propertyid,\r\n      context.currency,\r\n      bookingNumber,\r\n      context.bookingData.GUEST,\r\n      arrivalTime,\r\n      pr_id,\r\n    ];\r\n  }\r\n  private getBookingPreferenceRoomId(bookingData) {\r\n    return (bookingData.hasOwnProperty('PR_ID') && bookingData.PR_ID) || null;\r\n  }\r\n  private getRoomCategoryByRoomId(roomId, bookingData) {\r\n    return bookingData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.physicalrooms.find(room => room.id === +roomId);\r\n    });\r\n  }\r\n  public setEditingRoomInfo(bookingData, selectedUnits) {\r\n    const category = this.getRoomCategoryByRoomId(this.getBookingPreferenceRoomId(bookingData), bookingData);\r\n    const room_id = `c_${category.id}`;\r\n    const ratePlanId = `p_${bookingData.RATE_PLAN_ID}`;\r\n    const data = {\r\n      adultCount: bookingData.ADULTS_COUNT,\r\n      rate: bookingData.RATE,\r\n      rateType: bookingData.RATE_TYPE,\r\n      ratePlanId: bookingData.RATE_PLAN_ID,\r\n      roomCategoryId: category.id,\r\n      roomCategoryName: category.name,\r\n      totalRooms: 1,\r\n      ratePlanName: bookingData.RATE_PLAN,\r\n      roomId: bookingData.PR_ID,\r\n      guestName: bookingData.NAME,\r\n      cancelation: bookingData.cancelation,\r\n      guarantee: bookingData.guarantee,\r\n      adult_child_offering: bookingData.adult_child_offering,\r\n    };\r\n    selectedUnits.set(room_id, new Map().set(ratePlanId, data));\r\n  }\r\n}\r\n","@import url('../../../assets/feather/style.min.css');\r\n@import url('../../../assets/fontawesome/css/all.css');\r\n@import url('../../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 99;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h, Listen } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { dateToFormattedString, getReleaseHoursString } from '../../../utils/utils';\r\nimport { IEntries, RoomBlockDetails, RoomBookingDetails } from '../../../models/IBooking';\r\nimport { IPageTwoDataUpdateProps } from '../../../models/models';\r\nimport { transformNewBLockedRooms } from '../../../utils/booking';\r\nimport { IglBookPropertyService } from './igl-book-property.service';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../models/igl-book-property';\r\nimport { EventsService } from '../../../services/events.service';\r\n\r\n@Component({\r\n  tag: 'igl-book-property',\r\n  styleUrls: ['igl-book-property.css'],\r\n  scoped: true,\r\n})\r\nexport class IglBookProperty {\r\n  @Prop() propertyid: number;\r\n  @Prop() allowedBookingSources: any;\r\n  @Prop() language: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() currency: { id: number; code: string };\r\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @State() sourceOption: TSourceOption;\r\n  @State() splitBookingId: any = '';\r\n  @State() renderAgain: boolean = false;\r\n  @State() message: string = '';\r\n  @State() isLoading: string;\r\n  @State() dateRangeData: { [key: string]: any };\r\n  @State() adultChildCount: { adult: number; child: number } = {\r\n    adult: 0,\r\n    child: 0,\r\n  };\r\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\r\n  @Event() bookingCreated: EventEmitter<{ pool?: string; data: RoomBookingDetails[] }>;\r\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\r\n  private page: string;\r\n  private showSplitBookingOption: boolean = false;\r\n  private sourceOptions: TSourceOptions[] = [];\r\n  private guestData: { [key: string]: any }[] = [];\r\n  private bookedByInfoData: { [key: string]: any } = {};\r\n  private blockDatesData: { [key: string]: any } = {};\r\n  private ratePricingMode: IEntries[] = [];\r\n  private selectedUnits: Map<string, Map<string, any>> = new Map();\r\n  private bedPreferenceType: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private bookPropertyService = new IglBookPropertyService();\r\n  private eventsService = new EventsService();\r\n  componentDidLoad() {\r\n    document.addEventListener('keydown', e => {\r\n      if (e.key === 'Escape') {\r\n        this.closeWindow();\r\n      }\r\n    });\r\n  }\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', () => {});\r\n  }\r\n  async componentWillLoad() {\r\n    if (!this.bookingData.defaultDateRange) {\r\n      return;\r\n    }\r\n    this.dateRangeData = { ...this.bookingData.defaultDateRange };\r\n    try {\r\n      const setupEntries = await this.fetchSetupEntries();\r\n      this.setSourceOptions(this.allowedBookingSources);\r\n      this.setOtherProperties(setupEntries);\r\n\r\n      if (this.isEventType('EDIT_BOOKING')) {\r\n        this.adultChildCount = {\r\n          adult: this.bookingData.ADULTS_COUNT,\r\n          child: this.bookingData.CHILDREN_COUNT,\r\n        };\r\n\r\n        this.bookPropertyService.setEditingRoomInfo(this.bookingData, this.selectedUnits);\r\n      }\r\n      if (!this.isEventType('BAR_BOOKING')) {\r\n        this.bookingData.roomsInfo = [];\r\n      }\r\n\r\n      if (this.bookingData.event_type === 'SPLIT_BOOKING') {\r\n        this.showSplitBookingOption = true;\r\n        this.page = 'page_one';\r\n      } else if (this.bookingData.event_type === 'BLOCK_DATES') {\r\n        this.page = 'page_block_date';\r\n      } else {\r\n        this.page = 'page_one';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching setup entries:', error);\r\n    }\r\n  }\r\n\r\n  async fetchSetupEntries() {\r\n    return await this.bookingService.fetchSetupEntries();\r\n  }\r\n\r\n  setSourceOptions(bookingSource: any[]) {\r\n    this.sourceOptions = bookingSource.map(source => ({\r\n      id: source.code,\r\n      value: source.description,\r\n      tag: source.tag,\r\n    }));\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.sourceOption = { ...this.bookingData.SOURCE };\r\n    } else {\r\n      this.sourceOption = {\r\n        code: bookingSource[0].code,\r\n        description: bookingSource[0].description,\r\n        tag: bookingSource[0].tag,\r\n      };\r\n    }\r\n  }\r\n\r\n  setOtherProperties(res: any) {\r\n    this.ratePricingMode = res.ratePricingMode;\r\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\r\n    this.bedPreferenceType = res.bedPreferenceType;\r\n  }\r\n  @Listen('adultChild')\r\n  handleAdultChildChange(event: CustomEvent) {\r\n    this.adultChildCount = event.detail;\r\n  }\r\n\r\n  async initializeBookingAvailability(from_date: string, to_date: string) {\r\n    try {\r\n      const room_type_ids = this.bookingData.roomsInfo.map(room => room.id);\r\n      const data = await this.bookingService.getBookingAvailability(from_date, to_date, this.propertyid, this.adultChildCount, this.language, room_type_ids, this.currency);\r\n      this.message = '';\r\n      this.bookingData = {\r\n        ...this.bookingData,\r\n        roomsInfo: data.roomtypes,\r\n      };\r\n      this.message = data.tax_statement;\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n  getRoomCategoryByRoomId(roomId) {\r\n    return this.bookingData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.physicalrooms.find(room => room.id === +roomId);\r\n    });\r\n  }\r\n\r\n  getSplitBookings() {\r\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\r\n  }\r\n  closeWindow() {\r\n    this.closeBookingWindow.emit();\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n  @Listen('dateRangeSelectChange')\r\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    const opt: { [key: string]: any } = event.detail;\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (opt.key === 'selectedDateRange') {\r\n      this.dateRangeData = opt.data;\r\n      this.bookingData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\r\n      this.bookingData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\r\n      if (this.adultChildCount.adult !== 0) {\r\n        this.initializeBookingAvailability(dateToFormattedString(this.bookingData.defaultDateRange.fromDate), dateToFormattedString(this.bookingData.defaultDateRange.toDate));\r\n      }\r\n    }\r\n  }\r\n\r\n  handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.blockDatesData = opt.data;\r\n  }\r\n\r\n  handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt = event.detail;\r\n    if (opt.guestRefKey) {\r\n      if (this.isEventType('BAR_BOOKING')) {\r\n        this.guestData[opt.guestRefKey] = {\r\n          ...opt.data,\r\n          roomId: this.bookingData.PR_ID,\r\n        };\r\n      } else this.guestData[opt.guestRefKey] = opt.data;\r\n    }\r\n  }\r\n\r\n  handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookedByInfoData = opt.value.data;\r\n  }\r\n  @Listen('sourceDropDownChange')\r\n  handleSourceDropDown(event: CustomEvent) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const value = event.detail;\r\n    const selectedSource = this.sourceOptions.find(opt => opt.id === value.toString());\r\n    this.sourceOption = {\r\n      code: value,\r\n      description: selectedSource.value || '',\r\n      tag: selectedSource.tag,\r\n    };\r\n  }\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\r\n  gotoSplitPageTwo() {\r\n    this.gotoPage('page_two');\r\n  }\r\n  gotoPage(gotoPage) {\r\n    this.page = gotoPage;\r\n    this.renderPage();\r\n  }\r\n\r\n  showSplitBooking() {\r\n    this.showSplitBookingOption = true;\r\n    this.gotoPage('page_one');\r\n  }\r\n\r\n  getPageBlockDatesView() {\r\n    return (\r\n      <div class=\"scrollContent blockDatesForm\">\r\n        <igl-block-dates-view\r\n          fromDate={this.dateRangeData.fromDateStr}\r\n          toDate={this.dateRangeData.toDateStr}\r\n          entryDate={this.bookingData.ENTRY_DATE}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"row p-0 mb-1 mt-2\">\r\n          <div class=\"col-6\">\r\n            <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <button class=\"btn btn-primary full-width\" onClick={() => this.handleBlockDate()}>\r\n              Block dates\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  @Listen('buttonClicked')\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    switch (event.detail.key) {\r\n      case 'save':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'cancel':\r\n        this.closeWindow();\r\n        break;\r\n      case 'back':\r\n        this.gotoPage('page_one');\r\n        break;\r\n      case 'book':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'bookAndCheckIn':\r\n        this.bookUser(true);\r\n        break;\r\n      case 'next':\r\n        this.gotoPage('page_two');\r\n      case 'check':\r\n        this.initializeBookingAvailability(dateToFormattedString(this.bookingData.defaultDateRange.fromDate), dateToFormattedString(this.bookingData.defaultDateRange.toDate));\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (event.detail.key === 'propertyBookedBy') {\r\n      this.handleBookedByInfoUpdate(event);\r\n    } else {\r\n      this.handleGuestInfoUpdate(event);\r\n    }\r\n  }\r\n  async handleBlockDate() {\r\n    const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\r\n    const result = await this.bookingService.blockUnit({\r\n      from_date: dateToFormattedString(this.bookingData.defaultDateRange.fromDate),\r\n      to_date: dateToFormattedString(this.bookingData.defaultDateRange.toDate),\r\n      NOTES: this.blockDatesData.OPTIONAL_REASON || '',\r\n      pr_id: this.bookingData.PR_ID.toString(),\r\n      STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n      DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\r\n      ...releaseData,\r\n    });\r\n    const blockedUnit = await transformNewBLockedRooms(result);\r\n    this.blockedCreated.emit(blockedUnit);\r\n    this.closeWindow();\r\n  }\r\n\r\n  async bookUser(check_in: boolean) {\r\n    this.setLoadingState(check_in);\r\n    try {\r\n      if (['003', '002', '004'].includes(this.bookingData.STATUS_CODE)) {\r\n        this.eventsService.deleteEvent(this.bookingData.POOL);\r\n      }\r\n      if (this.isEventType('EDIT_BOOKING')) {\r\n        this.bookedByInfoData.message = this.bookingData.NOTES;\r\n      }\r\n      const serviceParams = this.bookPropertyService.prepareBookUserServiceParams(this, check_in);\r\n      await this.bookingService.bookUser(...serviceParams);\r\n    } catch (error) {\r\n      // Handle error\r\n    } finally {\r\n      this.resetLoadingState();\r\n    }\r\n  }\r\n  setLoadingState(assign_units: boolean) {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.isLoading = 'save';\r\n    } else {\r\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\r\n    }\r\n  }\r\n\r\n  getArrivalTimeForBooking(): string {\r\n    return this.bookedByInfoData.arrivalTime.find(e => e.CODE_VALUE_EN === this.bookingData.ARRIVAL_TIME).CODE_NAME;\r\n  }\r\n\r\n  resetLoadingState() {\r\n    this.isLoading = '';\r\n    setTimeout(() => {\r\n      this.closeWindow();\r\n    }, 100);\r\n  }\r\n  onRoomDataUpdate(event: CustomEvent) {\r\n    const units = this.bookPropertyService.onDataRoomUpdate(\r\n      event,\r\n      this.selectedUnits,\r\n      this.isEventType('EDIT_BOOKING'),\r\n      this.bookingData.NAME,\r\n      this.bookingData.PR_ID,\r\n      this.bookingData,\r\n    );\r\n    this.selectedUnits = new Map(units);\r\n    this.renderPage();\r\n  }\r\n  getCurrentPage(name: string) {\r\n    return this.page === name;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\r\n        <div class={'sideWindow ' + (this.getCurrentPage('page_block_date') ? 'col-sm-12 col-md-6 col-lg-5 col-xl-4' : 'col-sm-12 col-md-11 col-lg-9 col-xl-8')}>\r\n          <div class=\"card mb-0 shadow-none p-0\">\r\n            <div class=\"card-header\">\r\n              <h3 class=\"card-title text-left pb-1 font-medium-2\">{this.getCurrentPage('page_block_date') ? this.bookingData.BLOCK_DATES_TITLE : this.bookingData.TITLE}</h3>\r\n              <button type=\"button\" class=\"close close-icon\" onClick={() => this.closeWindow()}>\r\n                <i class=\"ft-x\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {this.getCurrentPage('page_one') && (\r\n            <div class=\"scrollContent\">\r\n              <igl-booking-overview-page\r\n                class={'p-0 mb-1 mt-2'}\r\n                eventType={this.bookingData.event_type}\r\n                selectedRooms={this.selectedUnits}\r\n                currency={this.currency}\r\n                message={this.message}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                ratePricingMode={this.ratePricingMode}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.bookingData}\r\n                bookingDataDefaultDateRange={this.dateRangeData}\r\n                adultChildConstraints={this.adultChildConstraints}\r\n                onRoomsDataUpdate={evt => {\r\n                  this.onRoomDataUpdate(evt);\r\n                }}\r\n                sourceOptions={this.sourceOptions}\r\n              ></igl-booking-overview-page>\r\n            </div>\r\n          )}\r\n\r\n          {this.getCurrentPage('page_two') && (\r\n            <igl-pagetwo\r\n              showPaymentDetails={this.showPaymentDetails}\r\n              selectedGuestData={this.guestData}\r\n              countryNodeList={this.countryNodeList}\r\n              isLoading={this.isLoading}\r\n              selectedRooms={this.selectedUnits}\r\n              bedPreferenceType={this.bedPreferenceType}\r\n              dateRangeData={this.dateRangeData}\r\n              bookingData={this.bookingData}\r\n              showSplitBookingOption={this.showSplitBookingOption}\r\n              language={this.language}\r\n              bookedByInfoData={this.bookedByInfoData}\r\n              isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\r\n              onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\r\n            ></igl-pagetwo>\r\n          )}\r\n          {this.getCurrentPage('page_block_date') ? this.getPageBlockDatesView() : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}
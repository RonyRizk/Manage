{"file":"ir-housekeeping.js","mappings":"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","names":["IrHousekeeping"],"sources":["src/services/housekeeping.service.ts","src/stores/housekeeping.store.ts","src/components/ir-housekeeping/ir-housekeeping.css?tag=ir-housekeeping&encapsulation=scoped","src/components/ir-housekeeping/ir-housekeeping.tsx"],"sourcesContent":["import { Token } from '@/models/Token';\r\nimport { IExposedHouseKeepingSetup, IInspectionMode } from '@/models/housekeeping';\r\nimport axios from 'axios';\r\n\r\nexport class HouseKeepingService extends Token {\r\n  public async getExposedHKSetup(property_id: number): Promise<IExposedHouseKeepingSetup> {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new Error('Missing token');\r\n    }\r\n    const { data } = await axios.post(`/Get_Exposed_HK_Setup?Ticket=${token}`, {\r\n      property_id,\r\n    });\r\n    return data['My_Result'];\r\n  }\r\n\r\n  public async setExposedInspectionMode(property_id: number, mode: IInspectionMode) {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new Error('Missing token');\r\n    }\r\n    const { data } = await axios.post(`/Set_Exposed_Inspection_Mode?Ticket=${token}`, {\r\n      property_id,\r\n      mode,\r\n    });\r\n    return data['My_Result'];\r\n  }\r\n}\r\n","import { createStore } from '@stencil/store';\r\n\r\nexport interface IHouseKeepingStore {\r\n  token: string;\r\n}\r\n\r\nconst initialValue: IHouseKeepingStore = {\r\n  token: '',\r\n};\r\n\r\nexport const { state: housekeeping_store } = createStore<IHouseKeepingStore>(initialValue);\r\nexport default housekeeping_store;\r\n",":host {\r\n  display: block;\r\n}\r\n.circle {\r\n  display: inline-flex;\r\n  border-radius: 50%;\r\n}\r\n.green {\r\n  background: #629a4c;\r\n}\r\n.red {\r\n  background: #ff4961;\r\n}\r\n.orange {\r\n  background: #ff9149;\r\n}\r\n/* td,\r\nth {\r\n  font-size: 12px !important;\r\n} */\r\n.black {\r\n  background: #000;\r\n}\r\n.smallcircle {\r\n  height: 7px;\r\n  width: 7px;\r\n}\r\n.bigcircle {\r\n  height: 7px;\r\n  width: 7px;\r\n}\r\n\r\n.status-container,\r\n.action-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n.status-container p {\r\n  margin: 0;\r\n}\r\n","import { IHKStatuses } from '@/models/housekeeping';\r\nimport { HouseKeepingService } from '@/services/housekeeping.service';\r\nimport { RoomService } from '@/services/room.service';\r\nimport housekeeping_store from '@/stores/housekeeping.store';\r\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport axios from 'axios';\r\n\r\n@Component({\r\n  tag: 'ir-housekeeping',\r\n  styleUrl: 'ir-housekeeping.css',\r\n  scoped: true,\r\n})\r\nexport class IrHousekeeping {\r\n  @Prop() language: string = '';\r\n  @Prop() ticket: string = '';\r\n  @Prop() baseurl: string = '';\r\n  @Prop() propertyid: number;\r\n\r\n  @State() isLoading = false;\r\n  @State() exposedHouseKeepingStatuses: IHKStatuses[];\r\n\r\n  private roomService = new RoomService();\r\n  private houseKeepingService = new HouseKeepingService();\r\n\r\n  componentWillLoad() {\r\n    if (this.baseurl) {\r\n      axios.defaults.baseURL = this.baseurl;\r\n    }\r\n    if (this.ticket !== '') {\r\n      this.roomService.setToken(this.ticket);\r\n      this.houseKeepingService.setToken(this.ticket);\r\n      housekeeping_store.token = this.ticket;\r\n      this.initializeApp();\r\n    }\r\n  }\r\n  @Watch('ticket')\r\n  async ticketChanged(newValue: string, oldValue: string) {\r\n    if (newValue !== oldValue) {\r\n      this.roomService.setToken(this.ticket);\r\n      this.houseKeepingService.setToken(this.ticket);\r\n      housekeeping_store.token = this.ticket;\r\n      this.initializeApp();\r\n    }\r\n  }\r\n\r\n  async initializeApp() {\r\n    try {\r\n      this.isLoading = true;\r\n      const [housekeeping] = await Promise.all([this.houseKeepingService.getExposedHKSetup(this.propertyid)]);\r\n      this.exposedHouseKeepingStatuses = housekeeping.statuses;\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n  render() {\r\n    if (this.isLoading) {\r\n      return <ir-loading-screen></ir-loading-screen>;\r\n    }\r\n    return (\r\n      <Host>\r\n        <ir-interceptor></ir-interceptor>\r\n        <ir-toast></ir-toast>\r\n        <section class=\"p-1\">\r\n          <div class=\"card p-1\">\r\n            <h4>Room or Unit Status</h4>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Status</th>\r\n                  <th>Code</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.exposedHouseKeepingStatuses?.map(status => (\r\n                  <tr key={status.code}>\r\n                    <td>\r\n                      <div class=\"status-container\">\r\n                        <span class={`circle ${status.style.shape} ${status.style.color}`}></span>\r\n                        <p>{status.description}</p>\r\n                      </div>\r\n                    </td>\r\n                    <td>{status.code}</td>\r\n                    <td>\r\n                      <div class=\"action-container\">\r\n                        <p class={'m-0'}>{status.action}</p>\r\n                        {status.inspection_mode?.is_active && (\r\n                          <div>\r\n                            <ir-select\r\n                              LabelAvailable={false}\r\n                              firstOption=\"No\"\r\n                              data={Array.from(Array(status.inspection_mode.window + 1), (_, i) => i).map(i => {\r\n                                const text = i === 0 ? 'Yes on the same day.' : i.toString() + ' day prior.';\r\n                                return {\r\n                                  text,\r\n                                  value: i.toString(),\r\n                                };\r\n                              })}\r\n                            ></ir-select>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </section>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}
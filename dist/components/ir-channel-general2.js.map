{"file":"ir-channel-general2.js","mappings":";;;;AAAA,MAAM,mBAAmB,GAAG,6SAA6S;;MCQ5T,gBAAgB;;;;;EAC3B,MAAM;;IACJ,QACE,EAAC,IAAI,QACH,gBAAU,KAAK,EAAC,2BAA2B,IACzC,aAAO,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,qBAAqB,eAErC,EACR;;MAEE,KAAK,EAAC,WAAW,EACjB,KAAK,EAAE,MAAA,aAAa,CAAC,eAAe,0CAAE,IAAI,EAC1C,qBAAqB,EAAE,CAAC,CAAc;QACpC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;OACzC,EACD,WAAW,EAAC,0BAA0B,EACtC,IAAI,EACF,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,KAAK;QACrC,EAAE,EAAE,OAAO,CAAC,EAAE;QACd,IAAI,EAAE,OAAO,CAAC,IAAI;OACnB,CAAC,CAAQ;MAEC,CACN,EASX,gBAAU,KAAK,EAAC,gCAAgC,IAC9C,aAAO,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,qBAAqB,aAErC,EACR,WAAK,KAAK,EAAC,WAAW,IACpB,aACE,KAAK,EAAE,MAAA,aAAa,CAAC,gBAAgB,0CAAE,WAAW,EAClD,OAAO,EAAE,CAAC,IAAI,qBAAqB,CAAC,aAAa,EAAG,CAAC,CAAC,MAA2B,CAAC,KAAK,CAAC,EACxF,KAAK,EAAC,yBAAyB,GAC/B,CACE,CACG,EASV,aAAa,CAAC,eAAe,KAC5B,eAAS,KAAK,EAAC,2BAA2B,IACxC,UAAI,KAAK,EAAC,+DAA+D,0BAAyB,EAClG,gBAAU,KAAK,EAAC,gCAAgC,IAC9C,aAAO,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,qBAAqB,gBAErC,EACR,WAAK,KAAK,EAAC,WAAW,IACpB,aACE,QAAQ,EAAE,aAAa,CAAC,oBAAoB,EAC5C,KAAK,EAAC,kCAAkC,EACxC,KAAK,EAAE,MAAA,aAAa,CAAC,gBAAgB,0CAAE,QAAQ,EAC/C,OAAO,EAAE,CAAC,IAAI,qBAAqB,CAAC,UAAU,EAAG,CAAC,CAAC,MAA2B,CAAC,KAAK,CAAC,GACrF,CACE,CACG,EACX,WAAK,KAAK,EAAE,8BAA8B,IACxC,eAAa,EACb,cAAQ,KAAK,EAAC,kCAAkC,EAAC,OAAO,EAAE,MAAM,cAAc,EAAE,sBAEvE,CACL,CACE,CACX,CACI,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/ir-channel/ir-channel-general/ir-channel-general.css?tag=ir-channel-general&encapsulation=scoped","src/components/ir-channel/ir-channel-general/ir-channel-general.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n.label-style {\r\n  width: 100px;\r\n}\r\n.connection-testing-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-top: 10px !important;\r\n}\r\n.connection-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n","import channels_data, { selectChannel, testConnection, updateChannelSettings } from '@/stores/channel.store';\r\nimport { Component, Host, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-channel-general',\r\n  styleUrl: 'ir-channel-general.css',\r\n  scoped: true,\r\n})\r\nexport class IrChannelGeneral {\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <fieldset class=\"d-flex align-items-center\">\r\n          <label htmlFor=\"\" class=\"m-0 p-0 label-style\">\r\n            Channel:\r\n          </label>\r\n          <ir-combobox\r\n            // disabled={channels_data.isConnectedToChannel}\r\n            class=\"flex-fill\"\r\n            value={channels_data.selectedChannel?.name}\r\n            onComboboxValueChange={(e: CustomEvent) => {\r\n              selectChannel(e.detail.data.toString());\r\n            }}\r\n            placeholder=\"Choose channel from list\"\r\n            data={\r\n              channels_data.channels.map(channel => ({\r\n                id: channel.id,\r\n                name: channel.name,\r\n              })) as any\r\n            }\r\n          ></ir-combobox>\r\n        </fieldset>\r\n        {/* <fieldset class=\"d-flex align-items-center mt-1\">\r\n          <label htmlFor=\"\" class=\"m-0 p-0 label-style\">\r\n            Group:\r\n          </label>\r\n          <div class=\"flex-fill\">\r\n            <input class=\"form-control  flex-fill\" />\r\n          </div>\r\n        </fieldset> */}\r\n        <fieldset class=\"d-flex align-items-center mt-1\">\r\n          <label htmlFor=\"\" class=\"m-0 p-0 label-style\">\r\n            Title:\r\n          </label>\r\n          <div class=\"flex-fill\">\r\n            <input\r\n              value={channels_data.channel_settings?.hotel_title}\r\n              onInput={e => updateChannelSettings('hotel_title', (e.target as HTMLInputElement).value)}\r\n              class=\"form-control  flex-fill\"\r\n            />\r\n          </div>\r\n        </fieldset>\r\n        {/* <fieldset class=\"d-flex align-items-center mt-1\">\r\n          <label htmlFor=\"\" class=\"m-0 p-0 label-style\">\r\n            Currency:\r\n          </label>\r\n          <div class=\"flex-fill\">\r\n            <input class=\"form-control  flex-fill\" />\r\n          </div>\r\n        </fieldset> */}\r\n        {channels_data.selectedChannel && (\r\n          <section class=\"mt-3 connection-container\">\r\n            <h3 class=\"text-left font-medium-2  py-0 my-0 connection-title py-1 mb-2\">Connection Settings</h3>\r\n            <fieldset class=\"d-flex align-items-center my-1\">\r\n              <label htmlFor=\"\" class=\"m-0 p-0 label-style\">\r\n                Hotel ID:\r\n              </label>\r\n              <div class=\"flex-fill\">\r\n                <input\r\n                  disabled={channels_data.isConnectedToChannel}\r\n                  class=\"form-control  flex-fill bg-white\"\r\n                  value={channels_data.channel_settings?.hotel_id}\r\n                  onInput={e => updateChannelSettings('hotel_id', (e.target as HTMLInputElement).value)}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div class={'connection-testing-container'}>\r\n              <span></span>\r\n              <button class=\"btn btn-outline-secondary btn-sm\" onClick={() => testConnection()}>\r\n                Test Connection\r\n              </button>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}